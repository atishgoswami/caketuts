!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
DbAclSchema	app/Config/Schema/db_acl.php	/^class DbAclSchema extends CakeSchema {$/;"	c
acos	app/Config/Schema/db_acl.php	/^	public $acos = array($/;"	v
after	app/Config/Schema/db_acl.php	/^	public function after($event = array()) {$/;"	f
aros	app/Config/Schema/db_acl.php	/^	public $aros = array($/;"	v
aros_acos	app/Config/Schema/db_acl.php	/^	public $aros_acos = array($/;"	v
before	app/Config/Schema/db_acl.php	/^	public function before($event = array()) {$/;"	f
acos	app/Config/Schema/db_acl.sql	/^CREATE TABLE acos ($/;"	t
acos.alias	app/Config/Schema/db_acl.sql	/^  alias VARCHAR(255) DEFAULT '',$/;"	F
acos.foreign_key	app/Config/Schema/db_acl.sql	/^  foreign_key INTEGER(10) UNSIGNED DEFAULT NULL,$/;"	F
acos.id	app/Config/Schema/db_acl.sql	/^  id INTEGER(10) UNSIGNED NOT NULL AUTO_INCREMENT,$/;"	F
acos.lft	app/Config/Schema/db_acl.sql	/^  lft INTEGER(10) DEFAULT NULL,$/;"	F
acos.model	app/Config/Schema/db_acl.sql	/^  model VARCHAR(255) DEFAULT '',$/;"	F
acos.parent_id	app/Config/Schema/db_acl.sql	/^  parent_id INTEGER(10) DEFAULT NULL,$/;"	F
acos.rght	app/Config/Schema/db_acl.sql	/^  rght INTEGER(10) DEFAULT NULL,$/;"	F
aros	app/Config/Schema/db_acl.sql	/^CREATE TABLE aros ($/;"	t
aros.alias	app/Config/Schema/db_acl.sql	/^  alias VARCHAR(255) DEFAULT '',$/;"	F
aros.foreign_key	app/Config/Schema/db_acl.sql	/^  foreign_key INTEGER(10) UNSIGNED DEFAULT NULL,$/;"	F
aros.id	app/Config/Schema/db_acl.sql	/^  id INTEGER(10) UNSIGNED NOT NULL AUTO_INCREMENT,$/;"	F
aros.lft	app/Config/Schema/db_acl.sql	/^  lft INTEGER(10) DEFAULT NULL,$/;"	F
aros.model	app/Config/Schema/db_acl.sql	/^  model VARCHAR(255) DEFAULT '',$/;"	F
aros.parent_id	app/Config/Schema/db_acl.sql	/^  parent_id INTEGER(10) DEFAULT NULL,$/;"	F
aros.rght	app/Config/Schema/db_acl.sql	/^  rght INTEGER(10) DEFAULT NULL,$/;"	F
aros_acos	app/Config/Schema/db_acl.sql	/^CREATE TABLE aros_acos ($/;"	t
aros_acos._create	app/Config/Schema/db_acl.sql	/^  _create CHAR(2) NOT NULL DEFAULT 0,$/;"	F
aros_acos._delete	app/Config/Schema/db_acl.sql	/^  _delete CHAR(2) NOT NULL DEFAULT 0,$/;"	F
aros_acos._read	app/Config/Schema/db_acl.sql	/^  _read CHAR(2) NOT NULL DEFAULT 0,$/;"	F
aros_acos._update	app/Config/Schema/db_acl.sql	/^  _update CHAR(2) NOT NULL DEFAULT 0,$/;"	F
aros_acos.aco_id	app/Config/Schema/db_acl.sql	/^  aco_id INTEGER(10) UNSIGNED NOT NULL,$/;"	F
aros_acos.aro_id	app/Config/Schema/db_acl.sql	/^  aro_id INTEGER(10) UNSIGNED NOT NULL,$/;"	F
aros_acos.id	app/Config/Schema/db_acl.sql	/^  id INTEGER(10) UNSIGNED NOT NULL AUTO_INCREMENT,$/;"	F
I18nSchema	app/Config/Schema/i18n.php	/^class I18nSchema extends CakeSchema {$/;"	c
after	app/Config/Schema/i18n.php	/^	public function after($event = array()) {$/;"	f
before	app/Config/Schema/i18n.php	/^	public function before($event = array()) {$/;"	f
i18n	app/Config/Schema/i18n.php	/^	public $i18n = array($/;"	v
name	app/Config/Schema/i18n.php	/^	public $name = 'i18n';$/;"	v
i18n	app/Config/Schema/i18n.sql	/^CREATE TABLE i18n ($/;"	t
i18n.content	app/Config/Schema/i18n.sql	/^	content mediumtext,$/;"	F
i18n.field	app/Config/Schema/i18n.sql	/^	field varchar(255) NOT NULL,$/;"	F
i18n.foreign_key	app/Config/Schema/i18n.sql	/^	foreign_key int(10) NOT NULL,$/;"	F
i18n.id	app/Config/Schema/i18n.sql	/^	id int(10) NOT NULL auto_increment,$/;"	F
i18n.locale	app/Config/Schema/i18n.sql	/^	locale varchar(6) NOT NULL,$/;"	F
i18n.model	app/Config/Schema/i18n.sql	/^	model varchar(255) NOT NULL,$/;"	F
SessionsSchema	app/Config/Schema/sessions.php	/^class SessionsSchema extends CakeSchema {$/;"	c
after	app/Config/Schema/sessions.php	/^	public function after($event = array()) {$/;"	f
before	app/Config/Schema/sessions.php	/^	public function before($event = array()) {$/;"	f
cake_sessions	app/Config/Schema/sessions.php	/^	public $cake_sessions = array($/;"	v
name	app/Config/Schema/sessions.php	/^	public $name = 'Sessions';$/;"	v
cake_sessions	app/Config/Schema/sessions.sql	/^CREATE TABLE cake_sessions ($/;"	t
cake_sessions.data	app/Config/Schema/sessions.sql	/^  data text,$/;"	F
cake_sessions.expires	app/Config/Schema/sessions.sql	/^  expires int(11) default NULL,$/;"	F
cake_sessions.id	app/Config/Schema/sessions.sql	/^  id varchar(255) NOT NULL default '',$/;"	F
duration	app/Config/core.php	/^	$duration = '+10 seconds';$/;"	v
duration	app/Config/core.php	/^$duration = '+999 days';$/;"	v
engine	app/Config/core.php	/^$engine = 'File';$/;"	v
prefix	app/Config/core.php	/^$prefix = 'myapp_';$/;"	v
DATABASE_CONFIG	app/Config/database.php	/^class DATABASE_CONFIG {$/;"	c
default	app/Config/database.php	/^	public $default = array($/;"	v
AppShell	app/Console/Command/AppShell.php	/^class AppShell extends Shell {$/;"	c
canonicalize	app/Console/cake	/^canonicalize() {$/;"	f
dispatcher	app/Console/cake.php	/^$dispatcher = 'Cake' . $ds . 'Console' . $ds . 'ShellDispatcher.php';$/;"	v
ds	app/Console/cake.php	/^$ds = DIRECTORY_SEPARATOR;$/;"	v
root	app/Console/cake.php	/^	$root = dirname(dirname(dirname(__FILE__)));$/;"	v
AppController	app/Controller/AppController.php	/^class AppController extends Controller$/;"	c
beforeFilter	app/Controller/AppController.php	/^    public function beforeFilter()$/;"	f
components	app/Controller/AppController.php	/^    public $components = array($/;"	v
isAuthorized	app/Controller/AppController.php	/^    public function isAuthorized($user)$/;"	f
PagesController	app/Controller/PagesController.php	/^class PagesController extends AppController {$/;"	c
count	app/Controller/PagesController.php	/^		$count = count($path);$/;"	v
display	app/Controller/PagesController.php	/^	public function display() {$/;"	f
page	app/Controller/PagesController.php	/^			$page = $path[0];$/;"	v
page	app/Controller/PagesController.php	/^		$page = $subpage = $title_for_layout = null;$/;"	v
path	app/Controller/PagesController.php	/^		$path = func_get_args();$/;"	v
subpage	app/Controller/PagesController.php	/^			$subpage = $path[1];$/;"	v
title_for_layout	app/Controller/PagesController.php	/^			$title_for_layout = Inflector::humanize($path[$count - 1]);$/;"	v
uses	app/Controller/PagesController.php	/^	public $uses = array();$/;"	v
PostsController	app/Controller/PostsController.php	/^class PostsController extends AppController$/;"	c
add	app/Controller/PostsController.php	/^    public function add()$/;"	f
delete	app/Controller/PostsController.php	/^    public function delete($id)$/;"	f
edit	app/Controller/PostsController.php	/^    public function edit($id = null)$/;"	f
helpers	app/Controller/PostsController.php	/^    public $helpers = array($/;"	v
index	app/Controller/PostsController.php	/^    public function index()$/;"	f
isAuthorized	app/Controller/PostsController.php	/^    public function isAuthorized($user)$/;"	f
post	app/Controller/PostsController.php	/^        $post = $this->Post->findById($id);$/;"	v
postId	app/Controller/PostsController.php	/^            $postId = (int) $this->request->params['pass'][0];$/;"	v
view	app/Controller/PostsController.php	/^    public function view($id = null)$/;"	f
UsersController	app/Controller/UsersController.php	/^class UsersController extends AppController$/;"	c
add	app/Controller/UsersController.php	/^    public function add()$/;"	f
beforeFilter	app/Controller/UsersController.php	/^    public function beforeFilter()$/;"	f
delete	app/Controller/UsersController.php	/^    public function delete($id = null)$/;"	f
edit	app/Controller/UsersController.php	/^    public function edit($id = null)$/;"	f
index	app/Controller/UsersController.php	/^    public function index()$/;"	f
login	app/Controller/UsersController.php	/^    public function login()$/;"	f
logout	app/Controller/UsersController.php	/^    public function logout()$/;"	f
view	app/Controller/UsersController.php	/^    public function view($id = null)$/;"	f
AppModel	app/Model/AppModel.php	/^class AppModel extends Model {$/;"	c
Post	app/Model/Post.php	/^class Post extends AppModel$/;"	c
isOwnedBy	app/Model/Post.php	/^    public function isOwnedBy($post, $user)$/;"	f
validate	app/Model/Post.php	/^    public $validate = array($/;"	v
User	app/Model/User.php	/^class User extends AppModel$/;"	c
beforeSave	app/Model/User.php	/^    public function beforeSave($options = array())$/;"	f
passwordHasher	app/Model/User.php	/^            $passwordHasher = new SimplePasswordHasher();$/;"	v
validate	app/Model/User.php	/^    public $validate = array($/;"	v
AppHelper	app/View/Helper/AppHelper.php	/^class AppHelper extends Helper {$/;"	c
APP_DIR	app/webroot/index.php	/^	define('APP_DIR', basename(dirname(dirname(__FILE__))));$/;"	d
DS	app/webroot/index.php	/^	define('DS', DIRECTORY_SEPARATOR);$/;"	d
Dispatcher	app/webroot/index.php	/^$Dispatcher = new Dispatcher();$/;"	v
ROOT	app/webroot/index.php	/^	define('ROOT', dirname(dirname(dirname(__FILE__))));$/;"	d
WEBROOT_DIR	app/webroot/index.php	/^	define('WEBROOT_DIR', basename(dirname(__FILE__)));$/;"	d
WWW_ROOT	app/webroot/index.php	/^	define('WWW_ROOT', dirname(__FILE__) . DS);$/;"	d
failed	app/webroot/index.php	/^		$failed = true;$/;"	v
APP_DIR	app/webroot/test.php	/^	define('APP_DIR', basename(dirname(dirname(__FILE__))));$/;"	d
DS	app/webroot/test.php	/^	define('DS', DIRECTORY_SEPARATOR);$/;"	d
ROOT	app/webroot/test.php	/^	define('ROOT', dirname(dirname(dirname(__FILE__))));$/;"	d
WEBROOT_DIR	app/webroot/test.php	/^	define('WEBROOT_DIR', basename(dirname(__FILE__)));$/;"	d
WWW_ROOT	app/webroot/test.php	/^	define('WWW_ROOT', dirname(__FILE__) . DS);$/;"	d
failed	app/webroot/test.php	/^		$failed = true;$/;"	v
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
APP_DIR	index.php	/^define('APP_DIR', 'app');$/;"	d
CAKE_CORE_INCLUDE_PATH	index.php	/^	define('CAKE_CORE_INCLUDE_PATH', ROOT . DS . 'lib');$/;"	d
DS	index.php	/^define('DS', DIRECTORY_SEPARATOR);$/;"	d
ROOT	index.php	/^define('ROOT', dirname(__FILE__));$/;"	d
WEBROOT_DIR	index.php	/^define('WEBROOT_DIR', 'webroot');$/;"	d
WWW_ROOT	index.php	/^define('WWW_ROOT', ROOT . DS . APP_DIR . DS . WEBROOT_DIR . DS);$/;"	d
Cache	lib/Cake/Cache/Cache.php	/^class Cache {$/;"	c
_buildEngine	lib/Cake/Cache/Cache.php	/^	protected static function _buildEngine($name) {$/;"	f
_config	lib/Cake/Cache/Cache.php	/^	protected static $_config = array();$/;"	v
_engines	lib/Cake/Cache/Cache.php	/^	protected static $_engines = array();$/;"	v
_groups	lib/Cake/Cache/Cache.php	/^	protected static $_groups = array();$/;"	v
_reset	lib/Cake/Cache/Cache.php	/^	protected static $_reset = false;$/;"	v
cacheClass	lib/Cake/Cache/Cache.php	/^		$cacheClass = $class . 'Engine';$/;"	v
clear	lib/Cake/Cache/Cache.php	/^	public static function clear($check = false, $config = 'default') {$/;"	f
clearGroup	lib/Cake/Cache/Cache.php	/^	public static function clearGroup($group, $config = 'default') {$/;"	f
config	lib/Cake/Cache/Cache.php	/^			$config = $value;$/;"	v
config	lib/Cake/Cache/Cache.php	/^		$config = self::$_config[$name];$/;"	v
config	lib/Cake/Cache/Cache.php	/^	public static function config($name = null, $settings = array()) {$/;"	f
configured	lib/Cake/Cache/Cache.php	/^	public static function configured() {$/;"	f
current	lib/Cake/Cache/Cache.php	/^			$current = self::$_config[$name];$/;"	v
current	lib/Cake/Cache/Cache.php	/^		$current = array();$/;"	v
decrement	lib/Cake/Cache/Cache.php	/^	public static function decrement($key, $offset = 1, $config = 'default') {$/;"	f
delete	lib/Cake/Cache/Cache.php	/^	public static function delete($key, $config = 'default') {$/;"	f
drop	lib/Cake/Cache/Cache.php	/^	public static function drop($name) {$/;"	f
engine	lib/Cake/Cache/Cache.php	/^		$engine = self::$_config[$name]['engine'];$/;"	v
existing	lib/Cake/Cache/Cache.php	/^		$existing = self::read($key, $config);$/;"	v
gc	lib/Cake/Cache/Cache.php	/^	public static function gc($config = 'default', $expires = null) {$/;"	f
groupConfigs	lib/Cake/Cache/Cache.php	/^	public static function groupConfigs($group = null) {$/;"	f
increment	lib/Cake/Cache/Cache.php	/^	public static function increment($key, $offset = 1, $config = 'default') {$/;"	f
isInitialized	lib/Cake/Cache/Cache.php	/^	public static function isInitialized($config = 'default') {$/;"	f
key	lib/Cake/Cache/Cache.php	/^		$key = self::$_engines[$config]->key($key);$/;"	v
read	lib/Cake/Cache/Cache.php	/^	public static function read($key, $config = 'default') {$/;"	f
remember	lib/Cake/Cache/Cache.php	/^	public static function remember($key, $callable, $config = 'default') {$/;"	f
results	lib/Cake/Cache/Cache.php	/^		$results = call_user_func($callable);$/;"	v
set	lib/Cake/Cache/Cache.php	/^	public static function set($settings = array(), $value = null, $config = 'default') {$/;"	f
settings	lib/Cake/Cache/Cache.php	/^					$settings = array($settings => $value);$/;"	v
settings	lib/Cake/Cache/Cache.php	/^				$settings = self::$_config[$config];$/;"	v
settings	lib/Cake/Cache/Cache.php	/^			$settings = $name;$/;"	v
settings	lib/Cake/Cache/Cache.php	/^			$settings = self::$_config[$name] = self::settings($name);$/;"	v
settings	lib/Cake/Cache/Cache.php	/^		$settings = self::settings($config);$/;"	v
settings	lib/Cake/Cache/Cache.php	/^	public static function settings($name = 'default') {$/;"	f
success	lib/Cake/Cache/Cache.php	/^		$success = self::$_engines[$config]->clear($check);$/;"	v
success	lib/Cake/Cache/Cache.php	/^		$success = self::$_engines[$config]->clearGroup($group);$/;"	v
success	lib/Cake/Cache/Cache.php	/^		$success = self::$_engines[$config]->decrement($settings['prefix'] . $key, $offset);$/;"	v
success	lib/Cake/Cache/Cache.php	/^		$success = self::$_engines[$config]->delete($settings['prefix'] . $key);$/;"	v
success	lib/Cake/Cache/Cache.php	/^		$success = self::$_engines[$config]->increment($settings['prefix'] . $key, $offset);$/;"	v
success	lib/Cake/Cache/Cache.php	/^		$success = self::$_engines[$config]->write($settings['prefix'] . $key, $value, $settings['duration']);$/;"	v
write	lib/Cake/Cache/Cache.php	/^	public static function write($key, $value, $config = 'default') {$/;"	f
CacheEngine	lib/Cake/Cache/CacheEngine.php	/^abstract class CacheEngine {$/;"	c
_groupPrefix	lib/Cake/Cache/CacheEngine.php	/^			$this->_groupPrefix = str_repeat('%s_', count($this->settings['groups']));$/;"	v
_groupPrefix	lib/Cake/Cache/CacheEngine.php	/^	protected $_groupPrefix = null;$/;"	v
clearGroup	lib/Cake/Cache/CacheEngine.php	/^	public function clearGroup($group) {$/;"	f
gc	lib/Cake/Cache/CacheEngine.php	/^	public function gc($expires = null) {$/;"	f
groups	lib/Cake/Cache/CacheEngine.php	/^	public function groups() {$/;"	f
init	lib/Cake/Cache/CacheEngine.php	/^	public function init($settings = array()) {$/;"	f
key	lib/Cake/Cache/CacheEngine.php	/^		$key = preg_replace('\/[\\s]+\/', '_', strtolower(trim(str_replace(array(DS, '\/', '.'), '_', strval($key)))));$/;"	v
key	lib/Cake/Cache/CacheEngine.php	/^	public function key($key) {$/;"	f
prefix	lib/Cake/Cache/CacheEngine.php	/^			$prefix = vsprintf($this->_groupPrefix, $this->groups());$/;"	v
prefix	lib/Cake/Cache/CacheEngine.php	/^		$prefix = '';$/;"	v
settings	lib/Cake/Cache/CacheEngine.php	/^		$this->settings = $settings;$/;"	v
settings	lib/Cake/Cache/CacheEngine.php	/^	public $settings = array();$/;"	v
settings	lib/Cake/Cache/CacheEngine.php	/^	public function settings() {$/;"	f
ApcEngine	lib/Cake/Cache/Engine/ApcEngine.php	/^class ApcEngine extends CacheEngine {$/;"	c
_compiledGroupNames	lib/Cake/Cache/Engine/ApcEngine.php	/^	protected $_compiledGroupNames = array();$/;"	v
cacheKeys	lib/Cake/Cache/Engine/ApcEngine.php	/^		$cacheKeys = $info['cache_list'];$/;"	v
cachetime	lib/Cake/Cache/Engine/ApcEngine.php	/^		$cachetime = intval(apc_fetch($key . '_expires'));$/;"	v
clear	lib/Cake/Cache/Engine/ApcEngine.php	/^	public function clear($check) {$/;"	f
clearGroup	lib/Cake/Cache/Engine/ApcEngine.php	/^	public function clearGroup($group) {$/;"	f
decrement	lib/Cake/Cache/Engine/ApcEngine.php	/^	public function decrement($key, $offset = 1) {$/;"	f
delete	lib/Cake/Cache/Engine/ApcEngine.php	/^	public function delete($key) {$/;"	f
expires	lib/Cake/Cache/Engine/ApcEngine.php	/^			$expires = time() + $duration;$/;"	v
expires	lib/Cake/Cache/Engine/ApcEngine.php	/^		$expires = 0;$/;"	v
groups	lib/Cake/Cache/Engine/ApcEngine.php	/^		$groups = apc_fetch($this->_compiledGroupNames);$/;"	v
groups	lib/Cake/Cache/Engine/ApcEngine.php	/^		$groups = array_values($groups);$/;"	v
groups	lib/Cake/Cache/Engine/ApcEngine.php	/^	public function groups() {$/;"	f
increment	lib/Cake/Cache/Engine/ApcEngine.php	/^	public function increment($key, $offset = 1) {$/;"	f
info	lib/Cake/Cache/Engine/ApcEngine.php	/^		$info = apc_cache_info('user');$/;"	v
init	lib/Cake/Cache/Engine/ApcEngine.php	/^	public function init($settings = array()) {$/;"	f
read	lib/Cake/Cache/Engine/ApcEngine.php	/^	public function read($key) {$/;"	f
result	lib/Cake/Cache/Engine/ApcEngine.php	/^		$result = array();$/;"	v
time	lib/Cake/Cache/Engine/ApcEngine.php	/^		$time = time();$/;"	v
write	lib/Cake/Cache/Engine/ApcEngine.php	/^	public function write($key, $value, $duration) {$/;"	f
FileEngine	lib/Cake/Cache/Engine/FileEngine.php	/^class FileEngine extends CacheEngine {$/;"	c
_File	lib/Cake/Cache/Engine/FileEngine.php	/^				$this->_File = $path->openFile('c+');$/;"	v
_File	lib/Cake/Cache/Engine/FileEngine.php	/^		$this->_File = null;$/;"	v
_File	lib/Cake/Cache/Engine/FileEngine.php	/^	protected $_File = null;$/;"	v
_active	lib/Cake/Cache/Engine/FileEngine.php	/^	protected function _active() {$/;"	f
_clearDirectory	lib/Cake/Cache/Engine/FileEngine.php	/^	protected function _clearDirectory($path, $now, $threshold) {$/;"	f
_groupPrefix	lib/Cake/Cache/Engine/FileEngine.php	/^			$this->_groupPrefix = str_replace('_', DS, $this->_groupPrefix);$/;"	v
_init	lib/Cake/Cache/Engine/FileEngine.php	/^			$this->_init = false;$/;"	v
_init	lib/Cake/Cache/Engine/FileEngine.php	/^	protected $_init = true;$/;"	v
_setKey	lib/Cake/Cache/Engine/FileEngine.php	/^	protected function _setKey($key, $createKey = false) {$/;"	f
cachetime	lib/Cake/Cache/Engine/FileEngine.php	/^		$cachetime = intval($this->_File->current());$/;"	v
clear	lib/Cake/Cache/Engine/FileEngine.php	/^	public function clear($check) {$/;"	f
clearGroup	lib/Cake/Cache/Engine/FileEngine.php	/^	public function clearGroup($group) {$/;"	f
cleared	lib/Cake/Cache/Engine/FileEngine.php	/^		$cleared = array();$/;"	v
containsGroup	lib/Cake/Cache/Engine/FileEngine.php	/^			$containsGroup = strpos($object->getPathName(), DS . $group . DS) !== false;$/;"	v
contents	lib/Cake/Cache/Engine/FileEngine.php	/^		$contents = $expires . $lineBreak . $data . $lineBreak;$/;"	v
contents	lib/Cake/Cache/Engine/FileEngine.php	/^		$contents = new RecursiveIteratorIterator($directory, RecursiveIteratorIterator::SELF_FIRST);$/;"	v
contents	lib/Cake/Cache/Engine/FileEngine.php	/^		$contents = new RecursiveIteratorIterator($directoryIterator, RecursiveIteratorIterator::CHILD_FIRST);$/;"	v
data	lib/Cake/Cache/Engine/FileEngine.php	/^				$data = serialize($data);$/;"	v
data	lib/Cake/Cache/Engine/FileEngine.php	/^				$data = str_replace('\\\\', '\\\\\\\\\\\\\\\\', serialize($data));$/;"	v
data	lib/Cake/Cache/Engine/FileEngine.php	/^				$data = str_replace('\\\\\\\\\\\\\\\\', '\\\\', $data);$/;"	v
data	lib/Cake/Cache/Engine/FileEngine.php	/^			$data = unserialize((string)$data);$/;"	v
data	lib/Cake/Cache/Engine/FileEngine.php	/^		$data = '';$/;"	v
data	lib/Cake/Cache/Engine/FileEngine.php	/^		$data = trim($data);$/;"	v
decrement	lib/Cake/Cache/Engine/FileEngine.php	/^	public function decrement($key, $offset = 1) {$/;"	f
delete	lib/Cake/Cache/Engine/FileEngine.php	/^	public function delete($key) {$/;"	f
dir	lib/Cake/Cache/Engine/FileEngine.php	/^		$dir = $this->settings['path'] . $groups;$/;"	v
dir	lib/Cake/Cache/Engine/FileEngine.php	/^		$dir = dir($path);$/;"	v
dir	lib/Cake/Cache/Engine/FileEngine.php	/^		$dir = new SplFileInfo($this->settings['path']);$/;"	v
directory	lib/Cake/Cache/Engine/FileEngine.php	/^		$directory = new RecursiveDirectoryIterator($this->settings['path']);$/;"	v
directoryIterator	lib/Cake/Cache/Engine/FileEngine.php	/^		$directoryIterator = new RecursiveDirectoryIterator($this->settings['path']);$/;"	v
exists	lib/Cake/Cache/Engine/FileEngine.php	/^			$exists = file_exists($path->getPathname());$/;"	v
expires	lib/Cake/Cache/Engine/FileEngine.php	/^				$expires = (int)$file->current();$/;"	v
expires	lib/Cake/Cache/Engine/FileEngine.php	/^		$expires = time() + $duration;$/;"	v
file	lib/Cake/Cache/Engine/FileEngine.php	/^				$file = null;$/;"	v
file	lib/Cake/Cache/Engine/FileEngine.php	/^			$file = new SplFileObject($path . $entry, 'r');$/;"	v
filePath	lib/Cake/Cache/Engine/FileEngine.php	/^				$filePath = $file->getRealPath();$/;"	v
filePath	lib/Cake/Cache/Engine/FileEngine.php	/^			$filePath = $path . $entry;$/;"	v
gc	lib/Cake/Cache/Engine/FileEngine.php	/^	public function gc($expires = null) {$/;"	f
groups	lib/Cake/Cache/Engine/FileEngine.php	/^			$groups = vsprintf($this->_groupPrefix, $this->groups());$/;"	v
groups	lib/Cake/Cache/Engine/FileEngine.php	/^		$groups = null;$/;"	v
hasPrefix	lib/Cake/Cache/Engine/FileEngine.php	/^				$hasPrefix = strpos($object->getBaseName(), $this->settings['prefix']) === 0;$/;"	v
hasPrefix	lib/Cake/Cache/Engine/FileEngine.php	/^			$hasPrefix = true;$/;"	v
increment	lib/Cake/Cache/Engine/FileEngine.php	/^	public function increment($key, $offset = 1) {$/;"	f
init	lib/Cake/Cache/Engine/FileEngine.php	/^	public function init($settings = array()) {$/;"	f
key	lib/Cake/Cache/Engine/FileEngine.php	/^		$key = Inflector::underscore(str_replace(array(DS, '\/', '.', '<', '>', '?', ':', '|', '*', '"'), '_', strval($key)));$/;"	v
key	lib/Cake/Cache/Engine/FileEngine.php	/^	public function key($key) {$/;"	f
lineBreak	lib/Cake/Cache/Engine/FileEngine.php	/^			$lineBreak = "\\r\\n";$/;"	v
lineBreak	lib/Cake/Cache/Engine/FileEngine.php	/^		$lineBreak = "\\n";$/;"	v
mtime	lib/Cake/Cache/Engine/FileEngine.php	/^				$mtime = $file->getMTime();$/;"	v
now	lib/Cake/Cache/Engine/FileEngine.php	/^			$now = time();$/;"	v
object	lib/Cake/Cache/Engine/FileEngine.php	/^				$object = null;$/;"	v
path	lib/Cake/Cache/Engine/FileEngine.php	/^				$path = $object->getPathName();$/;"	v
path	lib/Cake/Cache/Engine/FileEngine.php	/^			$path = $dir->getPathname();$/;"	v
path	lib/Cake/Cache/Engine/FileEngine.php	/^			$path = $path->getRealPath() . DS;$/;"	v
path	lib/Cake/Cache/Engine/FileEngine.php	/^		$path = $this->_File->getRealPath();$/;"	v
path	lib/Cake/Cache/Engine/FileEngine.php	/^		$path = new SplFileInfo($dir . $key);$/;"	v
prefixLength	lib/Cake/Cache/Engine/FileEngine.php	/^		$prefixLength = strlen($this->settings['prefix']);$/;"	v
read	lib/Cake/Cache/Engine/FileEngine.php	/^	public function read($key) {$/;"	f
settings	lib/Cake/Cache/Engine/FileEngine.php	/^	public $settings = array();$/;"	v
success	lib/Cake/Cache/Engine/FileEngine.php	/^		$success = $this->_File->ftruncate(0) && $this->_File->fwrite($contents) && $this->_File->fflush();$/;"	v
threshold	lib/Cake/Cache/Engine/FileEngine.php	/^			$threshold = $now - $this->settings['duration'];$/;"	v
threshold	lib/Cake/Cache/Engine/FileEngine.php	/^		$threshold = $now = false;$/;"	v
time	lib/Cake/Cache/Engine/FileEngine.php	/^		$time = time();$/;"	v
write	lib/Cake/Cache/Engine/FileEngine.php	/^	public function write($key, $data, $duration) {$/;"	f
MemcacheEngine	lib/Cake/Cache/Engine/MemcacheEngine.php	/^class MemcacheEngine extends CacheEngine {$/;"	c
_Memcache	lib/Cake/Cache/Engine/MemcacheEngine.php	/^			$this->_Memcache = new Memcache();$/;"	v
_Memcache	lib/Cake/Cache/Engine/MemcacheEngine.php	/^	protected $_Memcache = null;$/;"	v
_compiledGroupNames	lib/Cake/Cache/Engine/MemcacheEngine.php	/^	protected $_compiledGroupNames = array();$/;"	v
_parseServerString	lib/Cake/Cache/Engine/MemcacheEngine.php	/^	protected function _parseServerString($server) {$/;"	f
clear	lib/Cake/Cache/Engine/MemcacheEngine.php	/^	public function clear($check) {$/;"	f
clearGroup	lib/Cake/Cache/Engine/MemcacheEngine.php	/^	public function clearGroup($group) {$/;"	f
connect	lib/Cake/Cache/Engine/MemcacheEngine.php	/^	public function connect($host, $port = 11211) {$/;"	f
decrement	lib/Cake/Cache/Engine/MemcacheEngine.php	/^	public function decrement($key, $offset = 1) {$/;"	f
delete	lib/Cake/Cache/Engine/MemcacheEngine.php	/^	public function delete($key) {$/;"	f
duration	lib/Cake/Cache/Engine/MemcacheEngine.php	/^			$duration = 0;$/;"	v
groups	lib/Cake/Cache/Engine/MemcacheEngine.php	/^		$groups = $this->_Memcache->get($this->_compiledGroupNames);$/;"	v
groups	lib/Cake/Cache/Engine/MemcacheEngine.php	/^		$groups = array_values($groups);$/;"	v
groups	lib/Cake/Cache/Engine/MemcacheEngine.php	/^	public function groups() {$/;"	f
host	lib/Cake/Cache/Engine/MemcacheEngine.php	/^			$host = substr($server, 0, $position);$/;"	v
host	lib/Cake/Cache/Engine/MemcacheEngine.php	/^		$host = $server;$/;"	v
increment	lib/Cake/Cache/Engine/MemcacheEngine.php	/^	public function increment($key, $offset = 1) {$/;"	f
init	lib/Cake/Cache/Engine/MemcacheEngine.php	/^	public function init($settings = array()) {$/;"	f
port	lib/Cake/Cache/Engine/MemcacheEngine.php	/^			$port = substr($server, $position + 1);$/;"	v
port	lib/Cake/Cache/Engine/MemcacheEngine.php	/^		$port = 11211;$/;"	v
position	lib/Cake/Cache/Engine/MemcacheEngine.php	/^			$position = strpos($server, ':');$/;"	v
position	lib/Cake/Cache/Engine/MemcacheEngine.php	/^			$position = strpos($server, ']:');$/;"	v
read	lib/Cake/Cache/Engine/MemcacheEngine.php	/^	public function read($key) {$/;"	f
result	lib/Cake/Cache/Engine/MemcacheEngine.php	/^		$result = array();$/;"	v
return	lib/Cake/Cache/Engine/MemcacheEngine.php	/^					$return = true;$/;"	v
return	lib/Cake/Cache/Engine/MemcacheEngine.php	/^			$return = false;$/;"	v
settings	lib/Cake/Cache/Engine/MemcacheEngine.php	/^	public $settings = array();$/;"	v
write	lib/Cake/Cache/Engine/MemcacheEngine.php	/^	public function write($key, $value, $duration) {$/;"	f
MemcachedEngine	lib/Cake/Cache/Engine/MemcachedEngine.php	/^class MemcachedEngine extends CacheEngine {$/;"	c
_Memcached	lib/Cake/Cache/Engine/MemcachedEngine.php	/^		$this->_Memcached = new Memcached($this->settings['persistent'] ? (string)$this->settings['persistent'] : null);$/;"	v
_Memcached	lib/Cake/Cache/Engine/MemcachedEngine.php	/^	protected $_Memcached = null;$/;"	v
_parseServerString	lib/Cake/Cache/Engine/MemcachedEngine.php	/^	protected function _parseServerString($server) {$/;"	f
_serializers	lib/Cake/Cache/Engine/MemcachedEngine.php	/^	protected $_serializers = array($/;"	v
_setOptions	lib/Cake/Cache/Engine/MemcachedEngine.php	/^	protected function _setOptions() {$/;"	f
clear	lib/Cake/Cache/Engine/MemcachedEngine.php	/^	public function clear($check) {$/;"	f
clearGroup	lib/Cake/Cache/Engine/MemcachedEngine.php	/^	public function clearGroup($group) {$/;"	f
decrement	lib/Cake/Cache/Engine/MemcachedEngine.php	/^	public function decrement($key, $offset = 1) {$/;"	f
delete	lib/Cake/Cache/Engine/MemcachedEngine.php	/^	public function delete($key) {$/;"	f
duration	lib/Cake/Cache/Engine/MemcachedEngine.php	/^			$duration = 0;$/;"	v
groups	lib/Cake/Cache/Engine/MemcachedEngine.php	/^		$groups = $this->_Memcached->getMulti($this->_compiledGroupNames);$/;"	v
groups	lib/Cake/Cache/Engine/MemcachedEngine.php	/^		$groups = array_values($groups);$/;"	v
groups	lib/Cake/Cache/Engine/MemcachedEngine.php	/^	public function groups() {$/;"	f
host	lib/Cake/Cache/Engine/MemcachedEngine.php	/^			$host = substr($server, 0, $position);$/;"	v
host	lib/Cake/Cache/Engine/MemcachedEngine.php	/^		$host = $server;$/;"	v
increment	lib/Cake/Cache/Engine/MemcachedEngine.php	/^	public function increment($key, $offset = 1) {$/;"	f
init	lib/Cake/Cache/Engine/MemcachedEngine.php	/^	public function init($settings = array()) {$/;"	f
keys	lib/Cake/Cache/Engine/MemcachedEngine.php	/^		$keys = $this->_Memcached->getAllKeys();$/;"	v
port	lib/Cake/Cache/Engine/MemcachedEngine.php	/^			$port = substr($server, $position + 1);$/;"	v
port	lib/Cake/Cache/Engine/MemcachedEngine.php	/^		$port = 11211;$/;"	v
position	lib/Cake/Cache/Engine/MemcachedEngine.php	/^			$position = strpos($server, ':');$/;"	v
position	lib/Cake/Cache/Engine/MemcachedEngine.php	/^			$position = strpos($server, ']:');$/;"	v
read	lib/Cake/Cache/Engine/MemcachedEngine.php	/^	public function read($key) {$/;"	f
result	lib/Cake/Cache/Engine/MemcachedEngine.php	/^		$result = array();$/;"	v
serializer	lib/Cake/Cache/Engine/MemcachedEngine.php	/^		$serializer = strtolower($this->settings['serialize']);$/;"	v
servers	lib/Cake/Cache/Engine/MemcachedEngine.php	/^		$servers = array();$/;"	v
settings	lib/Cake/Cache/Engine/MemcachedEngine.php	/^	public $settings = array();$/;"	v
write	lib/Cake/Cache/Engine/MemcachedEngine.php	/^	public function write($key, $value, $duration) {$/;"	f
RedisEngine	lib/Cake/Cache/Engine/RedisEngine.php	/^class RedisEngine extends CacheEngine {$/;"	c
_Redis	lib/Cake/Cache/Engine/RedisEngine.php	/^			$this->_Redis = new Redis();$/;"	v
_Redis	lib/Cake/Cache/Engine/RedisEngine.php	/^	protected $_Redis = null;$/;"	v
__destruct	lib/Cake/Cache/Engine/RedisEngine.php	/^	public function __destruct() {$/;"	f
_connect	lib/Cake/Cache/Engine/RedisEngine.php	/^	protected function _connect() {$/;"	f
clear	lib/Cake/Cache/Engine/RedisEngine.php	/^	public function clear($check) {$/;"	f
clearGroup	lib/Cake/Cache/Engine/RedisEngine.php	/^	public function clearGroup($group) {$/;"	f
decrement	lib/Cake/Cache/Engine/RedisEngine.php	/^	public function decrement($key, $offset = 1) {$/;"	f
delete	lib/Cake/Cache/Engine/RedisEngine.php	/^	public function delete($key) {$/;"	f
groups	lib/Cake/Cache/Engine/RedisEngine.php	/^	public function groups() {$/;"	f
increment	lib/Cake/Cache/Engine/RedisEngine.php	/^	public function increment($key, $offset = 1) {$/;"	f
init	lib/Cake/Cache/Engine/RedisEngine.php	/^	public function init($settings = array()) {$/;"	f
keys	lib/Cake/Cache/Engine/RedisEngine.php	/^		$keys = $this->_Redis->getKeys($this->settings['prefix'] . '*');$/;"	v
persistentId	lib/Cake/Cache/Engine/RedisEngine.php	/^				$persistentId = $this->settings['port'] . $this->settings['timeout'] . $this->settings['database'];$/;"	v
read	lib/Cake/Cache/Engine/RedisEngine.php	/^	public function read($key) {$/;"	f
result	lib/Cake/Cache/Engine/RedisEngine.php	/^		$result = array();$/;"	v
return	lib/Cake/Cache/Engine/RedisEngine.php	/^				$return = $this->_Redis->connect($this->settings['server'], $this->settings['port'], $this->settings['timeout']);$/;"	v
return	lib/Cake/Cache/Engine/RedisEngine.php	/^				$return = $this->_Redis->connect($this->settings['unix_socket']);$/;"	v
return	lib/Cake/Cache/Engine/RedisEngine.php	/^				$return = $this->_Redis->pconnect($this->settings['server'], $this->settings['port'], $this->settings['timeout'], $persistentId);$/;"	v
return	lib/Cake/Cache/Engine/RedisEngine.php	/^			$return = $this->_Redis->auth($this->settings['password']);$/;"	v
return	lib/Cake/Cache/Engine/RedisEngine.php	/^			$return = $this->_Redis->select($this->settings['database']);$/;"	v
return	lib/Cake/Cache/Engine/RedisEngine.php	/^		$return = false;$/;"	v
settings	lib/Cake/Cache/Engine/RedisEngine.php	/^	public $settings = array();$/;"	v
value	lib/Cake/Cache/Engine/RedisEngine.php	/^				$value = 1;$/;"	v
value	lib/Cake/Cache/Engine/RedisEngine.php	/^			$value = $this->_Redis->get($this->settings['prefix'] . $group);$/;"	v
value	lib/Cake/Cache/Engine/RedisEngine.php	/^			$value = (int)$value;$/;"	v
value	lib/Cake/Cache/Engine/RedisEngine.php	/^			$value = serialize($value);$/;"	v
value	lib/Cake/Cache/Engine/RedisEngine.php	/^			$value = unserialize($value);$/;"	v
value	lib/Cake/Cache/Engine/RedisEngine.php	/^		$value = $this->_Redis->get($key);$/;"	v
write	lib/Cake/Cache/Engine/RedisEngine.php	/^	public function write($key, $value, $duration) {$/;"	f
WincacheEngine	lib/Cake/Cache/Engine/WincacheEngine.php	/^class WincacheEngine extends CacheEngine {$/;"	c
_compiledGroupNames	lib/Cake/Cache/Engine/WincacheEngine.php	/^	protected $_compiledGroupNames = array();$/;"	v
cacheKeys	lib/Cake/Cache/Engine/WincacheEngine.php	/^		$cacheKeys = $info['ucache_entries'];$/;"	v
cachetime	lib/Cake/Cache/Engine/WincacheEngine.php	/^		$cachetime = intval(wincache_ucache_get($key . '_expires'));$/;"	v
clear	lib/Cake/Cache/Engine/WincacheEngine.php	/^	public function clear($check) {$/;"	f
clearGroup	lib/Cake/Cache/Engine/WincacheEngine.php	/^	public function clearGroup($group) {$/;"	f
data	lib/Cake/Cache/Engine/WincacheEngine.php	/^		$data = array($/;"	v
decrement	lib/Cake/Cache/Engine/WincacheEngine.php	/^	public function decrement($key, $offset = 1) {$/;"	f
delete	lib/Cake/Cache/Engine/WincacheEngine.php	/^	public function delete($key) {$/;"	f
expires	lib/Cake/Cache/Engine/WincacheEngine.php	/^		$expires = time() + $duration;$/;"	v
groups	lib/Cake/Cache/Engine/WincacheEngine.php	/^		$groups = array_values($groups);$/;"	v
groups	lib/Cake/Cache/Engine/WincacheEngine.php	/^		$groups = wincache_ucache_get($this->_compiledGroupNames);$/;"	v
groups	lib/Cake/Cache/Engine/WincacheEngine.php	/^	public function groups() {$/;"	f
increment	lib/Cake/Cache/Engine/WincacheEngine.php	/^	public function increment($key, $offset = 1) {$/;"	f
info	lib/Cake/Cache/Engine/WincacheEngine.php	/^		$info = wincache_ucache_info();$/;"	v
init	lib/Cake/Cache/Engine/WincacheEngine.php	/^	public function init($settings = array()) {$/;"	f
key	lib/Cake/Cache/Engine/WincacheEngine.php	/^			$key => $value$/;"	v
read	lib/Cake/Cache/Engine/WincacheEngine.php	/^	public function read($key) {$/;"	f
result	lib/Cake/Cache/Engine/WincacheEngine.php	/^		$result = array();$/;"	v
result	lib/Cake/Cache/Engine/WincacheEngine.php	/^		$result = wincache_ucache_set($data, null, $duration);$/;"	v
success	lib/Cake/Cache/Engine/WincacheEngine.php	/^		$success = null;$/;"	v
time	lib/Cake/Cache/Engine/WincacheEngine.php	/^		$time = time();$/;"	v
write	lib/Cake/Cache/Engine/WincacheEngine.php	/^	public function write($key, $value, $duration) {$/;"	f
XcacheEngine	lib/Cake/Cache/Engine/XcacheEngine.php	/^class XcacheEngine extends CacheEngine {$/;"	c
_auth	lib/Cake/Cache/Engine/XcacheEngine.php	/^	protected function _auth($reverse = false) {$/;"	f
backup	lib/Cake/Cache/Engine/XcacheEngine.php	/^		static $backup = array();$/;"	v
cachetime	lib/Cake/Cache/Engine/XcacheEngine.php	/^			$cachetime = intval(xcache_get($key . '_expires'));$/;"	v
clear	lib/Cake/Cache/Engine/XcacheEngine.php	/^	public function clear($check) {$/;"	f
clearGroup	lib/Cake/Cache/Engine/XcacheEngine.php	/^	public function clearGroup($group) {$/;"	f
decrement	lib/Cake/Cache/Engine/XcacheEngine.php	/^	public function decrement($key, $offset = 1) {$/;"	f
delete	lib/Cake/Cache/Engine/XcacheEngine.php	/^	public function delete($key) {$/;"	f
expires	lib/Cake/Cache/Engine/XcacheEngine.php	/^		$expires = time() + $duration;$/;"	v
groups	lib/Cake/Cache/Engine/XcacheEngine.php	/^	public function groups() {$/;"	f
increment	lib/Cake/Cache/Engine/XcacheEngine.php	/^	public function increment($key, $offset = 1) {$/;"	f
init	lib/Cake/Cache/Engine/XcacheEngine.php	/^	public function init($settings = array()) {$/;"	f
keys	lib/Cake/Cache/Engine/XcacheEngine.php	/^		$keys = array('PHP_AUTH_USER' => 'user', 'PHP_AUTH_PW' => 'password');$/;"	v
max	lib/Cake/Cache/Engine/XcacheEngine.php	/^		$max = xcache_count(XC_TYPE_VAR);$/;"	v
read	lib/Cake/Cache/Engine/XcacheEngine.php	/^	public function read($key) {$/;"	f
result	lib/Cake/Cache/Engine/XcacheEngine.php	/^		$result = array();$/;"	v
settings	lib/Cake/Cache/Engine/XcacheEngine.php	/^	public $settings = array();$/;"	v
time	lib/Cake/Cache/Engine/XcacheEngine.php	/^			$time = time();$/;"	v
value	lib/Cake/Cache/Engine/XcacheEngine.php	/^				$value = 1;$/;"	v
value	lib/Cake/Cache/Engine/XcacheEngine.php	/^				$value = env($key);$/;"	v
value	lib/Cake/Cache/Engine/XcacheEngine.php	/^			$value = xcache_get($this->settings['prefix'] . $group);$/;"	v
write	lib/Cake/Cache/Engine/XcacheEngine.php	/^	public function write($key, $value, $duration) {$/;"	f
versionFile	lib/Cake/Config/config.php	/^$versionFile = file(CAKE . 'VERSION.txt');$/;"	v
indexParams	lib/Cake/Config/routes.php	/^		$indexParams = $params + array('action' => 'index');$/;"	v
indexParams	lib/Cake/Config/routes.php	/^	$indexParams = $params + array('action' => 'index');$/;"	v
match	lib/Cake/Config/routes.php	/^	$match = array('plugin' => $pluginPattern);$/;"	v
namedConfig	lib/Cake/Config/routes.php	/^$namedConfig = Router::namedConfig();$/;"	v
params	lib/Cake/Config/routes.php	/^		$params = array('prefix' => $prefix, $prefix => true);$/;"	v
params	lib/Cake/Config/routes.php	/^	$params = array('prefix' => $prefix, $prefix => true);$/;"	v
pluginPattern	lib/Cake/Config/routes.php	/^	$pluginPattern = implode('|', $plugins);$/;"	v
prefixes	lib/Cake/Config/routes.php	/^$prefixes = Router::prefixes();$/;"	v
shortParams	lib/Cake/Config/routes.php	/^	$shortParams = array('routeClass' => 'PluginShortRoute', 'plugin' => $pluginPattern);$/;"	v
ConfigReaderInterface	lib/Cake/Configure/ConfigReaderInterface.php	/^interface ConfigReaderInterface {$/;"	i
dump	lib/Cake/Configure/ConfigReaderInterface.php	/^	public function dump($key, $data);$/;"	f
read	lib/Cake/Configure/ConfigReaderInterface.php	/^	public function read($key);$/;"	f
IniReader	lib/Cake/Configure/IniReader.php	/^class IniReader implements ConfigReaderInterface {$/;"	c
__construct	lib/Cake/Configure/IniReader.php	/^	public function __construct($path = null, $section = null) {$/;"	f
_getFilePath	lib/Cake/Configure/IniReader.php	/^	protected function _getFilePath($key) {$/;"	f
_parseNestedValues	lib/Cake/Configure/IniReader.php	/^	protected function _parseNestedValues($values) {$/;"	f
_path	lib/Cake/Configure/IniReader.php	/^		$this->_path = $path;$/;"	v
_path	lib/Cake/Configure/IniReader.php	/^	protected $_path;$/;"	v
_section	lib/Cake/Configure/IniReader.php	/^		$this->_section = $section;$/;"	v
_section	lib/Cake/Configure/IniReader.php	/^	protected $_section;$/;"	v
_value	lib/Cake/Configure/IniReader.php	/^	protected function _value($val) {$/;"	f
contents	lib/Cake/Configure/IniReader.php	/^		$contents = parse_ini_file($file, true);$/;"	v
contents	lib/Cake/Configure/IniReader.php	/^		$contents = trim(implode("\\n", $result));$/;"	v
dump	lib/Cake/Configure/IniReader.php	/^	public function dump($key, $data) {$/;"	f
file	lib/Cake/Configure/IniReader.php	/^			$file = $this->_path . $key;$/;"	v
file	lib/Cake/Configure/IniReader.php	/^			$file = App::pluginPath($plugin) . 'Config' . DS . $key;$/;"	v
file	lib/Cake/Configure/IniReader.php	/^		$file = $this->_getFilePath($key);$/;"	v
filename	lib/Cake/Configure/IniReader.php	/^		$filename = $this->_getFilePath($key);$/;"	v
isSection	lib/Cake/Configure/IniReader.php	/^				$isSection = true;$/;"	v
isSection	lib/Cake/Configure/IniReader.php	/^			$isSection = false;$/;"	v
kValues	lib/Cake/Configure/IniReader.php	/^				$kValues = Hash::flatten($value, '.');$/;"	v
key	lib/Cake/Configure/IniReader.php	/^				$key = substr($key, 0, -4);$/;"	v
key	lib/Cake/Configure/IniReader.php	/^			$key = substr($key, 0, -8);$/;"	v
parse	lib/Cake/Configure/IniReader.php	/^					$parse = $this->_parseNestedValues(array($attribs));$/;"	v
path	lib/Cake/Configure/IniReader.php	/^			$path = APP . 'Config' . DS;$/;"	v
read	lib/Cake/Configure/IniReader.php	/^	public function read($key) {$/;"	f
result	lib/Cake/Configure/IniReader.php	/^		$result = array();$/;"	v
value	lib/Cake/Configure/IniReader.php	/^				$value = false;$/;"	v
value	lib/Cake/Configure/IniReader.php	/^				$value = true;$/;"	v
values	lib/Cake/Configure/IniReader.php	/^				$values = Hash::insert($values, $key, $value);$/;"	v
values	lib/Cake/Configure/IniReader.php	/^			$values = $this->_parseNestedValues($contents[$this->_section]);$/;"	v
values	lib/Cake/Configure/IniReader.php	/^			$values = array();$/;"	v
PhpReader	lib/Cake/Configure/PhpReader.php	/^class PhpReader implements ConfigReaderInterface {$/;"	c
__construct	lib/Cake/Configure/PhpReader.php	/^	public function __construct($path = null) {$/;"	f
_getFilePath	lib/Cake/Configure/PhpReader.php	/^	protected function _getFilePath($key) {$/;"	f
_path	lib/Cake/Configure/PhpReader.php	/^		$this->_path = $path;$/;"	v
_path	lib/Cake/Configure/PhpReader.php	/^	protected $_path = null;$/;"	v
contents	lib/Cake/Configure/PhpReader.php	/^		$contents = '<?php' . "\\n" . '$config = ' . var_export($data, true) . ';';$/;"	v
dump	lib/Cake/Configure/PhpReader.php	/^	public function dump($key, $data) {$/;"	f
file	lib/Cake/Configure/PhpReader.php	/^			$file = $this->_path . $key;$/;"	v
file	lib/Cake/Configure/PhpReader.php	/^			$file = App::pluginPath($plugin) . 'Config' . DS . $key;$/;"	v
file	lib/Cake/Configure/PhpReader.php	/^		$file = $this->_getFilePath($key);$/;"	v
filename	lib/Cake/Configure/PhpReader.php	/^		$filename = $this->_getFilePath($key);$/;"	v
key	lib/Cake/Configure/PhpReader.php	/^			$key = substr($key, 0, -4);$/;"	v
path	lib/Cake/Configure/PhpReader.php	/^			$path = APP . 'Config' . DS;$/;"	v
read	lib/Cake/Configure/PhpReader.php	/^	public function read($key) {$/;"	f
Acl	lib/Cake/Console/Command/AclShell.php	/^				$this->Acl = new AclComponent($collection);$/;"	v
Acl	lib/Cake/Console/Command/AclShell.php	/^	public $Acl;$/;"	v
AclShell	lib/Cake/Console/Command/AclShell.php	/^class AclShell extends AppShell {$/;"	c
_dataVars	lib/Cake/Console/Command/AclShell.php	/^	protected function _dataVars($type = null) {$/;"	f
_getNodeId	lib/Cake/Console/Command/AclShell.php	/^	protected function _getNodeId($class, $identifier) {$/;"	f
_getParams	lib/Cake/Console/Command/AclShell.php	/^	protected function _getParams() {$/;"	f
_outputNode	lib/Cake/Console/Command/AclShell.php	/^	protected function _outputNode($class, $node, $indent) {$/;"	f
aco	lib/Cake/Console/Command/AclShell.php	/^			$aco = $this->parseIdentifier($aco);$/;"	v
aco	lib/Cake/Console/Command/AclShell.php	/^		$aco = is_numeric($this->args[1]) ? intval($this->args[1]) : $this->args[1];$/;"	v
acoName	lib/Cake/Console/Command/AclShell.php	/^		$acoName = $aco;$/;"	v
action	lib/Cake/Console/Command/AclShell.php	/^			$action = $this->args[2];$/;"	v
action	lib/Cake/Console/Command/AclShell.php	/^		$action = '*';$/;"	v
args	lib/Cake/Console/Command/AclShell.php	/^				$this->args = null;$/;"	v
args	lib/Cake/Console/Command/AclShell.php	/^	public $args;$/;"	v
aro	lib/Cake/Console/Command/AclShell.php	/^			$aro = $this->parseIdentifier($aro);$/;"	v
aro	lib/Cake/Console/Command/AclShell.php	/^		$aro = is_numeric($this->args[0]) ? intval($this->args[0]) : $this->args[0];$/;"	v
aroName	lib/Cake/Console/Command/AclShell.php	/^		$aroName = $aro;$/;"	v
check	lib/Cake/Console/Command/AclShell.php	/^	public function check() {$/;"	f
class	lib/Cake/Console/Command/AclShell.php	/^			$class => array($/;"	v
class	lib/Cake/Console/Command/AclShell.php	/^		$class = Configure::read('Acl.classname');$/;"	v
class	lib/Cake/Console/Command/AclShell.php	/^		$class = ucfirst($this->args[0]);$/;"	v
class	lib/Cake/Console/Command/AclShell.php	/^		$class = ucwords($type);$/;"	v
collection	lib/Cake/Console/Command/AclShell.php	/^				$collection = new ComponentCollection();$/;"	v
conditions	lib/Cake/Console/Command/AclShell.php	/^		$conditions = array($class . '.' . $key => $this->args[1]);$/;"	v
connection	lib/Cake/Console/Command/AclShell.php	/^			$this->connection = $this->params['connection'];$/;"	v
connection	lib/Cake/Console/Command/AclShell.php	/^	public $connection = 'default';$/;"	v
controller	lib/Cake/Console/Command/AclShell.php	/^				$controller = new Controller();$/;"	v
count	lib/Cake/Console/Command/AclShell.php	/^			$count = count($stack);$/;"	v
create	lib/Cake/Console/Command/AclShell.php	/^	public function create() {$/;"	f
data	lib/Cake/Console/Command/AclShell.php	/^			$data = array('alias' => $data);$/;"	v
data	lib/Cake/Console/Command/AclShell.php	/^		$data = $node[$class];$/;"	v
data	lib/Cake/Console/Command/AclShell.php	/^		$data = $this->parseIdentifier($this->args[2]);$/;"	v
data	lib/Cake/Console/Command/AclShell.php	/^		$data = array($/;"	v
dataVars	lib/Cake/Console/Command/AclShell.php	/^		$dataVars = $this->_dataVars($this->args[0]);$/;"	v
delete	lib/Cake/Console/Command/AclShell.php	/^	public function delete() {$/;"	f
deny	lib/Cake/Console/Command/AclShell.php	/^	public function deny() {$/;"	f
end	lib/Cake/Console/Command/AclShell.php	/^						$end = end($stack);$/;"	v
end	lib/Cake/Console/Command/AclShell.php	/^				$end = end($stack);$/;"	v
getOptionParser	lib/Cake/Console/Command/AclShell.php	/^	public function getOptionParser() {$/;"	f
getPath	lib/Cake/Console/Command/AclShell.php	/^	public function getPath() {$/;"	f
grant	lib/Cake/Console/Command/AclShell.php	/^	public function grant() {$/;"	f
id	lib/Cake/Console/Command/AclShell.php	/^		$id = $this->_getNodeId($class, $identifier);$/;"	v
identifier	lib/Cake/Console/Command/AclShell.php	/^				$identifier = var_export($identifier, true);$/;"	v
identifier	lib/Cake/Console/Command/AclShell.php	/^			$identifier = array('alias' => $identifier);$/;"	v
identifier	lib/Cake/Console/Command/AclShell.php	/^		$identifier = $this->parseIdentifier($this->args[1]);$/;"	v
identity	lib/Cake/Console/Command/AclShell.php	/^			$identity = $this->parseIdentifier($this->args[1]);$/;"	v
indent	lib/Cake/Console/Command/AclShell.php	/^		$indent = str_repeat('  ', $indent);$/;"	v
inherit	lib/Cake/Console/Command/AclShell.php	/^	public function inherit() {$/;"	f
initdb	lib/Cake/Console/Command/AclShell.php	/^	public function initdb() {$/;"	f
key	lib/Cake/Console/Command/AclShell.php	/^		$key = is_numeric($this->args[1]) ? $dataVars['secondary_id'] : 'alias';$/;"	v
last	lib/Cake/Console/Command/AclShell.php	/^			$last = $n[$class]['rght'];$/;"	v
last	lib/Cake/Console/Command/AclShell.php	/^		$last = null;$/;"	v
main	lib/Cake/Console/Command/AclShell.php	/^	public function main() {$/;"	f
node	lib/Cake/Console/Command/AclShell.php	/^		$node = $this->Acl->{$class}->node($identifier);$/;"	v
nodeExists	lib/Cake/Console/Command/AclShell.php	/^	public function nodeExists() {$/;"	f
nodes	lib/Cake/Console/Command/AclShell.php	/^			$nodes = $this->Acl->{$class}->find('all', array($/;"	v
nodes	lib/Cake/Console/Command/AclShell.php	/^			$nodes = $this->Acl->{$class}->find('all', array('order' => $class . '.lft ASC'));$/;"	v
nodes	lib/Cake/Console/Command/AclShell.php	/^		$nodes = $this->Acl->{$class}->getPath($id);$/;"	v
out	lib/Cake/Console/Command/AclShell.php	/^			$out = "--------------------------------------------------\\n";$/;"	v
parent	lib/Cake/Console/Command/AclShell.php	/^			$parent = $this->_getNodeId($class, $parent);$/;"	v
parent	lib/Cake/Console/Command/AclShell.php	/^			$parent = null;$/;"	v
parent	lib/Cake/Console/Command/AclShell.php	/^		$parent = $this->parseIdentifier($this->args[1]);$/;"	v
parent	lib/Cake/Console/Command/AclShell.php	/^		$parent = $this->parseIdentifier($this->args[2]);$/;"	v
parseIdentifier	lib/Cake/Console/Command/AclShell.php	/^	public function parseIdentifier($identifier) {$/;"	f
parser	lib/Cake/Console/Command/AclShell.php	/^		$parser = parent::getOptionParser();$/;"	v
possibility	lib/Cake/Console/Command/AclShell.php	/^		$possibility = $this->Acl->{$class}->find('all', compact('conditions'));$/;"	v
setParent	lib/Cake/Console/Command/AclShell.php	/^	public function setParent() {$/;"	f
stack	lib/Cake/Console/Command/AclShell.php	/^		$stack = array();$/;"	v
startup	lib/Cake/Console/Command/AclShell.php	/^	public function startup() {$/;"	f
target	lib/Cake/Console/Command/AclShell.php	/^		$target = $this->parseIdentifier($this->args[1]);$/;"	v
tasks	lib/Cake/Console/Command/AclShell.php	/^	public $tasks = array('DbConfig');$/;"	v
topNode	lib/Cake/Console/Command/AclShell.php	/^			$topNode = $this->Acl->{$class}->find('first', array($/;"	v
type	lib/Cake/Console/Command/AclShell.php	/^			$type = $this->args[0];$/;"	v
type	lib/Cake/Console/Command/AclShell.php	/^		$type = array($/;"	v
vars	lib/Cake/Console/Command/AclShell.php	/^		$vars = array();$/;"	v
view	lib/Cake/Console/Command/AclShell.php	/^	public function view() {$/;"	f
ApiShell	lib/Cake/Console/Command/ApiShell.php	/^class ApiShell extends AppShell {$/;"	c
_parseClass	lib/Cake/Console/Command/ApiShell.php	/^	protected function _parseClass($path, $class) {$/;"	f
args	lib/Cake/Console/Command/ApiShell.php	/^			$args = array();$/;"	v
class	lib/Cake/Console/Command/ApiShell.php	/^			$class = Inflector::camelize($this->args[1]);$/;"	v
class	lib/Cake/Console/Command/ApiShell.php	/^			$class = Inflector::camelize($type);$/;"	v
commands	lib/Cake/Console/Command/ApiShell.php	/^		$commands = array($/;"	v
count	lib/Cake/Console/Command/ApiShell.php	/^		$count = count($this->args);$/;"	v
file	lib/Cake/Console/Command/ApiShell.php	/^			$file = $type;$/;"	v
file	lib/Cake/Console/Command/ApiShell.php	/^			$file = Inflector::underscore($this->args[1]);$/;"	v
getOptionParser	lib/Cake/Console/Command/ApiShell.php	/^	public function getOptionParser() {$/;"	f
head	lib/Cake/Console/Command/ApiShell.php	/^		$head = "Usage: cake api [<type>] <className> [-m <method>]\\n";$/;"	v
help	lib/Cake/Console/Command/ApiShell.php	/^	public function help() {$/;"	f
i	lib/Cake/Console/Command/ApiShell.php	/^				$i = 0;$/;"	v
initialize	lib/Cake/Console/Command/ApiShell.php	/^	public function initialize() {$/;"	f
main	lib/Cake/Console/Command/ApiShell.php	/^	public function main() {$/;"	f
method	lib/Cake/Console/Command/ApiShell.php	/^						$method = $parsed[$methods[$number]];$/;"	v
method	lib/Cake/Console/Command/ApiShell.php	/^				$method = $parsed[$this->params['method']];$/;"	v
methods	lib/Cake/Console/Command/ApiShell.php	/^				$methods = array_keys($parsed);$/;"	v
objects	lib/Cake/Console/Command/ApiShell.php	/^		$objects = App::objects('class', $path);$/;"	v
paramString	lib/Cake/Console/Command/ApiShell.php	/^				$paramString = '$' . $param->getName();$/;"	v
parsed	lib/Cake/Console/Command/ApiShell.php	/^		$parsed = $this->_parseClass($path . $class . '.php', $class);$/;"	v
parsed	lib/Cake/Console/Command/ApiShell.php	/^		$parsed = array();$/;"	v
parser	lib/Cake/Console/Command/ApiShell.php	/^		$parser = parent::getOptionParser();$/;"	v
path	lib/Cake/Console/Command/ApiShell.php	/^			$path = $this->paths[$type];$/;"	v
path	lib/Cake/Console/Command/ApiShell.php	/^			$path = $this->paths['core'];$/;"	v
paths	lib/Cake/Console/Command/ApiShell.php	/^		$this->paths = array_merge($this->paths, array($/;"	v
paths	lib/Cake/Console/Command/ApiShell.php	/^	public $paths = array();$/;"	v
reflection	lib/Cake/Console/Command/ApiShell.php	/^		$reflection = new ReflectionClass($class);$/;"	v
type	lib/Cake/Console/Command/ApiShell.php	/^		$type = strtolower($this->args[0]);$/;"	v
AppShell	lib/Cake/Console/Command/AppShell.php	/^class AppShell extends Shell {$/;"	c
BakeShell	lib/Cake/Console/Command/BakeShell.php	/^class BakeShell extends AppShell {$/;"	c
all	lib/Cake/Console/Command/BakeShell.php	/^	public function all() {$/;"	f
args	lib/Cake/Console/Command/BakeShell.php	/^			$this->args = null;$/;"	v
classToBake	lib/Cake/Console/Command/BakeShell.php	/^		$classToBake = strtoupper($this->in(__d('cake_console', 'What would you like to Bake?'), array('D', 'M', 'V', 'C', 'P', 'F', 'T', 'Q')));$/;"	v
connection	lib/Cake/Console/Command/BakeShell.php	/^			$this->connection = $this->DbConfig->getConfig();$/;"	v
connection	lib/Cake/Console/Command/BakeShell.php	/^			$this->connection = $this->params['connection'];$/;"	v
connection	lib/Cake/Console/Command/BakeShell.php	/^	public $connection = 'default';$/;"	v
controller	lib/Cake/Console/Command/BakeShell.php	/^			$controller = $this->_controllerName($name);$/;"	v
getOptionParser	lib/Cake/Console/Command/BakeShell.php	/^	public function getOptionParser() {$/;"	f
main	lib/Cake/Console/Command/BakeShell.php	/^	public function main() {$/;"	f
model	lib/Cake/Console/Command/BakeShell.php	/^		$model = $this->_modelName($name);$/;"	v
modelBaked	lib/Cake/Console/Command/BakeShell.php	/^		$modelBaked = $this->Model->bake($object, false);$/;"	v
modelExists	lib/Cake/Console/Command/BakeShell.php	/^			$modelExists = true;$/;"	v
modelExists	lib/Cake/Console/Command/BakeShell.php	/^		$modelExists = false;$/;"	v
name	lib/Cake/Console/Command/BakeShell.php	/^			$name = $this->Model->getName($this->connection);$/;"	v
name	lib/Cake/Console/Command/BakeShell.php	/^			$name = $this->args[0];$/;"	v
object	lib/Cake/Console/Command/BakeShell.php	/^			$object = new $model();$/;"	v
object	lib/Cake/Console/Command/BakeShell.php	/^			$object = new Model(array('name' => $name, 'ds' => $this->connection));$/;"	v
parser	lib/Cake/Console/Command/BakeShell.php	/^		$parser = parent::getOptionParser();$/;"	v
path	lib/Cake/Console/Command/BakeShell.php	/^			$path = $this->Project->execute();$/;"	v
startup	lib/Cake/Console/Command/BakeShell.php	/^	public function startup() {$/;"	f
task	lib/Cake/Console/Command/BakeShell.php	/^		$task = Inflector::classify($this->command);$/;"	v
tasks	lib/Cake/Console/Command/BakeShell.php	/^	public $tasks = array('Project', 'DbConfig', 'Model', 'Controller', 'View', 'Plugin', 'Fixture', 'Test');$/;"	v
CommandListShell	lib/Cake/Console/Command/CommandListShell.php	/^class CommandListShell extends AppShell {$/;"	c
_asText	lib/Cake/Console/Command/CommandListShell.php	/^	protected function _asText($shellList) {$/;"	f
_asXml	lib/Cake/Console/Command/CommandListShell.php	/^	protected function _asXml($shellList) {$/;"	f
callable	lib/Cake/Console/Command/CommandListShell.php	/^					$callable = Inflector::camelize($plugin) . '.' . $command;$/;"	v
callable	lib/Cake/Console/Command/CommandListShell.php	/^				$callable = $command;$/;"	v
getOptionParser	lib/Cake/Console/Command/CommandListShell.php	/^	public function getOptionParser() {$/;"	f
main	lib/Cake/Console/Command/CommandListShell.php	/^	public function main() {$/;"	f
parser	lib/Cake/Console/Command/CommandListShell.php	/^		$parser = parent::getOptionParser();$/;"	v
plugins	lib/Cake/Console/Command/CommandListShell.php	/^		$plugins = CakePlugin::loaded();$/;"	v
shell	lib/Cake/Console/Command/CommandListShell.php	/^				$shell = $shells->addChild('shell');$/;"	v
shellList	lib/Cake/Console/Command/CommandListShell.php	/^		$shellList = $this->Command->getShellList();$/;"	v
shells	lib/Cake/Console/Command/CommandListShell.php	/^		$shells = new SimpleXmlElement('<shells><\/shells>');$/;"	v
startup	lib/Cake/Console/Command/CommandListShell.php	/^	public function startup() {$/;"	f
tasks	lib/Cake/Console/Command/CommandListShell.php	/^	public $tasks = array('Command');$/;"	v
CompletionShell	lib/Cake/Console/Command/CompletionShell.php	/^class CompletionShell extends AppShell {$/;"	c
_output	lib/Cake/Console/Command/CompletionShell.php	/^	protected function _output($options = array()) {$/;"	f
commandName	lib/Cake/Console/Command/CompletionShell.php	/^			$commandName = $this->args[0];$/;"	v
commandName	lib/Cake/Console/Command/CompletionShell.php	/^		$commandName = '';$/;"	v
commands	lib/Cake/Console/Command/CompletionShell.php	/^	public function commands() {$/;"	f
fuzzy	lib/Cake/Console/Command/CompletionShell.php	/^	public function fuzzy() {$/;"	f
getOptionParser	lib/Cake/Console/Command/CompletionShell.php	/^	public function getOptionParser() {$/;"	f
main	lib/Cake/Console/Command/CompletionShell.php	/^	public function main() {$/;"	f
options	lib/Cake/Console/Command/CompletionShell.php	/^		$options = $this->Command->commands();$/;"	v
options	lib/Cake/Console/Command/CompletionShell.php	/^		$options = $this->Command->options($commandName);$/;"	v
options	lib/Cake/Console/Command/CompletionShell.php	/^		$options = $this->Command->subCommands($this->args[0]);$/;"	v
options	lib/Cake/Console/Command/CompletionShell.php	/^	public function options() {$/;"	f
parser	lib/Cake/Console/Command/CompletionShell.php	/^		$parser = parent::getOptionParser();$/;"	v
startup	lib/Cake/Console/Command/CompletionShell.php	/^	public function startup() {$/;"	f
subCommands	lib/Cake/Console/Command/CompletionShell.php	/^	public function subCommands() {$/;"	f
tasks	lib/Cake/Console/Command/CompletionShell.php	/^	public $tasks = array('Command');$/;"	v
ConsoleShell	lib/Cake/Console/Command/ConsoleShell.php	/^class ConsoleShell extends AppShell {$/;"	c
Dispatcher	lib/Cake/Console/Command/ConsoleShell.php	/^		$this->Dispatcher = new Dispatcher();$/;"	v
_bind	lib/Cake/Console/Command/ConsoleShell.php	/^	protected function _bind($command) {$/;"	f
_columns	lib/Cake/Console/Command/ConsoleShell.php	/^	protected function _columns($command) {$/;"	f
_exit	lib/Cake/Console/Command/ConsoleShell.php	/^	protected function _exit() {$/;"	f
_find	lib/Cake/Console/Command/ConsoleShell.php	/^	protected function _find($command) {$/;"	f
_finished	lib/Cake/Console/Command/ConsoleShell.php	/^		$this->_finished = false;$/;"	v
_finished	lib/Cake/Console/Command/ConsoleShell.php	/^		$this->_finished = true;$/;"	v
_finished	lib/Cake/Console/Command/ConsoleShell.php	/^	protected $_finished = false;$/;"	v
_isValidModel	lib/Cake/Console/Command/ConsoleShell.php	/^	protected function _isValidModel($modelToCheck) {$/;"	f
_loadRoutes	lib/Cake/Console/Command/ConsoleShell.php	/^	protected function _loadRoutes() {$/;"	f
_method	lib/Cake/Console/Command/ConsoleShell.php	/^	protected function _method($command) {$/;"	f
_methodPatterns	lib/Cake/Console/Command/ConsoleShell.php	/^	protected $_methodPatterns = array($/;"	v
_models	lib/Cake/Console/Command/ConsoleShell.php	/^	protected function _models() {$/;"	f
_routeToArray	lib/Cake/Console/Command/ConsoleShell.php	/^	protected function _routeToArray($command) {$/;"	f
_routeToString	lib/Cake/Console/Command/ConsoleShell.php	/^	protected function _routeToString($command) {$/;"	f
_routesReload	lib/Cake/Console/Command/ConsoleShell.php	/^	protected function _routesReload() {$/;"	f
_routesShow	lib/Cake/Console/Command/ConsoleShell.php	/^	protected function _routesShow() {$/;"	f
_save	lib/Cake/Console/Command/ConsoleShell.php	/^	protected function _save($command) {$/;"	f
_unbind	lib/Cake/Console/Command/ConsoleShell.php	/^	protected function _unbind($command) {$/;"	f
association	lib/Cake/Console/Command/ConsoleShell.php	/^		$association = $tmp[2];$/;"	v
associations	lib/Cake/Console/Command/ConsoleShell.php	/^	public $associations = array('hasOne', 'hasMany', 'belongsTo', 'hasAndBelongsToMany');$/;"	v
badCommandChars	lib/Cake/Console/Command/ConsoleShell.php	/^	public $badCommandChars = array('$', ';');$/;"	v
class	lib/Cake/Console/Command/ConsoleShell.php	/^			$class = $model;$/;"	v
command	lib/Cake/Console/Command/ConsoleShell.php	/^				$command = trim($this->in(''));$/;"	v
command	lib/Cake/Console/Command/ConsoleShell.php	/^			$command = '';$/;"	v
command	lib/Cake/Console/Command/ConsoleShell.php	/^		$command = str_replace($this->badCommandChars, "", $command);$/;"	v
command	lib/Cake/Console/Command/ConsoleShell.php	/^		$command = strip_tags($command);$/;"	v
currentAssociations	lib/Cake/Console/Command/ConsoleShell.php	/^		$currentAssociations = $this->{$modelA}->getAssociated();$/;"	v
data	lib/Cake/Console/Command/ConsoleShell.php	/^			$data = preg_replace('\/^\\(*(array)?\\(*(.+?)\\)*$\/i', '\\\\2', $data);$/;"	v
data	lib/Cake/Console/Command/ConsoleShell.php	/^			$data = str_replace($this->badCommandChars, "", $data);$/;"	v
data	lib/Cake/Console/Command/ConsoleShell.php	/^			$data = strip_tags($data);$/;"	v
fieldsCommand	lib/Cake/Console/Command/ConsoleShell.php	/^			$fieldsCommand = "\\$data = \\$this->{$modelToCheck}->getColumnTypes();";$/;"	v
findCommand	lib/Cake/Console/Command/ConsoleShell.php	/^			$findCommand = "\\$data = \\$this->$command;";$/;"	v
getOptionParser	lib/Cake/Console/Command/ConsoleShell.php	/^	public function getOptionParser() {$/;"	f
help	lib/Cake/Console/Command/ConsoleShell.php	/^	public function help() {$/;"	f
main	lib/Cake/Console/Command/ConsoleShell.php	/^	public function main($command = null) {$/;"	f
message	lib/Cake/Console/Command/ConsoleShell.php	/^			$message = __d($/;"	v
method	lib/Cake/Console/Command/ConsoleShell.php	/^			$method = $this->_method($command);$/;"	v
modelA	lib/Cake/Console/Command/ConsoleShell.php	/^		$modelA = $tmp[1];$/;"	v
modelB	lib/Cake/Console/Command/ConsoleShell.php	/^		$modelB = $tmp[3];$/;"	v
modelToCheck	lib/Cake/Console/Command/ConsoleShell.php	/^		$modelToCheck = strip_tags(str_replace($this->badCommandChars, "", $tmp[1]));$/;"	v
models	lib/Cake/Console/Command/ConsoleShell.php	/^		$this->models = App::objects('Model');$/;"	v
models	lib/Cake/Console/Command/ConsoleShell.php	/^	public $models = array();$/;"	v
optionParser	lib/Cake/Console/Command/ConsoleShell.php	/^		$optionParser = $this->getOptionParser();$/;"	v
parser	lib/Cake/Console/Command/ConsoleShell.php	/^		$parser = parent::getOptionParser();$/;"	v
saveCommand	lib/Cake/Console/Command/ConsoleShell.php	/^			$saveCommand = "\\$this->{$modelToSave}->save(array('{$modelToSave}' => array({$data})));";$/;"	v
startup	lib/Cake/Console/Command/ConsoleShell.php	/^	public function startup() {$/;"	f
validCurrentAssociation	lib/Cake/Console/Command/ConsoleShell.php	/^				$validCurrentAssociation = true;$/;"	v
validCurrentAssociation	lib/Cake/Console/Command/ConsoleShell.php	/^		$validCurrentAssociation = false;$/;"	v
I18nShell	lib/Cake/Console/Command/I18nShell.php	/^class I18nShell extends AppShell {$/;"	c
choice	lib/Cake/Console/Command/I18nShell.php	/^		$choice = strtolower($this->in(__d('cake_console', 'What would you like to do?'), array('E', 'I', 'H', 'Q')));$/;"	v
dataSource	lib/Cake/Console/Command/I18nShell.php	/^			$this->dataSource = $this->params['datasource'];$/;"	v
dataSource	lib/Cake/Console/Command/I18nShell.php	/^	public $dataSource = 'default';$/;"	v
getOptionParser	lib/Cake/Console/Command/I18nShell.php	/^	public function getOptionParser() {$/;"	f
initdb	lib/Cake/Console/Command/I18nShell.php	/^	public function initdb() {$/;"	f
main	lib/Cake/Console/Command/I18nShell.php	/^	public function main() {$/;"	f
parser	lib/Cake/Console/Command/I18nShell.php	/^		$parser = parent::getOptionParser();$/;"	v
startup	lib/Cake/Console/Command/I18nShell.php	/^	public function startup() {$/;"	f
tasks	lib/Cake/Console/Command/I18nShell.php	/^	public $tasks = array('DbConfig', 'Extract');$/;"	v
File	lib/Cake/Console/Command/SchemaShell.php	/^				$File = new File($this->Schema->path . DS . $write, true);$/;"	v
File	lib/Cake/Console/Command/SchemaShell.php	/^				$File = new File($write, true);$/;"	v
File	lib/Cake/Console/Command/SchemaShell.php	/^		$File = new File($this->Schema->path . DS . $this->params['file']);$/;"	v
Folder	lib/Cake/Console/Command/SchemaShell.php	/^			$Folder = new Folder($this->Schema->path);$/;"	v
Old	lib/Cake/Console/Command/SchemaShell.php	/^		$Old = $this->Schema->read($options);$/;"	v
Schema	lib/Cake/Console/Command/SchemaShell.php	/^		$Schema = $this->Schema->load($options);$/;"	v
Schema	lib/Cake/Console/Command/SchemaShell.php	/^		$Schema = $this->Schema->load();$/;"	v
Schema	lib/Cake/Console/Command/SchemaShell.php	/^		$this->Schema = new CakeSchema(compact('name', 'path', 'file', 'connection', 'plugin'));$/;"	v
Schema	lib/Cake/Console/Command/SchemaShell.php	/^	public $Schema;$/;"	v
SchemaShell	lib/Cake/Console/Command/SchemaShell.php	/^class SchemaShell extends AppShell {$/;"	c
_create	lib/Cake/Console/Command/SchemaShell.php	/^	protected function _create(CakeSchema $Schema, $table = null) {$/;"	f
_dry	lib/Cake/Console/Command/SchemaShell.php	/^			$this->_dry = true;$/;"	v
_dry	lib/Cake/Console/Command/SchemaShell.php	/^	protected $_dry = null;$/;"	v
_loadSchema	lib/Cake/Console/Command/SchemaShell.php	/^	protected function _loadSchema() {$/;"	f
_run	lib/Cake/Console/Command/SchemaShell.php	/^	protected function _run($contents, $event, CakeSchema $Schema) {$/;"	f
_update	lib/Cake/Console/Command/SchemaShell.php	/^	protected function _update(&$Schema, $table = null) {$/;"	f
cacheDisable	lib/Cake/Console/Command/SchemaShell.php	/^		$cacheDisable = Configure::read('Cache.disable');$/;"	v
compare	lib/Cake/Console/Command/SchemaShell.php	/^		$compare = $this->Schema->compare($Old, $Schema);$/;"	v
connection	lib/Cake/Console/Command/SchemaShell.php	/^			$connection = $this->params['connection'];$/;"	v
connection	lib/Cake/Console/Command/SchemaShell.php	/^		$connection = array($/;"	v
content	lib/Cake/Console/Command/SchemaShell.php	/^		$content = $this->Schema->read($options);$/;"	v
contents	lib/Cake/Console/Command/SchemaShell.php	/^		$contents = "\\n\\n" . $db->dropSchema($Schema) . "\\n\\n" . $db->createSchema($Schema);$/;"	v
contents	lib/Cake/Console/Command/SchemaShell.php	/^		$contents = array();$/;"	v
count	lib/Cake/Console/Command/SchemaShell.php	/^					$count = $numToUse;$/;"	v
count	lib/Cake/Console/Command/SchemaShell.php	/^			$count = 0;$/;"	v
create	lib/Cake/Console/Command/SchemaShell.php	/^	public function create() {$/;"	f
db	lib/Cake/Console/Command/SchemaShell.php	/^		$db = ConnectionManager::getDataSource($this->Schema->connection);$/;"	v
defaultFile	lib/Cake/Console/Command/SchemaShell.php	/^		$defaultFile = 'schema.php';$/;"	v
drop	lib/Cake/Console/Command/SchemaShell.php	/^		$drop = $create = array();$/;"	v
dry	lib/Cake/Console/Command/SchemaShell.php	/^		$dry = array($/;"	v
dump	lib/Cake/Console/Command/SchemaShell.php	/^	public function dump() {$/;"	f
error	lib/Cake/Console/Command/SchemaShell.php	/^						$error = $table . ': ' . $e->getMessage();$/;"	v
error	lib/Cake/Console/Command/SchemaShell.php	/^					$error = null;$/;"	v
exclude	lib/Cake/Console/Command/SchemaShell.php	/^		$exclude = array($/;"	v
excluded	lib/Cake/Console/Command/SchemaShell.php	/^			$excluded = String::tokenize($this->params['exclude']);$/;"	v
file	lib/Cake/Console/Command/SchemaShell.php	/^		$file = $this->Schema->path . DS . $this->params['file'];$/;"	v
file	lib/Cake/Console/Command/SchemaShell.php	/^		$file = $this->params['file'];$/;"	v
file	lib/Cake/Console/Command/SchemaShell.php	/^		$file = array($/;"	v
fileName	lib/Cake/Console/Command/SchemaShell.php	/^			$fileName = rtrim($this->Schema->file, '.php');$/;"	v
fileName	lib/Cake/Console/Command/SchemaShell.php	/^			$fileName = rtrim($this->params['file'], '.php');$/;"	v
force	lib/Cake/Console/Command/SchemaShell.php	/^		$force = array($/;"	v
generate	lib/Cake/Console/Command/SchemaShell.php	/^	public function generate() {$/;"	f
getOptionParser	lib/Cake/Console/Command/SchemaShell.php	/^	public function getOptionParser() {$/;"	f
models	lib/Cake/Console/Command/SchemaShell.php	/^		$models = array($/;"	v
name	lib/Cake/Console/Command/SchemaShell.php	/^				$name = $plugin;$/;"	v
name	lib/Cake/Console/Command/SchemaShell.php	/^			$name = $this->params['name'] = $splitName;$/;"	v
name	lib/Cake/Console/Command/SchemaShell.php	/^			$name = $this->params['name'] = $this->args[0];$/;"	v
name	lib/Cake/Console/Command/SchemaShell.php	/^			$name = $this->params['name'];$/;"	v
name	lib/Cake/Console/Command/SchemaShell.php	/^		$name = $path = $connection = $plugin = null;$/;"	v
name	lib/Cake/Console/Command/SchemaShell.php	/^		$name = $plugin = null;$/;"	v
name	lib/Cake/Console/Command/SchemaShell.php	/^		$name = Inflector::classify($name);$/;"	v
name	lib/Cake/Console/Command/SchemaShell.php	/^		$name = array($/;"	v
numToUse	lib/Cake/Console/Command/SchemaShell.php	/^				$numToUse = $this->params['snapshot'];$/;"	v
numToUse	lib/Cake/Console/Command/SchemaShell.php	/^			$numToUse = false;$/;"	v
options	lib/Cake/Console/Command/SchemaShell.php	/^		$options = array($/;"	v
options	lib/Cake/Console/Command/SchemaShell.php	/^		$options = array();$/;"	v
parser	lib/Cake/Console/Command/SchemaShell.php	/^		$parser = parent::getOptionParser();$/;"	v
path	lib/Cake/Console/Command/SchemaShell.php	/^			$path = $this->params['path'];$/;"	v
path	lib/Cake/Console/Command/SchemaShell.php	/^		$path = array($/;"	v
plugin	lib/Cake/Console/Command/SchemaShell.php	/^			$plugin = $this->params['plugin'];$/;"	v
plugin	lib/Cake/Console/Command/SchemaShell.php	/^		$plugin = array($/;"	v
prompt	lib/Cake/Console/Command/SchemaShell.php	/^			$prompt = __d('cake_console', "Schema file exists.\\n [O]verwrite\\n [S]napshot\\n [Q]uit\\nWould you like to do?");$/;"	v
result	lib/Cake/Console/Command/SchemaShell.php	/^			$result = $Folder->read();$/;"	v
result	lib/Cake/Console/Command/SchemaShell.php	/^			$result = strtolower($this->in($prompt, array('o', 's', 'q'), 's'));$/;"	v
snapshot	lib/Cake/Console/Command/SchemaShell.php	/^				$snapshot = false;$/;"	v
snapshot	lib/Cake/Console/Command/SchemaShell.php	/^			$snapshot = true;$/;"	v
snapshot	lib/Cake/Console/Command/SchemaShell.php	/^		$snapshot = array($/;"	v
snapshot	lib/Cake/Console/Command/SchemaShell.php	/^		$snapshot = false;$/;"	v
startup	lib/Cake/Console/Command/SchemaShell.php	/^	public function startup() {$/;"	f
table	lib/Cake/Console/Command/SchemaShell.php	/^			$table = $this->args[1];$/;"	v
table	lib/Cake/Console/Command/SchemaShell.php	/^		$table = null;$/;"	v
update	lib/Cake/Console/Command/SchemaShell.php	/^	public function update() {$/;"	f
view	lib/Cake/Console/Command/SchemaShell.php	/^	public function view() {$/;"	f
write	lib/Cake/Console/Command/SchemaShell.php	/^				$write = $this->params['write'];$/;"	v
write	lib/Cake/Console/Command/SchemaShell.php	/^				$write = Inflector::underscore($this->Schema->name);$/;"	v
write	lib/Cake/Console/Command/SchemaShell.php	/^		$write = array($/;"	v
write	lib/Cake/Console/Command/SchemaShell.php	/^		$write = false;$/;"	v
yes	lib/Cake/Console/Command/SchemaShell.php	/^		$yes = array($/;"	v
ServerShell	lib/Cake/Console/Command/ServerShell.php	/^class ServerShell extends AppShell {$/;"	c
_documentRoot	lib/Cake/Console/Command/ServerShell.php	/^			$this->_documentRoot = $m[1] . '\\\\' . $m[2];$/;"	v
_documentRoot	lib/Cake/Console/Command/ServerShell.php	/^			$this->_documentRoot = $this->params['document_root'];$/;"	v
_documentRoot	lib/Cake/Console/Command/ServerShell.php	/^			$this->_documentRoot = substr($this->_documentRoot, 0, strlen($this->_documentRoot) - 1);$/;"	v
_documentRoot	lib/Cake/Console/Command/ServerShell.php	/^		$this->_documentRoot = WWW_ROOT;$/;"	v
_documentRoot	lib/Cake/Console/Command/ServerShell.php	/^	protected $_documentRoot = null;$/;"	v
_host	lib/Cake/Console/Command/ServerShell.php	/^			$this->_host = $this->params['host'];$/;"	v
_host	lib/Cake/Console/Command/ServerShell.php	/^		$this->_host = self::DEFAULT_HOST;$/;"	v
_host	lib/Cake/Console/Command/ServerShell.php	/^	protected $_host = null;$/;"	v
_port	lib/Cake/Console/Command/ServerShell.php	/^			$this->_port = $this->params['port'];$/;"	v
_port	lib/Cake/Console/Command/ServerShell.php	/^		$this->_port = self::DEFAULT_PORT;$/;"	v
_port	lib/Cake/Console/Command/ServerShell.php	/^	protected $_port = null;$/;"	v
_welcome	lib/Cake/Console/Command/ServerShell.php	/^	protected function _welcome() {$/;"	f
command	lib/Cake/Console/Command/ServerShell.php	/^		$command = sprintf("php -S %s:%d -t %s %s",$/;"	v
getOptionParser	lib/Cake/Console/Command/ServerShell.php	/^	public function getOptionParser() {$/;"	f
initialize	lib/Cake/Console/Command/ServerShell.php	/^	public function initialize() {$/;"	f
main	lib/Cake/Console/Command/ServerShell.php	/^	public function main() {$/;"	f
parser	lib/Cake/Console/Command/ServerShell.php	/^		$parser = parent::getOptionParser();$/;"	v
port	lib/Cake/Console/Command/ServerShell.php	/^		$port = ($this->_port == self::DEFAULT_PORT) ? '' : ':' . $this->_port;$/;"	v
startup	lib/Cake/Console/Command/ServerShell.php	/^	public function startup() {$/;"	f
BakeTask	lib/Cake/Console/Command/Task/BakeTask.php	/^class BakeTask extends AppShell {$/;"	c
connection	lib/Cake/Console/Command/Task/BakeTask.php	/^	public $connection = null;$/;"	v
execute	lib/Cake/Console/Command/Task/BakeTask.php	/^	public function execute() {$/;"	f
getPath	lib/Cake/Console/Command/Task/BakeTask.php	/^	public function getPath() {$/;"	f
interactive	lib/Cake/Console/Command/Task/BakeTask.php	/^	public $interactive = false;$/;"	v
path	lib/Cake/Console/Command/Task/BakeTask.php	/^			$path = $this->_pluginPath($this->plugin) . $this->name . DS;$/;"	v
path	lib/Cake/Console/Command/Task/BakeTask.php	/^		$path = $this->path;$/;"	v
plugin	lib/Cake/Console/Command/Task/BakeTask.php	/^			$this->plugin = $this->params['plugin'];$/;"	v
plugin	lib/Cake/Console/Command/Task/BakeTask.php	/^	public $plugin = null;$/;"	v
startup	lib/Cake/Console/Command/Task/BakeTask.php	/^	public function startup() {$/;"	f
CommandTask	lib/Cake/Console/Command/Task/CommandTask.php	/^class CommandTask extends AppShell {$/;"	c
Reflection	lib/Cake/Console/Command/Task/CommandTask.php	/^		$Reflection = new ReflectionClass($Shell);$/;"	v
Shell	lib/Cake/Console/Command/Task/CommandTask.php	/^		$Shell = $this->getShell($commandName);$/;"	v
Shell	lib/Cake/Console/Command/Task/CommandTask.php	/^		$Shell = new $class();$/;"	v
ShellReflection	lib/Cake/Console/Command/Task/CommandTask.php	/^		$ShellReflection = new ReflectionClass('AppShell');$/;"	v
_appendShells	lib/Cake/Console/Command/Task/CommandTask.php	/^	protected function _appendShells($type, $shells, &$shellList) {$/;"	f
appShells	lib/Cake/Console/Command/Task/CommandTask.php	/^		$appShells = App::objects('Console\/Command', null, false);$/;"	v
appShells	lib/Cake/Console/Command/Task/CommandTask.php	/^		$appShells = array_diff($appShells, $shells, $skipFiles);$/;"	v
array	lib/Cake/Console/Command/Task/CommandTask.php	/^		$array = $parser->options();$/;"	v
class	lib/Cake/Console/Command/Task/CommandTask.php	/^		$class = $name . 'Shell';$/;"	v
commandName	lib/Cake/Console/Command/Task/CommandTask.php	/^			$commandName = $name;$/;"	v
commands	lib/Cake/Console/Command/Task/CommandTask.php	/^	public function commands() {$/;"	f
corePath	lib/Cake/Console/Command/Task/CommandTask.php	/^		$corePath = App::core('Console\/Command');$/;"	v
getShell	lib/Cake/Console/Command/Task/CommandTask.php	/^	public function getShell($commandName) {$/;"	f
getShellList	lib/Cake/Console/Command/Task/CommandTask.php	/^	public function getShellList() {$/;"	f
methodNames	lib/Cake/Console/Command/Task/CommandTask.php	/^		$methodNames = array();$/;"	v
methods	lib/Cake/Console/Command/Task/CommandTask.php	/^		$methods = $Reflection->getMethods(ReflectionMethod::IS_PUBLIC);$/;"	v
name	lib/Cake/Console/Command/Task/CommandTask.php	/^		$name = Inflector::camelize($name);$/;"	v
options	lib/Cake/Console/Command/Task/CommandTask.php	/^		$options = array();$/;"	v
options	lib/Cake/Console/Command/Task/CommandTask.php	/^	public function options($commandName) {$/;"	f
parser	lib/Cake/Console/Command/Task/CommandTask.php	/^			$parser = $Shell->getOptionParser();$/;"	v
parser	lib/Cake/Console/Command/Task/CommandTask.php	/^			$parser = new ConsoleOptionParser();$/;"	v
pluginDot	lib/Cake/Console/Command/Task/CommandTask.php	/^			$pluginDot = '';$/;"	v
pluginDot	lib/Cake/Console/Command/Task/CommandTask.php	/^		$pluginDot = Inflector::camelize($pluginDot);$/;"	v
pluginShells	lib/Cake/Console/Command/Task/CommandTask.php	/^			$pluginShells = App::objects($plugin . '.Console\/Command');$/;"	v
plugins	lib/Cake/Console/Command/Task/CommandTask.php	/^		$plugins = CakePlugin::loaded();$/;"	v
prefix	lib/Cake/Console/Command/Task/CommandTask.php	/^				$prefix = $type . '.';$/;"	v
prefix	lib/Cake/Console/Command/Task/CommandTask.php	/^			$prefix = '';$/;"	v
return	lib/Cake/Console/Command/Task/CommandTask.php	/^		$return = array_keys($taskMap);$/;"	v
return	lib/Cake/Console/Command/Task/CommandTask.php	/^		$return = array_map('Inflector::underscore', $return);$/;"	v
shellList	lib/Cake/Console/Command/Task/CommandTask.php	/^		$shellList = $this->getShellList();$/;"	v
shellList	lib/Cake/Console/Command/Task/CommandTask.php	/^		$shellList = array_fill_keys($plugins, null) + array('CORE' => null, 'app' => null);$/;"	v
shellMethodNames	lib/Cake/Console/Command/Task/CommandTask.php	/^		$shellMethodNames = array('main', 'help');$/;"	v
shellMethods	lib/Cake/Console/Command/Task/CommandTask.php	/^		$shellMethods = $ShellReflection->getMethods(ReflectionMethod::IS_PUBLIC);$/;"	v
shells	lib/Cake/Console/Command/Task/CommandTask.php	/^		$shells = App::objects('file', $corePath[0]);$/;"	v
shells	lib/Cake/Console/Command/Task/CommandTask.php	/^		$shells = array_diff($shells, $skipFiles);$/;"	v
short	lib/Cake/Console/Command/Task/CommandTask.php	/^			$short = $obj->short();$/;"	v
skipFiles	lib/Cake/Console/Command/Task/CommandTask.php	/^		$skipFiles = array('AppShell');$/;"	v
subCommands	lib/Cake/Console/Command/Task/CommandTask.php	/^	public function subCommands($commandName) {$/;"	f
taskMap	lib/Cake/Console/Command/Task/CommandTask.php	/^		$taskMap = TaskCollection::normalizeObjectArray((array)$Shell->tasks);$/;"	v
ControllerTask	lib/Cake/Console/Command/Task/ControllerTask.php	/^class ControllerTask extends BakeTask {$/;"	c
__tables	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$this->__tables = $this->Model->getAllTables($useDbConfig);$/;"	v
_askAboutMethods	lib/Cake/Console/Command/Task/ControllerTask.php	/^	protected function _askAboutMethods() {$/;"	f
_controllerNames	lib/Cake/Console/Command/Task/ControllerTask.php	/^			$this->_controllerNames = array();$/;"	v
_doPropertyChoices	lib/Cake/Console/Command/Task/ControllerTask.php	/^	protected function _doPropertyChoices($prompt, $example) {$/;"	f
_interactive	lib/Cake/Console/Command/Task/ControllerTask.php	/^	protected function _interactive() {$/;"	f
actions	lib/Cake/Console/Command/Task/ControllerTask.php	/^				$actions = $this->bakeActions($controller);$/;"	v
actions	lib/Cake/Console/Command/Task/ControllerTask.php	/^				$actions = 'scaffold';$/;"	v
actions	lib/Cake/Console/Command/Task/ControllerTask.php	/^			$actions = $this->bakeActions($controllerName, null, strtolower($wannaUseSession) === 'y');$/;"	v
actions	lib/Cake/Console/Command/Task/ControllerTask.php	/^			$actions = '';$/;"	v
actions	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$actions = $this->Template->generate('actions', 'controller_actions');$/;"	v
actions	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$actions = '';$/;"	v
admin	lib/Cake/Console/Command/Task/ControllerTask.php	/^				$admin = $this->Project->getPrefix();$/;"	v
admin	lib/Cake/Console/Command/Task/ControllerTask.php	/^			$admin = $this->Project->getPrefix();$/;"	v
admin	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$admin = false;$/;"	v
all	lib/Cake/Console/Command/Task/ControllerTask.php	/^	public function all() {$/;"	f
bake	lib/Cake/Console/Command/Task/ControllerTask.php	/^	public function bake($controllerName, $actions = '', $helpers = null, $components = null) {$/;"	f
bakeActions	lib/Cake/Console/Command/Task/ControllerTask.php	/^	public function bakeActions($controllerName, $admin = null, $wannaUseSession = true) {$/;"	f
bakeTest	lib/Cake/Console/Command/Task/ControllerTask.php	/^	public function bakeTest($className) {$/;"	f
baked	lib/Cake/Console/Command/Task/ControllerTask.php	/^				$baked = $this->bake($controllerName, $actions, $helpers, $components);$/;"	v
baked	lib/Cake/Console/Command/Task/ControllerTask.php	/^			$baked = $this->bake($controllerName, $actions, $helpers, $components);$/;"	v
baked	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$baked = false;$/;"	v
components	lib/Cake/Console/Command/Task/ControllerTask.php	/^				$components = $this->doComponents();$/;"	v
components	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$components = array('Paginator');$/;"	v
confirmController	lib/Cake/Console/Command/Task/ControllerTask.php	/^	public function confirmController($controllerName, $useDynamicScaffold, $helpers, $components) {$/;"	f
connection	lib/Cake/Console/Command/Task/ControllerTask.php	/^				$this->connection = 'default';$/;"	v
connection	lib/Cake/Console/Command/Task/ControllerTask.php	/^			$this->connection = $this->DbConfig->getConfig();$/;"	v
contents	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$contents = $this->Template->generate('classes', 'controller');$/;"	v
controller	lib/Cake/Console/Command/Task/ControllerTask.php	/^			$controller = $this->_controllerName($model);$/;"	v
controller	lib/Cake/Console/Command/Task/ControllerTask.php	/^			$controller = $this->_controllerName($this->args[0]);$/;"	v
controllerName	lib/Cake/Console/Command/Task/ControllerTask.php	/^			$controllerName = $controllers[intval($enteredController) - 1];$/;"	v
controllerName	lib/Cake/Console/Command/Task/ControllerTask.php	/^			$controllerName = Inflector::camelize($enteredController);$/;"	v
controllerName	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$controllerName = $this->getName();$/;"	v
controllerPath	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$controllerPath = $this->_controllerPath($controllerName);$/;"	v
controllers	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$controllers = $this->listAll($useDbConfig);$/;"	v
controllersCreated	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$controllersCreated = 0;$/;"	v
count	lib/Cake/Console/Command/Task/ControllerTask.php	/^			$count = count($this->__tables);$/;"	v
currentModelName	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$currentModelName = $modelImport = $this->_modelName($controllerName);$/;"	v
displayField	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$displayField = $modelObj->displayField;$/;"	v
doComponents	lib/Cake/Console/Command/Task/ControllerTask.php	/^	public function doComponents() {$/;"	f
doHelpers	lib/Cake/Console/Command/Task/ControllerTask.php	/^	public function doHelpers() {$/;"	f
doItInteractive	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$doItInteractive = $this->in(implode("\\n", $question), array('y', 'n'), 'y');$/;"	v
enteredController	lib/Cake/Console/Command/Task/ControllerTask.php	/^				$enteredController = '';$/;"	v
enteredController	lib/Cake/Console/Command/Task/ControllerTask.php	/^			$enteredController = $this->in(__d('cake_console', "Enter a number from the list above,\\ntype in the name of another controller, or 'q' to exit"), null, 'q');$/;"	v
enteredController	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$enteredController = '';$/;"	v
execute	lib/Cake/Console/Command/Task/ControllerTask.php	/^	public function execute() {$/;"	f
filename	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$filename = $path . $controllerName . 'Controller.php';$/;"	v
getName	lib/Cake/Console/Command/Task/ControllerTask.php	/^	public function getName($useDbConfig = null) {$/;"	f
getOptionParser	lib/Cake/Console/Command/Task/ControllerTask.php	/^	public function getOptionParser() {$/;"	f
helpers	lib/Cake/Console/Command/Task/ControllerTask.php	/^				$helpers = $this->doHelpers();$/;"	v
helpers	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$helpers = $components = array();$/;"	v
initialize	lib/Cake/Console/Command/Task/ControllerTask.php	/^	public function initialize() {$/;"	f
interactive	lib/Cake/Console/Command/Task/ControllerTask.php	/^			$this->interactive = true;$/;"	v
interactive	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$this->interactive = false;$/;"	v
interactive	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$this->interactive = true;$/;"	v
isScaffold	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$isScaffold = ($actions === 'scaffold') ? true : false;$/;"	v
length	lib/Cake/Console/Command/Task/ControllerTask.php	/^				$length = count($$var);$/;"	v
listAll	lib/Cake/Console/Command/Task/ControllerTask.php	/^	public function listAll($useDbConfig = null) {$/;"	f
looksGood	lib/Cake/Console/Command/Task/ControllerTask.php	/^			$looksGood = $this->in(__d('cake_console', 'Look okay?'), array('y', 'n'), 'y');$/;"	v
model	lib/Cake/Console/Command/Task/ControllerTask.php	/^			$model = $this->_modelName($table);$/;"	v
modelObj	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$modelObj = ClassRegistry::init($currentModelName);$/;"	v
output	lib/Cake/Console/Command/Task/ControllerTask.php	/^				$output = '';$/;"	v
parser	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$parser = parent::getOptionParser();$/;"	v
path	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$path = $this->getPath();$/;"	v
path	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$this->path = current(App::path('Controller'));$/;"	v
path	lib/Cake/Console/Command/Task/ControllerTask.php	/^	public $path = null;$/;"	v
plugin	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$plugin = $this->plugin;$/;"	v
pluralHumanName	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$pluralHumanName = $this->_pluralName($controllerName);$/;"	v
pluralName	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$pluralName = $this->_pluralName($currentModelName);$/;"	v
primaryKey	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$primaryKey = $modelObj->primaryKey;$/;"	v
proceed	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$proceed = $this->in($prompt, array('y', 'n'), 'n');$/;"	v
properties	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$properties = array($/;"	v
property	lib/Cake/Console/Command/Task/ControllerTask.php	/^			$property = explode(',', $propertyListTrimmed);$/;"	v
property	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$property = array();$/;"	v
propertyList	lib/Cake/Console/Command/Task/ControllerTask.php	/^			$propertyList = $this->in($example);$/;"	v
propertyListTrimmed	lib/Cake/Console/Command/Task/ControllerTask.php	/^			$propertyListTrimmed = str_replace(' ', '', $propertyList);$/;"	v
singularHumanName	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$singularHumanName = $this->_singularHumanName($controllerName);$/;"	v
singularName	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$singularName = Inflector::variable($currentModelName);$/;"	v
tasks	lib/Cake/Console/Command/Task/ControllerTask.php	/^	public $tasks = array('Model', 'Test', 'Template', 'DbConfig', 'Project');$/;"	v
unitTestExists	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$unitTestExists = $this->_checkUnitTest();$/;"	v
useDbConfig	lib/Cake/Console/Command/Task/ControllerTask.php	/^			$useDbConfig = $this->connection;$/;"	v
useDynamicScaffold	lib/Cake/Console/Command/Task/ControllerTask.php	/^			$useDynamicScaffold = $this->in($/;"	v
useDynamicScaffold	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$useDynamicScaffold = 'n';$/;"	v
wannaBakeAdminCrud	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$wannaBakeAdminCrud = $this->in($/;"	v
wannaBakeAdminCrud	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$wannaBakeAdminCrud = 'n';$/;"	v
wannaBakeCrud	lib/Cake/Console/Command/Task/ControllerTask.php	/^				$wannaBakeCrud = 'n';$/;"	v
wannaBakeCrud	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$wannaBakeCrud = $this->in($/;"	v
wannaBakeCrud	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$wannaBakeCrud = 'y';$/;"	v
wannaUseSession	lib/Cake/Console/Command/Task/ControllerTask.php	/^				$wannaUseSession = $this->in($/;"	v
wannaUseSession	lib/Cake/Console/Command/Task/ControllerTask.php	/^		$wannaUseSession = 'y';$/;"	v
DbConfigTask	lib/Cake/Console/Command/Task/DbConfigTask.php	/^class DbConfigTask extends AppShell {$/;"	c
_defaultConfig	lib/Cake/Console/Command/Task/DbConfigTask.php	/^	protected $_defaultConfig = array($/;"	v
_interactive	lib/Cake/Console/Command/Task/DbConfigTask.php	/^	protected function _interactive() {$/;"	f
_verify	lib/Cake/Console/Command/Task/DbConfigTask.php	/^	protected function _verify($config) {$/;"	f
bake	lib/Cake/Console/Command/Task/DbConfigTask.php	/^	public function bake($configs) {$/;"	f
blank	lib/Cake/Console/Command/Task/DbConfigTask.php	/^					$blank = $this->in(__d('cake_console', 'The password you supplied was empty. Use an empty password?'), array('y', 'n'), 'n');$/;"	v
blankPassword	lib/Cake/Console/Command/Task/DbConfigTask.php	/^						$blankPassword = true;$/;"	v
blankPassword	lib/Cake/Console/Command/Task/DbConfigTask.php	/^			$blankPassword = false;$/;"	v
config	lib/Cake/Console/Command/Task/DbConfigTask.php	/^			$config = compact('name', 'datasource', 'persistent', 'host', 'login', 'password', 'database', 'prefix', 'encoding', 'port', 'schema');$/;"	v
configs	lib/Cake/Console/Command/Task/DbConfigTask.php	/^		$configs = ConnectionManager::enumConnectionObjects();$/;"	v
configs	lib/Cake/Console/Command/Task/DbConfigTask.php	/^		$configs = array_merge($oldConfigs, $configs);$/;"	v
connections	lib/Cake/Console/Command/Task/DbConfigTask.php	/^		$connections = array_keys($configs);$/;"	v
database	lib/Cake/Console/Command/Task/DbConfigTask.php	/^				$database = $this->in(__d('cake_console', 'Database Name:'), null, 'cake');$/;"	v
database	lib/Cake/Console/Command/Task/DbConfigTask.php	/^			$database = '';$/;"	v
databaseClassName	lib/Cake/Console/Command/Task/DbConfigTask.php	/^	public $databaseClassName = 'DATABASE_CONFIG';$/;"	v
datasource	lib/Cake/Console/Command/Task/DbConfigTask.php	/^				$datasource = "Database\/{$datasource}";$/;"	v
datasource	lib/Cake/Console/Command/Task/DbConfigTask.php	/^			$datasource = $this->in(__d('cake_console', 'Datasource:'), array('Mysql', 'Postgres', 'Sqlite', 'Sqlserver'), 'Mysql');$/;"	v
db	lib/Cake/Console/Command/Task/DbConfigTask.php	/^			$db = new $this->databaseClassName;$/;"	v
dbConfigs	lib/Cake/Console/Command/Task/DbConfigTask.php	/^		$dbConfigs = array();$/;"	v
done	lib/Cake/Console/Command/Task/DbConfigTask.php	/^				$done = true;$/;"	v
done	lib/Cake/Console/Command/Task/DbConfigTask.php	/^		$done = false;$/;"	v
doneYet	lib/Cake/Console/Command/Task/DbConfigTask.php	/^			$doneYet = $this->in(__d('cake_console', 'Do you wish to add another database configuration?'), null, 'n');$/;"	v
encoding	lib/Cake/Console/Command/Task/DbConfigTask.php	/^				$encoding = $this->in(__d('cake_console', 'Table encoding?'), null, 'n');$/;"	v
encoding	lib/Cake/Console/Command/Task/DbConfigTask.php	/^				$encoding = null;$/;"	v
encoding	lib/Cake/Console/Command/Task/DbConfigTask.php	/^			$encoding = '';$/;"	v
execute	lib/Cake/Console/Command/Task/DbConfigTask.php	/^	public function execute() {$/;"	f
filename	lib/Cake/Console/Command/Task/DbConfigTask.php	/^		$filename = $this->path . 'database.php';$/;"	v
getConfig	lib/Cake/Console/Command/Task/DbConfigTask.php	/^	public function getConfig() {$/;"	f
getOptionParser	lib/Cake/Console/Command/Task/DbConfigTask.php	/^	public function getOptionParser() {$/;"	f
host	lib/Cake/Console/Command/Task/DbConfigTask.php	/^				$host = $this->in(__d('cake_console', 'Database Host:'), null, 'localhost');$/;"	v
host	lib/Cake/Console/Command/Task/DbConfigTask.php	/^			$host = '';$/;"	v
initialize	lib/Cake/Console/Command/Task/DbConfigTask.php	/^	public function initialize() {$/;"	f
login	lib/Cake/Console/Command/Task/DbConfigTask.php	/^				$login = $this->in(__d('cake_console', 'User:'), null, 'root');$/;"	v
login	lib/Cake/Console/Command/Task/DbConfigTask.php	/^			$login = '';$/;"	v
looksGood	lib/Cake/Console/Command/Task/DbConfigTask.php	/^		$looksGood = $this->in(__d('cake_console', 'Look okay?'), array('y', 'n'), 'y');$/;"	v
name	lib/Cake/Console/Command/Task/DbConfigTask.php	/^					$name = '';$/;"	v
name	lib/Cake/Console/Command/Task/DbConfigTask.php	/^				$name = $this->in(__d('cake_console', "Name:"), null, 'default');$/;"	v
name	lib/Cake/Console/Command/Task/DbConfigTask.php	/^			$name = '';$/;"	v
oldConfigs	lib/Cake/Console/Command/Task/DbConfigTask.php	/^		$oldConfigs = array();$/;"	v
out	lib/Cake/Console/Command/Task/DbConfigTask.php	/^		$out = "<?php\\n";$/;"	v
parser	lib/Cake/Console/Command/Task/DbConfigTask.php	/^		$parser = parent::getOptionParser();$/;"	v
password	lib/Cake/Console/Command/Task/DbConfigTask.php	/^				$password = $this->in(__d('cake_console', 'Password:'));$/;"	v
password	lib/Cake/Console/Command/Task/DbConfigTask.php	/^			$password = '';$/;"	v
path	lib/Cake/Console/Command/Task/DbConfigTask.php	/^		$this->path = APP . 'Config' . DS;$/;"	v
path	lib/Cake/Console/Command/Task/DbConfigTask.php	/^	public $path = null;$/;"	v
persistent	lib/Cake/Console/Command/Task/DbConfigTask.php	/^				$persistent = 'false';$/;"	v
persistent	lib/Cake/Console/Command/Task/DbConfigTask.php	/^				$persistent = 'true';$/;"	v
persistent	lib/Cake/Console/Command/Task/DbConfigTask.php	/^			$persistent = $this->in(__d('cake_console', 'Persistent Connection?'), array('y', 'n'), 'n');$/;"	v
port	lib/Cake/Console/Command/Task/DbConfigTask.php	/^				$port = $this->in(__d('cake_console', 'Port?'), null, 'n');$/;"	v
port	lib/Cake/Console/Command/Task/DbConfigTask.php	/^				$port = null;$/;"	v
port	lib/Cake/Console/Command/Task/DbConfigTask.php	/^			$port = '';$/;"	v
prefix	lib/Cake/Console/Command/Task/DbConfigTask.php	/^				$prefix = $this->in(__d('cake_console', 'Table Prefix?'), null, 'n');$/;"	v
prefix	lib/Cake/Console/Command/Task/DbConfigTask.php	/^				$prefix = null;$/;"	v
prefix	lib/Cake/Console/Command/Task/DbConfigTask.php	/^			$prefix = '';$/;"	v
schema	lib/Cake/Console/Command/Task/DbConfigTask.php	/^					$schema = $this->in(__d('cake_console', 'Table schema?'), null, 'n');$/;"	v
schema	lib/Cake/Console/Command/Task/DbConfigTask.php	/^				$schema = null;$/;"	v
schema	lib/Cake/Console/Command/Task/DbConfigTask.php	/^			$schema = '';$/;"	v
temp	lib/Cake/Console/Command/Task/DbConfigTask.php	/^			$temp = get_class_vars(get_class($db));$/;"	v
useDbConfig	lib/Cake/Console/Command/Task/DbConfigTask.php	/^			$useDbConfig = $this->in(__d('cake_console', 'Use Database Config') . ':', $connections, $useDbConfig);$/;"	v
useDbConfig	lib/Cake/Console/Command/Task/DbConfigTask.php	/^		$useDbConfig = key($configs);$/;"	v
ExtractTask	lib/Cake/Console/Command/Task/ExtractTask.php	/^class ExtractTask extends AppShell {$/;"	c
File	lib/Cake/Console/Command/Task/ExtractTask.php	/^							$File = new File($this->_output . $response);$/;"	v
File	lib/Cake/Console/Command/Task/ExtractTask.php	/^					$File = new File($this->_output . $category . DS . $filename);$/;"	v
File	lib/Cake/Console/Command/Task/ExtractTask.php	/^					$File = new File($this->_output . $filename);$/;"	v
Folder	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$Folder = new Folder($path);$/;"	v
_addTranslation	lib/Cake/Console/Command/Task/ExtractTask.php	/^	protected function _addTranslation($category, $domain, $msgid, $details = array()) {$/;"	f
_buildFiles	lib/Cake/Console/Command/Task/ExtractTask.php	/^	protected function _buildFiles() {$/;"	f
_exclude	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$this->_exclude = array_merge($this->_exclude, App::path('plugins'));$/;"	v
_exclude	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$this->_exclude = array_merge($this->_exclude, array($/;"	v
_exclude	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$this->_exclude = explode(',', $this->params['exclude']);$/;"	v
_exclude	lib/Cake/Console/Command/Task/ExtractTask.php	/^	protected $_exclude = array();$/;"	v
_extract	lib/Cake/Console/Command/Task/ExtractTask.php	/^	protected function _extract() {$/;"	f
_extractCore	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$this->_extractCore = !(strtolower($this->params['extract-core']) === 'no');$/;"	v
_extractCore	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$this->_extractCore = strtolower($response) === 'y';$/;"	v
_extractCore	lib/Cake/Console/Command/Task/ExtractTask.php	/^	protected $_extractCore = false;$/;"	v
_extractPluginValidationMessages	lib/Cake/Console/Command/Task/ExtractTask.php	/^	protected function _extractPluginValidationMessages($plugin = null) {$/;"	f
_extractTokens	lib/Cake/Console/Command/Task/ExtractTask.php	/^	protected function _extractTokens() {$/;"	f
_extractValidation	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$this->_extractValidation = false;$/;"	v
_extractValidation	lib/Cake/Console/Command/Task/ExtractTask.php	/^		$this->_extractValidation = true;$/;"	v
_extractValidation	lib/Cake/Console/Command/Task/ExtractTask.php	/^	protected $_extractValidation = true;$/;"	v
_extractValidationMessages	lib/Cake/Console/Command/Task/ExtractTask.php	/^	protected function _extractValidationMessages() {$/;"	f
_file	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$this->_file = $file;$/;"	v
_file	lib/Cake/Console/Command/Task/ExtractTask.php	/^	protected $_file = null;$/;"	v
_files	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$this->_files = array_merge($this->_files, $files);$/;"	v
_files	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$this->_files = explode(',', $this->params['files']);$/;"	v
_files	lib/Cake/Console/Command/Task/ExtractTask.php	/^	protected $_files = array();$/;"	v
_formatString	lib/Cake/Console/Command/Task/ExtractTask.php	/^	protected function _formatString($string) {$/;"	f
_getPaths	lib/Cake/Console/Command/Task/ExtractTask.php	/^	protected function _getPaths() {$/;"	f
_getStrings	lib/Cake/Console/Command/Task/ExtractTask.php	/^	protected function _getStrings(&$position, $target) {$/;"	f
_isExtractingApp	lib/Cake/Console/Command/Task/ExtractTask.php	/^	protected function _isExtractingApp() {$/;"	f
_isPathUsable	lib/Cake/Console/Command/Task/ExtractTask.php	/^	protected function _isPathUsable($path) {$/;"	f
_markerError	lib/Cake/Console/Command/Task/ExtractTask.php	/^	protected function _markerError($file, $line, $marker, $count) {$/;"	f
_merge	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$this->_merge = !(strtolower($this->params['merge']) === 'no');$/;"	v
_merge	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$this->_merge = strtolower($response) === 'y';$/;"	v
_merge	lib/Cake/Console/Command/Task/ExtractTask.php	/^	protected $_merge = false;$/;"	v
_output	lib/Cake/Console/Command/Task/ExtractTask.php	/^					$this->_output = $response . DS;$/;"	v
_output	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$this->_output = $this->_paths[0] . DS . 'Locale';$/;"	v
_output	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$this->_output = $this->params['output'];$/;"	v
_output	lib/Cake/Console/Command/Task/ExtractTask.php	/^		$this->_output = rtrim($this->_output, DS) . DS;$/;"	v
_output	lib/Cake/Console/Command/Task/ExtractTask.php	/^	protected $_output = null;$/;"	v
_parse	lib/Cake/Console/Command/Task/ExtractTask.php	/^	protected function _parse($functionName, $map) {$/;"	f
_paths	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$this->_paths = array(CakePlugin::path($plugin));$/;"	v
_paths	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$this->_paths = explode(',', $this->params['paths']);$/;"	v
_paths	lib/Cake/Console/Command/Task/ExtractTask.php	/^		$this->_paths = $this->_files = $this->_storage = array();$/;"	v
_paths	lib/Cake/Console/Command/Task/ExtractTask.php	/^	protected $_paths = array();$/;"	v
_processValidationRules	lib/Cake/Console/Command/Task/ExtractTask.php	/^	protected function _processValidationRules($field, $rules, $file, $domain, $category = 'LC_MESSAGES') {$/;"	f
_searchFiles	lib/Cake/Console/Command/Task/ExtractTask.php	/^	protected function _searchFiles() {$/;"	f
_storage	lib/Cake/Console/Command/Task/ExtractTask.php	/^	protected $_storage = array();$/;"	v
_store	lib/Cake/Console/Command/Task/ExtractTask.php	/^	protected function _store($category, $domain, $header, $sentence) {$/;"	f
_tokens	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$this->_tokens = array();$/;"	v
_tokens	lib/Cake/Console/Command/Task/ExtractTask.php	/^	protected $_tokens = array();$/;"	v
_translations	lib/Cake/Console/Command/Task/ExtractTask.php	/^		$this->_translations = $this->_tokens = array();$/;"	v
_translations	lib/Cake/Console/Command/Task/ExtractTask.php	/^	protected $_translations = array();$/;"	v
_validationDomain	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$this->_validationDomain = $this->params['validation-domain'];$/;"	v
_validationDomain	lib/Cake/Console/Command/Task/ExtractTask.php	/^	protected $_validationDomain = 'default';$/;"	v
_writeFiles	lib/Cake/Console/Command/Task/ExtractTask.php	/^	protected function _writeFiles() {$/;"	f
_writeHeader	lib/Cake/Console/Command/Task/ExtractTask.php	/^	protected function _writeHeader() {$/;"	f
allTokens	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$allTokens = token_get_all($code);$/;"	v
categories	lib/Cake/Console/Command/Task/ExtractTask.php	/^		$categories = array('LC_ALL', 'LC_COLLATE', 'LC_CTYPE', 'LC_MONETARY', 'LC_NUMERIC', 'LC_TIME', 'LC_MESSAGES');$/;"	v
category	lib/Cake/Console/Command/Task/ExtractTask.php	/^					$category = intval($category);$/;"	v
category	lib/Cake/Console/Command/Task/ExtractTask.php	/^					$category = isset($category) ? $category : 6;$/;"	v
categoryName	lib/Cake/Console/Command/Task/ExtractTask.php	/^					$categoryName = $categories[$category];$/;"	v
code	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$code = file_get_contents($file);$/;"	v
count	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$count = count($strings);$/;"	v
count	lib/Cake/Console/Command/Task/ExtractTask.php	/^		$count = 0;$/;"	v
count	lib/Cake/Console/Command/Task/ExtractTask.php	/^		$count = count($strings);$/;"	v
countToken	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$countToken = $this->_tokens[$count];$/;"	v
currentPaths	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$currentPaths = count($this->_paths) > 0 ? $this->_paths : array('None');$/;"	v
defaultPath	lib/Cake/Console/Command/Task/ExtractTask.php	/^				$defaultPath = 'D';$/;"	v
defaultPath	lib/Cake/Console/Command/Task/ExtractTask.php	/^		$defaultPath = APP;$/;"	v
depth	lib/Cake/Console/Command/Task/ExtractTask.php	/^				$depth = 0;$/;"	v
details	lib/Cake/Console/Command/Task/ExtractTask.php	/^					$details = array($/;"	v
details	lib/Cake/Console/Command/Task/ExtractTask.php	/^				$details = array($/;"	v
dims	lib/Cake/Console/Command/Task/ExtractTask.php	/^		$dims = Hash::dimensions($rules);$/;"	v
domain	lib/Cake/Console/Command/Task/ExtractTask.php	/^					$domain = isset($domain) ? $domain : 'default';$/;"	v
domain	lib/Cake/Console/Command/Task/ExtractTask.php	/^				$domain = $properties['validationDomain'];$/;"	v
domain	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$domain = $this->_validationDomain;$/;"	v
e	lib/Cake/Console/Command/Task/ExtractTask.php	/^					$e = DS . $e;$/;"	v
exclude	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$exclude = array();$/;"	v
execute	lib/Cake/Console/Command/Task/ExtractTask.php	/^	public function execute() {$/;"	f
file	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$file = $reflection->getFileName();$/;"	v
filename	lib/Cake/Console/Command/Task/ExtractTask.php	/^							$filename = $response;$/;"	v
filename	lib/Cake/Console/Command/Task/ExtractTask.php	/^				$filename = $domain . '.pot';$/;"	v
files	lib/Cake/Console/Command/Task/ExtractTask.php	/^					$files = $details['references'];$/;"	v
files	lib/Cake/Console/Command/Task/ExtractTask.php	/^				$files = array_values($files);$/;"	v
files	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$files = $Folder->findRecursive('.*\\.(php|ctp|thtml|inc|tpl)', true);$/;"	v
firstParenthesis	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$firstParenthesis = $this->_tokens[$count + 1];$/;"	v
getOptionParser	lib/Cake/Console/Command/Task/ExtractTask.php	/^	public function getOptionParser() {$/;"	f
header	lib/Cake/Console/Command/Task/ExtractTask.php	/^					$header = '#: ' . str_replace(DS, '\/', str_replace($paths, '', $occurrences)) . "\\n";$/;"	v
line	lib/Cake/Console/Command/Task/ExtractTask.php	/^				$line = $details['line'];$/;"	v
line	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$line = 0;$/;"	v
lines	lib/Cake/Console/Command/Task/ExtractTask.php	/^						$lines = array_unique($lines);$/;"	v
mapCount	lib/Cake/Console/Command/Task/ExtractTask.php	/^				$mapCount = count($map);$/;"	v
message	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$message = __d($/;"	v
message	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$message = __d('cake_console', "What is the path you would like to output?\\n[Q]uit", $this->_paths[0] . DS . 'Locale');$/;"	v
models	lib/Cake/Console/Command/Task/ExtractTask.php	/^		$models = App::objects($plugin . 'Model', null, false);$/;"	v
msgid	lib/Cake/Console/Command/Task/ExtractTask.php	/^					$msgid = $validateProp['message'];$/;"	v
msgid	lib/Cake/Console/Command/Task/ExtractTask.php	/^					$msgid = $validateProp['message'][0];$/;"	v
msgid	lib/Cake/Console/Command/Task/ExtractTask.php	/^				$msgid = $rule;$/;"	v
msgid	lib/Cake/Console/Command/Task/ExtractTask.php	/^				$msgid = $this->_formatString(sprintf("'%s'", $msgid));$/;"	v
msgid	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$msgid = null;$/;"	v
occurrences	lib/Cake/Console/Command/Task/ExtractTask.php	/^					$occurrences = array();$/;"	v
occurrences	lib/Cake/Console/Command/Task/ExtractTask.php	/^					$occurrences = implode("\\n#: ", $occurrences);$/;"	v
output	lib/Cake/Console/Command/Task/ExtractTask.php	/^				$output = $this->_writeHeader();$/;"	v
output	lib/Cake/Console/Command/Task/ExtractTask.php	/^		$output = "# LANGUAGE translation of CakePHP Application\\n";$/;"	v
overwriteAll	lib/Cake/Console/Command/Task/ExtractTask.php	/^						$overwriteAll = true;$/;"	v
overwriteAll	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$overwriteAll = true;$/;"	v
overwriteAll	lib/Cake/Console/Command/Task/ExtractTask.php	/^		$overwriteAll = false;$/;"	v
parenthesis	lib/Cake/Console/Command/Task/ExtractTask.php	/^		$parenthesis = 1;$/;"	v
parser	lib/Cake/Console/Command/Task/ExtractTask.php	/^		$parser = parent::getOptionParser();$/;"	v
paths	lib/Cake/Console/Command/Task/ExtractTask.php	/^		$paths = $this->_paths;$/;"	v
pattern	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$pattern = '\/' . implode('|', $exclude) . '\/';$/;"	v
pattern	lib/Cake/Console/Command/Task/ExtractTask.php	/^		$pattern = false;$/;"	v
plugin	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$plugin = $plugin . '.';$/;"	v
plugin	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$plugin = Inflector::camelize($this->params['plugin']);$/;"	v
plugins	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$plugins = array_merge($plugins, App::objects('plugin', null, false));$/;"	v
plugins	lib/Cake/Console/Command/Task/ExtractTask.php	/^		$plugins = array(null);$/;"	v
plural	lib/Cake/Console/Command/Task/ExtractTask.php	/^					$plural = $details['msgid_plural'];$/;"	v
position	lib/Cake/Console/Command/Task/ExtractTask.php	/^				$position = $count;$/;"	v
properties	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$properties = $reflection->getDefaultProperties();$/;"	v
quote	lib/Cake/Console/Command/Task/ExtractTask.php	/^		$quote = substr($string, 0, 1);$/;"	v
reflection	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$reflection = new ReflectionClass($model);$/;"	v
response	lib/Cake/Console/Command/Task/ExtractTask.php	/^							$response = $this->in(__d('cake_console', "What would you like to name this file?"), null, 'new_' . $filename);$/;"	v
response	lib/Cake/Console/Command/Task/ExtractTask.php	/^						$response = '';$/;"	v
response	lib/Cake/Console/Command/Task/ExtractTask.php	/^					$response = $this->in($/;"	v
response	lib/Cake/Console/Command/Task/ExtractTask.php	/^				$response = $this->in($message, null, rtrim($this->_paths[0], DS) . DS . 'Locale');$/;"	v
response	lib/Cake/Console/Command/Task/ExtractTask.php	/^				$response = '';$/;"	v
response	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$response = $this->in($message, null, $defaultPath);$/;"	v
response	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$response = $this->in(__d('cake_console', 'Would you like to extract the messages from the CakePHP core?'), array('y', 'n'), 'n');$/;"	v
response	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$response = $this->in(__d('cake_console', 'Would you like to merge all domain and category strings into the default.pot file?'), array('y', 'n'), 'n');$/;"	v
rules	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$rules = array($rules);$/;"	v
sentence	lib/Cake/Console/Command/Task/ExtractTask.php	/^						$sentence = "msgid \\"{$msgid}\\"\\n";$/;"	v
string	lib/Cake/Console/Command/Task/ExtractTask.php	/^				$string = '';$/;"	v
string	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$string = stripcslashes($string);$/;"	v
string	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$string = strtr($string, array("\\\\'" => "'", "\\\\\\\\" => "\\\\"));$/;"	v
string	lib/Cake/Console/Command/Task/ExtractTask.php	/^		$string = str_replace("\\r\\n", "\\n", $string);$/;"	v
string	lib/Cake/Console/Command/Task/ExtractTask.php	/^		$string = substr($string, 1, -1);$/;"	v
strings	lib/Cake/Console/Command/Task/ExtractTask.php	/^				$strings = $this->_getStrings($position, $mapCount);$/;"	v
strings	lib/Cake/Console/Command/Task/ExtractTask.php	/^		$strings = array();$/;"	v
tokenCount	lib/Cake/Console/Command/Task/ExtractTask.php	/^		$tokenCount = count($this->_tokens);$/;"	v
validate	lib/Cake/Console/Command/Task/ExtractTask.php	/^			$validate = $properties['validate'];$/;"	v
FixtureTask	lib/Cake/Console/Command/Task/FixtureTask.php	/^class FixtureTask extends BakeTask {$/;"	c
_Schema	lib/Cake/Console/Command/Task/FixtureTask.php	/^		$this->_Schema = new CakeSchema();$/;"	v
_Schema	lib/Cake/Console/Command/Task/FixtureTask.php	/^	protected $_Schema = null;$/;"	v
__construct	lib/Cake/Console/Command/Task/FixtureTask.php	/^	public function __construct($stdout = null, $stderr = null, $stdin = null) {$/;"	f
_generateRecords	lib/Cake/Console/Command/Task/FixtureTask.php	/^	protected function _generateRecords($tableInfo, $recordCount = 1) {$/;"	f
_generateSchema	lib/Cake/Console/Command/Task/FixtureTask.php	/^	protected function _generateSchema($tableInfo) {$/;"	f
_getRecordsFromTable	lib/Cake/Console/Command/Task/FixtureTask.php	/^	protected function _getRecordsFromTable($modelName, $useTable = null) {$/;"	f
_interactive	lib/Cake/Console/Command/Task/FixtureTask.php	/^	protected function _interactive() {$/;"	f
_makeRecordString	lib/Cake/Console/Command/Task/FixtureTask.php	/^	protected function _makeRecordString($records) {$/;"	f
all	lib/Cake/Console/Command/Task/FixtureTask.php	/^	public function all() {$/;"	f
bake	lib/Cake/Console/Command/Task/FixtureTask.php	/^	public function bake($model, $useTable = false, $importOptions = array()) {$/;"	f
condition	lib/Cake/Console/Command/Task/FixtureTask.php	/^				$condition = $this->in($prompt, null, 'WHERE 1=1');$/;"	v
condition	lib/Cake/Console/Command/Task/FixtureTask.php	/^			$condition = 'WHERE 1=1';$/;"	v
condition	lib/Cake/Console/Command/Task/FixtureTask.php	/^			$condition = null;$/;"	v
connection	lib/Cake/Console/Command/Task/FixtureTask.php	/^				$this->connection = 'default';$/;"	v
connection	lib/Cake/Console/Command/Task/FixtureTask.php	/^			$this->connection = $this->DbConfig->getConfig();$/;"	v
content	lib/Cake/Console/Command/Task/FixtureTask.php	/^		$content = $this->Template->generate('classes', 'fixture');$/;"	v
data	lib/Cake/Console/Command/Task/FixtureTask.php	/^		$data = $this->_Schema->read(array('models' => false, 'connection' => $this->connection));$/;"	v
defaults	lib/Cake/Console/Command/Task/FixtureTask.php	/^		$defaults = array('table' => null, 'schema' => null, 'records' => null, 'import' => null, 'fields' => null);$/;"	v
doRecords	lib/Cake/Console/Command/Task/FixtureTask.php	/^			$doRecords = $this->in(__d('cake_console', 'Would you like to use record importing for this fixture?'), array('y', 'n'), 'n');$/;"	v
doRecords	lib/Cake/Console/Command/Task/FixtureTask.php	/^			$doRecords = 'y';$/;"	v
doSchema	lib/Cake/Console/Command/Task/FixtureTask.php	/^			$doSchema = $this->in(__d('cake_console', 'Would you like to import schema for this fixture?'), array('y', 'n'), 'n');$/;"	v
execute	lib/Cake/Console/Command/Task/FixtureTask.php	/^	public function execute() {$/;"	f
filename	lib/Cake/Console/Command/Task/FixtureTask.php	/^		$filename = Inflector::camelize($model) . 'Fixture.php';$/;"	v
fromTable	lib/Cake/Console/Command/Task/FixtureTask.php	/^			$fromTable = $this->in($prompt, array('y', 'n'), 'n');$/;"	v
generateFixtureFile	lib/Cake/Console/Command/Task/FixtureTask.php	/^	public function generateFixtureFile($model, $otherVars) {$/;"	f
getOptionParser	lib/Cake/Console/Command/Task/FixtureTask.php	/^	public function getOptionParser() {$/;"	f
getPath	lib/Cake/Console/Command/Task/FixtureTask.php	/^	public function getPath() {$/;"	f
import	lib/Cake/Console/Command/Task/FixtureTask.php	/^				$import = sprintf("array(%s)", implode(', ', $importBits));$/;"	v
importBits	lib/Cake/Console/Command/Task/FixtureTask.php	/^		$importBits = array();$/;"	v
importOptions	lib/Cake/Console/Command/Task/FixtureTask.php	/^			$importOptions = array();$/;"	v
importOptions	lib/Cake/Console/Command/Task/FixtureTask.php	/^		$importOptions = $this->importOptions($modelName);$/;"	v
importOptions	lib/Cake/Console/Command/Task/FixtureTask.php	/^	public function importOptions($modelName) {$/;"	f
insert	lib/Cake/Console/Command/Task/FixtureTask.php	/^								$insert = substr($insert, 0, (int)$fieldInfo['length'] - 2);$/;"	v
insert	lib/Cake/Console/Command/Task/FixtureTask.php	/^							$insert = "Lorem ipsum dolor sit amet";$/;"	v
insert	lib/Cake/Console/Command/Task/FixtureTask.php	/^							$insert = String::uuid();$/;"	v
insert	lib/Cake/Console/Command/Task/FixtureTask.php	/^						$insert = "Lorem ipsum dolor sit amet, aliquet feugiat.";$/;"	v
insert	lib/Cake/Console/Command/Task/FixtureTask.php	/^						$insert = $i + 1;$/;"	v
insert	lib/Cake/Console/Command/Task/FixtureTask.php	/^						$insert = 1;$/;"	v
insert	lib/Cake/Console/Command/Task/FixtureTask.php	/^						$insert = date('H:i:s');$/;"	v
insert	lib/Cake/Console/Command/Task/FixtureTask.php	/^						$insert = date('Y-m-d H:i:s');$/;"	v
insert	lib/Cake/Console/Command/Task/FixtureTask.php	/^						$insert = date('Y-m-d');$/;"	v
insert	lib/Cake/Console/Command/Task/FixtureTask.php	/^						$insert = time();$/;"	v
insert	lib/Cake/Console/Command/Task/FixtureTask.php	/^				$insert = '';$/;"	v
interactive	lib/Cake/Console/Command/Task/FixtureTask.php	/^			$this->interactive = false;$/;"	v
interactive	lib/Cake/Console/Command/Task/FixtureTask.php	/^		$this->interactive = false;$/;"	v
isPrimaryUuid	lib/Cake/Console/Command/Task/FixtureTask.php	/^						$isPrimaryUuid = ($/;"	v
model	lib/Cake/Console/Command/Task/FixtureTask.php	/^			$model = $this->_modelName($table);$/;"	v
model	lib/Cake/Console/Command/Task/FixtureTask.php	/^			$model = $this->_modelName($this->args[0]);$/;"	v
modelImport	lib/Cake/Console/Command/Task/FixtureTask.php	/^				$modelImport = true;$/;"	v
modelName	lib/Cake/Console/Command/Task/FixtureTask.php	/^		$modelName = $this->Model->getName($this->connection);$/;"	v
modelObject	lib/Cake/Console/Command/Task/FixtureTask.php	/^		$modelObject = new Model(array('name' => $modelName, 'table' => $useTable, 'ds' => $this->connection));$/;"	v
options	lib/Cake/Console/Command/Task/FixtureTask.php	/^		$options = array();$/;"	v
out	lib/Cake/Console/Command/Task/FixtureTask.php	/^		$out = "array(\\n";$/;"	v
out	lib/Cake/Console/Command/Task/FixtureTask.php	/^		$out = $this->generateFixtureFile($model, compact('records', 'table', 'schema', 'import'));$/;"	v
out	lib/Cake/Console/Command/Task/FixtureTask.php	/^		$out = array();$/;"	v
parser	lib/Cake/Console/Command/Task/FixtureTask.php	/^		$parser = parent::getOptionParser();$/;"	v
path	lib/Cake/Console/Command/Task/FixtureTask.php	/^			$path = $this->_pluginPath($this->plugin) . 'Test' . DS . 'Fixture' . DS;$/;"	v
path	lib/Cake/Console/Command/Task/FixtureTask.php	/^		$path = $this->getPath();$/;"	v
path	lib/Cake/Console/Command/Task/FixtureTask.php	/^		$path = $this->path;$/;"	v
path	lib/Cake/Console/Command/Task/FixtureTask.php	/^		$this->path = APP . 'Test' . DS . 'Fixture' . DS;$/;"	v
path	lib/Cake/Console/Command/Task/FixtureTask.php	/^	public $path = null;$/;"	v
prompt	lib/Cake/Console/Command/Task/FixtureTask.php	/^			$prompt = __d('cake_console', "How many records do you want to import?");$/;"	v
prompt	lib/Cake/Console/Command/Task/FixtureTask.php	/^			$prompt = __d('cake_console', "Please provide a SQL fragment to use as conditions\\nExample: WHERE 1=1");$/;"	v
prompt	lib/Cake/Console/Command/Task/FixtureTask.php	/^			$prompt = __d('cake_console', "Would you like to build this fixture with data from %s's table?", $modelName);$/;"	v
record	lib/Cake/Console/Command/Task/FixtureTask.php	/^			$record = array();$/;"	v
recordCount	lib/Cake/Console/Command/Task/FixtureTask.php	/^				$recordCount = $this->params['count'];$/;"	v
recordCount	lib/Cake/Console/Command/Task/FixtureTask.php	/^			$recordCount = $this->in($prompt, null, 10);$/;"	v
recordCount	lib/Cake/Console/Command/Task/FixtureTask.php	/^			$recordCount = (isset($this->params['count']) ? $this->params['count'] : 10);$/;"	v
recordCount	lib/Cake/Console/Command/Task/FixtureTask.php	/^			$recordCount = 1;$/;"	v
records	lib/Cake/Console/Command/Task/FixtureTask.php	/^			$records = $this->_makeRecordString($this->_generateRecords($tableInfo, $recordCount));$/;"	v
records	lib/Cake/Console/Command/Task/FixtureTask.php	/^			$records = $this->_makeRecordString($this->_getRecordsFromTable($model, $useTable));$/;"	v
records	lib/Cake/Console/Command/Task/FixtureTask.php	/^		$records = $modelObject->find('all', array($/;"	v
records	lib/Cake/Console/Command/Task/FixtureTask.php	/^		$records = array();$/;"	v
row	lib/Cake/Console/Command/Task/FixtureTask.php	/^			$row = array();$/;"	v
schema	lib/Cake/Console/Command/Task/FixtureTask.php	/^			$schema = $this->_generateSchema($tableInfo);$/;"	v
schema	lib/Cake/Console/Command/Task/FixtureTask.php	/^		$schema = $modelObject->schema(true);$/;"	v
schema	lib/Cake/Console/Command/Task/FixtureTask.php	/^		$schema = trim($this->_Schema->generateTable('f', $tableInfo), "\\n");$/;"	v
table	lib/Cake/Console/Command/Task/FixtureTask.php	/^			$table = $useTable;$/;"	v
table	lib/Cake/Console/Command/Task/FixtureTask.php	/^		$table = $schema = $records = $import = $modelImport = null;$/;"	v
tableInfo	lib/Cake/Console/Command/Task/FixtureTask.php	/^		$tableInfo = $data['tables'][$useTable];$/;"	v
tables	lib/Cake/Console/Command/Task/FixtureTask.php	/^		$tables = $this->Model->listAll($this->connection, false);$/;"	v
tasks	lib/Cake/Console/Command/Task/FixtureTask.php	/^	public $tasks = array('DbConfig', 'Model', 'Template');$/;"	v
useTable	lib/Cake/Console/Command/Task/FixtureTask.php	/^			$useTable = Inflector::tableize($model);$/;"	v
useTable	lib/Cake/Console/Command/Task/FixtureTask.php	/^		$useTable = $this->Model->getTable($modelName, $this->connection);$/;"	v
val	lib/Cake/Console/Command/Task/FixtureTask.php	/^					$val = 'null';$/;"	v
val	lib/Cake/Console/Command/Task/FixtureTask.php	/^				$val = var_export($value, true);$/;"	v
value	lib/Cake/Console/Command/Task/FixtureTask.php	/^					$value = (int)(bool)$value;$/;"	v
values	lib/Cake/Console/Command/Task/FixtureTask.php	/^			$values = array();$/;"	v
vars	lib/Cake/Console/Command/Task/FixtureTask.php	/^		$vars = array_merge($defaults, $otherVars);$/;"	v
ModelTask	lib/Cake/Console/Command/Task/ModelTask.php	/^class ModelTask extends BakeTask {$/;"	c
_generatePossibleKeys	lib/Cake/Console/Command/Task/ModelTask.php	/^	protected function _generatePossibleKeys() {$/;"	f
_getModelObject	lib/Cake/Console/Command/Task/ModelTask.php	/^	protected function _getModelObject($className, $table = null) {$/;"	f
_interactive	lib/Cake/Console/Command/Task/ModelTask.php	/^	protected function _interactive() {$/;"	f
_modelNames	lib/Cake/Console/Command/Task/ModelTask.php	/^		$this->_modelNames = array();$/;"	v
_modelNames	lib/Cake/Console/Command/Task/ModelTask.php	/^	protected $_modelNames = array();$/;"	v
_printAssociation	lib/Cake/Console/Command/Task/ModelTask.php	/^	protected function _printAssociation($modelName, $type, $associations) {$/;"	f
_tables	lib/Cake/Console/Command/Task/ModelTask.php	/^			$this->_tables = (array)$this->getAllTables();$/;"	v
_tables	lib/Cake/Console/Command/Task/ModelTask.php	/^		$this->_tables = $this->getAllTables($useDbConfig);$/;"	v
_tables	lib/Cake/Console/Command/Task/ModelTask.php	/^	protected $_tables = array();$/;"	v
_validations	lib/Cake/Console/Command/Task/ModelTask.php	/^		$this->_validations = $choices;$/;"	v
_validations	lib/Cake/Console/Command/Task/ModelTask.php	/^	protected $_validations = array();$/;"	v
alias	lib/Cake/Console/Command/Task/ModelTask.php	/^			$alias = $this->in(__d('cake_console', 'What is the alias for this association?'));$/;"	v
all	lib/Cake/Console/Command/Task/ModelTask.php	/^	public function all() {$/;"	f
anotherValidator	lib/Cake/Console/Command/Task/ModelTask.php	/^				$anotherValidator = $this->in(__d('cake_console', "Would you like to add another validation rule\\n" .$/;"	v
anotherValidator	lib/Cake/Console/Command/Task/ModelTask.php	/^			$anotherValidator = 'n';$/;"	v
anotherValidator	lib/Cake/Console/Command/Task/ModelTask.php	/^		$anotherValidator = 'y';$/;"	v
assoc	lib/Cake/Console/Command/Task/ModelTask.php	/^					$assoc = array($/;"	v
assoc	lib/Cake/Console/Command/Task/ModelTask.php	/^				$assoc = false;$/;"	v
assocKeys	lib/Cake/Console/Command/Task/ModelTask.php	/^			$assocKeys = array('belongsTo', 'hasOne', 'hasMany', 'hasAndBelongsToMany');$/;"	v
assocType	lib/Cake/Console/Command/Task/ModelTask.php	/^			$assocType = intval($this->inOptions($assocs, __d('cake_console', 'Enter a number')));$/;"	v
associationForeignKey	lib/Cake/Console/Command/Task/ModelTask.php	/^				$associationForeignKey = $this->in(__d('cake_console', 'What is the associationForeignKey?'), null, $this->_modelKey($model->name));$/;"	v
associations	lib/Cake/Console/Command/Task/ModelTask.php	/^				$associations = $this->confirmAssociations($model, $associations);$/;"	v
associations	lib/Cake/Console/Command/Task/ModelTask.php	/^				$associations = $this->doAssociations($tempModel);$/;"	v
associations	lib/Cake/Console/Command/Task/ModelTask.php	/^			$associations = $this->doMoreAssociations($model, $associations);$/;"	v
associations	lib/Cake/Console/Command/Task/ModelTask.php	/^		$associations = $this->findBelongsTo($model, $associations);$/;"	v
associations	lib/Cake/Console/Command/Task/ModelTask.php	/^		$associations = $this->findHasAndBelongsToMany($model, $associations);$/;"	v
associations	lib/Cake/Console/Command/Task/ModelTask.php	/^		$associations = $this->findHasOneAndMany($model, $associations);$/;"	v
associations	lib/Cake/Console/Command/Task/ModelTask.php	/^		$associations = array($/;"	v
assocs	lib/Cake/Console/Command/Task/ModelTask.php	/^			$assocs = array('belongsTo', 'hasOne', 'hasMany', 'hasAndBelongsToMany');$/;"	v
bake	lib/Cake/Console/Command/Task/ModelTask.php	/^	public function bake($name, $data = array()) {$/;"	f
bakeFixture	lib/Cake/Console/Command/Task/ModelTask.php	/^	public function bakeFixture($className, $useTable = null) {$/;"	f
bakeTest	lib/Cake/Console/Command/Task/ModelTask.php	/^	public function bakeTest($className) {$/;"	f
behaviors	lib/Cake/Console/Command/Task/ModelTask.php	/^		$behaviors = array();$/;"	v
choice	lib/Cake/Console/Command/Task/ModelTask.php	/^				$choice = $guess;$/;"	v
choice	lib/Cake/Console/Command/Task/ModelTask.php	/^				$choice = $this->in($prompt, null, $guess);$/;"	v
choice	lib/Cake/Console/Command/Task/ModelTask.php	/^			$choice = $this->in($prompt, null, $default);$/;"	v
choice	lib/Cake/Console/Command/Task/ModelTask.php	/^		$choice = $this->inOptions($fieldNames, $prompt);$/;"	v
className	lib/Cake/Console/Command/Task/ModelTask.php	/^			$className = $this->in(__d('cake_console', 'What className will %s use?', $alias), null, $alias);$/;"	v
confirmAssociations	lib/Cake/Console/Command/Task/ModelTask.php	/^	public function confirmAssociations(Model $model, $associations) {$/;"	f
connection	lib/Cake/Console/Command/Task/ModelTask.php	/^				$this->connection = 'default';$/;"	v
connection	lib/Cake/Console/Command/Task/ModelTask.php	/^			$this->connection = $this->DbConfig->getConfig();$/;"	v
continue	lib/Cake/Console/Command/Task/ModelTask.php	/^			$continue = $this->in($prompt, array('y', 'n'));$/;"	v
continue	lib/Cake/Console/Command/Task/ModelTask.php	/^		$continue = $this->in($prompt, array('y', 'n'));$/;"	v
count	lib/Cake/Console/Command/Task/ModelTask.php	/^			$count = count($associations[$assocs[$assocType]]);$/;"	v
count	lib/Cake/Console/Command/Task/ModelTask.php	/^		$count = count($this->_tables);$/;"	v
currentModelName	lib/Cake/Console/Command/Task/ModelTask.php	/^		$currentModelName = $this->getName();$/;"	v
data	lib/Cake/Console/Command/Task/ModelTask.php	/^				$data = array();$/;"	v
data	lib/Cake/Console/Command/Task/ModelTask.php	/^		$data = array_merge($defaults, $data);$/;"	v
db	lib/Cake/Console/Command/Task/ModelTask.php	/^			$db = ConnectionManager::getDataSource($useDbConfig);$/;"	v
db	lib/Cake/Console/Command/Task/ModelTask.php	/^		$db = ConnectionManager::getDataSource($this->connection);$/;"	v
db	lib/Cake/Console/Command/Task/ModelTask.php	/^		$db = ConnectionManager::getDataSource($useDbConfig);$/;"	v
default	lib/Cake/Console/Command/Task/ModelTask.php	/^		$default = 1;$/;"	v
defaultChoice	lib/Cake/Console/Command/Task/ModelTask.php	/^		$defaultChoice = count($this->_validations);$/;"	v
defaults	lib/Cake/Console/Command/Task/ModelTask.php	/^		$defaults = array($/;"	v
displayField	lib/Cake/Console/Command/Task/ModelTask.php	/^				$displayField = $this->findDisplayField($tempModel->schema());$/;"	v
displayField	lib/Cake/Console/Command/Task/ModelTask.php	/^			$displayField = $tempModel->hasField(array('name', 'title'));$/;"	v
doActsAs	lib/Cake/Console/Command/Task/ModelTask.php	/^	public function doActsAs($model) {$/;"	f
doAssociations	lib/Cake/Console/Command/Task/ModelTask.php	/^	public function doAssociations($model) {$/;"	f
doMoreAssociations	lib/Cake/Console/Command/Task/ModelTask.php	/^	public function doMoreAssociations(Model $model, $associations) {$/;"	f
doValidation	lib/Cake/Console/Command/Task/ModelTask.php	/^	public function doValidation($model) {$/;"	f
enteredModel	lib/Cake/Console/Command/Task/ModelTask.php	/^				$enteredModel = '';$/;"	v
enteredModel	lib/Cake/Console/Command/Task/ModelTask.php	/^			$enteredModel = $this->in(__d('cake_console', "Enter a number from the list above,\\n" .$/;"	v
enteredModel	lib/Cake/Console/Command/Task/ModelTask.php	/^		$enteredModel = '';$/;"	v
execute	lib/Cake/Console/Command/Task/ModelTask.php	/^	public function execute() {$/;"	f
fieldNames	lib/Cake/Console/Command/Task/ModelTask.php	/^		$fieldNames = array_keys($fields);$/;"	v
fieldNames	lib/Cake/Console/Command/Task/ModelTask.php	/^		$fieldNames = array_keys($model->schema(true));$/;"	v
fieldValidation	lib/Cake/Console/Command/Task/ModelTask.php	/^	public function fieldValidation($fieldName, $metaData, $primaryKey = 'id') {$/;"	f
fields	lib/Cake/Console/Command/Task/ModelTask.php	/^			$fields = $tempModel->schema(true);$/;"	v
fields	lib/Cake/Console/Command/Task/ModelTask.php	/^			$fields = array($tempModel->primaryKey);$/;"	v
fields	lib/Cake/Console/Command/Task/ModelTask.php	/^		$fields = $model->schema();$/;"	v
fields	lib/Cake/Console/Command/Task/ModelTask.php	/^		$fields = $model->schema(true);$/;"	v
fields	lib/Cake/Console/Command/Task/ModelTask.php	/^		$fields = $object->schema(true);$/;"	v
filename	lib/Cake/Console/Command/Task/ModelTask.php	/^		$filename = $path . $name . '.php';$/;"	v
findBelongsTo	lib/Cake/Console/Command/Task/ModelTask.php	/^	public function findBelongsTo(Model $model, $associations) {$/;"	f
findDisplayField	lib/Cake/Console/Command/Task/ModelTask.php	/^	public function findDisplayField($fields) {$/;"	f
findHasAndBelongsToMany	lib/Cake/Console/Command/Task/ModelTask.php	/^	public function findHasAndBelongsToMany(Model $model, $associations) {$/;"	f
findHasOneAndMany	lib/Cake/Console/Command/Task/ModelTask.php	/^	public function findHasOneAndMany(Model $model, $associations) {$/;"	f
findPrimaryKey	lib/Cake/Console/Command/Task/ModelTask.php	/^	public function findPrimaryKey($fields) {$/;"	f
foreignKey	lib/Cake/Console/Command/Task/ModelTask.php	/^				$foreignKey = $showKeys[intval($foreignKey)];$/;"	v
foreignKey	lib/Cake/Console/Command/Task/ModelTask.php	/^				$foreignKey = $this->in(__d('cake_console', 'What is the foreignKey? Specify your own.'), null, $suggestedForeignKey);$/;"	v
foreignKey	lib/Cake/Console/Command/Task/ModelTask.php	/^				$foreignKey = $this->inOptions($showKeys, __d('cake_console', 'What is the foreignKey?'));$/;"	v
foreignKey	lib/Cake/Console/Command/Task/ModelTask.php	/^		$foreignKey = $this->_modelKey($model->name);$/;"	v
fullTableName	lib/Cake/Console/Command/Task/ModelTask.php	/^			$fullTableName = $db->fullTableName($useTable, false);$/;"	v
fullTableName	lib/Cake/Console/Command/Task/ModelTask.php	/^		$fullTableName = $db->fullTableName($useTable);$/;"	v
getAllTables	lib/Cake/Console/Command/Task/ModelTask.php	/^	public function getAllTables($useDbConfig = null) {$/;"	f
getName	lib/Cake/Console/Command/Task/ModelTask.php	/^	public function getName($useDbConfig = null) {$/;"	f
getOptionParser	lib/Cake/Console/Command/Task/ModelTask.php	/^	public function getOptionParser() {$/;"	f
getTable	lib/Cake/Console/Command/Task/ModelTask.php	/^	public function getTable($modelName, $useDbConfig = null) {$/;"	f
guess	lib/Cake/Console/Command/Task/ModelTask.php	/^					$guess = $methods['boolean'];$/;"	v
guess	lib/Cake/Console/Command/Task/ModelTask.php	/^					$guess = $methods['date'];$/;"	v
guess	lib/Cake/Console/Command/Task/ModelTask.php	/^					$guess = $methods['datetime'];$/;"	v
guess	lib/Cake/Console/Command/Task/ModelTask.php	/^					$guess = $methods['email'];$/;"	v
guess	lib/Cake/Console/Command/Task/ModelTask.php	/^					$guess = $methods['ip'];$/;"	v
guess	lib/Cake/Console/Command/Task/ModelTask.php	/^					$guess = $methods['notEmpty'];$/;"	v
guess	lib/Cake/Console/Command/Task/ModelTask.php	/^					$guess = $methods['numeric'];$/;"	v
guess	lib/Cake/Console/Command/Task/ModelTask.php	/^					$guess = $methods['time'];$/;"	v
guess	lib/Cake/Console/Command/Task/ModelTask.php	/^					$guess = $methods['uuid'];$/;"	v
guess	lib/Cake/Console/Command/Task/ModelTask.php	/^			$guess = $defaultChoice;$/;"	v
habtmName	lib/Cake/Console/Command/Task/ModelTask.php	/^				$habtmName = $this->_modelName($tableName);$/;"	v
i	lib/Cake/Console/Command/Task/ModelTask.php	/^			$i = ($count > 0) ? $count : 0;$/;"	v
inOptions	lib/Cake/Console/Command/Task/ModelTask.php	/^	public function inOptions($options, $prompt = null, $default = null) {$/;"	f
initValidations	lib/Cake/Console/Command/Task/ModelTask.php	/^	public function initValidations() {$/;"	f
initialize	lib/Cake/Console/Command/Task/ModelTask.php	/^	public function initialize() {$/;"	f
interactive	lib/Cake/Console/Command/Task/ModelTask.php	/^			$this->interactive = false;$/;"	v
interactive	lib/Cake/Console/Command/Task/ModelTask.php	/^		$this->interactive = true;$/;"	v
joinTable	lib/Cake/Console/Command/Task/ModelTask.php	/^				$joinTable = $this->in(__d('cake_console', 'What is the joinTable?'));$/;"	v
knownToExist	lib/Cake/Console/Command/Task/ModelTask.php	/^			$knownToExist = true;$/;"	v
knownToExist	lib/Cake/Console/Command/Task/ModelTask.php	/^		$knownToExist = false;$/;"	v
len	lib/Cake/Console/Command/Task/ModelTask.php	/^			$len = strlen($count + 1);$/;"	v
len	lib/Cake/Console/Command/Task/ModelTask.php	/^			$len = strlen(count($options) + 1);$/;"	v
line	lib/Cake/Console/Command/Task/ModelTask.php	/^					$line = sprintf("%2d. %s", $i, $this->_validations[$i]);$/;"	v
listAll	lib/Cake/Console/Command/Task/ModelTask.php	/^	public function listAll($useDbConfig = null) {$/;"	f
looksGood	lib/Cake/Console/Command/Task/ModelTask.php	/^		$looksGood = $this->in(__d('cake_console', 'Look okay?'), array('y', 'n'), 'y');$/;"	v
max	lib/Cake/Console/Command/Task/ModelTask.php	/^		$max = count($options);$/;"	v
methods	lib/Cake/Console/Command/Task/ModelTask.php	/^		$methods = array_flip($this->_validations);$/;"	v
model	lib/Cake/Console/Command/Task/ModelTask.php	/^			$model = $this->_modelName($this->args[0]);$/;"	v
modelClass	lib/Cake/Console/Command/Task/ModelTask.php	/^			$modelClass = Inflector::classify($table);$/;"	v
modelFieldsTemp	lib/Cake/Console/Command/Task/ModelTask.php	/^			$modelFieldsTemp = $tempOtherModel->schema(true);$/;"	v
modelNames	lib/Cake/Console/Command/Task/ModelTask.php	/^			$modelNames = array_flip($this->_modelNames);$/;"	v
name	lib/Cake/Console/Command/Task/ModelTask.php	/^		$name = 'id';$/;"	v
object	lib/Cake/Console/Command/Task/ModelTask.php	/^			$object = $this->_getModelObject($model, $useTable);$/;"	v
object	lib/Cake/Console/Command/Task/ModelTask.php	/^			$object = $this->_getModelObject($modelClass, $table);$/;"	v
object	lib/Cake/Console/Command/Task/ModelTask.php	/^		$object = new Model(array('name' => $className, 'table' => $table, 'ds' => $this->connection));$/;"	v
offset	lib/Cake/Console/Command/Task/ModelTask.php	/^			$offset = strpos($otherTable, $model->table . '_');$/;"	v
offset	lib/Cake/Console/Command/Task/ModelTask.php	/^			$offset = substr($fieldName, -3) === '_id';$/;"	v
optionText	lib/Cake/Console/Command/Task/ModelTask.php	/^				$optionText = '';$/;"	v
options	lib/Cake/Console/Command/Task/ModelTask.php	/^			$options = get_class_methods('Validation');$/;"	v
options	lib/Cake/Console/Command/Task/ModelTask.php	/^		$options = $choices = array();$/;"	v
otherOffset	lib/Cake/Console/Command/Task/ModelTask.php	/^			$otherOffset = strpos($otherTable, '_' . $model->table);$/;"	v
otherTable	lib/Cake/Console/Command/Task/ModelTask.php	/^					$otherTable = $this->in(__d('cake_console', 'What is the table for this model?'));$/;"	v
otherTable	lib/Cake/Console/Command/Task/ModelTask.php	/^				$otherTable = Inflector::tableize($className);$/;"	v
out	lib/Cake/Console/Command/Task/ModelTask.php	/^				$out = "\\t" . $modelName . ' ' . $type . ' ' . $associations[$type][$i]['alias'];$/;"	v
out	lib/Cake/Console/Command/Task/ModelTask.php	/^		$out = $this->Template->generate('classes', 'model');$/;"	v
parser	lib/Cake/Console/Command/Task/ModelTask.php	/^		$parser = parent::getOptionParser();$/;"	v
path	lib/Cake/Console/Command/Task/ModelTask.php	/^		$path = $this->getPath();$/;"	v
path	lib/Cake/Console/Command/Task/ModelTask.php	/^		$this->path = current(App::path('Model'));$/;"	v
path	lib/Cake/Console/Command/Task/ModelTask.php	/^	public $path = null;$/;"	v
pattern	lib/Cake/Console/Command/Task/ModelTask.php	/^			$pattern = '\/_' . preg_quote($model->table, '\/') . '|' . preg_quote($model->table, '\/') . '_\/';$/;"	v
pluginPath	lib/Cake/Console/Command/Task/ModelTask.php	/^			$pluginPath = $this->plugin . '.';$/;"	v
pluginPath	lib/Cake/Console/Command/Task/ModelTask.php	/^		$pluginPath = '';$/;"	v
possible	lib/Cake/Console/Command/Task/ModelTask.php	/^		$possible = array();$/;"	v
possibleJoinTable	lib/Cake/Console/Command/Task/ModelTask.php	/^			$possibleJoinTable = preg_match($pattern, $otherTable);$/;"	v
possibleKeys	lib/Cake/Console/Command/Task/ModelTask.php	/^		$possibleKeys = $this->_generatePossibleKeys();$/;"	v
primaryKey	lib/Cake/Console/Command/Task/ModelTask.php	/^			$primaryKey = $this->findPrimaryKey($fields);$/;"	v
primaryKey	lib/Cake/Console/Command/Task/ModelTask.php	/^		$primaryKey = 'id';$/;"	v
prompt	lib/Cake/Console/Command/Task/ModelTask.php	/^					$prompt = "{$model->name} {$type} {$assoc['alias']}?";$/;"	v
prompt	lib/Cake/Console/Command/Task/ModelTask.php	/^				$prompt = __d('cake_console', 'Make a selection from the choices above');$/;"	v
prompt	lib/Cake/Console/Command/Task/ModelTask.php	/^			$prompt = __d('cake_console', "The table %s doesn't exist or could not be automatically detected\\ncontinue anyway?", $useTable);$/;"	v
prompt	lib/Cake/Console/Command/Task/ModelTask.php	/^			$prompt = __d('cake_console', "Would you like to define model associations\\n(hasMany, hasOne, belongsTo, etc.)?");$/;"	v
prompt	lib/Cake/Console/Command/Task/ModelTask.php	/^			$prompt = __d('cake_console', "Would you like to supply validation criteria \\nfor the fields in your model?");$/;"	v
prompt	lib/Cake/Console/Command/Task/ModelTask.php	/^		$prompt = __d('cake_console', "A displayField could not be automatically detected\\nwould you like to choose one?");$/;"	v
prompt	lib/Cake/Console/Command/Task/ModelTask.php	/^		$prompt = __d('cake_console', 'Choose a field from the options above:');$/;"	v
prompt	lib/Cake/Console/Command/Task/ModelTask.php	/^		$prompt = __d('cake_console', 'Would you like to define some additional model associations?');$/;"	v
prompt	lib/Cake/Console/Command/Task/ModelTask.php	/^		$prompt = __d('cake_console',$/;"	v
response	lib/Cake/Console/Command/Task/ModelTask.php	/^					$response = $this->in($prompt, array('y', 'n'), 'y');$/;"	v
showKeys	lib/Cake/Console/Command/Task/ModelTask.php	/^							$showKeys = $possibleKeys[$otherTable];$/;"	v
showKeys	lib/Cake/Console/Command/Task/ModelTask.php	/^							$showKeys = null;$/;"	v
showKeys	lib/Cake/Console/Command/Task/ModelTask.php	/^						$showKeys = null;$/;"	v
showKeys	lib/Cake/Console/Command/Task/ModelTask.php	/^					$showKeys = $possibleKeys[$model->table];$/;"	v
showKeys	lib/Cake/Console/Command/Task/ModelTask.php	/^					$showKeys = $possibleKeys[$otherTable];$/;"	v
showKeys	lib/Cake/Console/Command/Task/ModelTask.php	/^					$showKeys = null;$/;"	v
skipFields	lib/Cake/Console/Command/Task/ModelTask.php	/^				$skipFields = true;$/;"	v
skipFields	lib/Cake/Console/Command/Task/ModelTask.php	/^		$skipFields = false;$/;"	v
skipTables	lib/Cake/Console/Command/Task/ModelTask.php	/^	public $skipTables = array('i18n');$/;"	v
suggestedForeignKey	lib/Cake/Console/Command/Task/ModelTask.php	/^				$suggestedForeignKey = $this->_modelKey($alias);$/;"	v
suggestedForeignKey	lib/Cake/Console/Command/Task/ModelTask.php	/^				$suggestedForeignKey = $this->_modelKey($model->name);$/;"	v
table	lib/Cake/Console/Command/Task/ModelTask.php	/^			$table = Inflector::tableize($className);$/;"	v
tableIsGood	lib/Cake/Console/Command/Task/ModelTask.php	/^				$tableIsGood = $this->in(__d('cake_console', 'Do you want to use this table?'), array('y', 'n'), 'y');$/;"	v
tableIsGood	lib/Cake/Console/Command/Task/ModelTask.php	/^			$tableIsGood = false;$/;"	v
tableName	lib/Cake/Console/Command/Task/ModelTask.php	/^				$tableName = substr($otherTable, 0, $otherOffset);$/;"	v
tableName	lib/Cake/Console/Command/Task/ModelTask.php	/^				$tableName = substr($otherTable, strlen($model->table . '_'));$/;"	v
tableName	lib/Cake/Console/Command/Task/ModelTask.php	/^			$tableName = null;$/;"	v
tables	lib/Cake/Console/Command/Task/ModelTask.php	/^			$tables = $db->listSources();$/;"	v
tables	lib/Cake/Console/Command/Task/ModelTask.php	/^		$tables = array();$/;"	v
tasks	lib/Cake/Console/Command/Task/ModelTask.php	/^	public $tasks = array('DbConfig', 'Fixture', 'Test', 'Template');$/;"	v
tempFieldNames	lib/Cake/Console/Command/Task/ModelTask.php	/^			$tempFieldNames = array_keys($tempOtherModel->schema(true));$/;"	v
tempModel	lib/Cake/Console/Command/Task/ModelTask.php	/^		$tempModel = new Model(array('name' => $currentModelName, 'table' => $useTable, 'ds' => $this->connection));$/;"	v
tempOtherModel	lib/Cake/Console/Command/Task/ModelTask.php	/^			$tempOtherModel = $this->_getModelObject($this->_modelName($otherTable), $otherTable);$/;"	v
tempOtherModel	lib/Cake/Console/Command/Task/ModelTask.php	/^			$tempOtherModel = new Model(array('table' => $otherTable, 'ds' => $this->connection));$/;"	v
tmpModelName	lib/Cake/Console/Command/Task/ModelTask.php	/^				$tmpModelName = $this->_modelNameFromKey($fieldName);$/;"	v
unitTestExists	lib/Cake/Console/Command/Task/ModelTask.php	/^		$unitTestExists = $this->_checkUnitTest();$/;"	v
useDbConfig	lib/Cake/Console/Command/Task/ModelTask.php	/^				$useDbConfig = $this->connection;$/;"	v
useDbConfig	lib/Cake/Console/Command/Task/ModelTask.php	/^			$useDbConfig = $this->connection;$/;"	v
usePrefix	lib/Cake/Console/Command/Task/ModelTask.php	/^		$usePrefix = empty($db->config['prefix']) ? '' : $db->config['prefix'];$/;"	v
useTable	lib/Cake/Console/Command/Task/ModelTask.php	/^				$useTable = $this->in(__d('cake_console', 'What is the name of the table?'));$/;"	v
useTable	lib/Cake/Console/Command/Task/ModelTask.php	/^			$useTable = $this->_tables[$modelNames[$modelName]];$/;"	v
useTable	lib/Cake/Console/Command/Task/ModelTask.php	/^			$useTable = $this->getTable($model);$/;"	v
useTable	lib/Cake/Console/Command/Task/ModelTask.php	/^		$useTable = $this->getTable($currentModelName);$/;"	v
useTable	lib/Cake/Console/Command/Task/ModelTask.php	/^		$useTable = Inflector::tableize($modelName);$/;"	v
valid	lib/Cake/Console/Command/Task/ModelTask.php	/^				$valid = true;$/;"	v
valid	lib/Cake/Console/Command/Task/ModelTask.php	/^		$valid = false;$/;"	v
validate	lib/Cake/Console/Command/Task/ModelTask.php	/^				$validate = $this->doValidation($tempModel);$/;"	v
validate	lib/Cake/Console/Command/Task/ModelTask.php	/^		$validate = $alreadyChosen = array();$/;"	v
validate	lib/Cake/Console/Command/Task/ModelTask.php	/^		$validate = $associations = array();$/;"	v
validate	lib/Cake/Console/Command/Task/ModelTask.php	/^		$validate = array();$/;"	v
validation	lib/Cake/Console/Command/Task/ModelTask.php	/^			$validation = $this->fieldValidation($fieldName, $field, $model->primaryKey);$/;"	v
validatorName	lib/Cake/Console/Command/Task/ModelTask.php	/^				$validatorName = $this->_validations[$choice];$/;"	v
validatorName	lib/Cake/Console/Command/Task/ModelTask.php	/^				$validatorName = Inflector::slug($choice);$/;"	v
vars	lib/Cake/Console/Command/Task/ModelTask.php	/^			$vars = compact('associations', 'validate', 'primaryKey', 'useTable', 'displayField');$/;"	v
wannaDoAssoc	lib/Cake/Console/Command/Task/ModelTask.php	/^			$wannaDoAssoc = $this->in($prompt, array('y', 'n'), 'y');$/;"	v
wannaDoMoreAssoc	lib/Cake/Console/Command/Task/ModelTask.php	/^			$wannaDoMoreAssoc = $this->in(__d('cake_console', 'Define another association?'), array('y', 'n'), 'y');$/;"	v
wannaDoMoreAssoc	lib/Cake/Console/Command/Task/ModelTask.php	/^		$wannaDoMoreAssoc = $this->in($prompt, array('y', 'n'), 'n');$/;"	v
wannaDoValidation	lib/Cake/Console/Command/Task/ModelTask.php	/^			$wannaDoValidation = $this->in($prompt, array('y', 'n'), 'y');$/;"	v
Folder	lib/Cake/Console/Command/Task/PluginTask.php	/^			$Folder = new Folder($this->path . $plugin);$/;"	v
PluginTask	lib/Cake/Console/Command/Task/PluginTask.php	/^class PluginTask extends AppShell {$/;"	c
_interactive	lib/Cake/Console/Command/Task/PluginTask.php	/^	protected function _interactive($plugin = null) {$/;"	f
_modifyBootstrap	lib/Cake/Console/Command/Task/PluginTask.php	/^	protected function _modifyBootstrap($plugin) {$/;"	f
bake	lib/Cake/Console/Command/Task/PluginTask.php	/^	public function bake($plugin) {$/;"	f
bootstrap	lib/Cake/Console/Command/Task/PluginTask.php	/^		$bootstrap = new File($this->bootstrap, false);$/;"	v
bootstrap	lib/Cake/Console/Command/Task/PluginTask.php	/^		$this->bootstrap = APP . 'Config' . DS . 'bootstrap.php';$/;"	v
bootstrap	lib/Cake/Console/Command/Task/PluginTask.php	/^	public $bootstrap = null;$/;"	v
choice	lib/Cake/Console/Command/Task/PluginTask.php	/^			$choice = $this->in($prompt, null, 1);$/;"	v
contents	lib/Cake/Console/Command/Task/PluginTask.php	/^		$contents = $bootstrap->read();$/;"	v
controllerFileName	lib/Cake/Console/Command/Task/PluginTask.php	/^			$controllerFileName = $plugin . 'AppController.php';$/;"	v
dirPath	lib/Cake/Console/Command/Task/PluginTask.php	/^				$dirPath = $this->path . $plugin . DS . $directory;$/;"	v
directories	lib/Cake/Console/Command/Task/PluginTask.php	/^			$directories = array($/;"	v
errors	lib/Cake/Console/Command/Task/PluginTask.php	/^			$errors = $Folder->errors();$/;"	v
execute	lib/Cake/Console/Command/Task/PluginTask.php	/^	public function execute() {$/;"	f
findPath	lib/Cake/Console/Command/Task/PluginTask.php	/^	public function findPath($pathOptions) {$/;"	f
getOptionParser	lib/Cake/Console/Command/Task/PluginTask.php	/^	public function getOptionParser() {$/;"	f
initialize	lib/Cake/Console/Command/Task/PluginTask.php	/^	public function initialize() {$/;"	f
looksGood	lib/Cake/Console/Command/Task/PluginTask.php	/^		$looksGood = $this->in(__d('cake_console', 'Look okay?'), array('y', 'n', 'q'), 'y');$/;"	v
max	lib/Cake/Console/Command/Task/PluginTask.php	/^		$max = count($pathOptions);$/;"	v
modelFileName	lib/Cake/Console/Command/Task/PluginTask.php	/^			$modelFileName = $plugin . 'AppModel.php';$/;"	v
out	lib/Cake/Console/Command/Task/PluginTask.php	/^			$out = "<?php\\n\\n";$/;"	v
parser	lib/Cake/Console/Command/Task/PluginTask.php	/^		$parser = parent::getOptionParser();$/;"	v
path	lib/Cake/Console/Command/Task/PluginTask.php	/^		$this->path = $pathOptions[$choice - 1];$/;"	v
path	lib/Cake/Console/Command/Task/PluginTask.php	/^		$this->path = current(App::path('plugins'));$/;"	v
path	lib/Cake/Console/Command/Task/PluginTask.php	/^	public $path = null;$/;"	v
pathOptions	lib/Cake/Console/Command/Task/PluginTask.php	/^		$pathOptions = App::path('plugins');$/;"	v
pathOptions	lib/Cake/Console/Command/Task/PluginTask.php	/^		$pathOptions = array_values($pathOptions);$/;"	v
plugin	lib/Cake/Console/Command/Task/PluginTask.php	/^			$plugin = $this->in(__d('cake_console', 'Enter the name of the plugin in CamelCase format'));$/;"	v
plugin	lib/Cake/Console/Command/Task/PluginTask.php	/^			$plugin = Inflector::camelize($this->args[0]);$/;"	v
pluginPath	lib/Cake/Console/Command/Task/PluginTask.php	/^			$pluginPath = $this->_pluginPath($plugin);$/;"	v
prompt	lib/Cake/Console/Command/Task/PluginTask.php	/^			$prompt = __d('cake_console', 'Choose a plugin path from the paths above.');$/;"	v
valid	lib/Cake/Console/Command/Task/PluginTask.php	/^				$valid = true;$/;"	v
valid	lib/Cake/Console/Command/Task/PluginTask.php	/^		$valid = false;$/;"	v
File	lib/Cake/Console/Command/Task/ProjectTask.php	/^		$File = new File($dir . 'Config' . DS . 'core.php');$/;"	v
File	lib/Cake/Console/Command/Task/ProjectTask.php	/^		$File = new File($path . 'Config' . DS . 'core.php');$/;"	v
File	lib/Cake/Console/Command/Task/ProjectTask.php	/^		$File = new File($path . 'Console' . DS . 'cake.php');$/;"	v
File	lib/Cake/Console/Command/Task/ProjectTask.php	/^		$File = new File($path . 'core.php');$/;"	v
Folder	lib/Cake/Console/Command/Task/ProjectTask.php	/^				$Folder = new Folder($skel);$/;"	v
Folder	lib/Cake/Console/Command/Task/ProjectTask.php	/^			$Folder = new Folder($path);$/;"	v
ProjectTask	lib/Cake/Console/Command/Task/ProjectTask.php	/^class ProjectTask extends AppShell {$/;"	c
_replaceCorePath	lib/Cake/Console/Command/Task/ProjectTask.php	/^	protected function _replaceCorePath($filename, $hardCode) {$/;"	f
admin	lib/Cake/Console/Command/Task/ProjectTask.php	/^				$admin = $this->in(__d('cake_console', 'Enter a routing prefix:'), null, 'admin');$/;"	v
admin	lib/Cake/Console/Command/Task/ProjectTask.php	/^		$admin = '';$/;"	v
app	lib/Cake/Console/Command/Task/ProjectTask.php	/^		$app = basename($dir);$/;"	v
app	lib/Cake/Console/Command/Task/ProjectTask.php	/^		$app = basename($path);$/;"	v
appContents	lib/Cake/Console/Command/Task/ProjectTask.php	/^			$appContents = array_diff(scandir(APP), array('.', '..'));$/;"	v
bake	lib/Cake/Console/Command/Task/ProjectTask.php	/^	public function bake($path, $skel = null, $skip = array('empty')) {$/;"	f
cachePrefix	lib/Cake/Console/Command/Task/ProjectTask.php	/^	public function cachePrefix($dir) {$/;"	f
cakeAdmin	lib/Cake/Console/Command/Task/ProjectTask.php	/^	public function cakeAdmin($name) {$/;"	f
cakeOnIncludePath	lib/Cake/Console/Command/Task/ProjectTask.php	/^	public function cakeOnIncludePath() {$/;"	f
configPath	lib/Cake/Console/Command/Task/ProjectTask.php	/^	public $configPath = null;$/;"	v
consolePath	lib/Cake/Console/Command/Task/ProjectTask.php	/^	public function consolePath($path) {$/;"	f
contents	lib/Cake/Console/Command/Task/ProjectTask.php	/^		$contents = $File->read();$/;"	v
contents	lib/Cake/Console/Command/Task/ProjectTask.php	/^		$contents = file_get_contents($filename);$/;"	v
corePath	lib/Cake/Console/Command/Task/ProjectTask.php	/^		$corePath = $root . str_replace(DS, "' . DS . '", trim(CAKE_CORE_INCLUDE_PATH, DS)) . "'";$/;"	v
corePath	lib/Cake/Console/Command/Task/ProjectTask.php	/^	public function corePath($path, $hardCode = true) {$/;"	f
execute	lib/Cake/Console/Command/Task/ProjectTask.php	/^	public function execute() {$/;"	f
filename	lib/Cake/Console/Command/Task/ProjectTask.php	/^			$filename = $path . 'webroot' . DS . 'index.php';$/;"	v
filename	lib/Cake/Console/Command/Task/ProjectTask.php	/^			$filename = $path . 'webroot' . DS . 'test.php';$/;"	v
getOptionParser	lib/Cake/Console/Command/Task/ProjectTask.php	/^	public function getOptionParser() {$/;"	f
getPrefix	lib/Cake/Console/Command/Task/ProjectTask.php	/^	public function getPrefix() {$/;"	f
hardCode	lib/Cake/Console/Command/Task/ProjectTask.php	/^				$hardCode = true;$/;"	v
hardCode	lib/Cake/Console/Command/Task/ProjectTask.php	/^			$hardCode = false;$/;"	v
looksGood	lib/Cake/Console/Command/Task/ProjectTask.php	/^		$looksGood = $this->in(__d('cake_console', 'Look okay?'), array('y', 'n', 'q'), 'y');$/;"	v
options	lib/Cake/Console/Command/Task/ProjectTask.php	/^			$options = array();$/;"	v
parser	lib/Cake/Console/Command/Task/ProjectTask.php	/^		$parser = parent::getOptionParser();$/;"	v
path	lib/Cake/Console/Command/Task/ProjectTask.php	/^			$path = Folder::slashTerm($project);$/;"	v
path	lib/Cake/Console/Command/Task/ProjectTask.php	/^		$path = (empty($this->configPath)) ? APP . 'Config' . DS : $this->configPath;$/;"	v
paths	lib/Cake/Console/Command/Task/ProjectTask.php	/^		$paths = explode(PATH_SEPARATOR, ini_get('include_path'));$/;"	v
prefixes	lib/Cake/Console/Command/Task/ProjectTask.php	/^		$prefixes = Configure::read('Routing.prefixes');$/;"	v
project	lib/Cake/Console/Command/Task/ProjectTask.php	/^			$project = $_SERVER['PWD'] . DS . $project;$/;"	v
project	lib/Cake/Console/Command/Task/ProjectTask.php	/^			$project = $this->args[0];$/;"	v
project	lib/Cake/Console/Command/Task/ProjectTask.php	/^			$project = $this->in($prompt, null, $suggestedPath);$/;"	v
project	lib/Cake/Console/Command/Task/ProjectTask.php	/^		$project = null;$/;"	v
prompt	lib/Cake/Console/Command/Task/ProjectTask.php	/^			$prompt = __d('cake_console', "What is the path to the project you want to bake?");$/;"	v
prompt	lib/Cake/Console/Command/Task/ProjectTask.php	/^			$prompt = __d('cake_console', '<warning>A project already exists in this location:<\/warning> %s Overwrite?', $project);$/;"	v
replacement	lib/Cake/Console/Command/Task/ProjectTask.php	/^			$replacement = $root . str_replace(DS, "' . \\$ds . '", trim(CAKE_CORE_INCLUDE_PATH, DS)) . "'";$/;"	v
response	lib/Cake/Console/Command/Task/ProjectTask.php	/^				$response = $project = false;$/;"	v
response	lib/Cake/Console/Command/Task/ProjectTask.php	/^			$response = $this->in($prompt, array('y', 'n'), 'n');$/;"	v
response	lib/Cake/Console/Command/Task/ProjectTask.php	/^		$response = false;$/;"	v
result	lib/Cake/Console/Command/Task/ProjectTask.php	/^			$result = str_replace($match[0], "\\n" . 'Configure::write(\\'Routing.prefixes\\', array(\\'' . $name . '\\'));', $contents);$/;"	v
result	lib/Cake/Console/Command/Task/ProjectTask.php	/^			$result = str_replace($match[0], "\\t" . 'Configure::write(\\'Security.cipherSeed\\', \\'' . $string . '\\');', $contents);$/;"	v
result	lib/Cake/Console/Command/Task/ProjectTask.php	/^			$result = str_replace($match[0], "\\t" . 'Configure::write(\\'Security.salt\\', \\'' . $string . '\\');', $contents);$/;"	v
result	lib/Cake/Console/Command/Task/ProjectTask.php	/^			$result = str_replace($match[0], $replacement, $contents);$/;"	v
result	lib/Cake/Console/Command/Task/ProjectTask.php	/^			$result = str_replace($match[0], '$prefix = \\'' . $app . '_\\';', $contents);$/;"	v
result	lib/Cake/Console/Command/Task/ProjectTask.php	/^			$result = str_replace('\/\/define(\\'CAKE_CORE', 'define(\\'CAKE_CORE', $result);$/;"	v
result	lib/Cake/Console/Command/Task/ProjectTask.php	/^		$result = str_replace('__CAKE_PATH__', $corePath, $contents, $count);$/;"	v
root	lib/Cake/Console/Command/Task/ProjectTask.php	/^			$root = strpos(CAKE_CORE_INCLUDE_PATH, '\/') === 0 ? " \\$ds . '" : "'";$/;"	v
root	lib/Cake/Console/Command/Task/ProjectTask.php	/^		$root = strpos(CAKE_CORE_INCLUDE_PATH, '\/') === 0 ? " DS . '" : "'";$/;"	v
securityCipherSeed	lib/Cake/Console/Command/Task/ProjectTask.php	/^	public function securityCipherSeed($path) {$/;"	f
securitySalt	lib/Cake/Console/Command/Task/ProjectTask.php	/^	public function securitySalt($path) {$/;"	f
selection	lib/Cake/Console/Command/Task/ProjectTask.php	/^			$selection = $this->in(__d('cake_console', 'Please choose a prefix to bake with.'), $options, 1);$/;"	v
skel	lib/Cake/Console/Command/Task/ProjectTask.php	/^					$skel = $this->in($/;"	v
skel	lib/Cake/Console/Command/Task/ProjectTask.php	/^			$skel = $this->in($/;"	v
skel	lib/Cake/Console/Command/Task/ProjectTask.php	/^			$skel = $this->params['skel'];$/;"	v
skip	lib/Cake/Console/Command/Task/ProjectTask.php	/^					$skip = array();$/;"	v
string	lib/Cake/Console/Command/Task/ProjectTask.php	/^			$string = Security::generateAuthKey();$/;"	v
string	lib/Cake/Console/Command/Task/ProjectTask.php	/^			$string = substr(bin2hex(Security::generateAuthKey()), 0, 30);$/;"	v
success	lib/Cake/Console/Command/Task/ProjectTask.php	/^				$success = false;$/;"	v
success	lib/Cake/Console/Command/Task/ProjectTask.php	/^			$success = $this->corePath($path, $hardCode) === true;$/;"	v
success	lib/Cake/Console/Command/Task/ProjectTask.php	/^		$success = true;$/;"	v
suggestedPath	lib/Cake/Console/Command/Task/ProjectTask.php	/^				$suggestedPath = APP . 'myapp';$/;"	v
suggestedPath	lib/Cake/Console/Command/Task/ProjectTask.php	/^				$suggestedPath = rtrim(APP, DS);$/;"	v
Folder	lib/Cake/Console/Command/Task/TemplateTask.php	/^				$Folder = new Folder($path . 'Templates' . DS . $dir);$/;"	v
Folder	lib/Cake/Console/Command/Task/TemplateTask.php	/^			$Folder = new Folder($path . 'Templates', false);$/;"	v
Folder	lib/Cake/Console/Command/Task/TemplateTask.php	/^		$Folder = new Folder($core . 'Templates' . DS . 'default');$/;"	v
TemplateTask	lib/Cake/Console/Command/Task/TemplateTask.php	/^class TemplateTask extends AppShell {$/;"	c
_findTemplate	lib/Cake/Console/Command/Task/TemplateTask.php	/^	protected function _findTemplate($path, $directory, $filename) {$/;"	f
_findThemes	lib/Cake/Console/Command/Task/TemplateTask.php	/^	protected function _findThemes() {$/;"	f
content	lib/Cake/Console/Command/Task/TemplateTask.php	/^			$content = ob_get_clean();$/;"	v
contents	lib/Cake/Console/Command/Task/TemplateTask.php	/^				$contents = $Folder->read();$/;"	v
contents	lib/Cake/Console/Command/Task/TemplateTask.php	/^			$contents = $Folder->read();$/;"	v
contents	lib/Cake/Console/Command/Task/TemplateTask.php	/^		$contents = $Folder->read();$/;"	v
core	lib/Cake/Console/Command/Task/TemplateTask.php	/^		$core = current(App::core('Console'));$/;"	v
core	lib/Cake/Console/Command/Task/TemplateTask.php	/^		$core = preg_replace('#shells' . $separator . '$#', '', $core);$/;"	v
data	lib/Cake/Console/Command/Task/TemplateTask.php	/^				$data = $one;$/;"	v
data	lib/Cake/Console/Command/Task/TemplateTask.php	/^				$data = array_combine($one, $two);$/;"	v
data	lib/Cake/Console/Command/Task/TemplateTask.php	/^			$data = array($one => $two);$/;"	v
generate	lib/Cake/Console/Command/Task/TemplateTask.php	/^	public function generate($directory, $filename, $vars = null) {$/;"	f
getThemePath	lib/Cake/Console/Command/Task/TemplateTask.php	/^	public function getThemePath() {$/;"	f
i	lib/Cake/Console/Command/Task/TemplateTask.php	/^		$i = 1;$/;"	v
index	lib/Cake/Console/Command/Task/TemplateTask.php	/^		$index = $this->in(__d('cake_console', 'Which bake theme would you like to use?'), range(1, $i - 1), 1);$/;"	v
indexedPaths	lib/Cake/Console/Command/Task/TemplateTask.php	/^		$indexedPaths = array();$/;"	v
initialize	lib/Cake/Console/Command/Task/TemplateTask.php	/^	public function initialize() {$/;"	f
paths	lib/Cake/Console/Command/Task/TemplateTask.php	/^			$paths = array_values($this->templatePaths);$/;"	v
paths	lib/Cake/Console/Command/Task/TemplateTask.php	/^		$paths = App::path('Console');$/;"	v
plugins	lib/Cake/Console/Command/Task/TemplateTask.php	/^		$plugins = App::objects('plugin');$/;"	v
separator	lib/Cake/Console/Command/Task/TemplateTask.php	/^		$separator = DS === '\/' ? '\/' : '\\\\\\\\';$/;"	v
set	lib/Cake/Console/Command/Task/TemplateTask.php	/^	public function set($one, $two = null) {$/;"	f
subDirs	lib/Cake/Console/Command/Task/TemplateTask.php	/^				$subDirs = $contents[0];$/;"	v
subDirs	lib/Cake/Console/Command/Task/TemplateTask.php	/^			$subDirs = $contents[0];$/;"	v
templateDir	lib/Cake/Console/Command/Task/TemplateTask.php	/^					$templateDir = $path . 'Templates' . DS . $dir . DS;$/;"	v
templateFile	lib/Cake/Console/Command/Task/TemplateTask.php	/^		$templateFile = $this->_findTemplate($themePath, $directory, $filename);$/;"	v
templatePath	lib/Cake/Console/Command/Task/TemplateTask.php	/^			$templatePath = $path . $directory . DS . $filename . '.ctp';$/;"	v
templatePaths	lib/Cake/Console/Command/Task/TemplateTask.php	/^		$this->templatePaths = $this->_findThemes();$/;"	v
templatePaths	lib/Cake/Console/Command/Task/TemplateTask.php	/^	public $templatePaths = array();$/;"	v
templateVars	lib/Cake/Console/Command/Task/TemplateTask.php	/^		$this->templateVars = $data + $this->templateVars;$/;"	v
templateVars	lib/Cake/Console/Command/Task/TemplateTask.php	/^	public $templateVars = array();$/;"	v
themeFile	lib/Cake/Console/Command/Task/TemplateTask.php	/^		$themeFile = $path . $directory . DS . $filename . '.ctp';$/;"	v
themeFolders	lib/Cake/Console/Command/Task/TemplateTask.php	/^		$themeFolders = $contents[0];$/;"	v
themeNames	lib/Cake/Console/Command/Task/TemplateTask.php	/^		$themeNames = array_keys($this->templatePaths);$/;"	v
themePath	lib/Cake/Console/Command/Task/TemplateTask.php	/^		$themePath = $this->getThemePath();$/;"	v
themes	lib/Cake/Console/Command/Task/TemplateTask.php	/^		$themes = array();$/;"	v
TestTask	lib/Cake/Console/Command/Task/TestTask.php	/^class TestTask extends BakeTask {$/;"	c
_addFixture	lib/Cake/Console/Command/Task/TestTask.php	/^	protected function _addFixture($name) {$/;"	f
_fixtures	lib/Cake/Console/Command/Task/TestTask.php	/^		$this->_fixtures = array();$/;"	v
_fixtures	lib/Cake/Console/Command/Task/TestTask.php	/^		$this->_fixtures = array_merge($this->_fixtures, $fixtures);$/;"	v
_fixtures	lib/Cake/Console/Command/Task/TestTask.php	/^	protected $_fixtures = array();$/;"	v
_interactive	lib/Cake/Console/Command/Task/TestTask.php	/^	protected function _interactive($type = null) {$/;"	f
_processController	lib/Cake/Console/Command/Task/TestTask.php	/^	protected function _processController($subject) {$/;"	f
_processModel	lib/Cake/Console/Command/Task/TestTask.php	/^	protected function _processModel($subject) {$/;"	f
associated	lib/Cake/Console/Command/Task/TestTask.php	/^		$associated = $subject->getAssociated();$/;"	v
bake	lib/Cake/Console/Command/Task/TestTask.php	/^	public function bake($type, $className) {$/;"	f
baseTypes	lib/Cake/Console/Command/Task/TestTask.php	/^	public $baseTypes = array($/;"	v
buildTestSubject	lib/Cake/Console/Command/Task/TestTask.php	/^	public function buildTestSubject($type, $class) {$/;"	f
class	lib/Cake/Console/Command/Task/TestTask.php	/^		$class = $this->getRealClassName($type, $class);$/;"	v
classMethods	lib/Cake/Console/Command/Task/TestTask.php	/^		$classMethods = get_class_methods($className);$/;"	v
className	lib/Cake/Console/Command/Task/TestTask.php	/^			$className = $subject->{$alias}->name;$/;"	v
className	lib/Cake/Console/Command/Task/TestTask.php	/^		$className = $this->getClassName($type);$/;"	v
className	lib/Cake/Console/Command/Task/TestTask.php	/^		$className = $this->getRealClassName($type, $className);$/;"	v
classTypes	lib/Cake/Console/Command/Task/TestTask.php	/^	public $classTypes = array($/;"	v
construct	lib/Cake/Console/Command/Task/TestTask.php	/^			$construct = "ClassRegistry::init('{$plugin}$fullClassName');\\n";$/;"	v
construct	lib/Cake/Console/Command/Task/TestTask.php	/^			$construct = "new $fullClassName();\\n";$/;"	v
construct	lib/Cake/Console/Command/Task/TestTask.php	/^			$construct = "new {$fullClassName}(\\$Collection);\\n";$/;"	v
construct	lib/Cake/Console/Command/Task/TestTask.php	/^			$construct = "new {$fullClassName}(\\$View);\\n";$/;"	v
count	lib/Cake/Console/Command/Task/TestTask.php	/^		$count = count($this->args);$/;"	v
execute	lib/Cake/Console/Command/Task/TestTask.php	/^	public function execute() {$/;"	f
filename	lib/Cake/Console/Command/Task/TestTask.php	/^		$filename = $this->testCaseFileName($type, $className);$/;"	v
fixture	lib/Cake/Console/Command/Task/TestTask.php	/^		$fixture = $prefix . Inflector::underscore($name);$/;"	v
fixtureList	lib/Cake/Console/Command/Task/TestTask.php	/^			$fixtureList = $this->in(__d('cake_console', "Please provide a comma separated list of the fixtures names you'd like to use.\\nExample: 'app.comment, app.post, plugin.forums.post'"));$/;"	v
fixtureListTrimmed	lib/Cake/Console/Command/Task/TestTask.php	/^			$fixtureListTrimmed = str_replace(' ', '', $fixtureList);$/;"	v
fixtures	lib/Cake/Console/Command/Task/TestTask.php	/^			$fixtures = explode(',', $fixtureListTrimmed);$/;"	v
fixtures	lib/Cake/Console/Command/Task/TestTask.php	/^		$fixtures = array();$/;"	v
fullClassName	lib/Cake/Console/Command/Task/TestTask.php	/^		$fullClassName = $this->getRealClassName($type, $className);$/;"	v
generateConstructor	lib/Cake/Console/Command/Task/TestTask.php	/^	public function generateConstructor($type, $fullClassName, $plugin) {$/;"	f
generateFixtureList	lib/Cake/Console/Command/Task/TestTask.php	/^	public function generateFixtureList($subject) {$/;"	f
generateUses	lib/Cake/Console/Command/Task/TestTask.php	/^	public function generateUses($type, $realType, $className) {$/;"	f
getBaseType	lib/Cake/Console/Command/Task/TestTask.php	/^	public function getBaseType($type) {$/;"	f
getClassName	lib/Cake/Console/Command/Task/TestTask.php	/^	public function getClassName($objectType) {$/;"	f
getObjectType	lib/Cake/Console/Command/Task/TestTask.php	/^	public function getObjectType() {$/;"	f
getOptionParser	lib/Cake/Console/Command/Task/TestTask.php	/^	public function getOptionParser() {$/;"	f
getRealClassName	lib/Cake/Console/Command/Task/TestTask.php	/^	public function getRealClassName($type, $class) {$/;"	f
getTestableMethods	lib/Cake/Console/Command/Task/TestTask.php	/^	public function getTestableMethods($className) {$/;"	f
getUserFixtures	lib/Cake/Console/Command/Task/TestTask.php	/^	public function getUserFixtures() {$/;"	f
hasMockClass	lib/Cake/Console/Command/Task/TestTask.php	/^	public function hasMockClass($type) {$/;"	f
i	lib/Cake/Console/Command/Task/TestTask.php	/^		$i = 0;$/;"	v
instance	lib/Cake/Console/Command/Task/TestTask.php	/^			$instance = ClassRegistry::init($class);$/;"	v
instance	lib/Cake/Console/Command/Task/TestTask.php	/^			$instance = new $class();$/;"	v
interactive	lib/Cake/Console/Command/Task/TestTask.php	/^		$this->interactive = true;$/;"	v
isLoadableClass	lib/Cake/Console/Command/Task/TestTask.php	/^	public function isLoadableClass($package, $class) {$/;"	f
joinModel	lib/Cake/Console/Command/Task/TestTask.php	/^					$joinModel = Inflector::classify($subject->hasAndBelongsToMany[$alias]['joinTable']);$/;"	v
keys	lib/Cake/Console/Command/Task/TestTask.php	/^		$keys = array();$/;"	v
made	lib/Cake/Console/Command/Task/TestTask.php	/^		$made = $this->createFile($filename, $out);$/;"	v
mapType	lib/Cake/Console/Command/Task/TestTask.php	/^	public function mapType($type, $plugin) {$/;"	f
methods	lib/Cake/Console/Command/Task/TestTask.php	/^			$methods = $this->getTestableMethods($fullClassName);$/;"	v
methods	lib/Cake/Console/Command/Task/TestTask.php	/^		$methods = array();$/;"	v
mock	lib/Cake/Console/Command/Task/TestTask.php	/^		$mock = $this->hasMockClass($type, $fullClassName);$/;"	v
models	lib/Cake/Console/Command/Task/TestTask.php	/^			$models = $subject->uses;$/;"	v
models	lib/Cake/Console/Command/Task/TestTask.php	/^		$models = array(Inflector::classify($subject->name));$/;"	v
options	lib/Cake/Console/Command/Task/TestTask.php	/^			$options = App::objects($plugin . $type);$/;"	v
options	lib/Cake/Console/Command/Task/TestTask.php	/^			$options = App::objects($type);$/;"	v
out	lib/Cake/Console/Command/Task/TestTask.php	/^		$out = $this->Template->generate('classes', 'test');$/;"	v
out	lib/Cake/Console/Command/Task/TestTask.php	/^		$out = array();$/;"	v
parentMethods	lib/Cake/Console/Command/Task/TestTask.php	/^		$parentMethods = get_class_methods(get_parent_class($className));$/;"	v
parser	lib/Cake/Console/Command/Task/TestTask.php	/^		$parser = parent::getOptionParser();$/;"	v
path	lib/Cake/Console/Command/Task/TestTask.php	/^		$path = $this->getPath() . 'Case' . DS;$/;"	v
path	lib/Cake/Console/Command/Task/TestTask.php	/^	public $path = TESTS;$/;"	v
plugin	lib/Cake/Console/Command/Task/TestTask.php	/^			$plugin = $this->plugin . '.';$/;"	v
plugin	lib/Cake/Console/Command/Task/TestTask.php	/^		$plugin = null;$/;"	v
position	lib/Cake/Console/Command/Task/TestTask.php	/^		$position = strpos($class, $type);$/;"	v
pre	lib/Cake/Console/Command/Task/TestTask.php	/^			$pre = "\\$Collection = new ComponentCollection();\\n";$/;"	v
pre	lib/Cake/Console/Command/Task/TestTask.php	/^			$pre = "\\$View = new View();\\n";$/;"	v
pre	lib/Cake/Console/Command/Task/TestTask.php	/^		$pre = $construct = $post = '';$/;"	v
prefix	lib/Cake/Console/Command/Task/TestTask.php	/^			$prefix = 'app.';$/;"	v
prefix	lib/Cake/Console/Command/Task/TestTask.php	/^			$prefix = 'plugin.' . Inflector::underscore($this->plugin) . '.';$/;"	v
proceed	lib/Cake/Console/Command/Task/TestTask.php	/^		$proceed = $this->in(__d('cake_console', 'Bake could not detect fixtures, would you like to add some?'), array('y', 'n'), 'n');$/;"	v
real	lib/Cake/Console/Command/Task/TestTask.php	/^			$real = trim($plugin, '.') . '.' . $real;$/;"	v
real	lib/Cake/Console/Command/Task/TestTask.php	/^		$real = $this->classTypes[$type];$/;"	v
realType	lib/Cake/Console/Command/Task/TestTask.php	/^		$realType = $this->mapType($type, $plugin);$/;"	v
selection	lib/Cake/Console/Command/Task/TestTask.php	/^				$selection = $options[$selection - 1];$/;"	v
selection	lib/Cake/Console/Command/Task/TestTask.php	/^				$selection = substr($selection, 0, $typeLength * - 1);$/;"	v
selection	lib/Cake/Console/Command/Task/TestTask.php	/^			$selection = $this->in(__d('cake_console', 'Choose an existing class, or enter the name of a class that does not exist'));$/;"	v
selection	lib/Cake/Console/Command/Task/TestTask.php	/^		$selection = $this->in(__d('cake_console', 'Enter the type of object to bake a test for or (q)uit'), $keys, 'q');$/;"	v
tasks	lib/Cake/Console/Command/Task/TestTask.php	/^	public $tasks = array('Template');$/;"	v
testCaseFileName	lib/Cake/Console/Command/Task/TestTask.php	/^	public function testCaseFileName($type, $className) {$/;"	f
testSubject	lib/Cake/Console/Command/Task/TestTask.php	/^			$testSubject = $this->buildTestSubject($type, $className);$/;"	v
thisMethods	lib/Cake/Console/Command/Task/TestTask.php	/^		$thisMethods = array_diff($classMethods, $parentMethods);$/;"	v
type	lib/Cake/Console/Command/Task/TestTask.php	/^			$type = $this->getObjectType();$/;"	v
type	lib/Cake/Console/Command/Task/TestTask.php	/^			$type = Inflector::camelize($type);$/;"	v
type	lib/Cake/Console/Command/Task/TestTask.php	/^			$type = Inflector::classify($this->args[0]);$/;"	v
type	lib/Cake/Console/Command/Task/TestTask.php	/^		$type = $this->classTypes[$type];$/;"	v
type	lib/Cake/Console/Command/Task/TestTask.php	/^		$type = Inflector::camelize($type);$/;"	v
type	lib/Cake/Console/Command/Task/TestTask.php	/^		$type = strtolower($type);$/;"	v
type	lib/Cake/Console/Command/Task/TestTask.php	/^		$type = ucfirst($type);$/;"	v
type	lib/Cake/Console/Command/Task/TestTask.php	/^		$type = ucfirst(strtolower($objectType));$/;"	v
typeCanDetectFixtures	lib/Cake/Console/Command/Task/TestTask.php	/^	public function typeCanDetectFixtures($type) {$/;"	f
typeLength	lib/Cake/Console/Command/Task/TestTask.php	/^		$typeLength = strlen($type);$/;"	v
types	lib/Cake/Console/Command/Task/TestTask.php	/^		$types = array_keys($this->classTypes);$/;"	v
uses	lib/Cake/Console/Command/Task/TestTask.php	/^		$uses = $this->generateUses($type, $realType, $fullClassName);$/;"	v
uses	lib/Cake/Console/Command/Task/TestTask.php	/^		$uses = array();$/;"	v
ViewTask	lib/Cake/Console/Command/Task/ViewTask.php	/^class ViewTask extends BakeTask {$/;"	c
_associations	lib/Cake/Console/Command/Task/ViewTask.php	/^	protected function _associations(Model $model) {$/;"	f
_interactive	lib/Cake/Console/Command/Task/ViewTask.php	/^	protected function _interactive() {$/;"	f
_loadController	lib/Cake/Console/Command/Task/ViewTask.php	/^	protected function _loadController() {$/;"	f
_methodsToBake	lib/Cake/Console/Command/Task/ViewTask.php	/^	protected function _methodsToBake() {$/;"	f
action	lib/Cake/Console/Command/Task/ViewTask.php	/^			$action = $this->args[2];$/;"	v
action	lib/Cake/Console/Command/Task/ViewTask.php	/^			$action = $this->in(__d('cake_console', 'Action Name? (use lowercase_underscored function name)'));$/;"	v
action	lib/Cake/Console/Command/Task/ViewTask.php	/^			$action = $this->template;$/;"	v
action	lib/Cake/Console/Command/Task/ViewTask.php	/^		$action = '';$/;"	v
action	lib/Cake/Console/Command/Task/ViewTask.php	/^		$action = null;$/;"	v
actions	lib/Cake/Console/Command/Task/ViewTask.php	/^					$actions = $this->_methodsToBake();$/;"	v
actions	lib/Cake/Console/Command/Task/ViewTask.php	/^				$actions = $this->scaffoldActions;$/;"	v
actions	lib/Cake/Console/Command/Task/ViewTask.php	/^				$actions = null;$/;"	v
actions	lib/Cake/Console/Command/Task/ViewTask.php	/^			$actions = array($this->args[1]);$/;"	v
actions	lib/Cake/Console/Command/Task/ViewTask.php	/^		$actions = null;$/;"	v
admin	lib/Cake/Console/Command/Task/ViewTask.php	/^				$admin = $this->Project->getPrefix();$/;"	v
adminActions	lib/Cake/Console/Command/Task/ViewTask.php	/^				$adminActions = array();$/;"	v
adminRoute	lib/Cake/Console/Command/Task/ViewTask.php	/^		$adminRoute = $this->Project->getPrefix();$/;"	v
all	lib/Cake/Console/Command/Task/ViewTask.php	/^	public function all() {$/;"	f
associations	lib/Cake/Console/Command/Task/ViewTask.php	/^			$associations = $this->_associations($modelObj);$/;"	v
associations	lib/Cake/Console/Command/Task/ViewTask.php	/^		$associations = array();$/;"	v
bake	lib/Cake/Console/Command/Task/ViewTask.php	/^	public function bake($action, $content = '') {$/;"	f
bakeActions	lib/Cake/Console/Command/Task/ViewTask.php	/^	public function bakeActions($actions, $vars) {$/;"	f
connection	lib/Cake/Console/Command/Task/ViewTask.php	/^			$this->connection = $this->DbConfig->getConfig();$/;"	v
connection	lib/Cake/Console/Command/Task/ViewTask.php	/^			$this->connection = 'default';$/;"	v
content	lib/Cake/Console/Command/Task/ViewTask.php	/^			$content = $this->getContent($action);$/;"	v
content	lib/Cake/Console/Command/Task/ViewTask.php	/^			$content = $this->getContent($action, $vars);$/;"	v
content	lib/Cake/Console/Command/Task/ViewTask.php	/^			$content = $this->getContent($method, $vars);$/;"	v
controllerClassName	lib/Cake/Console/Command/Task/ViewTask.php	/^		$controllerClassName = $this->controllerName . 'Controller';$/;"	v
controllerName	lib/Cake/Console/Command/Task/ViewTask.php	/^			$this->controllerName = $this->_controllerName($model);$/;"	v
controllerName	lib/Cake/Console/Command/Task/ViewTask.php	/^		$this->controllerName = $this->Controller->getName();$/;"	v
controllerName	lib/Cake/Console/Command/Task/ViewTask.php	/^		$this->controllerName = $this->_controllerName($this->args[0]);$/;"	v
controllerName	lib/Cake/Console/Command/Task/ViewTask.php	/^	public $controllerName = null;$/;"	v
controllerObj	lib/Cake/Console/Command/Task/ViewTask.php	/^		$controllerObj = new $controllerClassName();$/;"	v
customAction	lib/Cake/Console/Command/Task/ViewTask.php	/^	public function customAction() {$/;"	f
displayField	lib/Cake/Console/Command/Task/ViewTask.php	/^			$displayField = $modelObj->displayField;$/;"	v
execute	lib/Cake/Console/Command/Task/ViewTask.php	/^	public function execute() {$/;"	f
fields	lib/Cake/Console/Command/Task/ViewTask.php	/^			$fields = $schema = $associations = array();$/;"	v
fields	lib/Cake/Console/Command/Task/ViewTask.php	/^			$fields = array_keys($schema);$/;"	v
file	lib/Cake/Console/Command/Task/ViewTask.php	/^			$file = $controllerClassName . '.php';$/;"	v
filename	lib/Cake/Console/Command/Task/ViewTask.php	/^		$filename = $path . $this->controllerName . DS . Inflector::underscore($action) . '.ctp';$/;"	v
getContent	lib/Cake/Console/Command/Task/ViewTask.php	/^	public function getContent($action, $vars = null) {$/;"	f
getOptionParser	lib/Cake/Console/Command/Task/ViewTask.php	/^	public function getOptionParser() {$/;"	f
getTemplate	lib/Cake/Console/Command/Task/ViewTask.php	/^	public function getTemplate($action) {$/;"	f
initialize	lib/Cake/Console/Command/Task/ViewTask.php	/^	public function initialize() {$/;"	f
interactive	lib/Cake/Console/Command/Task/ViewTask.php	/^			$this->interactive = false;$/;"	v
interactive	lib/Cake/Console/Command/Task/ViewTask.php	/^		$interactive = $this->in($prompt, array('y', 'n'), 'n');$/;"	v
interactive	lib/Cake/Console/Command/Task/ViewTask.php	/^		$this->interactive = false;$/;"	v
keys	lib/Cake/Console/Command/Task/ViewTask.php	/^		$keys = array('belongsTo', 'hasOne', 'hasMany', 'hasAndBelongsToMany');$/;"	v
looksGood	lib/Cake/Console/Command/Task/ViewTask.php	/^		$looksGood = $this->in(__d('cake_console', 'Look okay?'), array('y', 'n'), 'y');$/;"	v
methods	lib/Cake/Console/Command/Task/ViewTask.php	/^			$methods = $this->scaffoldActions;$/;"	v
methods	lib/Cake/Console/Command/Task/ViewTask.php	/^		$methods = $this->_methodsToBake();$/;"	v
methods	lib/Cake/Console/Command/Task/ViewTask.php	/^		$methods = array_diff($/;"	v
model	lib/Cake/Console/Command/Task/ViewTask.php	/^			$model = $this->_modelName($table);$/;"	v
modelClass	lib/Cake/Console/Command/Task/ViewTask.php	/^		$modelClass = $controllerObj->modelClass;$/;"	v
modelObj	lib/Cake/Console/Command/Task/ViewTask.php	/^		$modelObj = $controllerObj->{$controllerObj->modelClass};$/;"	v
noTemplateActions	lib/Cake/Console/Command/Task/ViewTask.php	/^	public $noTemplateActions = array('delete');$/;"	v
parser	lib/Cake/Console/Command/Task/ViewTask.php	/^		$parser = parent::getOptionParser();$/;"	v
path	lib/Cake/Console/Command/Task/ViewTask.php	/^		$path = $this->getPath();$/;"	v
path	lib/Cake/Console/Command/Task/ViewTask.php	/^		$this->path = current(App::path('View'));$/;"	v
path	lib/Cake/Console/Command/Task/ViewTask.php	/^	public $path = null;$/;"	v
plugin	lib/Cake/Console/Command/Task/ViewTask.php	/^			$plugin = $this->plugin . '.';$/;"	v
plugin	lib/Cake/Console/Command/Task/ViewTask.php	/^		$plugin = null;$/;"	v
pluralHumanName	lib/Cake/Console/Command/Task/ViewTask.php	/^		$pluralHumanName = $this->_pluralHumanName($this->controllerName);$/;"	v
pluralVar	lib/Cake/Console/Command/Task/ViewTask.php	/^		$pluralVar = Inflector::variable($this->controllerName);$/;"	v
prefixes	lib/Cake/Console/Command/Task/ViewTask.php	/^		$prefixes = Configure::read('Routing.prefixes');$/;"	v
primaryKey	lib/Cake/Console/Command/Task/ViewTask.php	/^			$primaryKey = $displayField = null;$/;"	v
primaryKey	lib/Cake/Console/Command/Task/ViewTask.php	/^			$primaryKey = $modelObj->primaryKey;$/;"	v
prompt	lib/Cake/Console/Command/Task/ViewTask.php	/^		$prompt = __d('cake_console', "Would you like bake to build your views interactively?\\nWarning: Choosing no will overwrite %s views if it exist.", $this->controllerName);$/;"	v
prompt	lib/Cake/Console/Command/Task/ViewTask.php	/^		$prompt = __d('cake_console', "Would you like to create some CRUD views\\n(index, add, view, edit) for this controller?\\nNOTE: Before doing so, you'll need to create your controller\\nand model classes (including associated models).");$/;"	v
regularActions	lib/Cake/Console/Command/Task/ViewTask.php	/^				$regularActions = $this->scaffoldActions;$/;"	v
scaffoldActions	lib/Cake/Console/Command/Task/ViewTask.php	/^			$scaffoldActions = true;$/;"	v
scaffoldActions	lib/Cake/Console/Command/Task/ViewTask.php	/^		$scaffoldActions = false;$/;"	v
scaffoldActions	lib/Cake/Console/Command/Task/ViewTask.php	/^	public $scaffoldActions = array('index', 'view', 'add', 'edit');$/;"	v
schema	lib/Cake/Console/Command/Task/ViewTask.php	/^			$schema = $modelObj->schema(true);$/;"	v
singularHumanName	lib/Cake/Console/Command/Task/ViewTask.php	/^			$singularHumanName = $this->_singularHumanName($this->controllerName);$/;"	v
singularVar	lib/Cake/Console/Command/Task/ViewTask.php	/^			$singularVar = Inflector::variable($modelClass);$/;"	v
singularVar	lib/Cake/Console/Command/Task/ViewTask.php	/^			$singularVar = Inflector::variable(Inflector::singularize($this->controllerName));$/;"	v
tables	lib/Cake/Console/Command/Task/ViewTask.php	/^		$tables = $this->Controller->listAll($this->connection, false);$/;"	v
tasks	lib/Cake/Console/Command/Task/ViewTask.php	/^	public $tasks = array('Project', 'Controller', 'DbConfig', 'Template');$/;"	v
template	lib/Cake/Console/Command/Task/ViewTask.php	/^				$template = str_replace($prefix . '_', '', $template);$/;"	v
template	lib/Cake/Console/Command/Task/ViewTask.php	/^			$template = 'form';$/;"	v
template	lib/Cake/Console/Command/Task/ViewTask.php	/^			$template = str_replace(array('_add', '_edit'), '_form', $template);$/;"	v
template	lib/Cake/Console/Command/Task/ViewTask.php	/^			$this->template = $this->args[1];$/;"	v
template	lib/Cake/Console/Command/Task/ViewTask.php	/^		$template = $action;$/;"	v
template	lib/Cake/Console/Command/Task/ViewTask.php	/^		$template = $this->getTemplate($action);$/;"	v
template	lib/Cake/Console/Command/Task/ViewTask.php	/^	public $template = null;$/;"	v
themePath	lib/Cake/Console/Command/Task/ViewTask.php	/^		$themePath = $this->Template->getThemePath();$/;"	v
vars	lib/Cake/Console/Command/Task/ViewTask.php	/^				$vars = $this->_loadController();$/;"	v
vars	lib/Cake/Console/Command/Task/ViewTask.php	/^			$vars = $this->_loadController();$/;"	v
vars	lib/Cake/Console/Command/Task/ViewTask.php	/^		$vars = $this->_loadController();$/;"	v
wannaDoAdmin	lib/Cake/Console/Command/Task/ViewTask.php	/^		$wannaDoAdmin = $this->in(__d('cake_console', "Would you like to create the views for admin routing?"), array('y', 'n'), 'n');$/;"	v
wannaDoScaffold	lib/Cake/Console/Command/Task/ViewTask.php	/^		$wannaDoScaffold = $this->in($prompt, array('y', 'n'), 'y');$/;"	v
TestShell	lib/Cake/Console/Command/TestShell.php	/^class TestShell extends Shell {$/;"	c
_dispatcher	lib/Cake/Console/Command/TestShell.php	/^		$this->_dispatcher = new CakeTestSuiteDispatcher();$/;"	v
_dispatcher	lib/Cake/Console/Command/TestShell.php	/^	protected $_dispatcher = null;$/;"	v
_file	lib/Cake/Console/Command/TestShell.php	/^		$_file = realpath($file);$/;"	v
_mapFileToCase	lib/Cake/Console/Command/TestShell.php	/^	protected function _mapFileToCase($file, $category, $throwOnMissingFile = true) {$/;"	f
_mapFileToCategory	lib/Cake/Console/Command/TestShell.php	/^	protected function _mapFileToCategory($file) {$/;"	f
_parseArgs	lib/Cake/Console/Command/TestShell.php	/^	protected function _parseArgs() {$/;"	f
_run	lib/Cake/Console/Command/TestShell.php	/^	protected function _run($runnerArgs, $options = array()) {$/;"	f
_runnerOptions	lib/Cake/Console/Command/TestShell.php	/^	protected function _runnerOptions() {$/;"	f
app	lib/Cake/Console/Command/TestShell.php	/^		$app = $params['app'];$/;"	v
args	lib/Cake/Console/Command/TestShell.php	/^		$args = $this->_parseArgs();$/;"	v
available	lib/Cake/Console/Command/TestShell.php	/^	public function available() {$/;"	f
case	lib/Cake/Console/Command/TestShell.php	/^			$case = str_replace('Test.php', '', $testCase);$/;"	v
cases	lib/Cake/Console/Command/TestShell.php	/^		$cases = array();$/;"	v
category	lib/Cake/Console/Command/TestShell.php	/^			$category = $plugin;$/;"	v
category	lib/Cake/Console/Command/TestShell.php	/^			$category = $this->_mapFileToCategory($this->args[0]);$/;"	v
category	lib/Cake/Console/Command/TestShell.php	/^			$category = $this->args[0];$/;"	v
category	lib/Cake/Console/Command/TestShell.php	/^			$category = 'app';$/;"	v
category	lib/Cake/Console/Command/TestShell.php	/^		$category = 'core';$/;"	v
file	lib/Cake/Console/Command/TestShell.php	/^			$file = $_file;$/;"	v
file	lib/Cake/Console/Command/TestShell.php	/^		$file = str_replace(DS, '\/', $file);$/;"	v
file	lib/Cake/Console/Command/TestShell.php	/^		$file = substr($file, 0, -4);$/;"	v
getOptionParser	lib/Cake/Console/Command/TestShell.php	/^	public function getOptionParser() {$/;"	f
i	lib/Cake/Console/Command/TestShell.php	/^		$i = 1;$/;"	v
initialize	lib/Cake/Console/Command/TestShell.php	/^	public function initialize() {$/;"	f
main	lib/Cake/Console/Command/TestShell.php	/^	public function main() {$/;"	f
options	lib/Cake/Console/Command/TestShell.php	/^		$options = array();$/;"	v
params	lib/Cake/Console/Command/TestShell.php	/^		$params = $this->_parseArgs();$/;"	v
params	lib/Cake/Console/Command/TestShell.php	/^		$params = $this->params;$/;"	v
params	lib/Cake/Console/Command/TestShell.php	/^		$params = array($/;"	v
parser	lib/Cake/Console/Command/TestShell.php	/^		$parser = new ConsoleOptionParser($this->name);$/;"	v
plugin	lib/Cake/Console/Command/TestShell.php	/^		$plugin = $params['plugin'];$/;"	v
success	lib/Cake/Console/Command/TestShell.php	/^		$success = $this->_dispatcher->loadTestFramework();$/;"	v
testCase	lib/Cake/Console/Command/TestShell.php	/^						$testCase = str_replace('lib\/Cake', '', $testCase);$/;"	v
testCase	lib/Cake/Console/Command/TestShell.php	/^				$testCase = str_replace(DS, '\/', $testCase);$/;"	v
testCase	lib/Cake/Console/Command/TestShell.php	/^				$testCase = substr($file, 0, -8);$/;"	v
testCase	lib/Cake/Console/Command/TestShell.php	/^			$testCase = preg_replace('@.*lib\/Cake\/@', '', $file);$/;"	v
testCase	lib/Cake/Console/Command/TestShell.php	/^			$testCase = str_replace(DS, '\/', $file);$/;"	v
testCase	lib/Cake/Console/Command/TestShell.php	/^		$testCase = preg_replace('@.*Test\/Case\/@', '', $testCase);$/;"	v
testCase	lib/Cake/Console/Command/TestShell.php	/^		$testCase = str_replace(DS, '\/', $testCase);$/;"	v
testCase	lib/Cake/Console/Command/TestShell.php	/^		$testCase = substr($testFile, 0, -8);$/;"	v
testCases	lib/Cake/Console/Command/TestShell.php	/^		$testCases = CakeTestLoader::generateTestList($params);$/;"	v
testCli	lib/Cake/Console/Command/TestShell.php	/^		$testCli = new CakeTestSuiteCommand('CakeTestLoader', $runnerArgs);$/;"	v
testFile	lib/Cake/Console/Command/TestShell.php	/^			$testFile = CAKE . 'Test\/Case\/' . $testCase . 'Test.php';$/;"	v
testFile	lib/Cake/Console/Command/TestShell.php	/^			$testFile = preg_replace($/;"	v
testFile	lib/Cake/Console/Command/TestShell.php	/^			$testFile = str_replace(APP, APP . 'Test\/Case\/', $file) . 'Test.php';$/;"	v
testFile	lib/Cake/Console/Command/TestShell.php	/^		$testFile = $testCase = null;$/;"	v
title	lib/Cake/Console/Command/TestShell.php	/^			$title = "App Test Cases:";$/;"	v
title	lib/Cake/Console/Command/TestShell.php	/^			$title = Inflector::humanize($plugin) . " Test Cases:";$/;"	v
title	lib/Cake/Console/Command/TestShell.php	/^		$title = "Core Test Cases:";$/;"	v
TestsuiteShell	lib/Cake/Console/Command/TestsuiteShell.php	/^class TestsuiteShell extends TestShell {$/;"	c
_parseArgs	lib/Cake/Console/Command/TestsuiteShell.php	/^	protected function _parseArgs() {$/;"	f
args	lib/Cake/Console/Command/TestsuiteShell.php	/^		$args = $this->_parseArgs();$/;"	v
category	lib/Cake/Console/Command/TestsuiteShell.php	/^		$category = $this->args[0];$/;"	v
getOptionParser	lib/Cake/Console/Command/TestsuiteShell.php	/^	public function getOptionParser() {$/;"	f
main	lib/Cake/Console/Command/TestsuiteShell.php	/^	public function main() {$/;"	f
params	lib/Cake/Console/Command/TestsuiteShell.php	/^		$params = array($/;"	v
parser	lib/Cake/Console/Command/TestsuiteShell.php	/^		$parser = parent::getOptionParser();$/;"	v
Folder	lib/Cake/Console/Command/UpgradeShell.php	/^						$Folder = new Folder($old);$/;"	v
Folder	lib/Cake/Console/Command/UpgradeShell.php	/^					$Folder = new Folder($old);$/;"	v
Folder	lib/Cake/Console/Command/UpgradeShell.php	/^			$Folder = new Folder('plugins');$/;"	v
Iterator	lib/Cake/Console/Command/UpgradeShell.php	/^			$Iterator = new RegexIterator($/;"	v
UpgradeShell	lib/Cake/Console/Command/UpgradeShell.php	/^class UpgradeShell extends AppShell {$/;"	c
_files	lib/Cake/Console/Command/UpgradeShell.php	/^			$this->_files = array();$/;"	v
_files	lib/Cake/Console/Command/UpgradeShell.php	/^			$this->_files = scandir($path);$/;"	v
_files	lib/Cake/Console/Command/UpgradeShell.php	/^		$this->_files = array();$/;"	v
_files	lib/Cake/Console/Command/UpgradeShell.php	/^	protected $_files = array();$/;"	v
_filesRegexpUpdate	lib/Cake/Console/Command/UpgradeShell.php	/^	protected function _filesRegexpUpdate($patterns) {$/;"	f
_findFiles	lib/Cake/Console/Command/UpgradeShell.php	/^	protected function _findFiles($extensions = '') {$/;"	f
_map	lib/Cake/Console/Command/UpgradeShell.php	/^	protected $_map = array($/;"	v
_moveAppClasses	lib/Cake/Console/Command/UpgradeShell.php	/^	protected function _moveAppClasses() {$/;"	f
_movePhpFiles	lib/Cake/Console/Command/UpgradeShell.php	/^	protected function _movePhpFiles($path, $options) {$/;"	f
_moveViewFiles	lib/Cake/Console/Command/UpgradeShell.php	/^	protected function _moveViewFiles() {$/;"	f
_paths	lib/Cake/Console/Command/UpgradeShell.php	/^			$this->_paths = App::Path('Controller', $this->params['plugin']);$/;"	v
_paths	lib/Cake/Console/Command/UpgradeShell.php	/^			$this->_paths = App::Path('Controller\/Component', $this->params['plugin']);$/;"	v
_paths	lib/Cake/Console/Command/UpgradeShell.php	/^			$this->_paths = array($/;"	v
_paths	lib/Cake/Console/Command/UpgradeShell.php	/^			$this->_paths = array(App::pluginPath($this->params['plugin']) . 'tests' . DS);$/;"	v
_paths	lib/Cake/Console/Command/UpgradeShell.php	/^			$this->_paths = array(App::pluginPath($this->params['plugin']) . 'views' . DS);$/;"	v
_paths	lib/Cake/Console/Command/UpgradeShell.php	/^			$this->_paths = array(App::pluginPath($this->params['plugin']));$/;"	v
_paths	lib/Cake/Console/Command/UpgradeShell.php	/^		$this->_paths = $paths;$/;"	v
_paths	lib/Cake/Console/Command/UpgradeShell.php	/^		$this->_paths = App::Path('Controller');$/;"	v
_paths	lib/Cake/Console/Command/UpgradeShell.php	/^		$this->_paths = App::Path('Controller\/Component');$/;"	v
_paths	lib/Cake/Console/Command/UpgradeShell.php	/^		$this->_paths = array($/;"	v
_paths	lib/Cake/Console/Command/UpgradeShell.php	/^		$this->_paths = array($path);$/;"	v
_paths	lib/Cake/Console/Command/UpgradeShell.php	/^		$this->_paths = array(APP . 'tests' . DS);$/;"	v
_paths	lib/Cake/Console/Command/UpgradeShell.php	/^		$this->_paths = array_diff(App::path('views'), App::core('views'));$/;"	v
_paths	lib/Cake/Console/Command/UpgradeShell.php	/^		$this->_paths = array_merge($controllers, $components);$/;"	v
_paths	lib/Cake/Console/Command/UpgradeShell.php	/^		$this->_paths = array_merge($views, $controllers, $components);$/;"	v
_paths	lib/Cake/Console/Command/UpgradeShell.php	/^	protected $_paths = array();$/;"	v
_updateFile	lib/Cake/Console/Command/UpgradeShell.php	/^	protected function _updateFile($file, $patterns) {$/;"	f
all	lib/Cake/Console/Command/UpgradeShell.php	/^	public function all() {$/;"	f
base	lib/Cake/Console/Command/UpgradeShell.php	/^				$base = $match[0];$/;"	v
base	lib/Cake/Console/Command/UpgradeShell.php	/^			$base = $cwd . DS;$/;"	v
basics	lib/Cake/Console/Command/UpgradeShell.php	/^	public function basics() {$/;"	f
class	lib/Cake/Console/Command/UpgradeShell.php	/^			$class = $match[1];$/;"	v
components	lib/Cake/Console/Command/UpgradeShell.php	/^		$components = array_diff(App::path('components'), App::core('components'));$/;"	v
components	lib/Cake/Console/Command/UpgradeShell.php	/^	public function components() {$/;"	f
configure	lib/Cake/Console/Command/UpgradeShell.php	/^	public function configure() {$/;"	f
constants	lib/Cake/Console/Command/UpgradeShell.php	/^	public function constants() {$/;"	f
contents	lib/Cake/Console/Command/UpgradeShell.php	/^			$contents = file_get_contents($file);$/;"	v
contents	lib/Cake/Console/Command/UpgradeShell.php	/^			$contents = preg_replace($pattern[1], $pattern[2], $contents);$/;"	v
contents	lib/Cake/Console/Command/UpgradeShell.php	/^		$contents = file_get_contents($file);$/;"	v
controller_redirects	lib/Cake/Console/Command/UpgradeShell.php	/^	public function controller_redirects() {$/;"	f
controllers	lib/Cake/Console/Command/UpgradeShell.php	/^		$controllers = array_diff(App::path('controllers'), App::core('controllers'), array(APP));$/;"	v
cwd	lib/Cake/Console/Command/UpgradeShell.php	/^		$cwd = getcwd();$/;"	v
defaultOptions	lib/Cake/Console/Command/UpgradeShell.php	/^		$defaultOptions = array($/;"	v
dir	lib/Cake/Console/Command/UpgradeShell.php	/^				$dir = $options;$/;"	v
dir	lib/Cake/Console/Command/UpgradeShell.php	/^			$dir = dirname($new);$/;"	v
dirs	lib/Cake/Console/Command/UpgradeShell.php	/^		$dirs = scandir('View');$/;"	v
exceptions	lib/Cake/Console/Command/UpgradeShell.php	/^	public function exceptions() {$/;"	f
file	lib/Cake/Console/Command/UpgradeShell.php	/^			$file = $cwd . DS . $file;$/;"	v
files	lib/Cake/Console/Command/UpgradeShell.php	/^		$files = array($/;"	v
folder	lib/Cake/Console/Command/UpgradeShell.php	/^				$folder = str_replace('\/', DS, $this->_map[$type]);$/;"	v
getOptionParser	lib/Cake/Console/Command/UpgradeShell.php	/^	public function getOptionParser() {$/;"	f
helper	lib/Cake/Console/Command/UpgradeShell.php	/^			$helper = preg_replace('\/Helper$\/', '', $helper);$/;"	v
helpers	lib/Cake/Console/Command/UpgradeShell.php	/^		$helpers = App::objects('helper');$/;"	v
helpers	lib/Cake/Console/Command/UpgradeShell.php	/^		$helpers = array_merge($pluginHelpers, $helpers);$/;"	v
helpers	lib/Cake/Console/Command/UpgradeShell.php	/^	public function helpers() {$/;"	f
i18n	lib/Cake/Console/Command/UpgradeShell.php	/^	public function i18n() {$/;"	f
locations	lib/Cake/Console/Command/UpgradeShell.php	/^	public function locations() {$/;"	f
moves	lib/Cake/Console/Command/UpgradeShell.php	/^		$moves = array($/;"	v
name	lib/Cake/Console/Command/UpgradeShell.php	/^			$name = $command->name();$/;"	v
new	lib/Cake/Console/Command/UpgradeShell.php	/^				$new = $base . $folder . DS . $class . '.php';$/;"	v
new	lib/Cake/Console/Command/UpgradeShell.php	/^				$new = dirname($file) . DS . $class . '.php';$/;"	v
new	lib/Cake/Console/Command/UpgradeShell.php	/^			$new = 'View' . DS . Inflector::camelize($old);$/;"	v
old	lib/Cake/Console/Command/UpgradeShell.php	/^			$old = 'View' . DS . $old;$/;"	v
oldHelper	lib/Cake/Console/Command/UpgradeShell.php	/^			$oldHelper = $helper;$/;"	v
options	lib/Cake/Console/Command/UpgradeShell.php	/^				$options = array();$/;"	v
parser	lib/Cake/Console/Command/UpgradeShell.php	/^		$parser = parent::getOptionParser();$/;"	v
paths	lib/Cake/Console/Command/UpgradeShell.php	/^		$paths = $this->_paths;$/;"	v
patterns	lib/Cake/Console/Command/UpgradeShell.php	/^		$patterns = array($/;"	v
patterns	lib/Cake/Console/Command/UpgradeShell.php	/^		$patterns = array();$/;"	v
plugin	lib/Cake/Console/Command/UpgradeShell.php	/^				$plugin = $match[1];$/;"	v
plugin	lib/Cake/Console/Command/UpgradeShell.php	/^			$plugin = false;$/;"	v
pluginHelpers	lib/Cake/Console/Command/UpgradeShell.php	/^			$pluginHelpers = array_merge($/;"	v
pluginHelpers	lib/Cake/Console/Command/UpgradeShell.php	/^		$pluginHelpers = array();$/;"	v
pluginPath	lib/Cake/Console/Command/UpgradeShell.php	/^			$pluginPath = App::pluginPath($this->params['plugin']);$/;"	v
plugins	lib/Cake/Console/Command/UpgradeShell.php	/^		$plugins = App::objects('plugin');$/;"	v
request	lib/Cake/Console/Command/UpgradeShell.php	/^	public function request() {$/;"	f
sourceDirs	lib/Cake/Console/Command/UpgradeShell.php	/^		$sourceDirs = array($/;"	v
startup	lib/Cake/Console/Command/UpgradeShell.php	/^	public function startup() {$/;"	f
subcommandParser	lib/Cake/Console/Command/UpgradeShell.php	/^		$subcommandParser = array($/;"	v
tests	lib/Cake/Console/Command/UpgradeShell.php	/^	public function tests() {$/;"	f
type	lib/Cake/Console/Command/UpgradeShell.php	/^					$type = $match[1];$/;"	v
type	lib/Cake/Console/Command/UpgradeShell.php	/^					$type = 'unknown';$/;"	v
type	lib/Cake/Console/Command/UpgradeShell.php	/^				$type = 'Dbo';$/;"	v
views	lib/Cake/Console/Command/UpgradeShell.php	/^		$views = array_diff(App::path('views'), App::core('views'));$/;"	v
ConsoleErrorHandler	lib/Cake/Console/ConsoleErrorHandler.php	/^class ConsoleErrorHandler {$/;"	c
_stop	lib/Cake/Console/ConsoleErrorHandler.php	/^	protected function _stop($code = 0) {$/;"	f
getStderr	lib/Cake/Console/ConsoleErrorHandler.php	/^	public static function getStderr() {$/;"	f
handleError	lib/Cake/Console/ConsoleErrorHandler.php	/^	public function handleError($code, $description, $file = null, $line = null, $context = null) {$/;"	f
handleException	lib/Cake/Console/ConsoleErrorHandler.php	/^	public function handleException(Exception $exception) {$/;"	f
message	lib/Cake/Console/ConsoleErrorHandler.php	/^		$message = __d('cake_console', '%s in [%s, line %s]', $description, $file, $line);$/;"	v
stderr	lib/Cake/Console/ConsoleErrorHandler.php	/^		$stderr = self::getStderr();$/;"	v
stderr	lib/Cake/Console/ConsoleErrorHandler.php	/^	public static $stderr;$/;"	v
ConsoleInput	lib/Cake/Console/ConsoleInput.php	/^class ConsoleInput {$/;"	c
__construct	lib/Cake/Console/ConsoleInput.php	/^	public function __construct($handle = 'php:\/\/stdin') {$/;"	f
_canReadline	lib/Cake/Console/ConsoleInput.php	/^		$this->_canReadline = extension_loaded('readline') && $handle === 'php:\/\/stdin' ? true : false;$/;"	v
_canReadline	lib/Cake/Console/ConsoleInput.php	/^	protected $_canReadline;$/;"	v
_input	lib/Cake/Console/ConsoleInput.php	/^		$this->_input = fopen($handle, 'r');$/;"	v
_input	lib/Cake/Console/ConsoleInput.php	/^	protected $_input;$/;"	v
dataAvailable	lib/Cake/Console/ConsoleInput.php	/^	public function dataAvailable($timeout = 0) {$/;"	f
line	lib/Cake/Console/ConsoleInput.php	/^			$line = readline('');$/;"	v
read	lib/Cake/Console/ConsoleInput.php	/^	public function read() {$/;"	f
readFds	lib/Cake/Console/ConsoleInput.php	/^		$readFds = array($this->_input);$/;"	v
readyFds	lib/Cake/Console/ConsoleInput.php	/^		$readyFds = stream_select($readFds, $writeFds, $errorFds, $timeout);$/;"	v
ConsoleInputArgument	lib/Cake/Console/ConsoleInputArgument.php	/^class ConsoleInputArgument {$/;"	c
__construct	lib/Cake/Console/ConsoleInputArgument.php	/^	public function __construct($name, $help = '', $required = false, $choices = array()) {$/;"	f
_choices	lib/Cake/Console/ConsoleInputArgument.php	/^			$this->_choices = $choices;$/;"	v
_choices	lib/Cake/Console/ConsoleInputArgument.php	/^	protected $_choices;$/;"	v
_help	lib/Cake/Console/ConsoleInputArgument.php	/^			$this->_help = $help;$/;"	v
_help	lib/Cake/Console/ConsoleInputArgument.php	/^	protected $_help;$/;"	v
_name	lib/Cake/Console/ConsoleInputArgument.php	/^			$this->_name = $name;$/;"	v
_name	lib/Cake/Console/ConsoleInputArgument.php	/^	protected $_name;$/;"	v
_required	lib/Cake/Console/ConsoleInputArgument.php	/^			$this->_required = $required;$/;"	v
_required	lib/Cake/Console/ConsoleInputArgument.php	/^	protected $_required;$/;"	v
choices	lib/Cake/Console/ConsoleInputArgument.php	/^		$choices = $option->addChild('choices');$/;"	v
help	lib/Cake/Console/ConsoleInputArgument.php	/^	public function help($width = 0) {$/;"	f
isRequired	lib/Cake/Console/ConsoleInputArgument.php	/^	public function isRequired() {$/;"	f
name	lib/Cake/Console/ConsoleInputArgument.php	/^			$name = '[' . $name . ']';$/;"	v
name	lib/Cake/Console/ConsoleInputArgument.php	/^			$name = implode('|', $this->_choices);$/;"	v
name	lib/Cake/Console/ConsoleInputArgument.php	/^			$name = str_pad($name, $width, ' ');$/;"	v
name	lib/Cake/Console/ConsoleInputArgument.php	/^		$name = $this->_name;$/;"	v
name	lib/Cake/Console/ConsoleInputArgument.php	/^		$name = '<' . $name . '>';$/;"	v
name	lib/Cake/Console/ConsoleInputArgument.php	/^	public function name() {$/;"	f
option	lib/Cake/Console/ConsoleInputArgument.php	/^		$option = $parent->addChild('argument');$/;"	v
optional	lib/Cake/Console/ConsoleInputArgument.php	/^			$optional = __d('cake_console', ' <comment>(optional)<\/comment>');$/;"	v
optional	lib/Cake/Console/ConsoleInputArgument.php	/^		$optional = '';$/;"	v
usage	lib/Cake/Console/ConsoleInputArgument.php	/^	public function usage() {$/;"	f
validChoice	lib/Cake/Console/ConsoleInputArgument.php	/^	public function validChoice($value) {$/;"	f
xml	lib/Cake/Console/ConsoleInputArgument.php	/^	public function xml(SimpleXmlElement $parent) {$/;"	f
ConsoleInputOption	lib/Cake/Console/ConsoleInputOption.php	/^class ConsoleInputOption {$/;"	c
__construct	lib/Cake/Console/ConsoleInputOption.php	/^	public function __construct($name, $short = null, $help = '', $boolean = false, $default = '', $choices = array()) {$/;"	f
_boolean	lib/Cake/Console/ConsoleInputOption.php	/^			$this->_boolean = $boolean;$/;"	v
_boolean	lib/Cake/Console/ConsoleInputOption.php	/^	protected $_boolean;$/;"	v
_choices	lib/Cake/Console/ConsoleInputOption.php	/^			$this->_choices = $choices;$/;"	v
_choices	lib/Cake/Console/ConsoleInputOption.php	/^	protected $_choices;$/;"	v
_default	lib/Cake/Console/ConsoleInputOption.php	/^			$this->_default = $default;$/;"	v
_default	lib/Cake/Console/ConsoleInputOption.php	/^	protected $_default;$/;"	v
_help	lib/Cake/Console/ConsoleInputOption.php	/^			$this->_help = $help;$/;"	v
_help	lib/Cake/Console/ConsoleInputOption.php	/^	protected $_help;$/;"	v
_name	lib/Cake/Console/ConsoleInputOption.php	/^			$this->_name = $name;$/;"	v
_name	lib/Cake/Console/ConsoleInputOption.php	/^	protected $_name;$/;"	v
_short	lib/Cake/Console/ConsoleInputOption.php	/^			$this->_short = $short;$/;"	v
_short	lib/Cake/Console/ConsoleInputOption.php	/^	protected $_short;$/;"	v
choices	lib/Cake/Console/ConsoleInputOption.php	/^		$choices = $option->addChild('choices');$/;"	v
default	lib/Cake/Console/ConsoleInputOption.php	/^			$default = ' ' . $this->_default;$/;"	v
default	lib/Cake/Console/ConsoleInputOption.php	/^			$default = ' ' . implode('|', $this->_choices);$/;"	v
default	lib/Cake/Console/ConsoleInputOption.php	/^			$default = __d('cake_console', ' <comment>(default: %s)<\/comment>', $this->_default);$/;"	v
default	lib/Cake/Console/ConsoleInputOption.php	/^		$default = $short = '';$/;"	v
default	lib/Cake/Console/ConsoleInputOption.php	/^		$default = '';$/;"	v
defaultValue	lib/Cake/Console/ConsoleInputOption.php	/^	public function defaultValue() {$/;"	f
help	lib/Cake/Console/ConsoleInputOption.php	/^	public function help($width = 0) {$/;"	f
isBoolean	lib/Cake/Console/ConsoleInputOption.php	/^	public function isBoolean() {$/;"	f
name	lib/Cake/Console/ConsoleInputOption.php	/^			$name = str_pad($name, $width, ' ');$/;"	v
name	lib/Cake/Console/ConsoleInputOption.php	/^		$name = empty($this->_short) ? '--' . $this->_name : '-' . $this->_short;$/;"	v
name	lib/Cake/Console/ConsoleInputOption.php	/^		$name = sprintf('--%s%s', $this->_name, $short);$/;"	v
name	lib/Cake/Console/ConsoleInputOption.php	/^	public function name() {$/;"	f
option	lib/Cake/Console/ConsoleInputOption.php	/^		$option = $parent->addChild('option');$/;"	v
short	lib/Cake/Console/ConsoleInputOption.php	/^			$short = $this->_short;$/;"	v
short	lib/Cake/Console/ConsoleInputOption.php	/^			$short = ', -' . $this->_short;$/;"	v
short	lib/Cake/Console/ConsoleInputOption.php	/^		$short = '';$/;"	v
short	lib/Cake/Console/ConsoleInputOption.php	/^	public function short() {$/;"	f
usage	lib/Cake/Console/ConsoleInputOption.php	/^	public function usage() {$/;"	f
validChoice	lib/Cake/Console/ConsoleInputOption.php	/^	public function validChoice($value) {$/;"	f
xml	lib/Cake/Console/ConsoleInputOption.php	/^	public function xml(SimpleXmlElement $parent) {$/;"	f
ConsoleInputSubcommand	lib/Cake/Console/ConsoleInputSubcommand.php	/^class ConsoleInputSubcommand {$/;"	c
__construct	lib/Cake/Console/ConsoleInputSubcommand.php	/^	public function __construct($name, $help = '', $parser = null) {$/;"	f
_help	lib/Cake/Console/ConsoleInputSubcommand.php	/^			$this->_help = $help;$/;"	v
_help	lib/Cake/Console/ConsoleInputSubcommand.php	/^	protected $_help;$/;"	v
_name	lib/Cake/Console/ConsoleInputSubcommand.php	/^			$this->_name = $name;$/;"	v
_name	lib/Cake/Console/ConsoleInputSubcommand.php	/^	protected $_name;$/;"	v
_parser	lib/Cake/Console/ConsoleInputSubcommand.php	/^			$this->_parser = $parser;$/;"	v
_parser	lib/Cake/Console/ConsoleInputSubcommand.php	/^			$this->_parser = ConsoleOptionParser::buildFromArray($this->_parser);$/;"	v
_parser	lib/Cake/Console/ConsoleInputSubcommand.php	/^	protected $_parser;$/;"	v
command	lib/Cake/Console/ConsoleInputSubcommand.php	/^		$command = $parent->addChild('command');$/;"	v
help	lib/Cake/Console/ConsoleInputSubcommand.php	/^	public function help($width = 0) {$/;"	f
name	lib/Cake/Console/ConsoleInputSubcommand.php	/^			$name = str_pad($name, $width, ' ');$/;"	v
name	lib/Cake/Console/ConsoleInputSubcommand.php	/^		$name = $this->_name;$/;"	v
name	lib/Cake/Console/ConsoleInputSubcommand.php	/^	public function name() {$/;"	f
parser	lib/Cake/Console/ConsoleInputSubcommand.php	/^	public function parser() {$/;"	f
xml	lib/Cake/Console/ConsoleInputSubcommand.php	/^	public function xml(SimpleXmlElement $parent) {$/;"	f
ConsoleOptionParser	lib/Cake/Console/ConsoleOptionParser.php	/^class ConsoleOptionParser {$/;"	c
__construct	lib/Cake/Console/ConsoleOptionParser.php	/^	public function __construct($command = null, $defaultOptions = true) {$/;"	f
_args	lib/Cake/Console/ConsoleOptionParser.php	/^	protected $_args = array();$/;"	v
_command	lib/Cake/Console/ConsoleOptionParser.php	/^			$this->_command = Inflector::underscore($text);$/;"	v
_command	lib/Cake/Console/ConsoleOptionParser.php	/^	protected $_command = '';$/;"	v
_description	lib/Cake/Console/ConsoleOptionParser.php	/^			$this->_description = $text;$/;"	v
_description	lib/Cake/Console/ConsoleOptionParser.php	/^	protected $_description = null;$/;"	v
_epilog	lib/Cake/Console/ConsoleOptionParser.php	/^			$this->_epilog = $text;$/;"	v
_epilog	lib/Cake/Console/ConsoleOptionParser.php	/^	protected $_epilog = null;$/;"	v
_nextToken	lib/Cake/Console/ConsoleOptionParser.php	/^	protected function _nextToken() {$/;"	f
_optionExists	lib/Cake/Console/ConsoleOptionParser.php	/^	protected function _optionExists($name) {$/;"	f
_options	lib/Cake/Console/ConsoleOptionParser.php	/^	protected $_options = array();$/;"	v
_parseArg	lib/Cake/Console/ConsoleOptionParser.php	/^	protected function _parseArg($argument, $args) {$/;"	f
_parseLongOption	lib/Cake/Console/ConsoleOptionParser.php	/^	protected function _parseLongOption($option, $params) {$/;"	f
_parseOption	lib/Cake/Console/ConsoleOptionParser.php	/^	protected function _parseOption($name, $params) {$/;"	f
_parseShortOption	lib/Cake/Console/ConsoleOptionParser.php	/^	protected function _parseShortOption($option, $params) {$/;"	f
_shortOptions	lib/Cake/Console/ConsoleOptionParser.php	/^	protected $_shortOptions = array();$/;"	v
_subcommands	lib/Cake/Console/ConsoleOptionParser.php	/^	protected $_subcommands = array();$/;"	v
_tokens	lib/Cake/Console/ConsoleOptionParser.php	/^		$this->_tokens = $argv;$/;"	v
addArgument	lib/Cake/Console/ConsoleOptionParser.php	/^	public function addArgument($name, $params = array()) {$/;"	f
addArguments	lib/Cake/Console/ConsoleOptionParser.php	/^	public function addArguments(array $args) {$/;"	f
addOption	lib/Cake/Console/ConsoleOptionParser.php	/^	public function addOption($name, $options = array()) {$/;"	f
addOptions	lib/Cake/Console/ConsoleOptionParser.php	/^	public function addOptions(array $options) {$/;"	f
addSubcommand	lib/Cake/Console/ConsoleOptionParser.php	/^	public function addSubcommand($name, $options = array()) {$/;"	f
addSubcommands	lib/Cake/Console/ConsoleOptionParser.php	/^	public function addSubcommands(array $commands) {$/;"	f
arg	lib/Cake/Console/ConsoleOptionParser.php	/^			$arg = $name;$/;"	v
arg	lib/Cake/Console/ConsoleOptionParser.php	/^			$arg = new ConsoleInputArgument($options);$/;"	v
args	lib/Cake/Console/ConsoleOptionParser.php	/^				$args = $this->_parseArg($token, $args);$/;"	v
arguments	lib/Cake/Console/ConsoleOptionParser.php	/^	public function arguments() {$/;"	f
buildFromArray	lib/Cake/Console/ConsoleOptionParser.php	/^	public static function buildFromArray($spec) {$/;"	f
command	lib/Cake/Console/ConsoleOptionParser.php	/^			$command = $name;$/;"	v
command	lib/Cake/Console/ConsoleOptionParser.php	/^			$command = new ConsoleInputSubcommand($options);$/;"	v
command	lib/Cake/Console/ConsoleOptionParser.php	/^	public function command($text = null) {$/;"	f
create	lib/Cake/Console/ConsoleOptionParser.php	/^	public static function create($command, $defaultOptions = true) {$/;"	f
default	lib/Cake/Console/ConsoleOptionParser.php	/^			$default = $option->defaultValue();$/;"	v
defaults	lib/Cake/Console/ConsoleOptionParser.php	/^			$defaults = array($/;"	v
description	lib/Cake/Console/ConsoleOptionParser.php	/^	public function description($text = null) {$/;"	f
emptyNextValue	lib/Cake/Console/ConsoleOptionParser.php	/^		$emptyNextValue = (empty($nextValue) && $nextValue !== '0');$/;"	v
epilog	lib/Cake/Console/ConsoleOptionParser.php	/^	public function epilog($text = null) {$/;"	f
flags	lib/Cake/Console/ConsoleOptionParser.php	/^			$flags = str_split($key);$/;"	v
formatter	lib/Cake/Console/ConsoleOptionParser.php	/^		$formatter = new HelpFormatter($this);$/;"	v
help	lib/Cake/Console/ConsoleOptionParser.php	/^	public function help($subcommand = null, $format = 'text', $width = 72) {$/;"	f
index	lib/Cake/Console/ConsoleOptionParser.php	/^			$index = $options['index'];$/;"	v
index	lib/Cake/Console/ConsoleOptionParser.php	/^			$index = count($this->_args);$/;"	v
isBoolean	lib/Cake/Console/ConsoleOptionParser.php	/^			$isBoolean = $option->isBoolean();$/;"	v
isBoolean	lib/Cake/Console/ConsoleOptionParser.php	/^		$isBoolean = $option->isBoolean();$/;"	v
key	lib/Cake/Console/ConsoleOptionParser.php	/^			$key = $flags[0];$/;"	v
key	lib/Cake/Console/ConsoleOptionParser.php	/^		$key = substr($option, 1);$/;"	v
name	lib/Cake/Console/ConsoleOptionParser.php	/^			$name = $command->name();$/;"	v
name	lib/Cake/Console/ConsoleOptionParser.php	/^			$name = $option->name();$/;"	v
name	lib/Cake/Console/ConsoleOptionParser.php	/^		$name = $this->_shortOptions[$key];$/;"	v
name	lib/Cake/Console/ConsoleOptionParser.php	/^		$name = substr($option, 2);$/;"	v
next	lib/Cake/Console/ConsoleOptionParser.php	/^		$next = count($args);$/;"	v
nextValue	lib/Cake/Console/ConsoleOptionParser.php	/^		$nextValue = $this->_nextToken();$/;"	v
option	lib/Cake/Console/ConsoleOptionParser.php	/^			$option = $name;$/;"	v
option	lib/Cake/Console/ConsoleOptionParser.php	/^			$option = new ConsoleInputOption($options);$/;"	v
option	lib/Cake/Console/ConsoleOptionParser.php	/^		$option = $this->_options[$name];$/;"	v
options	lib/Cake/Console/ConsoleOptionParser.php	/^			$options = $params + $defaults;$/;"	v
options	lib/Cake/Console/ConsoleOptionParser.php	/^	public function options() {$/;"	f
params	lib/Cake/Console/ConsoleOptionParser.php	/^				$params = $this->_parseLongOption($token, $params);$/;"	v
params	lib/Cake/Console/ConsoleOptionParser.php	/^				$params = $this->_parseShortOption($token, $params);$/;"	v
params	lib/Cake/Console/ConsoleOptionParser.php	/^		$params = $args = array();$/;"	v
parse	lib/Cake/Console/ConsoleOptionParser.php	/^	public function parse($argv, $command = null) {$/;"	f
parser	lib/Cake/Console/ConsoleOptionParser.php	/^		$parser = new ConsoleOptionParser($spec['command']);$/;"	v
subcommands	lib/Cake/Console/ConsoleOptionParser.php	/^	public function subcommands() {$/;"	f
subparser	lib/Cake/Console/ConsoleOptionParser.php	/^			$subparser = $this->_subcommands[$subcommand]->parser();$/;"	v
text	lib/Cake/Console/ConsoleOptionParser.php	/^				$text = implode("\\n", $text);$/;"	v
value	lib/Cake/Console/ConsoleOptionParser.php	/^			$value = $nextValue;$/;"	v
value	lib/Cake/Console/ConsoleOptionParser.php	/^			$value = $option->defaultValue();$/;"	v
value	lib/Cake/Console/ConsoleOptionParser.php	/^			$value = true;$/;"	v
ConsoleOutput	lib/Cake/Console/ConsoleOutput.php	/^class ConsoleOutput {$/;"	c
__construct	lib/Cake/Console/ConsoleOutput.php	/^	public function __construct($stream = 'php:\/\/stdout') {$/;"	f
__destruct	lib/Cake/Console/ConsoleOutput.php	/^	public function __destruct() {$/;"	f
_backgroundColors	lib/Cake/Console/ConsoleOutput.php	/^	protected static $_backgroundColors = array($/;"	v
_foregroundColors	lib/Cake/Console/ConsoleOutput.php	/^	protected static $_foregroundColors = array($/;"	v
_options	lib/Cake/Console/ConsoleOutput.php	/^	protected static $_options = array($/;"	v
_output	lib/Cake/Console/ConsoleOutput.php	/^		$this->_output = fopen($stream, 'w');$/;"	v
_output	lib/Cake/Console/ConsoleOutput.php	/^	protected $_output;$/;"	v
_outputAs	lib/Cake/Console/ConsoleOutput.php	/^			$this->_outputAs = self::PLAIN;$/;"	v
_outputAs	lib/Cake/Console/ConsoleOutput.php	/^		$this->_outputAs = $type;$/;"	v
_outputAs	lib/Cake/Console/ConsoleOutput.php	/^	protected $_outputAs = self::COLOR;$/;"	v
_replaceTags	lib/Cake/Console/ConsoleOutput.php	/^	protected function _replaceTags($matches) {$/;"	f
_styles	lib/Cake/Console/ConsoleOutput.php	/^	protected static $_styles = array($/;"	v
_write	lib/Cake/Console/ConsoleOutput.php	/^	protected function _write($message) {$/;"	f
message	lib/Cake/Console/ConsoleOutput.php	/^			$message = implode(self::LF, $message);$/;"	v
outputAs	lib/Cake/Console/ConsoleOutput.php	/^	public function outputAs($type = null) {$/;"	f
style	lib/Cake/Console/ConsoleOutput.php	/^		$style = $this->styles($matches['tag']);$/;"	v
styleInfo	lib/Cake/Console/ConsoleOutput.php	/^		$styleInfo = array();$/;"	v
styleText	lib/Cake/Console/ConsoleOutput.php	/^	public function styleText($text) {$/;"	f
styles	lib/Cake/Console/ConsoleOutput.php	/^	public function styles($style = null, $definition = null) {$/;"	f
tags	lib/Cake/Console/ConsoleOutput.php	/^			$tags = implode('|', array_keys(self::$_styles));$/;"	v
write	lib/Cake/Console/ConsoleOutput.php	/^	public function write($message, $newlines = 1) {$/;"	f
HelpFormatter	lib/Cake/Console/HelpFormatter.php	/^class HelpFormatter {$/;"	c
__construct	lib/Cake/Console/HelpFormatter.php	/^	public function __construct(ConsoleOptionParser $parser) {$/;"	f
_generateUsage	lib/Cake/Console/HelpFormatter.php	/^	protected function _generateUsage() {$/;"	f
_getMaxLength	lib/Cake/Console/HelpFormatter.php	/^	protected function _getMaxLength($collection) {$/;"	f
_maxArgs	lib/Cake/Console/HelpFormatter.php	/^	protected $_maxArgs = 6;$/;"	v
_maxOptions	lib/Cake/Console/HelpFormatter.php	/^	protected $_maxOptions = 6;$/;"	v
_parser	lib/Cake/Console/HelpFormatter.php	/^		$this->_parser = $parser;$/;"	v
args	lib/Cake/Console/HelpFormatter.php	/^			$args = array('[arguments]');$/;"	v
args	lib/Cake/Console/HelpFormatter.php	/^		$args = array();$/;"	v
arguments	lib/Cake/Console/HelpFormatter.php	/^		$arguments = $parser->arguments();$/;"	v
arguments	lib/Cake/Console/HelpFormatter.php	/^		$arguments = $xml->addChild('arguments');$/;"	v
description	lib/Cake/Console/HelpFormatter.php	/^		$description = $parser->description();$/;"	v
epilog	lib/Cake/Console/HelpFormatter.php	/^		$epilog = $parser->epilog();$/;"	v
max	lib/Cake/Console/HelpFormatter.php	/^			$max = $this->_getMaxLength($arguments) + 2;$/;"	v
max	lib/Cake/Console/HelpFormatter.php	/^			$max = $this->_getMaxLength($options) + 8;$/;"	v
max	lib/Cake/Console/HelpFormatter.php	/^			$max = $this->_getMaxLength($subcommands) + 2;$/;"	v
max	lib/Cake/Console/HelpFormatter.php	/^			$max = (strlen($item->name()) > $max) ? strlen($item->name()) : $max;$/;"	v
max	lib/Cake/Console/HelpFormatter.php	/^		$max = 0;$/;"	v
options	lib/Cake/Console/HelpFormatter.php	/^			$options = array('[options]');$/;"	v
options	lib/Cake/Console/HelpFormatter.php	/^		$options = $parser->options();$/;"	v
options	lib/Cake/Console/HelpFormatter.php	/^		$options = $xml->addChild('options');$/;"	v
options	lib/Cake/Console/HelpFormatter.php	/^		$options = array();$/;"	v
out	lib/Cake/Console/HelpFormatter.php	/^		$out = array();$/;"	v
parser	lib/Cake/Console/HelpFormatter.php	/^		$parser = $this->_parser;$/;"	v
subcommands	lib/Cake/Console/HelpFormatter.php	/^		$subcommands = $parser->subcommands();$/;"	v
subcommands	lib/Cake/Console/HelpFormatter.php	/^		$subcommands = $this->_parser->subcommands();$/;"	v
subcommands	lib/Cake/Console/HelpFormatter.php	/^		$subcommands = $xml->addChild('subcommands');$/;"	v
text	lib/Cake/Console/HelpFormatter.php	/^	public function text($width = 72) {$/;"	f
usage	lib/Cake/Console/HelpFormatter.php	/^		$usage = array('cake ' . $this->_parser->command());$/;"	v
usage	lib/Cake/Console/HelpFormatter.php	/^		$usage = array_merge($usage, $args);$/;"	v
usage	lib/Cake/Console/HelpFormatter.php	/^		$usage = array_merge($usage, $options);$/;"	v
xml	lib/Cake/Console/HelpFormatter.php	/^		$xml = new SimpleXmlElement('<shell><\/shell>');$/;"	v
xml	lib/Cake/Console/HelpFormatter.php	/^	public function xml($string = true) {$/;"	f
Dispatcher	lib/Cake/Console/Shell.php	/^		$Dispatcher = new ShellDispatcher($args, false);$/;"	v
File	lib/Cake/Console/Shell.php	/^		$File = new File($path, true);$/;"	v
OptionParser	lib/Cake/Console/Shell.php	/^		$this->OptionParser = $this->getOptionParser();$/;"	v
OptionParser	lib/Cake/Console/Shell.php	/^	public $OptionParser;$/;"	v
Shell	lib/Cake/Console/Shell.php	/^class Shell extends Object {$/;"	c
Tasks	lib/Cake/Console/Shell.php	/^		$this->Tasks = new TaskCollection($this);$/;"	v
Tasks	lib/Cake/Console/Shell.php	/^	public $Tasks;$/;"	v
__construct	lib/Cake/Console/Shell.php	/^	public function __construct($stdout = null, $stderr = null, $stdin = null) {$/;"	f
__get	lib/Cake/Console/Shell.php	/^	public function __get($name) {$/;"	f
__isset	lib/Cake/Console/Shell.php	/^	public function __isset($name) {$/;"	f
_checkUnitTest	lib/Cake/Console/Shell.php	/^	protected function _checkUnitTest() {$/;"	f
_controllerName	lib/Cake/Console/Shell.php	/^	protected function _controllerName($name) {$/;"	f
_controllerPath	lib/Cake/Console/Shell.php	/^	protected function _controllerPath($name) {$/;"	f
_displayHelp	lib/Cake/Console/Shell.php	/^	protected function _displayHelp($command) {$/;"	f
_getInput	lib/Cake/Console/Shell.php	/^	protected function _getInput($prompt, $options, $default) {$/;"	f
_loadModels	lib/Cake/Console/Shell.php	/^	protected function _loadModels() {$/;"	f
_modelKey	lib/Cake/Console/Shell.php	/^	protected function _modelKey($name) {$/;"	f
_modelName	lib/Cake/Console/Shell.php	/^	protected function _modelName($name) {$/;"	f
_modelNameFromKey	lib/Cake/Console/Shell.php	/^	protected function _modelNameFromKey($key) {$/;"	f
_pluginPath	lib/Cake/Console/Shell.php	/^	protected function _pluginPath($pluginName) {$/;"	f
_pluralHumanName	lib/Cake/Console/Shell.php	/^	protected function _pluralHumanName($name) {$/;"	f
_pluralName	lib/Cake/Console/Shell.php	/^	protected function _pluralName($name) {$/;"	f
_singularHumanName	lib/Cake/Console/Shell.php	/^	protected function _singularHumanName($name) {$/;"	f
_singularName	lib/Cake/Console/Shell.php	/^	protected function _singularName($name) {$/;"	f
_taskMap	lib/Cake/Console/Shell.php	/^		$this->_taskMap = TaskCollection::normalizeObjectArray((array)$this->tasks);$/;"	v
_taskMap	lib/Cake/Console/Shell.php	/^	protected $_taskMap = array();$/;"	v
_useLogger	lib/Cake/Console/Shell.php	/^	protected function _useLogger($enable = true) {$/;"	f
_welcome	lib/Cake/Console/Shell.php	/^	protected function _welcome() {$/;"	f
args	lib/Cake/Console/Shell.php	/^			$args = explode(' ', $args[0]);$/;"	v
args	lib/Cake/Console/Shell.php	/^		$args = func_get_args();$/;"	v
args	lib/Cake/Console/Shell.php	/^	public $args = array();$/;"	v
clear	lib/Cake/Console/Shell.php	/^	public function clear() {$/;"	f
command	lib/Cake/Console/Shell.php	/^			$command = Inflector::camelize($command);$/;"	v
command	lib/Cake/Console/Shell.php	/^		$this->command = $command;$/;"	v
command	lib/Cake/Console/Shell.php	/^	public $command;$/;"	v
createFile	lib/Cake/Console/Shell.php	/^	public function createFile($path, $contents) {$/;"	f
currentLevel	lib/Cake/Console/Shell.php	/^			$currentLevel = Shell::QUIET;$/;"	v
currentLevel	lib/Cake/Console/Shell.php	/^			$currentLevel = Shell::VERBOSE;$/;"	v
currentLevel	lib/Cake/Console/Shell.php	/^		$currentLevel = Shell::NORMAL;$/;"	v
data	lib/Cake/Console/Shell.php	/^			$data = $File->prepare($contents);$/;"	v
dispatchShell	lib/Cake/Console/Shell.php	/^	public function dispatchShell() {$/;"	f
err	lib/Cake/Console/Shell.php	/^	public function err($message = null, $newlines = 1) {$/;"	f
error	lib/Cake/Console/Shell.php	/^	public function error($title, $message = null) {$/;"	f
format	lib/Cake/Console/Shell.php	/^			$format = 'xml';$/;"	v
format	lib/Cake/Console/Shell.php	/^		$format = 'text';$/;"	v
getOptionParser	lib/Cake/Console/Shell.php	/^	public function getOptionParser() {$/;"	f
hasMethod	lib/Cake/Console/Shell.php	/^	public function hasMethod($name) {$/;"	f
hasTask	lib/Cake/Console/Shell.php	/^	public function hasTask($task) {$/;"	f
hr	lib/Cake/Console/Shell.php	/^	public function hr($newlines = 0, $width = 63) {$/;"	f
in	lib/Cake/Console/Shell.php	/^				$in = $this->_getInput($prompt, $originalOptions, $default);$/;"	v
in	lib/Cake/Console/Shell.php	/^		$in = $this->_getInput($prompt, $originalOptions, $default);$/;"	v
in	lib/Cake/Console/Shell.php	/^	public function in($prompt, $options = null, $default = null) {$/;"	f
initialize	lib/Cake/Console/Shell.php	/^	public function initialize() {$/;"	f
interactive	lib/Cake/Console/Shell.php	/^	public $interactive = true;$/;"	v
isMain	lib/Cake/Console/Shell.php	/^		$isMain = $this->hasMethod('main');$/;"	v
isMethod	lib/Cake/Console/Shell.php	/^		$isMethod = $this->hasMethod($command);$/;"	v
isTask	lib/Cake/Console/Shell.php	/^		$isTask = $this->hasTask($command);$/;"	v
key	lib/Cake/Console/Shell.php	/^			$key = $this->in(__d('cake_console', 'Do you want to overwrite?'), array('y', 'n', 'q'), 'n');$/;"	v
loadModel	lib/Cake/Console/Shell.php	/^	public function loadModel($modelClass = null, $id = null) {$/;"	f
loadTasks	lib/Cake/Console/Shell.php	/^	public function loadTasks() {$/;"	f
method	lib/Cake/Console/Shell.php	/^			$method = new ReflectionMethod($this, $name);$/;"	v
modelClass	lib/Cake/Console/Shell.php	/^			$modelClass = $this->modelClass;$/;"	v
modelClass	lib/Cake/Console/Shell.php	/^			$this->modelClass = $modelClass;$/;"	v
modelClass	lib/Cake/Console/Shell.php	/^	public $modelClass = null;$/;"	v
name	lib/Cake/Console/Shell.php	/^			$this->name = Inflector::camelize(str_replace(array('Shell', 'Task'), '', get_class($this)));$/;"	v
name	lib/Cake/Console/Shell.php	/^		$name = ($this->plugin ? $this->plugin . '.' : '') . $this->name;$/;"	v
name	lib/Cake/Console/Shell.php	/^	public $name = null;$/;"	v
nl	lib/Cake/Console/Shell.php	/^	public function nl($multiplier = 1) {$/;"	f
options	lib/Cake/Console/Shell.php	/^				$options = array($options);$/;"	v
options	lib/Cake/Console/Shell.php	/^				$options = explode(',', $options);$/;"	v
options	lib/Cake/Console/Shell.php	/^				$options = explode('\/', $options);$/;"	v
options	lib/Cake/Console/Shell.php	/^			$options = array_merge($/;"	v
originalOptions	lib/Cake/Console/Shell.php	/^		$originalOptions = $options;$/;"	v
out	lib/Cake/Console/Shell.php	/^	public function out($message = null, $newlines = 1, $level = Shell::NORMAL) {$/;"	f
params	lib/Cake/Console/Shell.php	/^	public $params = array();$/;"	v
parent	lib/Cake/Console/Shell.php	/^		$parent = get_parent_class($this);$/;"	v
parser	lib/Cake/Console/Shell.php	/^		$parser = new ConsoleOptionParser($name);$/;"	v
path	lib/Cake/Console/Shell.php	/^		$path = str_replace(DS . DS, DS, $path);$/;"	v
plugin	lib/Cake/Console/Shell.php	/^	public $plugin = null;$/;"	v
printOptions	lib/Cake/Console/Shell.php	/^			$printOptions = '';$/;"	v
printOptions	lib/Cake/Console/Shell.php	/^			$printOptions = '(' . implode('\/', $options) . ')';$/;"	v
prompt	lib/Cake/Console/Shell.php	/^		$prompt = __d('cake_console', 'PHPUnit is not installed. Do you want to bake unit test files anyway?');$/;"	v
properties	lib/Cake/Console/Shell.php	/^			$properties = $this->_taskMap[$name];$/;"	v
result	lib/Cake/Console/Shell.php	/^		$result = $this->stdin->read();$/;"	v
result	lib/Cake/Console/Shell.php	/^		$result = strtolower($unitTest) === 'y' || strtolower($unitTest) === 'yes';$/;"	v
result	lib/Cake/Console/Shell.php	/^		$result = trim($result);$/;"	v
runCommand	lib/Cake/Console/Shell.php	/^	public function runCommand($command, $argv) {$/;"	f
shortPath	lib/Cake/Console/Shell.php	/^		$shortPath = str_replace('..' . DS, '', $shortPath);$/;"	v
shortPath	lib/Cake/Console/Shell.php	/^		$shortPath = str_replace(ROOT, null, $file);$/;"	v
shortPath	lib/Cake/Console/Shell.php	/^	public function shortPath($file) {$/;"	f
startup	lib/Cake/Console/Shell.php	/^	public function startup() {$/;"	f
stderr	lib/Cake/Console/Shell.php	/^		$this->stderr = $stderr ? $stderr : new ConsoleOutput('php:\/\/stderr');$/;"	v
stderr	lib/Cake/Console/Shell.php	/^	public $stderr;$/;"	v
stdin	lib/Cake/Console/Shell.php	/^		$this->stdin = $stdin ? $stdin : new ConsoleInput('php:\/\/stdin');$/;"	v
stdin	lib/Cake/Console/Shell.php	/^	public $stdin;$/;"	v
stdout	lib/Cake/Console/Shell.php	/^		$this->stdout = $stdout ? $stdout : new ConsoleOutput('php:\/\/stdout');$/;"	v
stdout	lib/Cake/Console/Shell.php	/^	public $stdout;$/;"	v
taskNames	lib/Cake/Console/Shell.php	/^		$this->taskNames = array_merge($this->taskNames, array_keys($this->_taskMap));$/;"	v
taskNames	lib/Cake/Console/Shell.php	/^	public $taskNames = array();$/;"	v
tasks	lib/Cake/Console/Shell.php	/^	public $tasks = array();$/;"	v
unitTest	lib/Cake/Console/Shell.php	/^		$unitTest = $this->in($prompt, array('y', 'n'), 'y');$/;"	v
uses	lib/Cake/Console/Shell.php	/^		$this->uses = ($this->uses) ? (array)$this->uses : array();$/;"	v
uses	lib/Cake/Console/Shell.php	/^	public $uses = array();$/;"	v
wrapText	lib/Cake/Console/Shell.php	/^	public function wrapText($text, $options = array()) {$/;"	f
APP	lib/Cake/Console/ShellDispatcher.php	/^			define('APP', $this->params['working'] . DS);$/;"	d
APP_DIR	lib/Cake/Console/ShellDispatcher.php	/^			define('APP_DIR', $this->params['app']);$/;"	d
CAKEPHP_SHELL	lib/Cake/Console/ShellDispatcher.php	/^			define('CAKEPHP_SHELL', true);$/;"	d
CAKE_CORE_INCLUDE_PATH	lib/Cake/Console/ShellDispatcher.php	/^			define('CAKE_CORE_INCLUDE_PATH', dirname(dirname(dirname(__FILE__))));$/;"	d
CORE_PATH	lib/Cake/Console/ShellDispatcher.php	/^				define('CORE_PATH', CAKE_CORE_INCLUDE_PATH . DS);$/;"	d
DS	lib/Cake/Console/ShellDispatcher.php	/^			define('DS', DIRECTORY_SEPARATOR);$/;"	d
FULL_BASE_URL	lib/Cake/Console/ShellDispatcher.php	/^			define('FULL_BASE_URL', $url ? $url : 'http:\/\/localhost');$/;"	d
ROOT	lib/Cake/Console/ShellDispatcher.php	/^			define('ROOT', $this->params['root']);$/;"	d
Shell	lib/Cake/Console/ShellDispatcher.php	/^		$Shell = $this->_getShell($shell);$/;"	v
Shell	lib/Cake/Console/ShellDispatcher.php	/^		$Shell = new $class();$/;"	v
ShellDispatcher	lib/Cake/Console/ShellDispatcher.php	/^class ShellDispatcher {$/;"	c
TMP	lib/Cake/Console/ShellDispatcher.php	/^			define('TMP', CAKE_CORE_INCLUDE_PATH . DS . 'Cake' . DS . 'Console' . DS . 'Templates' . DS . 'skel' . DS . 'tmp' . DS);$/;"	d
WWW_ROOT	lib/Cake/Console/ShellDispatcher.php	/^			define('WWW_ROOT', APP . $this->params['webroot'] . DS);$/;"	d
__construct	lib/Cake/Console/ShellDispatcher.php	/^	public function __construct($args = array(), $bootstrap = true) {$/;"	f
_bootstrap	lib/Cake/Console/ShellDispatcher.php	/^	protected function _bootstrap() {$/;"	f
_getShell	lib/Cake/Console/ShellDispatcher.php	/^	protected function _getShell($shell) {$/;"	f
_initConstants	lib/Cake/Console/ShellDispatcher.php	/^	protected function _initConstants() {$/;"	f
_initEnvironment	lib/Cake/Console/ShellDispatcher.php	/^	protected function _initEnvironment() {$/;"	f
_parsePaths	lib/Cake/Console/ShellDispatcher.php	/^	protected function _parsePaths($args) {$/;"	f
_stop	lib/Cake/Console/ShellDispatcher.php	/^	protected function _stop($status = 0) {$/;"	f
added	lib/Cake/Console/ShellDispatcher.php	/^		$added = in_array($command, $methods);$/;"	v
args	lib/Cake/Console/ShellDispatcher.php	/^		$args = (array)$args;$/;"	v
args	lib/Cake/Console/ShellDispatcher.php	/^		$this->args = $args;$/;"	v
args	lib/Cake/Console/ShellDispatcher.php	/^		$this->args = array_merge(array('command_list'), $this->args);$/;"	v
args	lib/Cake/Console/ShellDispatcher.php	/^	public $args = array();$/;"	v
boot	lib/Cake/Console/ShellDispatcher.php	/^		$boot = file_exists(ROOT . DS . APP_DIR . DS . 'Config' . DS . 'bootstrap.php');$/;"	v
class	lib/Cake/Console/ShellDispatcher.php	/^		$class = Inflector::camelize($shell) . 'Shell';$/;"	v
command	lib/Cake/Console/ShellDispatcher.php	/^			$command = $this->args[0];$/;"	v
command	lib/Cake/Console/ShellDispatcher.php	/^		$command = null;$/;"	v
defaults	lib/Cake/Console/ShellDispatcher.php	/^		$defaults = array($/;"	v
dispatch	lib/Cake/Console/ShellDispatcher.php	/^	public function dispatch() {$/;"	f
dispatcher	lib/Cake/Console/ShellDispatcher.php	/^		$dispatcher = new ShellDispatcher($argv);$/;"	v
error	lib/Cake/Console/ShellDispatcher.php	/^		$error = Configure::read('Error');$/;"	v
errorHandler	lib/Cake/Console/ShellDispatcher.php	/^		$errorHandler = new ConsoleErrorHandler();$/;"	v
exception	lib/Cake/Console/ShellDispatcher.php	/^		$exception = Configure::read('Exception');$/;"	v
help	lib/Cake/Console/ShellDispatcher.php	/^	public function help() {$/;"	f
isWin	lib/Cake/Console/ShellDispatcher.php	/^				$isWin = true;$/;"	v
isWin	lib/Cake/Console/ShellDispatcher.php	/^		$isWin = false;$/;"	v
keyname	lib/Cake/Console/ShellDispatcher.php	/^				$keyname = str_replace('-', '', $key);$/;"	v
keys	lib/Cake/Console/ShellDispatcher.php	/^		$keys = array('-working', '--working', '-app', '--app', '-root', '--root');$/;"	v
message	lib/Cake/Console/ShellDispatcher.php	/^			$message = "This file has been loaded incorrectly and cannot continue.\\n" .$/;"	v
message	lib/Cake/Console/ShellDispatcher.php	/^			$message = "Unable to load CakePHP core.\\nMake sure " . DS . 'lib' . DS . 'Cake exists in ' . CAKE_CORE_INCLUDE_PATH;$/;"	v
methods	lib/Cake/Console/ShellDispatcher.php	/^		$methods = array_diff(get_class_methods($Shell), get_class_methods('Shell'));$/;"	v
params	lib/Cake/Console/ShellDispatcher.php	/^			$params = str_replace('\/', '\\\\', $params);$/;"	v
params	lib/Cake/Console/ShellDispatcher.php	/^		$params = array_merge($defaults, array_intersect_key($this->params, $defaults));$/;"	v
params	lib/Cake/Console/ShellDispatcher.php	/^		$params = str_replace('\\\\', '\/', $params);$/;"	v
params	lib/Cake/Console/ShellDispatcher.php	/^		$this->params = $params + $this->params;$/;"	v
params	lib/Cake/Console/ShellDispatcher.php	/^		$this->params = $parsed;$/;"	v
params	lib/Cake/Console/ShellDispatcher.php	/^	public $params = array();$/;"	v
parseParams	lib/Cake/Console/ShellDispatcher.php	/^	public function parseParams($args) {$/;"	f
parsed	lib/Cake/Console/ShellDispatcher.php	/^		$parsed = array();$/;"	v
plugin	lib/Cake/Console/ShellDispatcher.php	/^		$plugin = Inflector::camelize($plugin);$/;"	v
private	lib/Cake/Console/ShellDispatcher.php	/^		$private = $command[0] === '_' && method_exists($Shell, $command);$/;"	v
run	lib/Cake/Console/ShellDispatcher.php	/^	public static function run($argv) {$/;"	f
setErrorHandlers	lib/Cake/Console/ShellDispatcher.php	/^	public function setErrorHandlers() {$/;"	f
shell	lib/Cake/Console/ShellDispatcher.php	/^		$shell = $this->shiftArgs();$/;"	v
shiftArgs	lib/Cake/Console/ShellDispatcher.php	/^	public function shiftArgs() {$/;"	f
url	lib/Cake/Console/ShellDispatcher.php	/^			$url = Configure::read('App.fullBaseUrl');$/;"	v
valueIndex	lib/Cake/Console/ShellDispatcher.php	/^				$valueIndex = $index + 1;$/;"	v
TaskCollection	lib/Cake/Console/TaskCollection.php	/^class TaskCollection extends ObjectCollection {$/;"	c
_Shell	lib/Cake/Console/TaskCollection.php	/^		$this->_Shell = $Shell;$/;"	v
_Shell	lib/Cake/Console/TaskCollection.php	/^	protected $_Shell;$/;"	v
__construct	lib/Cake/Console/TaskCollection.php	/^	public function __construct(Shell $Shell) {$/;"	f
alias	lib/Cake/Console/TaskCollection.php	/^			$alias = $name;$/;"	v
alias	lib/Cake/Console/TaskCollection.php	/^			$alias = $task;$/;"	v
exists	lib/Cake/Console/TaskCollection.php	/^		$exists = class_exists($taskClass);$/;"	v
load	lib/Cake/Console/TaskCollection.php	/^	public function load($task, $settings = array()) {$/;"	f
task	lib/Cake/Console/TaskCollection.php	/^			$task = $settings['className'];$/;"	v
taskClass	lib/Cake/Console/TaskCollection.php	/^		$taskClass = $name . 'Task';$/;"	v
taskPathPrefix	lib/Cake/Console/TaskCollection.php	/^	public $taskPathPrefix = 'tasks\/';$/;"	v
DbAclSchema	lib/Cake/Console/Templates/skel/Config/Schema/db_acl.php	/^class DbAclSchema extends CakeSchema {$/;"	c
acos	lib/Cake/Console/Templates/skel/Config/Schema/db_acl.php	/^	public $acos = array($/;"	v
after	lib/Cake/Console/Templates/skel/Config/Schema/db_acl.php	/^	public function after($event = array()) {$/;"	f
aros	lib/Cake/Console/Templates/skel/Config/Schema/db_acl.php	/^	public $aros = array($/;"	v
aros_acos	lib/Cake/Console/Templates/skel/Config/Schema/db_acl.php	/^	public $aros_acos = array($/;"	v
before	lib/Cake/Console/Templates/skel/Config/Schema/db_acl.php	/^	public function before($event = array()) {$/;"	f
acos	lib/Cake/Console/Templates/skel/Config/Schema/db_acl.sql	/^CREATE TABLE acos ($/;"	t
acos.alias	lib/Cake/Console/Templates/skel/Config/Schema/db_acl.sql	/^  alias VARCHAR(255) DEFAULT '',$/;"	F
acos.foreign_key	lib/Cake/Console/Templates/skel/Config/Schema/db_acl.sql	/^  foreign_key INTEGER(10) UNSIGNED DEFAULT NULL,$/;"	F
acos.id	lib/Cake/Console/Templates/skel/Config/Schema/db_acl.sql	/^  id INTEGER(10) UNSIGNED NOT NULL AUTO_INCREMENT,$/;"	F
acos.lft	lib/Cake/Console/Templates/skel/Config/Schema/db_acl.sql	/^  lft INTEGER(10) DEFAULT NULL,$/;"	F
acos.model	lib/Cake/Console/Templates/skel/Config/Schema/db_acl.sql	/^  model VARCHAR(255) DEFAULT '',$/;"	F
acos.parent_id	lib/Cake/Console/Templates/skel/Config/Schema/db_acl.sql	/^  parent_id INTEGER(10) DEFAULT NULL,$/;"	F
acos.rght	lib/Cake/Console/Templates/skel/Config/Schema/db_acl.sql	/^  rght INTEGER(10) DEFAULT NULL,$/;"	F
aros	lib/Cake/Console/Templates/skel/Config/Schema/db_acl.sql	/^CREATE TABLE aros ($/;"	t
aros.alias	lib/Cake/Console/Templates/skel/Config/Schema/db_acl.sql	/^  alias VARCHAR(255) DEFAULT '',$/;"	F
aros.foreign_key	lib/Cake/Console/Templates/skel/Config/Schema/db_acl.sql	/^  foreign_key INTEGER(10) UNSIGNED DEFAULT NULL,$/;"	F
aros.id	lib/Cake/Console/Templates/skel/Config/Schema/db_acl.sql	/^  id INTEGER(10) UNSIGNED NOT NULL AUTO_INCREMENT,$/;"	F
aros.lft	lib/Cake/Console/Templates/skel/Config/Schema/db_acl.sql	/^  lft INTEGER(10) DEFAULT NULL,$/;"	F
aros.model	lib/Cake/Console/Templates/skel/Config/Schema/db_acl.sql	/^  model VARCHAR(255) DEFAULT '',$/;"	F
aros.parent_id	lib/Cake/Console/Templates/skel/Config/Schema/db_acl.sql	/^  parent_id INTEGER(10) DEFAULT NULL,$/;"	F
aros.rght	lib/Cake/Console/Templates/skel/Config/Schema/db_acl.sql	/^  rght INTEGER(10) DEFAULT NULL,$/;"	F
aros_acos	lib/Cake/Console/Templates/skel/Config/Schema/db_acl.sql	/^CREATE TABLE aros_acos ($/;"	t
aros_acos._create	lib/Cake/Console/Templates/skel/Config/Schema/db_acl.sql	/^  _create CHAR(2) NOT NULL DEFAULT 0,$/;"	F
aros_acos._delete	lib/Cake/Console/Templates/skel/Config/Schema/db_acl.sql	/^  _delete CHAR(2) NOT NULL DEFAULT 0,$/;"	F
aros_acos._read	lib/Cake/Console/Templates/skel/Config/Schema/db_acl.sql	/^  _read CHAR(2) NOT NULL DEFAULT 0,$/;"	F
aros_acos._update	lib/Cake/Console/Templates/skel/Config/Schema/db_acl.sql	/^  _update CHAR(2) NOT NULL DEFAULT 0,$/;"	F
aros_acos.aco_id	lib/Cake/Console/Templates/skel/Config/Schema/db_acl.sql	/^  aco_id INTEGER(10) UNSIGNED NOT NULL,$/;"	F
aros_acos.aro_id	lib/Cake/Console/Templates/skel/Config/Schema/db_acl.sql	/^  aro_id INTEGER(10) UNSIGNED NOT NULL,$/;"	F
aros_acos.id	lib/Cake/Console/Templates/skel/Config/Schema/db_acl.sql	/^  id INTEGER(10) UNSIGNED NOT NULL AUTO_INCREMENT,$/;"	F
I18nSchema	lib/Cake/Console/Templates/skel/Config/Schema/i18n.php	/^class I18nSchema extends CakeSchema {$/;"	c
after	lib/Cake/Console/Templates/skel/Config/Schema/i18n.php	/^	public function after($event = array()) {$/;"	f
before	lib/Cake/Console/Templates/skel/Config/Schema/i18n.php	/^	public function before($event = array()) {$/;"	f
i18n	lib/Cake/Console/Templates/skel/Config/Schema/i18n.php	/^	public $i18n = array($/;"	v
name	lib/Cake/Console/Templates/skel/Config/Schema/i18n.php	/^	public $name = 'i18n';$/;"	v
i18n	lib/Cake/Console/Templates/skel/Config/Schema/i18n.sql	/^CREATE TABLE i18n ($/;"	t
i18n.content	lib/Cake/Console/Templates/skel/Config/Schema/i18n.sql	/^	content mediumtext,$/;"	F
i18n.field	lib/Cake/Console/Templates/skel/Config/Schema/i18n.sql	/^	field varchar(255) NOT NULL,$/;"	F
i18n.foreign_key	lib/Cake/Console/Templates/skel/Config/Schema/i18n.sql	/^	foreign_key int(10) NOT NULL,$/;"	F
i18n.id	lib/Cake/Console/Templates/skel/Config/Schema/i18n.sql	/^	id int(10) NOT NULL auto_increment,$/;"	F
i18n.locale	lib/Cake/Console/Templates/skel/Config/Schema/i18n.sql	/^	locale varchar(6) NOT NULL,$/;"	F
i18n.model	lib/Cake/Console/Templates/skel/Config/Schema/i18n.sql	/^	model varchar(255) NOT NULL,$/;"	F
SessionsSchema	lib/Cake/Console/Templates/skel/Config/Schema/sessions.php	/^class SessionsSchema extends CakeSchema {$/;"	c
after	lib/Cake/Console/Templates/skel/Config/Schema/sessions.php	/^	public function after($event = array()) {$/;"	f
before	lib/Cake/Console/Templates/skel/Config/Schema/sessions.php	/^	public function before($event = array()) {$/;"	f
cake_sessions	lib/Cake/Console/Templates/skel/Config/Schema/sessions.php	/^	public $cake_sessions = array($/;"	v
name	lib/Cake/Console/Templates/skel/Config/Schema/sessions.php	/^	public $name = 'Sessions';$/;"	v
cake_sessions	lib/Cake/Console/Templates/skel/Config/Schema/sessions.sql	/^CREATE TABLE cake_sessions ($/;"	t
cake_sessions.data	lib/Cake/Console/Templates/skel/Config/Schema/sessions.sql	/^  data text,$/;"	F
cake_sessions.expires	lib/Cake/Console/Templates/skel/Config/Schema/sessions.sql	/^  expires int(11) default NULL,$/;"	F
cake_sessions.id	lib/Cake/Console/Templates/skel/Config/Schema/sessions.sql	/^  id varchar(255) NOT NULL default '',$/;"	F
duration	lib/Cake/Console/Templates/skel/Config/core.php	/^	$duration = '+10 seconds';$/;"	v
duration	lib/Cake/Console/Templates/skel/Config/core.php	/^$duration = '+999 days';$/;"	v
engine	lib/Cake/Console/Templates/skel/Config/core.php	/^$engine = 'File';$/;"	v
prefix	lib/Cake/Console/Templates/skel/Config/core.php	/^$prefix = 'myapp_';$/;"	v
AppShell	lib/Cake/Console/Templates/skel/Console/Command/AppShell.php	/^class AppShell extends Shell {$/;"	c
dispatcher	lib/Cake/Console/Templates/skel/Console/cake.php	/^$dispatcher = 'Cake' . $ds . 'Console' . $ds . 'ShellDispatcher.php';$/;"	v
ds	lib/Cake/Console/Templates/skel/Console/cake.php	/^$ds = DIRECTORY_SEPARATOR;$/;"	v
root	lib/Cake/Console/Templates/skel/Console/cake.php	/^	$root = dirname(dirname(dirname(__FILE__)));$/;"	v
AppController	lib/Cake/Console/Templates/skel/Controller/AppController.php	/^class AppController extends Controller {$/;"	c
PagesController	lib/Cake/Console/Templates/skel/Controller/PagesController.php	/^class PagesController extends AppController {$/;"	c
count	lib/Cake/Console/Templates/skel/Controller/PagesController.php	/^		$count = count($path);$/;"	v
display	lib/Cake/Console/Templates/skel/Controller/PagesController.php	/^	public function display() {$/;"	f
page	lib/Cake/Console/Templates/skel/Controller/PagesController.php	/^			$page = $path[0];$/;"	v
page	lib/Cake/Console/Templates/skel/Controller/PagesController.php	/^		$page = $subpage = $title_for_layout = null;$/;"	v
path	lib/Cake/Console/Templates/skel/Controller/PagesController.php	/^		$path = func_get_args();$/;"	v
subpage	lib/Cake/Console/Templates/skel/Controller/PagesController.php	/^			$subpage = $path[1];$/;"	v
title_for_layout	lib/Cake/Console/Templates/skel/Controller/PagesController.php	/^			$title_for_layout = Inflector::humanize($path[$count - 1]);$/;"	v
uses	lib/Cake/Console/Templates/skel/Controller/PagesController.php	/^	public $uses = array();$/;"	v
AppModel	lib/Cake/Console/Templates/skel/Model/AppModel.php	/^class AppModel extends Model {$/;"	c
AllTestsTest	lib/Cake/Console/Templates/skel/Test/Case/AllTestsTest.php	/^class AllTestsTest extends CakeTestSuite {$/;"	c
suite	lib/Cake/Console/Templates/skel/Test/Case/AllTestsTest.php	/^		$suite = new CakeTestSuite('All application tests');$/;"	v
suite	lib/Cake/Console/Templates/skel/Test/Case/AllTestsTest.php	/^	public static function suite() {$/;"	f
AppHelper	lib/Cake/Console/Templates/skel/View/Helper/AppHelper.php	/^class AppHelper extends Helper {$/;"	c
APP_DIR	lib/Cake/Console/Templates/skel/webroot/index.php	/^	define('APP_DIR', basename(dirname(dirname(__FILE__))));$/;"	d
DS	lib/Cake/Console/Templates/skel/webroot/index.php	/^	define('DS', DIRECTORY_SEPARATOR);$/;"	d
Dispatcher	lib/Cake/Console/Templates/skel/webroot/index.php	/^$Dispatcher = new Dispatcher();$/;"	v
ROOT	lib/Cake/Console/Templates/skel/webroot/index.php	/^	define('ROOT', dirname(dirname(dirname(__FILE__))));$/;"	d
WEBROOT_DIR	lib/Cake/Console/Templates/skel/webroot/index.php	/^	define('WEBROOT_DIR', basename(dirname(__FILE__)));$/;"	d
WWW_ROOT	lib/Cake/Console/Templates/skel/webroot/index.php	/^	define('WWW_ROOT', dirname(__FILE__) . DS);$/;"	d
failed	lib/Cake/Console/Templates/skel/webroot/index.php	/^		$failed = true;$/;"	v
APP_DIR	lib/Cake/Console/Templates/skel/webroot/test.php	/^	define('APP_DIR', basename(dirname(dirname(__FILE__))));$/;"	d
DS	lib/Cake/Console/Templates/skel/webroot/test.php	/^	define('DS', DIRECTORY_SEPARATOR);$/;"	d
ROOT	lib/Cake/Console/Templates/skel/webroot/test.php	/^	define('ROOT', dirname(dirname(dirname(__FILE__))));$/;"	d
WEBROOT_DIR	lib/Cake/Console/Templates/skel/webroot/test.php	/^	define('WEBROOT_DIR', basename(dirname(__FILE__)));$/;"	d
WWW_ROOT	lib/Cake/Console/Templates/skel/webroot/test.php	/^	define('WWW_ROOT', dirname(__FILE__) . DS);$/;"	d
failed	lib/Cake/Console/Templates/skel/webroot/test.php	/^		$failed = true;$/;"	v
canonicalize	lib/Cake/Console/cake	/^canonicalize() {$/;"	f
composerInstall	lib/Cake/Console/cake.php	/^	$composerInstall = dirname(dirname(__FILE__)) . $ds . $dispatcher;$/;"	v
dispatcher	lib/Cake/Console/cake.php	/^$dispatcher = 'Cake' . $ds . 'Console' . $ds . 'ShellDispatcher.php';$/;"	v
ds	lib/Cake/Console/cake.php	/^$ds = DIRECTORY_SEPARATOR;$/;"	v
found	lib/Cake/Console/cake.php	/^		$found = $path;$/;"	v
found	lib/Cake/Console/cake.php	/^$found = false;$/;"	v
paths	lib/Cake/Console/cake.php	/^$paths = explode(PATH_SEPARATOR, ini_get('include_path'));$/;"	v
rootInstall	lib/Cake/Console/cake.php	/^	$rootInstall = dirname(dirname(dirname(__FILE__))) . $ds . $dispatcher;$/;"	v
CakeErrorController	lib/Cake/Controller/CakeErrorController.php	/^class CakeErrorController extends AppController {$/;"	c
RequestHandler	lib/Cake/Controller/CakeErrorController.php	/^			$this->RequestHandler = $this->Components->load('RequestHandler');$/;"	v
__construct	lib/Cake/Controller/CakeErrorController.php	/^	public function __construct($request = null, $response = null) {$/;"	f
uses	lib/Cake/Controller/CakeErrorController.php	/^	public $uses = array();$/;"	v
Component	lib/Cake/Controller/Component.php	/^class Component extends Object {$/;"	c
_Collection	lib/Cake/Controller/Component.php	/^		$this->_Collection = $collection;$/;"	v
_Collection	lib/Cake/Controller/Component.php	/^	protected $_Collection;$/;"	v
__construct	lib/Cake/Controller/Component.php	/^	public function __construct(ComponentCollection $collection, $settings = array()) {$/;"	f
__get	lib/Cake/Controller/Component.php	/^	public function __get($name) {$/;"	f
_componentMap	lib/Cake/Controller/Component.php	/^			$this->_componentMap = ComponentCollection::normalizeObjectArray($this->components);$/;"	v
_componentMap	lib/Cake/Controller/Component.php	/^	protected $_componentMap = array();$/;"	v
beforeRedirect	lib/Cake/Controller/Component.php	/^	public function beforeRedirect(Controller $controller, $url, $status = null, $exit = true) {$/;"	f
beforeRender	lib/Cake/Controller/Component.php	/^	public function beforeRender(Controller $controller) {$/;"	f
components	lib/Cake/Controller/Component.php	/^	public $components = array();$/;"	v
initialize	lib/Cake/Controller/Component.php	/^	public function initialize(Controller $controller) {$/;"	f
settings	lib/Cake/Controller/Component.php	/^			$settings = array('enabled' => false) + (array)$this->_componentMap[$name]['settings'];$/;"	v
settings	lib/Cake/Controller/Component.php	/^		$this->settings = $settings;$/;"	v
settings	lib/Cake/Controller/Component.php	/^	public $settings = array();$/;"	v
shutdown	lib/Cake/Controller/Component.php	/^	public function shutdown(Controller $controller) {$/;"	f
startup	lib/Cake/Controller/Component.php	/^	public function startup(Controller $controller) {$/;"	f
AclInterface	lib/Cake/Controller/Component/Acl/AclInterface.php	/^interface AclInterface {$/;"	i
allow	lib/Cake/Controller/Component/Acl/AclInterface.php	/^	public function allow($aro, $aco, $action = "*");$/;"	f
check	lib/Cake/Controller/Component/Acl/AclInterface.php	/^	public function check($aro, $aco, $action = "*");$/;"	f
deny	lib/Cake/Controller/Component/Acl/AclInterface.php	/^	public function deny($aro, $aco, $action = "*");$/;"	f
inherit	lib/Cake/Controller/Component/Acl/AclInterface.php	/^	public function inherit($aro, $aco, $action = "*");$/;"	f
initialize	lib/Cake/Controller/Component/Acl/AclInterface.php	/^	public function initialize(Component $component);$/;"	f
Aco	lib/Cake/Controller/Component/Acl/DbAcl.php	/^		$this->Aco = $this->Permission->Aco;$/;"	v
Aro	lib/Cake/Controller/Component/Acl/DbAcl.php	/^		$this->Aro = $this->Permission->Aro;$/;"	v
DbAcl	lib/Cake/Controller/Component/Acl/DbAcl.php	/^class DbAcl extends Object implements AclInterface {$/;"	c
Permission	lib/Cake/Controller/Component/Acl/DbAcl.php	/^		$this->Permission = ClassRegistry::init(array('class' => 'Permission', 'alias' => 'Permission'));$/;"	v
__construct	lib/Cake/Controller/Component/Acl/DbAcl.php	/^	public function __construct() {$/;"	f
_getAcoKeys	lib/Cake/Controller/Component/Acl/DbAcl.php	/^	protected function _getAcoKeys($keys) {$/;"	f
allow	lib/Cake/Controller/Component/Acl/DbAcl.php	/^	public function allow($aro, $aco, $actions = "*", $value = 1) {$/;"	f
check	lib/Cake/Controller/Component/Acl/DbAcl.php	/^	public function check($aro, $aco, $action = "*") {$/;"	f
deny	lib/Cake/Controller/Component/Acl/DbAcl.php	/^	public function deny($aro, $aco, $action = "*") {$/;"	f
getAclLink	lib/Cake/Controller/Component/Acl/DbAcl.php	/^	public function getAclLink($aro, $aco) {$/;"	f
grant	lib/Cake/Controller/Component/Acl/DbAcl.php	/^	public function grant($aro, $aco, $action = "*") {$/;"	f
inherit	lib/Cake/Controller/Component/Acl/DbAcl.php	/^	public function inherit($aro, $aco, $action = "*") {$/;"	f
initialize	lib/Cake/Controller/Component/Acl/DbAcl.php	/^	public function initialize(Component $component) {$/;"	f
revoke	lib/Cake/Controller/Component/Acl/DbAcl.php	/^	public function revoke($aro, $aco, $action = "*") {$/;"	f
IniAcl	lib/Cake/Controller/Component/Acl/IniAcl.php	/^class IniAcl extends Object implements AclInterface {$/;"	c
aclConfig	lib/Cake/Controller/Component/Acl/IniAcl.php	/^		$aclConfig = $this->config;$/;"	v
allow	lib/Cake/Controller/Component/Acl/IniAcl.php	/^	public function allow($aro, $aco, $action = "*") {$/;"	f
aro	lib/Cake/Controller/Component/Acl/IniAcl.php	/^			$aro = Hash::get($aro, $this->userPath);$/;"	v
arrayTrim	lib/Cake/Controller/Component/Acl/IniAcl.php	/^	public function arrayTrim($array) {$/;"	f
check	lib/Cake/Controller/Component/Acl/IniAcl.php	/^	public function check($aro, $aco, $action = null) {$/;"	f
config	lib/Cake/Controller/Component/Acl/IniAcl.php	/^			$this->config = $this->readConfigFile(APP . 'Config' . DS . 'acl.ini.php');$/;"	v
config	lib/Cake/Controller/Component/Acl/IniAcl.php	/^	public $config = null;$/;"	v
deny	lib/Cake/Controller/Component/Acl/IniAcl.php	/^	public function deny($aro, $aco, $action = "*") {$/;"	f
groupAllows	lib/Cake/Controller/Component/Acl/IniAcl.php	/^						$groupAllows = $this->arrayTrim(explode(",", $aclConfig[$group]['allow']));$/;"	v
groupDenies	lib/Cake/Controller/Component/Acl/IniAcl.php	/^						$groupDenies = $this->arrayTrim(explode(",", $aclConfig[$group]['deny']));$/;"	v
inherit	lib/Cake/Controller/Component/Acl/IniAcl.php	/^	public function inherit($aro, $aco, $action = "*") {$/;"	f
iniFile	lib/Cake/Controller/Component/Acl/IniAcl.php	/^		$iniFile = new IniReader(dirname($filename) . DS);$/;"	v
initialize	lib/Cake/Controller/Component/Acl/IniAcl.php	/^	public function initialize(Component $component) {$/;"	f
readConfigFile	lib/Cake/Controller/Component/Acl/IniAcl.php	/^	public function readConfigFile($filename) {$/;"	f
userAllows	lib/Cake/Controller/Component/Acl/IniAcl.php	/^			$userAllows = $this->arrayTrim(explode(",", $aclConfig[$aro]['allow']));$/;"	v
userDenies	lib/Cake/Controller/Component/Acl/IniAcl.php	/^			$userDenies = $this->arrayTrim(explode(",", $aclConfig[$aro]['deny']));$/;"	v
userGroups	lib/Cake/Controller/Component/Acl/IniAcl.php	/^			$userGroups = $this->arrayTrim(explode(",", $aclConfig[$aro]['groups']));$/;"	v
userPath	lib/Cake/Controller/Component/Acl/IniAcl.php	/^	public $userPath = 'User.username';$/;"	v
Aco	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^		$this->Aco = new PhpAco($rules);$/;"	v
Aco	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^	public $Aco = null;$/;"	v
Aro	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^		$this->Aro = new PhpAro($roles, $map, $alias);$/;"	v
Aro	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^	public $Aro = null;$/;"	v
PhpAcl	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^class PhpAcl extends Object implements AclInterface {$/;"	c
PhpAco	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^class PhpAco {$/;"	c
PhpAro	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^class PhpAro {$/;"	c
Reader	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^		$Reader = new PhpReader(dirname($this->options['config']) . DS);$/;"	v
__construct	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^	public function __construct() {$/;"	f
__construct	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^	public function __construct(array $aro = array(), array $map = array(), array $aliases = array()) {$/;"	f
__construct	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^	public function __construct(array $rules = array()) {$/;"	f
_tree	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^		$this->_tree = &$root;$/;"	v
_tree	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^		$this->_tree = array();$/;"	v
_tree	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^	protected $_tree = array();$/;"	v
access	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^	public function access($aro, $aco, $action, $type = 'deny') {$/;"	f
aco	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^		$aco = $this->resolve($aco);$/;"	v
aco	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^		$aco = ltrim(strtolower($aco), '\/');$/;"	v
aco	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^		$aco = preg_replace('#\/+#', '\/', $aco);$/;"	v
addAlias	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^	public function addAlias(array $alias) {$/;"	f
addRole	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^	public function addRole(array $aro) {$/;"	f
alias	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^		$alias = !empty($config['alias']) ? $config['alias'] : array();$/;"	v
aliases	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^		$this->aliases = $alias + $this->aliases;$/;"	v
aliases	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^		$this->aliases = $aliases;$/;"	v
aliases	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^	public $aliases = array();$/;"	v
allow	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^					$allow = $allow && !count(array_intersect($node['deny'], $aros));$/;"	v
allow	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^					$allow = $allow || count(array_intersect($node['allow'], $aros));$/;"	v
allow	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^		$allow = $this->options['policy'];$/;"	v
allow	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^	public function allow($aro, $aco, $action = "*") {$/;"	f
aro	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^				$aro = ltrim($aro, '\/');$/;"	v
aro	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^		$aro = $this->resolve($aro);$/;"	v
aroModel	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^					$aroModel = Inflector::camelize($aroModel);$/;"	v
aros	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^				$aros = array_map('trim', explode(',', $aros));$/;"	v
aros	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^		$aros = array();$/;"	v
build	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^	public function build(array $allow, array $deny = array()) {$/;"	f
build	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^	public function build(array $aros) {$/;"	f
build	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^	public function build(array $config) {$/;"	f
check	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^	public function check($aro, $aco, $action = "*") {$/;"	f
config	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^		$config = $Reader->read(basename($this->options['config']));$/;"	v
deny	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^	public function deny($aro, $aco, $action = "*") {$/;"	f
depth	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^		$depth = count($aco);$/;"	v
inherit	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^	public function inherit($aro, $aco, $action = "*") {$/;"	f
inheritedRoles	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^					$inheritedRoles = array_map('trim', explode(',', $inheritedRoles));$/;"	v
initialize	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^	public function initialize(Component $Component) {$/;"	f
level	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^		$level = 0;$/;"	v
map	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^			$this->map = $map;$/;"	v
map	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^		$map = !empty($config['map']) ? $config['map'] : array();$/;"	v
map	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^	public $map = array($/;"	v
mapped	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^						$mapped = $aroGroup . '\/' . $aroValue;$/;"	v
mapped	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^					$mapped = $aroGroup . '\/' . $aro;$/;"	v
mapped	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^					$mapped = $aroGroup . '\/' . $aro[$field];$/;"	v
mapped	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^					$mapped = $aroGroup . '\/' . $aro[$model][$field];$/;"	v
mapped	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^					$mapped = $aroGroup . '\/' . $aro['foreign_key'];$/;"	v
mapped	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^			$mapped = '';$/;"	v
modifiers	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^	public static $modifiers = array($/;"	v
options	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^			$this->options = $Component->settings['adapter'] + $this->options;$/;"	v
options	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^		$this->options = array($/;"	v
options	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^	public $options = array();$/;"	v
path	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^						$path = '';$/;"	v
path	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^		$path = $this->Aco->path($aco);$/;"	v
path	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^		$path = array();$/;"	v
path	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^	public function path($aco) {$/;"	f
pattern	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^				$pattern = '\/^' . str_replace(array_keys(self::$modifiers), array_values(self::$modifiers), $node) . '$\/';$/;"	v
prioritizedAros	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^		$prioritizedAros = $this->Aro->roles($aro);$/;"	v
resolve	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^	public function resolve($aco) {$/;"	f
resolve	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^	public function resolve($aro) {$/;"	f
roles	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^					$roles = $this->roles($dependency);$/;"	v
roles	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^		$roles = !empty($config['roles']) ? $config['roles'] : array();$/;"	v
roles	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^	public function roles($aro) {$/;"	f
root	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^		$root = $this->_tree;$/;"	v
stack	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^		$stack = array(array($aro, 0));$/;"	v
stack	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^		$stack = array(array($root, 0));$/;"	v
tree	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^				$tree = &$tree[$node]['children'];$/;"	v
tree	lib/Cake/Controller/Component/Acl/PhpAcl.php	/^		$tree = &$root;$/;"	v
AclComponent	lib/Cake/Controller/Component/AclComponent.php	/^class AclComponent extends Component {$/;"	c
Aco	lib/Cake/Controller/Component/AclComponent.php	/^	public $Aco;$/;"	v
Aro	lib/Cake/Controller/Component/AclComponent.php	/^	public $Aro;$/;"	v
_Instance	lib/Cake/Controller/Component/AclComponent.php	/^			$this->_Instance = $adapter;$/;"	v
_Instance	lib/Cake/Controller/Component/AclComponent.php	/^	protected $_Instance = null;$/;"	v
__construct	lib/Cake/Controller/Component/AclComponent.php	/^	public function __construct(ComponentCollection $collection, $settings = array()) {$/;"	f
adapter	lib/Cake/Controller/Component/AclComponent.php	/^				$adapter = new $adapter();$/;"	v
adapter	lib/Cake/Controller/Component/AclComponent.php	/^	public function adapter($adapter = null) {$/;"	f
allow	lib/Cake/Controller/Component/AclComponent.php	/^	public function allow($aro, $aco, $action = "*") {$/;"	f
check	lib/Cake/Controller/Component/AclComponent.php	/^	public function check($aro, $aco, $action = "*") {$/;"	f
deny	lib/Cake/Controller/Component/AclComponent.php	/^	public function deny($aro, $aco, $action = "*") {$/;"	f
grant	lib/Cake/Controller/Component/AclComponent.php	/^	public function grant($aro, $aco, $action = "*") {$/;"	f
inherit	lib/Cake/Controller/Component/AclComponent.php	/^	public function inherit($aro, $aco, $action = "*") {$/;"	f
name	lib/Cake/Controller/Component/AclComponent.php	/^		$name = Configure::read('Acl.classname');$/;"	v
revoke	lib/Cake/Controller/Component/AclComponent.php	/^	public function revoke($aro, $aco, $action = "*") {$/;"	f
AbstractPasswordHasher	lib/Cake/Controller/Component/Auth/AbstractPasswordHasher.php	/^abstract class AbstractPasswordHasher {$/;"	c
__construct	lib/Cake/Controller/Component/Auth/AbstractPasswordHasher.php	/^	public function __construct($config = array()) {$/;"	f
_config	lib/Cake/Controller/Component/Auth/AbstractPasswordHasher.php	/^			$this->_config = array_merge($this->_config, $config);$/;"	v
_config	lib/Cake/Controller/Component/Auth/AbstractPasswordHasher.php	/^	protected $_config = array();$/;"	v
config	lib/Cake/Controller/Component/Auth/AbstractPasswordHasher.php	/^	public function config($config = null) {$/;"	f
Acl	lib/Cake/Controller/Component/Auth/ActionsAuthorize.php	/^		$Acl = $this->_Collection->load('Acl');$/;"	v
ActionsAuthorize	lib/Cake/Controller/Component/Auth/ActionsAuthorize.php	/^class ActionsAuthorize extends BaseAuthorize {$/;"	c
authorize	lib/Cake/Controller/Component/Auth/ActionsAuthorize.php	/^	public function authorize($user, CakeRequest $request) {$/;"	f
user	lib/Cake/Controller/Component/Auth/ActionsAuthorize.php	/^		$user = array($this->settings['userModel'] => $user);$/;"	v
BaseAuthenticate	lib/Cake/Controller/Component/Auth/BaseAuthenticate.php	/^abstract class BaseAuthenticate {$/;"	c
_Collection	lib/Cake/Controller/Component/Auth/BaseAuthenticate.php	/^		$this->_Collection = $collection;$/;"	v
_Collection	lib/Cake/Controller/Component/Auth/BaseAuthenticate.php	/^	protected $_Collection;$/;"	v
__construct	lib/Cake/Controller/Component/Auth/BaseAuthenticate.php	/^	public function __construct(ComponentCollection $collection, $settings) {$/;"	f
_findUser	lib/Cake/Controller/Component/Auth/BaseAuthenticate.php	/^	protected function _findUser($username, $password = null) {$/;"	f
_password	lib/Cake/Controller/Component/Auth/BaseAuthenticate.php	/^	protected function _password($password) {$/;"	f
_passwordHasher	lib/Cake/Controller/Component/Auth/BaseAuthenticate.php	/^		$this->_passwordHasher = new $className($config);$/;"	v
_passwordHasher	lib/Cake/Controller/Component/Auth/BaseAuthenticate.php	/^	protected $_passwordHasher;$/;"	v
class	lib/Cake/Controller/Component/Auth/BaseAuthenticate.php	/^			$class = $this->settings['passwordHasher'];$/;"	v
class	lib/Cake/Controller/Component/Auth/BaseAuthenticate.php	/^			$class = $this->settings['passwordHasher']['className'];$/;"	v
className	lib/Cake/Controller/Component/Auth/BaseAuthenticate.php	/^		$className = $class . 'PasswordHasher';$/;"	v
conditions	lib/Cake/Controller/Component/Auth/BaseAuthenticate.php	/^			$conditions = $username;$/;"	v
conditions	lib/Cake/Controller/Component/Auth/BaseAuthenticate.php	/^			$conditions = array($/;"	v
conditions	lib/Cake/Controller/Component/Auth/BaseAuthenticate.php	/^			$conditions = array_merge($conditions, $this->settings['scope']);$/;"	v
config	lib/Cake/Controller/Component/Auth/BaseAuthenticate.php	/^			$config = $this->settings['passwordHasher'];$/;"	v
config	lib/Cake/Controller/Component/Auth/BaseAuthenticate.php	/^		$config = array();$/;"	v
fields	lib/Cake/Controller/Component/Auth/BaseAuthenticate.php	/^		$fields = $this->settings['fields'];$/;"	v
getUser	lib/Cake/Controller/Component/Auth/BaseAuthenticate.php	/^	public function getUser(CakeRequest $request) {$/;"	f
logout	lib/Cake/Controller/Component/Auth/BaseAuthenticate.php	/^	public function logout($user) {$/;"	f
passwordHasher	lib/Cake/Controller/Component/Auth/BaseAuthenticate.php	/^	public function passwordHasher() {$/;"	f
result	lib/Cake/Controller/Component/Auth/BaseAuthenticate.php	/^		$result = ClassRegistry::init($userModel)->find('first', array($/;"	v
settings	lib/Cake/Controller/Component/Auth/BaseAuthenticate.php	/^		$this->settings = Hash::merge($this->settings, $settings);$/;"	v
settings	lib/Cake/Controller/Component/Auth/BaseAuthenticate.php	/^	public $settings = array($/;"	v
unauthenticated	lib/Cake/Controller/Component/Auth/BaseAuthenticate.php	/^	public function unauthenticated(CakeRequest $request, CakeResponse $response) {$/;"	f
user	lib/Cake/Controller/Component/Auth/BaseAuthenticate.php	/^		$user = $result[$model];$/;"	v
userModel	lib/Cake/Controller/Component/Auth/BaseAuthenticate.php	/^		$userModel = $this->settings['userModel'];$/;"	v
BaseAuthorize	lib/Cake/Controller/Component/Auth/BaseAuthorize.php	/^abstract class BaseAuthorize {$/;"	c
_Collection	lib/Cake/Controller/Component/Auth/BaseAuthorize.php	/^		$this->_Collection = $collection;$/;"	v
_Collection	lib/Cake/Controller/Component/Auth/BaseAuthorize.php	/^	protected $_Collection;$/;"	v
_Controller	lib/Cake/Controller/Component/Auth/BaseAuthorize.php	/^			$this->_Controller = $controller;$/;"	v
_Controller	lib/Cake/Controller/Component/Auth/BaseAuthorize.php	/^	protected $_Controller = null;$/;"	v
__construct	lib/Cake/Controller/Component/Auth/BaseAuthorize.php	/^	public function __construct(ComponentCollection $collection, $settings = array()) {$/;"	f
action	lib/Cake/Controller/Component/Auth/BaseAuthorize.php	/^	public function action(CakeRequest $request, $path = '\/:plugin\/:controller\/:action') {$/;"	f
controller	lib/Cake/Controller/Component/Auth/BaseAuthorize.php	/^		$controller = $collection->getController();$/;"	v
controller	lib/Cake/Controller/Component/Auth/BaseAuthorize.php	/^	public function controller(Controller $controller = null) {$/;"	f
mapActions	lib/Cake/Controller/Component/Auth/BaseAuthorize.php	/^	public function mapActions($map = array()) {$/;"	f
path	lib/Cake/Controller/Component/Auth/BaseAuthorize.php	/^		$path = str_replace($/;"	v
path	lib/Cake/Controller/Component/Auth/BaseAuthorize.php	/^		$path = str_replace('\/\/', '\/', $path);$/;"	v
plugin	lib/Cake/Controller/Component/Auth/BaseAuthorize.php	/^		$plugin = empty($request['plugin']) ? null : Inflector::camelize($request['plugin']) . '\/';$/;"	v
settings	lib/Cake/Controller/Component/Auth/BaseAuthorize.php	/^		$this->settings = Hash::merge($this->settings, $settings);$/;"	v
settings	lib/Cake/Controller/Component/Auth/BaseAuthorize.php	/^	public $settings = array($/;"	v
BasicAuthenticate	lib/Cake/Controller/Component/Auth/BasicAuthenticate.php	/^class BasicAuthenticate extends BaseAuthenticate {$/;"	c
Exception	lib/Cake/Controller/Component/Auth/BasicAuthenticate.php	/^		$Exception = new UnauthorizedException();$/;"	v
__construct	lib/Cake/Controller/Component/Auth/BasicAuthenticate.php	/^	public function __construct(ComponentCollection $collection, $settings) {$/;"	f
authenticate	lib/Cake/Controller/Component/Auth/BasicAuthenticate.php	/^	public function authenticate(CakeRequest $request, CakeResponse $response) {$/;"	f
getUser	lib/Cake/Controller/Component/Auth/BasicAuthenticate.php	/^	public function getUser(CakeRequest $request) {$/;"	f
loginHeaders	lib/Cake/Controller/Component/Auth/BasicAuthenticate.php	/^	public function loginHeaders() {$/;"	f
pass	lib/Cake/Controller/Component/Auth/BasicAuthenticate.php	/^		$pass = env('PHP_AUTH_PW');$/;"	v
unauthenticated	lib/Cake/Controller/Component/Auth/BasicAuthenticate.php	/^	public function unauthenticated(CakeRequest $request, CakeResponse $response) {$/;"	f
username	lib/Cake/Controller/Component/Auth/BasicAuthenticate.php	/^		$username = env('PHP_AUTH_USER');$/;"	v
BlowfishAuthenticate	lib/Cake/Controller/Component/Auth/BlowfishAuthenticate.php	/^class BlowfishAuthenticate extends FormAuthenticate {$/;"	c
__construct	lib/Cake/Controller/Component/Auth/BlowfishAuthenticate.php	/^	public function __construct(ComponentCollection $collection, $settings) {$/;"	f
BlowfishPasswordHasher	lib/Cake/Controller/Component/Auth/BlowfishPasswordHasher.php	/^class BlowfishPasswordHasher extends AbstractPasswordHasher {$/;"	c
check	lib/Cake/Controller/Component/Auth/BlowfishPasswordHasher.php	/^	public function check($password, $hashedPassword) {$/;"	f
hash	lib/Cake/Controller/Component/Auth/BlowfishPasswordHasher.php	/^	public function hash($password) {$/;"	f
ControllerAuthorize	lib/Cake/Controller/Component/Auth/ControllerAuthorize.php	/^class ControllerAuthorize extends BaseAuthorize {$/;"	c
authorize	lib/Cake/Controller/Component/Auth/ControllerAuthorize.php	/^	public function authorize($user, CakeRequest $request) {$/;"	f
controller	lib/Cake/Controller/Component/Auth/ControllerAuthorize.php	/^	public function controller(Controller $controller = null) {$/;"	f
Acl	lib/Cake/Controller/Component/Auth/CrudAuthorize.php	/^		$Acl = $this->_Collection->load('Acl');$/;"	v
CrudAuthorize	lib/Cake/Controller/Component/Auth/CrudAuthorize.php	/^class CrudAuthorize extends BaseAuthorize {$/;"	c
__construct	lib/Cake/Controller/Component/Auth/CrudAuthorize.php	/^	public function __construct(ComponentCollection $collection, $settings = array()) {$/;"	f
_setPrefixMappings	lib/Cake/Controller/Component/Auth/CrudAuthorize.php	/^	protected function _setPrefixMappings() {$/;"	f
authorize	lib/Cake/Controller/Component/Auth/CrudAuthorize.php	/^	public function authorize($user, CakeRequest $request) {$/;"	f
crud	lib/Cake/Controller/Component/Auth/CrudAuthorize.php	/^		$crud = array('create', 'read', 'update', 'delete');$/;"	v
map	lib/Cake/Controller/Component/Auth/CrudAuthorize.php	/^				$map = array_merge($map, array($/;"	v
map	lib/Cake/Controller/Component/Auth/CrudAuthorize.php	/^		$map = array_combine($crud, $crud);$/;"	v
prefixes	lib/Cake/Controller/Component/Auth/CrudAuthorize.php	/^		$prefixes = Router::prefixes();$/;"	v
user	lib/Cake/Controller/Component/Auth/CrudAuthorize.php	/^		$user = array($this->settings['userModel'] => $user);$/;"	v
DigestAuthenticate	lib/Cake/Controller/Component/Auth/DigestAuthenticate.php	/^class DigestAuthenticate extends BasicAuthenticate {$/;"	c
__construct	lib/Cake/Controller/Component/Auth/DigestAuthenticate.php	/^	public function __construct(ComponentCollection $collection, $settings) {$/;"	f
_getDigest	lib/Cake/Controller/Component/Auth/DigestAuthenticate.php	/^	protected function _getDigest() {$/;"	f
digest	lib/Cake/Controller/Component/Auth/DigestAuthenticate.php	/^				$digest = substr($headers['Authorization'], 7);$/;"	v
digest	lib/Cake/Controller/Component/Auth/DigestAuthenticate.php	/^			$digest = substr($digest, 7);$/;"	v
digest	lib/Cake/Controller/Component/Auth/DigestAuthenticate.php	/^		$digest = $this->_getDigest();$/;"	v
digest	lib/Cake/Controller/Component/Auth/DigestAuthenticate.php	/^		$digest = env('PHP_AUTH_DIGEST');$/;"	v
generateResponseHash	lib/Cake/Controller/Component/Auth/DigestAuthenticate.php	/^	public function generateResponseHash($digest, $password) {$/;"	f
getUser	lib/Cake/Controller/Component/Auth/DigestAuthenticate.php	/^	public function getUser(CakeRequest $request) {$/;"	f
headers	lib/Cake/Controller/Component/Auth/DigestAuthenticate.php	/^			$headers = apache_request_headers();$/;"	v
keys	lib/Cake/Controller/Component/Auth/DigestAuthenticate.php	/^		$keys = $match = array();$/;"	v
loginHeaders	lib/Cake/Controller/Component/Auth/DigestAuthenticate.php	/^	public function loginHeaders() {$/;"	f
options	lib/Cake/Controller/Component/Auth/DigestAuthenticate.php	/^		$options = array($/;"	v
opts	lib/Cake/Controller/Component/Auth/DigestAuthenticate.php	/^		$opts = array();$/;"	v
parseAuthData	lib/Cake/Controller/Component/Auth/DigestAuthenticate.php	/^	public function parseAuthData($digest) {$/;"	f
password	lib/Cake/Controller/Component/Auth/DigestAuthenticate.php	/^		$password = $user[$this->settings['fields']['password']];$/;"	v
password	lib/Cake/Controller/Component/Auth/DigestAuthenticate.php	/^	public static function password($username, $password, $realm) {$/;"	f
req	lib/Cake/Controller/Component/Auth/DigestAuthenticate.php	/^		$req = array('nonce' => 1, 'nc' => 1, 'cnonce' => 1, 'qop' => 1, 'username' => 1, 'uri' => 1, 'response' => 1);$/;"	v
settings	lib/Cake/Controller/Component/Auth/DigestAuthenticate.php	/^	public $settings = array($/;"	v
user	lib/Cake/Controller/Component/Auth/DigestAuthenticate.php	/^		$user = $this->_findUser(array($/;"	v
FormAuthenticate	lib/Cake/Controller/Component/Auth/FormAuthenticate.php	/^class FormAuthenticate extends BaseAuthenticate {$/;"	c
_checkFields	lib/Cake/Controller/Component/Auth/FormAuthenticate.php	/^	protected function _checkFields(CakeRequest $request, $model, $fields) {$/;"	f
authenticate	lib/Cake/Controller/Component/Auth/FormAuthenticate.php	/^	public function authenticate(CakeRequest $request, CakeResponse $response) {$/;"	f
fields	lib/Cake/Controller/Component/Auth/FormAuthenticate.php	/^		$fields = $this->settings['fields'];$/;"	v
userModel	lib/Cake/Controller/Component/Auth/FormAuthenticate.php	/^		$userModel = $this->settings['userModel'];$/;"	v
value	lib/Cake/Controller/Component/Auth/FormAuthenticate.php	/^			$value = $request->data($model . '.' . $field);$/;"	v
SimplePasswordHasher	lib/Cake/Controller/Component/Auth/SimplePasswordHasher.php	/^class SimplePasswordHasher extends AbstractPasswordHasher {$/;"	c
_config	lib/Cake/Controller/Component/Auth/SimplePasswordHasher.php	/^	protected $_config = array('hashType' => null);$/;"	v
check	lib/Cake/Controller/Component/Auth/SimplePasswordHasher.php	/^	public function check($password, $hashedPassword) {$/;"	f
hash	lib/Cake/Controller/Component/Auth/SimplePasswordHasher.php	/^	public function hash($password) {$/;"	f
AuthComponent	lib/Cake/Controller/Component/AuthComponent.php	/^class AuthComponent extends Component {$/;"	c
_authenticateObjects	lib/Cake/Controller/Component/AuthComponent.php	/^		$this->_authenticateObjects = array();$/;"	v
_authenticateObjects	lib/Cake/Controller/Component/AuthComponent.php	/^	protected $_authenticateObjects = array();$/;"	v
_authorizeObjects	lib/Cake/Controller/Component/AuthComponent.php	/^		$this->_authorizeObjects = array();$/;"	v
_authorizeObjects	lib/Cake/Controller/Component/AuthComponent.php	/^	protected $_authorizeObjects = array();$/;"	v
_getUser	lib/Cake/Controller/Component/AuthComponent.php	/^	protected function _getUser() {$/;"	f
_isAllowed	lib/Cake/Controller/Component/AuthComponent.php	/^	protected function _isAllowed(Controller $controller) {$/;"	f
_isLoginAction	lib/Cake/Controller/Component/AuthComponent.php	/^	protected function _isLoginAction(Controller $controller) {$/;"	f
_methods	lib/Cake/Controller/Component/AuthComponent.php	/^		$this->_methods = $controller->methods;$/;"	v
_methods	lib/Cake/Controller/Component/AuthComponent.php	/^	protected $_methods = array();$/;"	v
_setDefaults	lib/Cake/Controller/Component/AuthComponent.php	/^	protected function _setDefaults() {$/;"	f
_unauthenticated	lib/Cake/Controller/Component/AuthComponent.php	/^	protected function _unauthenticated(Controller $controller) {$/;"	f
_unauthorized	lib/Cake/Controller/Component/AuthComponent.php	/^	protected function _unauthorized(Controller $controller) {$/;"	f
_user	lib/Cake/Controller/Component/AuthComponent.php	/^	protected static $_user = array();$/;"	v
action	lib/Cake/Controller/Component/AuthComponent.php	/^		$action = strtolower($controller->request->params['action']);$/;"	v
ajaxLogin	lib/Cake/Controller/Component/AuthComponent.php	/^	public $ajaxLogin = null;$/;"	v
allow	lib/Cake/Controller/Component/AuthComponent.php	/^	public function allow($action = null) {$/;"	f
allowedActions	lib/Cake/Controller/Component/AuthComponent.php	/^			$this->allowedActions = $this->_methods;$/;"	v
allowedActions	lib/Cake/Controller/Component/AuthComponent.php	/^			$this->allowedActions = array();$/;"	v
allowedActions	lib/Cake/Controller/Component/AuthComponent.php	/^		$this->allowedActions = array_merge($this->allowedActions, $args);$/;"	v
allowedActions	lib/Cake/Controller/Component/AuthComponent.php	/^		$this->allowedActions = array_values($this->allowedActions);$/;"	v
allowedActions	lib/Cake/Controller/Component/AuthComponent.php	/^	public $allowedActions = array();$/;"	v
args	lib/Cake/Controller/Component/AuthComponent.php	/^			$args = $args[0];$/;"	v
args	lib/Cake/Controller/Component/AuthComponent.php	/^		$args = func_get_args();$/;"	v
auth	lib/Cake/Controller/Component/AuthComponent.php	/^		$auth = $this->_authenticateObjects[count($this->_authenticateObjects) - 1];$/;"	v
authError	lib/Cake/Controller/Component/AuthComponent.php	/^	public $authError = null;$/;"	v
authenticate	lib/Cake/Controller/Component/AuthComponent.php	/^	public $authenticate = array('Form');$/;"	v
authorize	lib/Cake/Controller/Component/AuthComponent.php	/^	public $authorize = false;$/;"	v
class	lib/Cake/Controller/Component/AuthComponent.php	/^				$class = $settings['className'];$/;"	v
className	lib/Cake/Controller/Component/AuthComponent.php	/^			$className = $class . 'Authenticate';$/;"	v
className	lib/Cake/Controller/Component/AuthComponent.php	/^			$className = $class . 'Authorize';$/;"	v
components	lib/Cake/Controller/Component/AuthComponent.php	/^	public $components = array('Session', 'RequestHandler');$/;"	v
config	lib/Cake/Controller/Component/AuthComponent.php	/^		$config = Hash::normalize((array)$this->authenticate);$/;"	v
config	lib/Cake/Controller/Component/AuthComponent.php	/^		$config = Hash::normalize((array)$this->authorize);$/;"	v
constructAuthenticate	lib/Cake/Controller/Component/AuthComponent.php	/^	public function constructAuthenticate() {$/;"	f
constructAuthorize	lib/Cake/Controller/Component/AuthComponent.php	/^	public function constructAuthorize() {$/;"	f
default	lib/Cake/Controller/Component/AuthComponent.php	/^				$default = $this->loginRedirect;$/;"	v
default	lib/Cake/Controller/Component/AuthComponent.php	/^			$default = '\/';$/;"	v
defaults	lib/Cake/Controller/Component/AuthComponent.php	/^		$defaults = array($/;"	v
deny	lib/Cake/Controller/Component/AuthComponent.php	/^	public function deny($action = null) {$/;"	f
flash	lib/Cake/Controller/Component/AuthComponent.php	/^	public $flash = array($/;"	v
flash	lib/Cake/Controller/Component/AuthComponent.php	/^	public function flash($message) {$/;"	f
global	lib/Cake/Controller/Component/AuthComponent.php	/^			$global = $config[AuthComponent::ALL];$/;"	v
global	lib/Cake/Controller/Component/AuthComponent.php	/^		$global = array();$/;"	v
i	lib/Cake/Controller/Component/AuthComponent.php	/^			$i = array_search($arg, $this->allowedActions);$/;"	v
identify	lib/Cake/Controller/Component/AuthComponent.php	/^	public function identify(CakeRequest $request, CakeResponse $response) {$/;"	f
initialize	lib/Cake/Controller/Component/AuthComponent.php	/^	public function initialize(Controller $controller) {$/;"	f
isAuthorized	lib/Cake/Controller/Component/AuthComponent.php	/^	public function isAuthorized($user = null, CakeRequest $request = null) {$/;"	f
isMissingAction	lib/Cake/Controller/Component/AuthComponent.php	/^		$isMissingAction = ($/;"	v
loggedIn	lib/Cake/Controller/Component/AuthComponent.php	/^	public function loggedIn() {$/;"	f
login	lib/Cake/Controller/Component/AuthComponent.php	/^	public function login($user = null) {$/;"	f
loginAction	lib/Cake/Controller/Component/AuthComponent.php	/^		$loginAction = Router::normalize($this->loginAction);$/;"	v
loginAction	lib/Cake/Controller/Component/AuthComponent.php	/^	public $loginAction = array($/;"	v
loginRedirect	lib/Cake/Controller/Component/AuthComponent.php	/^	public $loginRedirect = null;$/;"	v
logout	lib/Cake/Controller/Component/AuthComponent.php	/^	public function logout() {$/;"	f
logoutRedirect	lib/Cake/Controller/Component/AuthComponent.php	/^	public $logoutRedirect = null;$/;"	v
mapActions	lib/Cake/Controller/Component/AuthComponent.php	/^	public function mapActions($map = array()) {$/;"	f
methods	lib/Cake/Controller/Component/AuthComponent.php	/^		$methods = array_flip(array_map('strtolower', $controller->methods));$/;"	v
password	lib/Cake/Controller/Component/AuthComponent.php	/^	public static function password($password) {$/;"	f
redir	lib/Cake/Controller/Component/AuthComponent.php	/^				$redir = $this->loginRedirect;$/;"	v
redir	lib/Cake/Controller/Component/AuthComponent.php	/^			$redir = $this->Session->read('Auth.redirect');$/;"	v
redir	lib/Cake/Controller/Component/AuthComponent.php	/^			$redir = $this->loginRedirect;$/;"	v
redir	lib/Cake/Controller/Component/AuthComponent.php	/^			$redir = $url;$/;"	v
redir	lib/Cake/Controller/Component/AuthComponent.php	/^			$redir = '\/';$/;"	v
redirect	lib/Cake/Controller/Component/AuthComponent.php	/^	public function redirect($url = null) {$/;"	f
redirectUrl	lib/Cake/Controller/Component/AuthComponent.php	/^	public function redirectUrl($url = null) {$/;"	f
request	lib/Cake/Controller/Component/AuthComponent.php	/^			$request = $this->request;$/;"	v
request	lib/Cake/Controller/Component/AuthComponent.php	/^		$this->request = $controller->request;$/;"	v
request	lib/Cake/Controller/Component/AuthComponent.php	/^	public $request;$/;"	v
response	lib/Cake/Controller/Component/AuthComponent.php	/^		$this->response = $controller->response;$/;"	v
response	lib/Cake/Controller/Component/AuthComponent.php	/^	public $response;$/;"	v
result	lib/Cake/Controller/Component/AuthComponent.php	/^			$result = $auth->authenticate($request, $response);$/;"	v
result	lib/Cake/Controller/Component/AuthComponent.php	/^			$result = $auth->getUser($this->request);$/;"	v
sessionKey	lib/Cake/Controller/Component/AuthComponent.php	/^	public static $sessionKey = 'Auth.User';$/;"	v
settings	lib/Cake/Controller/Component/AuthComponent.php	/^			$settings = array_merge($global, (array)$settings);$/;"	v
startup	lib/Cake/Controller/Component/AuthComponent.php	/^	public function startup(Controller $controller) {$/;"	f
unauthorizedRedirect	lib/Cake/Controller/Component/AuthComponent.php	/^	public $unauthorizedRedirect = true;$/;"	v
url	lib/Cake/Controller/Component/AuthComponent.php	/^			$url = $controller->referer($default, true);$/;"	v
url	lib/Cake/Controller/Component/AuthComponent.php	/^			$url = $controller->request->url;$/;"	v
url	lib/Cake/Controller/Component/AuthComponent.php	/^			$url = $this->unauthorizedRedirect;$/;"	v
url	lib/Cake/Controller/Component/AuthComponent.php	/^		$url = '';$/;"	v
url	lib/Cake/Controller/Component/AuthComponent.php	/^		$url = Router::normalize($url);$/;"	v
user	lib/Cake/Controller/Component/AuthComponent.php	/^			$user = $this->identify($this->request, $this->response);$/;"	v
user	lib/Cake/Controller/Component/AuthComponent.php	/^			$user = $this->user();$/;"	v
user	lib/Cake/Controller/Component/AuthComponent.php	/^			$user = CakeSession::read(self::$sessionKey);$/;"	v
user	lib/Cake/Controller/Component/AuthComponent.php	/^			$user = self::$_user;$/;"	v
user	lib/Cake/Controller/Component/AuthComponent.php	/^		$user = $this->user();$/;"	v
user	lib/Cake/Controller/Component/AuthComponent.php	/^	public static function user($key = null) {$/;"	f
CookieComponent	lib/Cake/Controller/Component/CookieComponent.php	/^class CookieComponent extends Component {$/;"	c
__construct	lib/Cake/Controller/Component/CookieComponent.php	/^	public function __construct(ComponentCollection $collection, $settings = array()) {$/;"	f
_decode	lib/Cake/Controller/Component/CookieComponent.php	/^	protected function _decode($value) {$/;"	f
_decrypt	lib/Cake/Controller/Component/CookieComponent.php	/^	protected function _decrypt($values) {$/;"	f
_delete	lib/Cake/Controller/Component/CookieComponent.php	/^	protected function _delete($name) {$/;"	f
_encrypt	lib/Cake/Controller/Component/CookieComponent.php	/^	protected function _encrypt($value) {$/;"	f
_encrypted	lib/Cake/Controller/Component/CookieComponent.php	/^		$this->_encrypted = $encrypt;$/;"	v
_encrypted	lib/Cake/Controller/Component/CookieComponent.php	/^		$this->_encrypted = true;$/;"	v
_expire	lib/Cake/Controller/Component/CookieComponent.php	/^	protected function _expire($expires = null) {$/;"	f
_expires	lib/Cake/Controller/Component/CookieComponent.php	/^			$this->_expires = $this->_reset;$/;"	v
_expires	lib/Cake/Controller/Component/CookieComponent.php	/^	protected $_expires = 0;$/;"	v
_explode	lib/Cake/Controller/Component/CookieComponent.php	/^	protected function _explode($string) {$/;"	f
_implode	lib/Cake/Controller/Component/CookieComponent.php	/^	protected function _implode(array $array) {$/;"	f
_reset	lib/Cake/Controller/Component/CookieComponent.php	/^			$this->_reset = null;$/;"	v
_reset	lib/Cake/Controller/Component/CookieComponent.php	/^		$this->_reset = $this->_expires;$/;"	v
_reset	lib/Cake/Controller/Component/CookieComponent.php	/^	protected $_reset = null;$/;"	v
_response	lib/Cake/Controller/Component/CookieComponent.php	/^			$this->_response = $controller->response;$/;"	v
_response	lib/Cake/Controller/Component/CookieComponent.php	/^			$this->_response = new CakeResponse();$/;"	v
_response	lib/Cake/Controller/Component/CookieComponent.php	/^	protected $_response = null;$/;"	v
_type	lib/Cake/Controller/Component/CookieComponent.php	/^		$this->_type = $type;$/;"	v
_type	lib/Cake/Controller/Component/CookieComponent.php	/^	protected $_type = 'cipher';$/;"	v
_values	lib/Cake/Controller/Component/CookieComponent.php	/^	protected $_values = array();$/;"	v
_write	lib/Cake/Controller/Component/CookieComponent.php	/^	protected function _write($name, $value) {$/;"	f
array	lib/Cake/Controller/Component/CookieComponent.php	/^		$array = array();$/;"	v
availableTypes	lib/Cake/Controller/Component/CookieComponent.php	/^		$availableTypes = array($/;"	v
check	lib/Cake/Controller/Component/CookieComponent.php	/^	public function check($key = null) {$/;"	f
cipher	lib/Cake/Controller/Component/CookieComponent.php	/^			$cipher = Security::cipher($value, $this->key);$/;"	v
cipher	lib/Cake/Controller/Component/CookieComponent.php	/^			$cipher = Security::encrypt($value, $this->key);$/;"	v
cipher	lib/Cake/Controller/Component/CookieComponent.php	/^			$cipher = Security::rijndael($value, $this->key, 'encrypt');$/;"	v
controller	lib/Cake/Controller/Component/CookieComponent.php	/^		$controller = $collection->getController();$/;"	v
decrypted	lib/Cake/Controller/Component/CookieComponent.php	/^		$decrypted = array();$/;"	v
delete	lib/Cake/Controller/Component/CookieComponent.php	/^	public function delete($key) {$/;"	f
destroy	lib/Cake/Controller/Component/CookieComponent.php	/^	public function destroy() {$/;"	f
domain	lib/Cake/Controller/Component/CookieComponent.php	/^	public $domain = '';$/;"	v
encrypt	lib/Cake/Controller/Component/CookieComponent.php	/^			$encrypt = true;$/;"	v
first	lib/Cake/Controller/Component/CookieComponent.php	/^		$first = substr($string, 0, 1);$/;"	v
firstName	lib/Cake/Controller/Component/CookieComponent.php	/^			$firstName = $names[0];$/;"	v
httpOnly	lib/Cake/Controller/Component/CookieComponent.php	/^	public $httpOnly = false;$/;"	v
isMultiValue	lib/Cake/Controller/Component/CookieComponent.php	/^			$isMultiValue = (is_array($value) || count($names) > 1);$/;"	v
key	lib/Cake/Controller/Component/CookieComponent.php	/^			$key = $names[0];$/;"	v
key	lib/Cake/Controller/Component/CookieComponent.php	/^			$key = array($key => $value);$/;"	v
key	lib/Cake/Controller/Component/CookieComponent.php	/^			$key = explode('|', $pair);$/;"	v
key	lib/Cake/Controller/Component/CookieComponent.php	/^		$this->key = Configure::read('Security.salt');$/;"	v
key	lib/Cake/Controller/Component/CookieComponent.php	/^	public $key = null;$/;"	v
name	lib/Cake/Controller/Component/CookieComponent.php	/^	public $name = 'CakeCookie';$/;"	v
names	lib/Cake/Controller/Component/CookieComponent.php	/^				$names = explode('.', $name, 2);$/;"	v
names	lib/Cake/Controller/Component/CookieComponent.php	/^			$names = array($name);$/;"	v
names	lib/Cake/Controller/Component/CookieComponent.php	/^			$names = explode('.', $key, 2);$/;"	v
names	lib/Cake/Controller/Component/CookieComponent.php	/^		$names = explode('.', $key, 2);$/;"	v
now	lib/Cake/Controller/Component/CookieComponent.php	/^		$now = new DateTime();$/;"	v
path	lib/Cake/Controller/Component/CookieComponent.php	/^	public $path = '\/';$/;"	v
plain	lib/Cake/Controller/Component/CookieComponent.php	/^			$plain = Security::cipher($value, $this->key);$/;"	v
plain	lib/Cake/Controller/Component/CookieComponent.php	/^			$plain = Security::decrypt($value, $this->key);$/;"	v
plain	lib/Cake/Controller/Component/CookieComponent.php	/^			$plain = Security::rijndael($value, $this->key, 'decrypt');$/;"	v
pos	lib/Cake/Controller/Component/CookieComponent.php	/^		$pos = strpos($value, $prefix);$/;"	v
prefix	lib/Cake/Controller/Component/CookieComponent.php	/^		$prefix = "Q2FrZQ==.";$/;"	v
prefix	lib/Cake/Controller/Component/CookieComponent.php	/^		$prefix = 'Q2FrZQ==.';$/;"	v
read	lib/Cake/Controller/Component/CookieComponent.php	/^	public function read($key = null) {$/;"	f
ret	lib/Cake/Controller/Component/CookieComponent.php	/^			$ret = json_decode($string, true);$/;"	v
secure	lib/Cake/Controller/Component/CookieComponent.php	/^	public $secure = false;$/;"	v
startup	lib/Cake/Controller/Component/CookieComponent.php	/^	public function startup(Controller $controller) {$/;"	f
time	lib/Cake/Controller/Component/CookieComponent.php	/^	public $time = null;$/;"	v
type	lib/Cake/Controller/Component/CookieComponent.php	/^			$type = 'cipher';$/;"	v
type	lib/Cake/Controller/Component/CookieComponent.php	/^		$type = $this->_type;$/;"	v
type	lib/Cake/Controller/Component/CookieComponent.php	/^	public function type($type = 'cipher') {$/;"	f
value	lib/Cake/Controller/Component/CookieComponent.php	/^			$value = $this->_implode($value);$/;"	v
value	lib/Cake/Controller/Component/CookieComponent.php	/^		$value = base64_decode(substr($value, strlen($prefix)));$/;"	v
write	lib/Cake/Controller/Component/CookieComponent.php	/^	public function write($key, $value = null, $encrypt = true, $expires = null) {$/;"	f
EmailComponent	lib/Cake/Controller/Component/EmailComponent.php	/^class EmailComponent extends Component {$/;"	c
__construct	lib/Cake/Controller/Component/EmailComponent.php	/^	public function __construct(ComponentCollection $collection, $settings = array()) {$/;"	f
_controller	lib/Cake/Controller/Component/EmailComponent.php	/^		$this->_controller = $collection->getController();$/;"	v
_controller	lib/Cake/Controller/Component/EmailComponent.php	/^	protected $_controller = null;$/;"	v
_findFiles	lib/Cake/Controller/Component/EmailComponent.php	/^	protected function _findFiles($attachment) {$/;"	f
_formatAddresses	lib/Cake/Controller/Component/EmailComponent.php	/^	protected function _formatAddresses($addresses) {$/;"	f
_formatAttachFiles	lib/Cake/Controller/Component/EmailComponent.php	/^	protected function _formatAttachFiles() {$/;"	f
_header	lib/Cake/Controller/Component/EmailComponent.php	/^		$this->_header = array();$/;"	v
_message	lib/Cake/Controller/Component/EmailComponent.php	/^		$this->_message = array();$/;"	v
_strip	lib/Cake/Controller/Component/EmailComponent.php	/^	protected function _strip($value, $message = false) {$/;"	f
additionalParams	lib/Cake/Controller/Component/EmailComponent.php	/^		$this->additionalParams = null;$/;"	v
additionalParams	lib/Cake/Controller/Component/EmailComponent.php	/^	public $additionalParams = null;$/;"	v
address	lib/Cake/Controller/Component/EmailComponent.php	/^				$address = $this->_strip($address);$/;"	v
attachments	lib/Cake/Controller/Component/EmailComponent.php	/^		$this->attachments = array();$/;"	v
attachments	lib/Cake/Controller/Component/EmailComponent.php	/^	public $attachments = array();$/;"	v
bcc	lib/Cake/Controller/Component/EmailComponent.php	/^		$this->bcc = array();$/;"	v
bcc	lib/Cake/Controller/Component/EmailComponent.php	/^	public $bcc = array();$/;"	v
cc	lib/Cake/Controller/Component/EmailComponent.php	/^		$this->cc = array();$/;"	v
cc	lib/Cake/Controller/Component/EmailComponent.php	/^	public $cc = array();$/;"	v
charset	lib/Cake/Controller/Component/EmailComponent.php	/^			$this->charset = Configure::read('App.encoding');$/;"	v
charset	lib/Cake/Controller/Component/EmailComponent.php	/^	public $charset = 'utf-8';$/;"	v
date	lib/Cake/Controller/Component/EmailComponent.php	/^		$this->date = null;$/;"	v
date	lib/Cake/Controller/Component/EmailComponent.php	/^	public $date = null;$/;"	v
delivery	lib/Cake/Controller/Component/EmailComponent.php	/^		$this->delivery = 'mail';$/;"	v
delivery	lib/Cake/Controller/Component/EmailComponent.php	/^	public $delivery = 'mail';$/;"	v
file	lib/Cake/Controller/Component/EmailComponent.php	/^				$file = $path . DS . $attachment;$/;"	v
file	lib/Cake/Controller/Component/EmailComponent.php	/^			$file = $this->_findFiles($attachment);$/;"	v
filePaths	lib/Cake/Controller/Component/EmailComponent.php	/^	public $filePaths = array();$/;"	v
filename	lib/Cake/Controller/Component/EmailComponent.php	/^					$filename = basename($file);$/;"	v
files	lib/Cake/Controller/Component/EmailComponent.php	/^		$files = array();$/;"	v
formatted	lib/Cake/Controller/Component/EmailComponent.php	/^		$formatted = array();$/;"	v
from	lib/Cake/Controller/Component/EmailComponent.php	/^		$this->from = null;$/;"	v
from	lib/Cake/Controller/Component/EmailComponent.php	/^	public $from = null;$/;"	v
headers	lib/Cake/Controller/Component/EmailComponent.php	/^		$headers = array('X-Mailer' => $this->xMailer);$/;"	v
headers	lib/Cake/Controller/Component/EmailComponent.php	/^	public $headers = array();$/;"	v
htmlMessage	lib/Cake/Controller/Component/EmailComponent.php	/^			$this->htmlMessage = null;$/;"	v
htmlMessage	lib/Cake/Controller/Component/EmailComponent.php	/^		$this->htmlMessage = $lib->message(CakeEmail::MESSAGE_HTML);$/;"	v
htmlMessage	lib/Cake/Controller/Component/EmailComponent.php	/^		$this->htmlMessage = null;$/;"	v
htmlMessage	lib/Cake/Controller/Component/EmailComponent.php	/^	public $htmlMessage = null;$/;"	v
initialize	lib/Cake/Controller/Component/EmailComponent.php	/^	public function initialize(Controller $controller) {$/;"	f
layout	lib/Cake/Controller/Component/EmailComponent.php	/^			$this->layout = $layout;$/;"	v
layout	lib/Cake/Controller/Component/EmailComponent.php	/^	public $layout = 'default';$/;"	v
lib	lib/Cake/Controller/Component/EmailComponent.php	/^		$lib = new CakeEmail();$/;"	v
lineFeed	lib/Cake/Controller/Component/EmailComponent.php	/^	public $lineFeed = PHP_EOL;$/;"	v
messageId	lib/Cake/Controller/Component/EmailComponent.php	/^		$this->messageId = true;$/;"	v
messageId	lib/Cake/Controller/Component/EmailComponent.php	/^	public $messageId = true;$/;"	v
readReceipt	lib/Cake/Controller/Component/EmailComponent.php	/^	public $readReceipt = null;$/;"	v
replyTo	lib/Cake/Controller/Component/EmailComponent.php	/^		$this->replyTo = null;$/;"	v
replyTo	lib/Cake/Controller/Component/EmailComponent.php	/^	public $replyTo = null;$/;"	v
reset	lib/Cake/Controller/Component/EmailComponent.php	/^	public function reset() {$/;"	f
return	lib/Cake/Controller/Component/EmailComponent.php	/^		$this->return = null;$/;"	v
return	lib/Cake/Controller/Component/EmailComponent.php	/^	public $return = null;$/;"	v
search	lib/Cake/Controller/Component/EmailComponent.php	/^		$search = '#(?:' . $search . ')#i';$/;"	v
search	lib/Cake/Controller/Component/EmailComponent.php	/^		$search = '%0a|%0d|Content-(?:Type|Transfer-Encoding)\\:';$/;"	v
send	lib/Cake/Controller/Component/EmailComponent.php	/^	public function send($content = null, $template = null, $layout = null) {$/;"	f
sendAs	lib/Cake/Controller/Component/EmailComponent.php	/^	public $sendAs = 'text';$/;"	v
sent	lib/Cake/Controller/Component/EmailComponent.php	/^		$sent = $lib->send($content);$/;"	v
smtpOptions	lib/Cake/Controller/Component/EmailComponent.php	/^	public $smtpOptions = array();$/;"	v
subject	lib/Cake/Controller/Component/EmailComponent.php	/^		$this->subject = null;$/;"	v
subject	lib/Cake/Controller/Component/EmailComponent.php	/^	public $subject = null;$/;"	v
template	lib/Cake/Controller/Component/EmailComponent.php	/^			$this->template = $template;$/;"	v
template	lib/Cake/Controller/Component/EmailComponent.php	/^		$this->template = null;$/;"	v
template	lib/Cake/Controller/Component/EmailComponent.php	/^	public $template = null;$/;"	v
textMessage	lib/Cake/Controller/Component/EmailComponent.php	/^			$this->textMessage = null;$/;"	v
textMessage	lib/Cake/Controller/Component/EmailComponent.php	/^		$this->textMessage = $lib->message(CakeEmail::MESSAGE_TEXT);$/;"	v
textMessage	lib/Cake/Controller/Component/EmailComponent.php	/^		$this->textMessage = null;$/;"	v
textMessage	lib/Cake/Controller/Component/EmailComponent.php	/^	public $textMessage = null;$/;"	v
to	lib/Cake/Controller/Component/EmailComponent.php	/^		$this->to = array();$/;"	v
to	lib/Cake/Controller/Component/EmailComponent.php	/^	public $to = null;$/;"	v
value	lib/Cake/Controller/Component/EmailComponent.php	/^			$value = preg_replace($search, '', $value);$/;"	v
xMailer	lib/Cake/Controller/Component/EmailComponent.php	/^	public $xMailer = 'CakePHP Email Component';$/;"	v
Controller	lib/Cake/Controller/Component/PaginatorComponent.php	/^		$this->Controller = $collection->getController();$/;"	v
PaginatorComponent	lib/Cake/Controller/Component/PaginatorComponent.php	/^class PaginatorComponent extends Component {$/;"	c
__construct	lib/Cake/Controller/Component/PaginatorComponent.php	/^	public function __construct(ComponentCollection $collection, $settings = array()) {$/;"	f
_getObject	lib/Cake/Controller/Component/PaginatorComponent.php	/^	protected function _getObject($object) {$/;"	f
alias	lib/Cake/Controller/Component/PaginatorComponent.php	/^				$alias = $object->alias;$/;"	v
assoc	lib/Cake/Controller/Component/PaginatorComponent.php	/^			$assoc = null;$/;"	v
checkLimit	lib/Cake/Controller/Component/PaginatorComponent.php	/^	public function checkLimit(array $options) {$/;"	f
className	lib/Cake/Controller/Component/PaginatorComponent.php	/^			$className = null;$/;"	v
conditions	lib/Cake/Controller/Component/PaginatorComponent.php	/^			$conditions = array($conditions, $scope);$/;"	v
conditions	lib/Cake/Controller/Component/PaginatorComponent.php	/^			$conditions = array_merge($conditions, $scope);$/;"	v
conditions	lib/Cake/Controller/Component/PaginatorComponent.php	/^		$conditions = $fields = $order = $limit = $page = $recursive = null;$/;"	v
correctAlias	lib/Cake/Controller/Component/PaginatorComponent.php	/^				$correctAlias = ($object->alias === $alias);$/;"	v
count	lib/Cake/Controller/Component/PaginatorComponent.php	/^			$count = $object->find('count', array_merge($parameters, $extra));$/;"	v
count	lib/Cake/Controller/Component/PaginatorComponent.php	/^			$count = $object->paginateCount($conditions, $recursive, $extra);$/;"	v
count	lib/Cake/Controller/Component/PaginatorComponent.php	/^			$count = 0;$/;"	v
count	lib/Cake/Controller/Component/PaginatorComponent.php	/^			$count = count($results);$/;"	v
defaults	lib/Cake/Controller/Component/PaginatorComponent.php	/^			$defaults = $this->settings[$alias];$/;"	v
defaults	lib/Cake/Controller/Component/PaginatorComponent.php	/^		$defaults = $this->getDefaults($alias);$/;"	v
defaults	lib/Cake/Controller/Component/PaginatorComponent.php	/^		$defaults = $this->getDefaults($object->alias);$/;"	v
defaults	lib/Cake/Controller/Component/PaginatorComponent.php	/^		$defaults = $this->settings;$/;"	v
direction	lib/Cake/Controller/Component/PaginatorComponent.php	/^				$direction = 'asc';$/;"	v
direction	lib/Cake/Controller/Component/PaginatorComponent.php	/^				$direction = strtolower($options['direction']);$/;"	v
direction	lib/Cake/Controller/Component/PaginatorComponent.php	/^			$direction = null;$/;"	v
extra	lib/Cake/Controller/Component/PaginatorComponent.php	/^		$extra = array_diff_key($options, compact($/;"	v
field	lib/Cake/Controller/Component/PaginatorComponent.php	/^				$field = $key;$/;"	v
field	lib/Cake/Controller/Component/PaginatorComponent.php	/^			$field = key($options['order']);$/;"	v
getDefaults	lib/Cake/Controller/Component/PaginatorComponent.php	/^	public function getDefaults($alias) {$/;"	f
inWhitelist	lib/Cake/Controller/Component/PaginatorComponent.php	/^			$inWhitelist = in_array($field, $whitelist, true);$/;"	v
mergeOptions	lib/Cake/Controller/Component/PaginatorComponent.php	/^	public function mergeOptions($alias) {$/;"	f
name	lib/Cake/Controller/Component/PaginatorComponent.php	/^			$name = $this->Controller->uses[0];$/;"	v
object	lib/Cake/Controller/Component/PaginatorComponent.php	/^			$object = null;$/;"	v
object	lib/Cake/Controller/Component/PaginatorComponent.php	/^		$object = $this->_getObject($object);$/;"	v
options	lib/Cake/Controller/Component/PaginatorComponent.php	/^		$options = $this->checkLimit($options);$/;"	v
options	lib/Cake/Controller/Component/PaginatorComponent.php	/^		$options = $this->mergeOptions($object->alias);$/;"	v
options	lib/Cake/Controller/Component/PaginatorComponent.php	/^		$options = $this->validateSort($object, $options, $whitelist);$/;"	v
order	lib/Cake/Controller/Component/PaginatorComponent.php	/^			$order = array();$/;"	v
page	lib/Cake/Controller/Component/PaginatorComponent.php	/^			$page = 1;$/;"	v
page	lib/Cake/Controller/Component/PaginatorComponent.php	/^		$page = $options['page'] = (int)$page;$/;"	v
page	lib/Cake/Controller/Component/PaginatorComponent.php	/^		$page = max(min($page, $pageCount), 1);$/;"	v
pageCount	lib/Cake/Controller/Component/PaginatorComponent.php	/^		$pageCount = intval(ceil($count \/ $limit));$/;"	v
paginate	lib/Cake/Controller/Component/PaginatorComponent.php	/^	public function paginate($object = null, $scope = array(), $whitelist = array()) {$/;"	f
paging	lib/Cake/Controller/Component/PaginatorComponent.php	/^		$paging = array($/;"	v
parameters	lib/Cake/Controller/Component/PaginatorComponent.php	/^			$parameters = compact('conditions');$/;"	v
parameters	lib/Cake/Controller/Component/PaginatorComponent.php	/^			$parameters = compact('conditions', 'fields', 'order', 'limit', 'page');$/;"	v
recursive	lib/Cake/Controller/Component/PaginatorComponent.php	/^			$recursive = $object->recursive;$/;"	v
request	lib/Cake/Controller/Component/PaginatorComponent.php	/^				$request = $this->Controller->request->params['named'];$/;"	v
request	lib/Cake/Controller/Component/PaginatorComponent.php	/^				$request = $this->Controller->request->query;$/;"	v
request	lib/Cake/Controller/Component/PaginatorComponent.php	/^		$request = array_intersect_key($request, array_flip($this->whitelist));$/;"	v
requestedPage	lib/Cake/Controller/Component/PaginatorComponent.php	/^		$requestedPage = $page;$/;"	v
results	lib/Cake/Controller/Component/PaginatorComponent.php	/^			$results = $object->find($type, array_merge($parameters, $extra));$/;"	v
results	lib/Cake/Controller/Component/PaginatorComponent.php	/^			$results = $object->paginate($/;"	v
scope	lib/Cake/Controller/Component/PaginatorComponent.php	/^			$scope = $object;$/;"	v
settings	lib/Cake/Controller/Component/PaginatorComponent.php	/^		$settings = array_merge($this->settings, (array)$settings);$/;"	v
settings	lib/Cake/Controller/Component/PaginatorComponent.php	/^	public $settings = array($/;"	v
type	lib/Cake/Controller/Component/PaginatorComponent.php	/^			$type = $extra['findType'];$/;"	v
type	lib/Cake/Controller/Component/PaginatorComponent.php	/^			$type = $options[0];$/;"	v
type	lib/Cake/Controller/Component/PaginatorComponent.php	/^		$type = 'all';$/;"	v
validateSort	lib/Cake/Controller/Component/PaginatorComponent.php	/^	public function validateSort(Model $object, array $options, array $whitelist = array()) {$/;"	f
whitelist	lib/Cake/Controller/Component/PaginatorComponent.php	/^			$whitelist = $scope;$/;"	v
whitelist	lib/Cake/Controller/Component/PaginatorComponent.php	/^	public $whitelist = array($/;"	v
Controller	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^		$Controller = $collection->getController();$/;"	v
RequestHandlerComponent	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^class RequestHandlerComponent extends Component {$/;"	c
__construct	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public function __construct(ComponentCollection $collection, $settings = array()) {$/;"	f
_inputTypeMap	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	protected $_inputTypeMap = array($/;"	v
_renderType	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^		$this->_renderType = $type;$/;"	v
_renderType	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	protected $_renderType = null;$/;"	v
_setExtension	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	protected function _setExtension() {$/;"	f
_viewClassMap	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	protected $_viewClassMap = array($/;"	v
accept	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^		$accept = $this->request->parseAccept();$/;"	v
acceptRaw	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^		$acceptRaw = $this->request->parseAccept();$/;"	v
accepted	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^		$accepted = $this->request->accepts();$/;"	v
accepts	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^		$accepts = $this->mapType(array_shift($acceptRaw));$/;"	v
accepts	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^		$accepts = $this->response->mapType($accept);$/;"	v
accepts	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public function accepts($type = null) {$/;"	f
addInputType	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public function addInputType($type, $handler) {$/;"	f
ajaxLayout	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public $ajaxLayout = 'ajax';$/;"	v
beforeRedirect	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public function beforeRedirect(Controller $controller, $url, $status = null, $exit = true) {$/;"	f
beforeRender	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public function beforeRender(Controller $controller) {$/;"	f
cType	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^				$cType = $cType[$options['index']];$/;"	v
cType	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^				$cType = $cType[0];$/;"	v
cType	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^				$cType = $this->prefers($cType);$/;"	v
cType	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^			$cType = $this->response->getMimeType($type);$/;"	v
cType	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^		$cType = $type;$/;"	v
code	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^			$code = key($statusCode);$/;"	v
convertXml	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public function convertXml($xml) {$/;"	f
defaults	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^		$defaults = array('charset' => 'UTF-8');$/;"	v
defaults	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^		$defaults = array('index' => null, 'charset' => null, 'attachment' => false);$/;"	v
enabled	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public $enabled = true;$/;"	v
ext	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^				$this->ext = current($ext);$/;"	v
ext	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^			$ext = array_intersect($extensions, $types);$/;"	v
ext	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^			$this->ext = $this->request->params['ext'];$/;"	v
ext	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public $ext = null;$/;"	v
extensions	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^		$extensions = Router::extensions();$/;"	v
getAjaxVersion	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public function getAjaxVersion() {$/;"	f
getClientIP	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public function getClientIP($safe = true) {$/;"	f
getReferer	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public function getReferer() {$/;"	f
helper	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^		$helper = ucfirst($type);$/;"	v
httpX	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^		$httpX = env('HTTP_X_PROTOTYPE_VERSION');$/;"	v
initialize	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public function initialize(Controller $controller) {$/;"	f
input	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^				$input = call_user_func_array(array($controller->request, 'input'), $handler);$/;"	v
intersect	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^		$intersect = array_values(array_intersect($accepts, $types));$/;"	v
isAjax	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public function isAjax() {$/;"	f
isAtom	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public function isAtom() {$/;"	f
isDelete	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public function isDelete() {$/;"	f
isFlash	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public function isFlash() {$/;"	f
isGet	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public function isGet() {$/;"	f
isMobile	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public function isMobile() {$/;"	f
isPost	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public function isPost() {$/;"	f
isPut	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public function isPut() {$/;"	f
isRecognized	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^		$isRecognized = ($/;"	v
isRss	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public function isRss() {$/;"	f
isSSL	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public function isSSL() {$/;"	f
isWap	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public function isWap() {$/;"	f
isXml	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public function isXml() {$/;"	f
mapAlias	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public function mapAlias($alias) {$/;"	f
mapType	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public function mapType($cType) {$/;"	f
options	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^		$options = $options + $defaults;$/;"	v
params	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^		$this->params = $controller->params;$/;"	v
pluginDot	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^		$pluginDot = null;$/;"	v
preferedTypes	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^		$preferedTypes = current($accepts);$/;"	v
prefers	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public function prefers($type = null) {$/;"	f
renderAs	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public function renderAs(Controller $controller, $type, $options = array()) {$/;"	f
request	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^		$this->request = $Controller->request;$/;"	v
request	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public $request;$/;"	v
requestedWith	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public function requestedWith($type = null) {$/;"	f
respondAs	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public function respondAs($type, $options = array()) {$/;"	f
response	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^		$this->response = $Controller->response;$/;"	v
response	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public $response;$/;"	v
responseType	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public function responseType() {$/;"	f
setContent	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public function setContent($name, $type = null) {$/;"	f
startup	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public function startup(Controller $controller) {$/;"	f
statusCode	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^			$statusCode = $this->response->httpCodes($status);$/;"	v
t	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^				$t = $this->mapAlias($t);$/;"	v
type	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^		$type = $this->response->getMimeType($alias);$/;"	v
types	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^		$types = (array)$type;$/;"	v
url	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^			$url = Router::url($url + array('base' => false));$/;"	v
viewClass	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^			$viewClass = Inflector::classify($type);$/;"	v
viewClassMap	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^		$viewClassMap = $this->viewClassMap();$/;"	v
viewClassMap	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^	public function viewClassMap($type = null, $viewClass = null) {$/;"	f
viewName	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^		$viewName = $viewClass . 'View';$/;"	v
xml	lib/Cake/Controller/Component/RequestHandlerComponent.php	/^			$xml = Xml::build($xml);$/;"	v
SecurityComponent	lib/Cake/Controller/Component/SecurityComponent.php	/^class SecurityComponent extends Component {$/;"	c
_action	lib/Cake/Controller/Component/SecurityComponent.php	/^		$this->_action = $this->request->params['action'];$/;"	v
_action	lib/Cake/Controller/Component/SecurityComponent.php	/^	protected $_action = null;$/;"	v
_authRequired	lib/Cake/Controller/Component/SecurityComponent.php	/^	protected function _authRequired(Controller $controller) {$/;"	f
_callback	lib/Cake/Controller/Component/SecurityComponent.php	/^	protected function _callback(Controller $controller, $method, $params = array()) {$/;"	f
_expireTokens	lib/Cake/Controller/Component/SecurityComponent.php	/^	protected function _expireTokens($tokens) {$/;"	f
_methodsRequired	lib/Cake/Controller/Component/SecurityComponent.php	/^	protected function _methodsRequired(Controller $controller) {$/;"	f
_requireMethod	lib/Cake/Controller/Component/SecurityComponent.php	/^	protected function _requireMethod($method, $actions = array()) {$/;"	f
_secureRequired	lib/Cake/Controller/Component/SecurityComponent.php	/^	protected function _secureRequired(Controller $controller) {$/;"	f
_validateCsrf	lib/Cake/Controller/Component/SecurityComponent.php	/^	protected function _validateCsrf(Controller $controller) {$/;"	f
_validatePost	lib/Cake/Controller/Component/SecurityComponent.php	/^	protected function _validatePost(Controller $controller) {$/;"	f
actions	lib/Cake/Controller/Component/SecurityComponent.php	/^			$actions = $actions[0];$/;"	v
allowedActions	lib/Cake/Controller/Component/SecurityComponent.php	/^	public $allowedActions = array();$/;"	v
allowedControllers	lib/Cake/Controller/Component/SecurityComponent.php	/^	public $allowedControllers = array();$/;"	v
args	lib/Cake/Controller/Component/SecurityComponent.php	/^		$args = func_get_args();$/;"	v
authKey	lib/Cake/Controller/Component/SecurityComponent.php	/^		$authKey = Security::generateAuthKey();$/;"	v
blackHole	lib/Cake/Controller/Component/SecurityComponent.php	/^	public function blackHole(Controller $controller, $error = '') {$/;"	f
blackHoleCallback	lib/Cake/Controller/Component/SecurityComponent.php	/^	public $blackHoleCallback = null;$/;"	v
check	lib/Cake/Controller/Component/SecurityComponent.php	/^		$check = $controller->request->data;$/;"	v
check	lib/Cake/Controller/Component/SecurityComponent.php	/^		$check = Security::hash(implode('', $hashParts), 'sha1');$/;"	v
components	lib/Cake/Controller/Component/SecurityComponent.php	/^	public $components = array('Session');$/;"	v
csrfCheck	lib/Cake/Controller/Component/SecurityComponent.php	/^	public $csrfCheck = true;$/;"	v
csrfExpires	lib/Cake/Controller/Component/SecurityComponent.php	/^	public $csrfExpires = '+30 minutes';$/;"	v
csrfLimit	lib/Cake/Controller/Component/SecurityComponent.php	/^	public $csrfLimit = 100;$/;"	v
csrfTokens	lib/Cake/Controller/Component/SecurityComponent.php	/^			$csrfTokens = array_keys($token['csrfTokens']);$/;"	v
csrfUseOnce	lib/Cake/Controller/Component/SecurityComponent.php	/^	public $csrfUseOnce = true;$/;"	v
data	lib/Cake/Controller/Component/SecurityComponent.php	/^		$data = $controller->request->data;$/;"	v
disabledFields	lib/Cake/Controller/Component/SecurityComponent.php	/^	public $disabledFields = array();$/;"	v
field	lib/Cake/Controller/Component/SecurityComponent.php	/^					$field = array_values(array_intersect(explode('.', $key), $off));$/;"	v
fieldList	lib/Cake/Controller/Component/SecurityComponent.php	/^		$fieldList = array_keys($fields);$/;"	v
fields	lib/Cake/Controller/Component/SecurityComponent.php	/^		$fields = Hash::flatten($check);$/;"	v
generateToken	lib/Cake/Controller/Component/SecurityComponent.php	/^	public function generateToken(CakeRequest $request) {$/;"	f
hashParts	lib/Cake/Controller/Component/SecurityComponent.php	/^		$hashParts = array($/;"	v
isLocked	lib/Cake/Controller/Component/SecurityComponent.php	/^			$isLocked = (is_array($locked) && in_array($key, $locked));$/;"	v
isNotRequestAction	lib/Cake/Controller/Component/SecurityComponent.php	/^		$isNotRequestAction = ($/;"	v
isPost	lib/Cake/Controller/Component/SecurityComponent.php	/^		$isPost = $this->request->is(array('post', 'put'));$/;"	v
isUnlocked	lib/Cake/Controller/Component/SecurityComponent.php	/^					$isUnlocked = ($field === $off);$/;"	v
locked	lib/Cake/Controller/Component/SecurityComponent.php	/^		$locked = '';$/;"	v
locked	lib/Cake/Controller/Component/SecurityComponent.php	/^		$locked = explode('|', $locked);$/;"	v
lockedFields	lib/Cake/Controller/Component/SecurityComponent.php	/^		$lockedFields = array();$/;"	v
multi	lib/Cake/Controller/Component/SecurityComponent.php	/^		$multi = array();$/;"	v
now	lib/Cake/Controller/Component/SecurityComponent.php	/^		$now = time();$/;"	v
off	lib/Cake/Controller/Component/SecurityComponent.php	/^					$off = explode('.', $off);$/;"	v
overflow	lib/Cake/Controller/Component/SecurityComponent.php	/^		$overflow = count($tokens) - $this->csrfLimit;$/;"	v
property	lib/Cake/Controller/Component/SecurityComponent.php	/^			$property = 'require' . $method;$/;"	v
request	lib/Cake/Controller/Component/SecurityComponent.php	/^		$this->request = $controller->request;$/;"	v
request	lib/Cake/Controller/Component/SecurityComponent.php	/^	public $request;$/;"	v
requestToken	lib/Cake/Controller/Component/SecurityComponent.php	/^		$requestToken = $controller->request->data('_Token.key');$/;"	v
require	lib/Cake/Controller/Component/SecurityComponent.php	/^				$require = $this->$property;$/;"	v
requireAuth	lib/Cake/Controller/Component/SecurityComponent.php	/^			$requireAuth = $this->requireAuth;$/;"	v
requireAuth	lib/Cake/Controller/Component/SecurityComponent.php	/^	public $requireAuth = array();$/;"	v
requireAuth	lib/Cake/Controller/Component/SecurityComponent.php	/^	public function requireAuth() {$/;"	f
requireDelete	lib/Cake/Controller/Component/SecurityComponent.php	/^	public $requireDelete = array();$/;"	v
requireDelete	lib/Cake/Controller/Component/SecurityComponent.php	/^	public function requireDelete() {$/;"	f
requireGet	lib/Cake/Controller/Component/SecurityComponent.php	/^	public $requireGet = array();$/;"	v
requireGet	lib/Cake/Controller/Component/SecurityComponent.php	/^	public function requireGet() {$/;"	f
requirePost	lib/Cake/Controller/Component/SecurityComponent.php	/^	public $requirePost = array();$/;"	v
requirePost	lib/Cake/Controller/Component/SecurityComponent.php	/^	public function requirePost() {$/;"	f
requirePut	lib/Cake/Controller/Component/SecurityComponent.php	/^	public $requirePut = array();$/;"	v
requirePut	lib/Cake/Controller/Component/SecurityComponent.php	/^	public function requirePut() {$/;"	f
requireSecure	lib/Cake/Controller/Component/SecurityComponent.php	/^			$requireSecure = $this->requireSecure;$/;"	v
requireSecure	lib/Cake/Controller/Component/SecurityComponent.php	/^	public $requireSecure = array();$/;"	v
requireSecure	lib/Cake/Controller/Component/SecurityComponent.php	/^	public function requireSecure() {$/;"	f
startup	lib/Cake/Controller/Component/SecurityComponent.php	/^	public function startup(Controller $controller) {$/;"	f
tData	lib/Cake/Controller/Component/SecurityComponent.php	/^					$tData = $this->Session->read('_Token');$/;"	v
token	lib/Cake/Controller/Component/SecurityComponent.php	/^		$token = $this->Session->read('_Token');$/;"	v
token	lib/Cake/Controller/Component/SecurityComponent.php	/^		$token = array($/;"	v
token	lib/Cake/Controller/Component/SecurityComponent.php	/^		$token = urldecode($check['_Token']['fields']);$/;"	v
tokenData	lib/Cake/Controller/Component/SecurityComponent.php	/^			$tokenData = $this->Session->read('_Token');$/;"	v
tokenData	lib/Cake/Controller/Component/SecurityComponent.php	/^		$tokenData = array();$/;"	v
tokens	lib/Cake/Controller/Component/SecurityComponent.php	/^			$tokens = array_slice($tokens, $overflow + 1, null, true);$/;"	v
unlocked	lib/Cake/Controller/Component/SecurityComponent.php	/^		$unlocked = explode('|', $unlocked);$/;"	v
unlocked	lib/Cake/Controller/Component/SecurityComponent.php	/^		$unlocked = implode('|', $unlocked);$/;"	v
unlocked	lib/Cake/Controller/Component/SecurityComponent.php	/^		$unlocked = urldecode($check['_Token']['unlocked']);$/;"	v
unlockedActions	lib/Cake/Controller/Component/SecurityComponent.php	/^	public $unlockedActions = array();$/;"	v
unlockedFields	lib/Cake/Controller/Component/SecurityComponent.php	/^		$unlockedFields = array_unique($/;"	v
unlockedFields	lib/Cake/Controller/Component/SecurityComponent.php	/^	public $unlockedFields = array();$/;"	v
validatePost	lib/Cake/Controller/Component/SecurityComponent.php	/^	public $validatePost = true;$/;"	v
SessionComponent	lib/Cake/Controller/Component/SessionComponent.php	/^class SessionComponent extends Component {$/;"	c
check	lib/Cake/Controller/Component/SessionComponent.php	/^	public function check($name) {$/;"	f
delete	lib/Cake/Controller/Component/SessionComponent.php	/^	public function delete($name) {$/;"	f
destroy	lib/Cake/Controller/Component/SessionComponent.php	/^	public function destroy() {$/;"	f
error	lib/Cake/Controller/Component/SessionComponent.php	/^	public function error() {$/;"	f
id	lib/Cake/Controller/Component/SessionComponent.php	/^	public function id($id = null) {$/;"	f
read	lib/Cake/Controller/Component/SessionComponent.php	/^	public function read($name = null) {$/;"	f
renew	lib/Cake/Controller/Component/SessionComponent.php	/^	public function renew() {$/;"	f
setFlash	lib/Cake/Controller/Component/SessionComponent.php	/^	public function setFlash($message, $element = 'default', $params = array(), $key = 'flash') {$/;"	f
started	lib/Cake/Controller/Component/SessionComponent.php	/^	public function started() {$/;"	f
userAgent	lib/Cake/Controller/Component/SessionComponent.php	/^	public function userAgent($userAgent = null) {$/;"	f
valid	lib/Cake/Controller/Component/SessionComponent.php	/^	public function valid() {$/;"	f
write	lib/Cake/Controller/Component/SessionComponent.php	/^	public function write($name, $value = null) {$/;"	f
ComponentCollection	lib/Cake/Controller/ComponentCollection.php	/^class ComponentCollection extends ObjectCollection implements CakeEventListener {$/;"	c
_Controller	lib/Cake/Controller/ComponentCollection.php	/^		$this->_Controller = $Controller;$/;"	v
_Controller	lib/Cake/Controller/ComponentCollection.php	/^	protected $_Controller = null;$/;"	v
alias	lib/Cake/Controller/ComponentCollection.php	/^			$alias = $component;$/;"	v
alias	lib/Cake/Controller/ComponentCollection.php	/^			$alias = $name;$/;"	v
component	lib/Cake/Controller/ComponentCollection.php	/^			$component = $settings['className'];$/;"	v
componentClass	lib/Cake/Controller/ComponentCollection.php	/^		$componentClass = $name . 'Component';$/;"	v
components	lib/Cake/Controller/ComponentCollection.php	/^		$components = ComponentCollection::normalizeObjectArray($Controller->components);$/;"	v
enable	lib/Cake/Controller/ComponentCollection.php	/^		$enable = isset($settings['enabled']) ? $settings['enabled'] : true;$/;"	v
getController	lib/Cake/Controller/ComponentCollection.php	/^	public function getController() {$/;"	f
implementedEvents	lib/Cake/Controller/ComponentCollection.php	/^	public function implementedEvents() {$/;"	f
init	lib/Cake/Controller/ComponentCollection.php	/^	public function init(Controller $Controller) {$/;"	f
load	lib/Cake/Controller/ComponentCollection.php	/^	public function load($component, $settings = array()) {$/;"	f
setController	lib/Cake/Controller/ComponentCollection.php	/^	public function setController(Controller $Controller) {$/;"	f
Components	lib/Cake/Controller/Controller.php	/^		$this->Components = new ComponentCollection();$/;"	v
Components	lib/Cake/Controller/Controller.php	/^	public $Components = null;$/;"	v
Controller	lib/Cake/Controller/Controller.php	/^class Controller extends Object implements CakeEventListener {$/;"	c
View	lib/Cake/Controller/Controller.php	/^		$this->View = $this->_getViewObject();$/;"	v
View	lib/Cake/Controller/Controller.php	/^	public $View;$/;"	v
__construct	lib/Cake/Controller/Controller.php	/^	public function __construct($request = null, $response = null) {$/;"	f
__get	lib/Cake/Controller/Controller.php	/^	public function __get($name) {$/;"	f
__isset	lib/Cake/Controller/Controller.php	/^	public function __isset($name) {$/;"	f
__set	lib/Cake/Controller/Controller.php	/^	public function __set($name, $value) {$/;"	f
_afterScaffoldSave	lib/Cake/Controller/Controller.php	/^	protected function _afterScaffoldSave($method) {$/;"	f
_afterScaffoldSaveError	lib/Cake/Controller/Controller.php	/^	protected function _afterScaffoldSaveError($method) {$/;"	f
_beforeScaffold	lib/Cake/Controller/Controller.php	/^	protected function _beforeScaffold($method) {$/;"	f
_eventManager	lib/Cake/Controller/Controller.php	/^			$this->_eventManager = new CakeEventManager();$/;"	v
_eventManager	lib/Cake/Controller/Controller.php	/^	protected $_eventManager = null;$/;"	v
_getScaffold	lib/Cake/Controller/Controller.php	/^	protected function _getScaffold(CakeRequest $request) {$/;"	f
_getViewObject	lib/Cake/Controller/Controller.php	/^	protected function _getViewObject() {$/;"	f
_isPrivateAction	lib/Cake/Controller/Controller.php	/^	protected function _isPrivateAction(ReflectionMethod $method, CakeRequest $request) {$/;"	f
_mergeControllerVars	lib/Cake/Controller/Controller.php	/^	protected function _mergeControllerVars() {$/;"	f
_mergeParent	lib/Cake/Controller/Controller.php	/^	protected $_mergeParent = 'AppController';$/;"	v
_mergeUses	lib/Cake/Controller/Controller.php	/^	protected function _mergeUses($merge) {$/;"	f
_parseBeforeRedirect	lib/Cake/Controller/Controller.php	/^	protected function _parseBeforeRedirect($response, $url, $status, $exit) {$/;"	f
_responseClass	lib/Cake/Controller/Controller.php	/^	protected $_responseClass = 'CakeResponse';$/;"	v
_scaffoldError	lib/Cake/Controller/Controller.php	/^	protected function _scaffoldError($method) {$/;"	f
afterFilter	lib/Cake/Controller/Controller.php	/^	public function afterFilter() {$/;"	f
afterScaffoldSave	lib/Cake/Controller/Controller.php	/^	public function afterScaffoldSave($method) {$/;"	f
afterScaffoldSaveError	lib/Cake/Controller/Controller.php	/^	public function afterScaffoldSaveError($method) {$/;"	f
appVars	lib/Cake/Controller/Controller.php	/^			$appVars = get_class_vars($this->_mergeParent);$/;"	v
appVars	lib/Cake/Controller/Controller.php	/^		$appVars = array();$/;"	v
args	lib/Cake/Controller/Controller.php	/^		$args = func_get_args();$/;"	v
arrayOp	lib/Cake/Controller/Controller.php	/^		$arrayOp = is_array($op);$/;"	v
autoLayout	lib/Cake/Controller/Controller.php	/^			$this->autoLayout = false;$/;"	v
autoLayout	lib/Cake/Controller/Controller.php	/^	public $autoLayout = true;$/;"	v
autoRender	lib/Cake/Controller/Controller.php	/^			$this->autoRender = false;$/;"	v
autoRender	lib/Cake/Controller/Controller.php	/^		$this->autoRender = false;$/;"	v
autoRender	lib/Cake/Controller/Controller.php	/^	public $autoRender = true;$/;"	v
beforeFilter	lib/Cake/Controller/Controller.php	/^	public function beforeFilter() {$/;"	f
beforeRedirect	lib/Cake/Controller/Controller.php	/^	public function beforeRedirect($url, $status = null, $exit = true) {$/;"	f
beforeRender	lib/Cake/Controller/Controller.php	/^	public function beforeRender() {$/;"	f
beforeScaffold	lib/Cake/Controller/Controller.php	/^	public function beforeScaffold($method) {$/;"	f
cacheAction	lib/Cake/Controller/Controller.php	/^	public $cacheAction = false;$/;"	v
childMethods	lib/Cake/Controller/Controller.php	/^		$childMethods = get_class_methods($this);$/;"	v
className	lib/Cake/Controller/Controller.php	/^				$className = get_class($currentObject);$/;"	v
codes	lib/Cake/Controller/Controller.php	/^			$codes = array_flip($this->response->httpCodes());$/;"	v
components	lib/Cake/Controller/Controller.php	/^	public $components = array('Session');$/;"	v
cond	lib/Cake/Controller/Controller.php	/^			$cond = array($bool => $cond);$/;"	v
cond	lib/Cake/Controller/Controller.php	/^		$cond = array();$/;"	v
constructClasses	lib/Cake/Controller/Controller.php	/^	public function constructClasses() {$/;"	f
currentObject	lib/Cake/Controller/Controller.php	/^			$currentObject = ClassRegistry::getObject($currentModel);$/;"	v
data	lib/Cake/Controller/Controller.php	/^				$data = $one;$/;"	v
data	lib/Cake/Controller/Controller.php	/^				$data = $this->request->data;$/;"	v
data	lib/Cake/Controller/Controller.php	/^				$data = array_combine($one, $two);$/;"	v
data	lib/Cake/Controller/Controller.php	/^			$data = array($one => $two);$/;"	v
disableCache	lib/Cake/Controller/Controller.php	/^	public function disableCache() {$/;"	f
errors	lib/Cake/Controller/Controller.php	/^			$errors = array_merge($errors, $object->invalidFields());$/;"	v
errors	lib/Cake/Controller/Controller.php	/^		$errors = array();$/;"	v
errors	lib/Cake/Controller/Controller.php	/^		$errors = call_user_func_array(array(&$this, 'validateErrors'), $args);$/;"	v
event	lib/Cake/Controller/Controller.php	/^		$event = new CakeEvent('Controller.beforeRedirect', $this, array($url, $status, $exit));$/;"	v
event	lib/Cake/Controller/Controller.php	/^		$event = new CakeEvent('Controller.beforeRender', $this);$/;"	v
ext	lib/Cake/Controller/Controller.php	/^	public $ext = '.ctp';$/;"	v
fieldOp	lib/Cake/Controller/Controller.php	/^						$fieldOp = $op[$field];$/;"	v
fieldOp	lib/Cake/Controller/Controller.php	/^						$fieldOp = $op[$key];$/;"	v
fieldOp	lib/Cake/Controller/Controller.php	/^						$fieldOp = false;$/;"	v
fieldOp	lib/Cake/Controller/Controller.php	/^				$fieldOp = $op;$/;"	v
fieldOp	lib/Cake/Controller/Controller.php	/^				$fieldOp = strtoupper(trim($fieldOp));$/;"	v
flash	lib/Cake/Controller/Controller.php	/^	public function flash($message, $url, $pause = 1, $layout = 'flash') {$/;"	f
getEventManager	lib/Cake/Controller/Controller.php	/^	public function getEventManager() {$/;"	f
header	lib/Cake/Controller/Controller.php	/^	public function header($status) {$/;"	f
helpers	lib/Cake/Controller/Controller.php	/^	public $helpers = array();$/;"	v
httpCodes	lib/Cake/Controller/Controller.php	/^	public function httpCodes($code = null) {$/;"	f
implementedEvents	lib/Cake/Controller/Controller.php	/^	public function implementedEvents() {$/;"	f
invokeAction	lib/Cake/Controller/Controller.php	/^	public function invokeAction(CakeRequest $request) {$/;"	f
key	lib/Cake/Controller/Controller.php	/^					$key = $key . ' ' . $fieldOp;$/;"	v
key	lib/Cake/Controller/Controller.php	/^					$key = $key . ' LIKE';$/;"	v
key	lib/Cake/Controller/Controller.php	/^				$key = $model . '.' . $field;$/;"	v
layout	lib/Cake/Controller/Controller.php	/^	public $layout = 'default';$/;"	v
layoutPath	lib/Cake/Controller/Controller.php	/^	public $layoutPath = null;$/;"	v
loadModel	lib/Cake/Controller/Controller.php	/^	public function loadModel($modelClass = null, $id = null) {$/;"	f
merge	lib/Cake/Controller/Controller.php	/^			$merge = array('components', 'helpers');$/;"	v
mergeParent	lib/Cake/Controller/Controller.php	/^		$mergeParent = is_subclass_of($this, $this->_mergeParent);$/;"	v
method	lib/Cake/Controller/Controller.php	/^			$method = new ReflectionMethod($this, $request->params['action']);$/;"	v
methods	lib/Cake/Controller/Controller.php	/^		$this->methods = array_diff($childMethods, $parentMethods);$/;"	v
methods	lib/Cake/Controller/Controller.php	/^	public $methods = array();$/;"	v
modelClass	lib/Cake/Controller/Controller.php	/^			$modelClass = $this->modelClass;$/;"	v
modelClass	lib/Cake/Controller/Controller.php	/^			$this->modelClass = '';$/;"	v
modelClass	lib/Cake/Controller/Controller.php	/^		$this->modelClass = Inflector::singularize($this->name);$/;"	v
modelClass	lib/Cake/Controller/Controller.php	/^	public $modelClass = null;$/;"	v
modelKey	lib/Cake/Controller/Controller.php	/^		$this->modelKey = Inflector::underscore($this->modelClass);$/;"	v
modelKey	lib/Cake/Controller/Controller.php	/^	public $modelKey = null;$/;"	v
models	lib/Cake/Controller/Controller.php	/^		$models = ClassRegistry::keys();$/;"	v
name	lib/Cake/Controller/Controller.php	/^			$this->name = substr(get_class($this), 0, -10);$/;"	v
name	lib/Cake/Controller/Controller.php	/^	public $name = null;$/;"	v
object	lib/Cake/Controller/Controller.php	/^				$object = $this->{$object->alias};$/;"	v
objects	lib/Cake/Controller/Controller.php	/^		$objects = func_get_args();$/;"	v
op	lib/Cake/Controller/Controller.php	/^			$op = '';$/;"	v
paginate	lib/Cake/Controller/Controller.php	/^	public function paginate($object = null, $scope = array(), $whitelist = array()) {$/;"	f
parentMethods	lib/Cake/Controller/Controller.php	/^		$parentMethods = get_class_methods('Controller');$/;"	v
passedArgs	lib/Cake/Controller/Controller.php	/^			$this->passedArgs = array_merge($request->params['pass'], $request->params['named']);$/;"	v
passedArgs	lib/Cake/Controller/Controller.php	/^	public $passedArgs = array();$/;"	v
plugin	lib/Cake/Controller/Controller.php	/^				$plugin = $this->plugin ? $this->plugin . '.' : null;$/;"	v
plugin	lib/Cake/Controller/Controller.php	/^		$this->plugin = isset($request->params['plugin']) ? Inflector::camelize($request->params['plugin']) : null;$/;"	v
plugin	lib/Cake/Controller/Controller.php	/^	public $plugin = null;$/;"	v
pluginController	lib/Cake/Controller/Controller.php	/^				$pluginController = null;$/;"	v
pluginController	lib/Cake/Controller/Controller.php	/^			$pluginController = $this->plugin . 'AppController';$/;"	v
pluginController	lib/Cake/Controller/Controller.php	/^		$pluginController = $pluginDot = null;$/;"	v
pluginDot	lib/Cake/Controller/Controller.php	/^			$pluginDot = $this->plugin . '.';$/;"	v
pluginVars	lib/Cake/Controller/Controller.php	/^			$pluginVars = get_class_vars($pluginController);$/;"	v
pluginVars	lib/Cake/Controller/Controller.php	/^		$pluginVars = array();$/;"	v
postConditions	lib/Cake/Controller/Controller.php	/^	public function postConditions($data = array(), $op = null, $bool = 'AND', $exclusive = false) {$/;"	f
prefixes	lib/Cake/Controller/Controller.php	/^		$prefixes = Router::prefixes();$/;"	v
privateAction	lib/Cake/Controller/Controller.php	/^				$privateAction = in_array($prefix, $prefixes);$/;"	v
privateAction	lib/Cake/Controller/Controller.php	/^		$privateAction = ($/;"	v
redirect	lib/Cake/Controller/Controller.php	/^	public function redirect($url, $status = null, $exit = true) {$/;"	f
referer	lib/Cake/Controller/Controller.php	/^		$referer = $this->request->referer($local);$/;"	v
referer	lib/Cake/Controller/Controller.php	/^	public function referer($default = null, $local = false) {$/;"	f
render	lib/Cake/Controller/Controller.php	/^	public function render($view = null, $layout = null) {$/;"	f
request	lib/Cake/Controller/Controller.php	/^		$this->request = $request;$/;"	v
request	lib/Cake/Controller/Controller.php	/^	public $request;$/;"	v
response	lib/Cake/Controller/Controller.php	/^			$this->response = $response;$/;"	v
response	lib/Cake/Controller/Controller.php	/^		$response = $event->result;$/;"	v
response	lib/Cake/Controller/Controller.php	/^	public $response;$/;"	v
scaffold	lib/Cake/Controller/Controller.php	/^	public $scaffold = false;$/;"	v
scaffoldError	lib/Cake/Controller/Controller.php	/^	public function scaffoldError($method) {$/;"	f
set	lib/Cake/Controller/Controller.php	/^	public function set($one, $two = null) {$/;"	f
setAction	lib/Cake/Controller/Controller.php	/^	public function setAction($action) {$/;"	f
setRequest	lib/Cake/Controller/Controller.php	/^	public function setRequest(CakeRequest $request) {$/;"	f
shutdownProcess	lib/Cake/Controller/Controller.php	/^	public function shutdownProcess() {$/;"	f
startupProcess	lib/Cake/Controller/Controller.php	/^	public function startupProcess() {$/;"	f
status	lib/Cake/Controller/Controller.php	/^				$status = $codes[$status];$/;"	v
url	lib/Cake/Controller/Controller.php	/^					$url = $resp;$/;"	v
uses	lib/Cake/Controller/Controller.php	/^			$this->uses = (array)$this->uses;$/;"	v
uses	lib/Cake/Controller/Controller.php	/^			$this->uses = array($pluginDot . $this->modelClass);$/;"	v
uses	lib/Cake/Controller/Controller.php	/^			$this->uses = array();$/;"	v
uses	lib/Cake/Controller/Controller.php	/^			$this->uses = false;$/;"	v
uses	lib/Cake/Controller/Controller.php	/^		$this->uses = ($this->uses) ? (array)$this->uses : array();$/;"	v
uses	lib/Cake/Controller/Controller.php	/^		$this->uses = array_merge($/;"	v
uses	lib/Cake/Controller/Controller.php	/^	public $uses = true;$/;"	v
validate	lib/Cake/Controller/Controller.php	/^	public function validate() {$/;"	f
validateErrors	lib/Cake/Controller/Controller.php	/^	public function validateErrors() {$/;"	f
validationErrors	lib/Cake/Controller/Controller.php	/^	public $validationErrors = null;$/;"	v
value	lib/Cake/Controller/Controller.php	/^					$value = '%' . $value . '%';$/;"	v
view	lib/Cake/Controller/Controller.php	/^		$this->view = $action;$/;"	v
view	lib/Cake/Controller/Controller.php	/^		$this->view = isset($request->params['action']) ? $request->params['action'] : null;$/;"	v
view	lib/Cake/Controller/Controller.php	/^	public $view = null;$/;"	v
viewClass	lib/Cake/Controller/Controller.php	/^			$viewClass = $viewClass . 'View';$/;"	v
viewClass	lib/Cake/Controller/Controller.php	/^		$viewClass = $this->viewClass;$/;"	v
viewClass	lib/Cake/Controller/Controller.php	/^	public $viewClass = 'View';$/;"	v
viewPath	lib/Cake/Controller/Controller.php	/^			$this->viewPath = $this->name;$/;"	v
viewPath	lib/Cake/Controller/Controller.php	/^	public $viewPath = null;$/;"	v
viewVars	lib/Cake/Controller/Controller.php	/^		$this->viewVars = $data + $this->viewVars;$/;"	v
viewVars	lib/Cake/Controller/Controller.php	/^	public $viewVars = array();$/;"	v
Scaffold	lib/Cake/Controller/Scaffold.php	/^class Scaffold {$/;"	c
ScaffoldModel	lib/Cake/Controller/Scaffold.php	/^		$this->ScaffoldModel = $this->controller->{$this->modelClass};$/;"	v
__construct	lib/Cake/Controller/Scaffold.php	/^	public function __construct(Controller $controller, CakeRequest $request) {$/;"	f
_associations	lib/Cake/Controller/Scaffold.php	/^	protected function _associations() {$/;"	f
_passedVars	lib/Cake/Controller/Scaffold.php	/^	protected $_passedVars = array($/;"	v
_scaffold	lib/Cake/Controller/Scaffold.php	/^	protected function _scaffold(CakeRequest $request) {$/;"	f
_scaffoldDelete	lib/Cake/Controller/Scaffold.php	/^	protected function _scaffoldDelete(CakeRequest $request) {$/;"	f
_scaffoldError	lib/Cake/Controller/Scaffold.php	/^	protected function _scaffoldError() {$/;"	f
_scaffoldForm	lib/Cake/Controller/Scaffold.php	/^	protected function _scaffoldForm($action = 'edit') {$/;"	f
_scaffoldIndex	lib/Cake/Controller/Scaffold.php	/^	protected function _scaffoldIndex($params) {$/;"	f
_scaffoldSave	lib/Cake/Controller/Scaffold.php	/^	protected function _scaffoldSave(CakeRequest $request, $action = 'edit') {$/;"	f
_scaffoldView	lib/Cake/Controller/Scaffold.php	/^	protected function _scaffoldView(CakeRequest $request) {$/;"	f
_sendMessage	lib/Cake/Controller/Scaffold.php	/^	protected function _sendMessage($message) {$/;"	f
_validSession	lib/Cake/Controller/Scaffold.php	/^		$this->_validSession = ($/;"	v
_validSession	lib/Cake/Controller/Scaffold.php	/^	protected $_validSession = null;$/;"	v
associations	lib/Cake/Controller/Scaffold.php	/^		$associations = $this->_associations();$/;"	v
associations	lib/Cake/Controller/Scaffold.php	/^		$associations = array();$/;"	v
controller	lib/Cake/Controller/Scaffold.php	/^		$this->controller = $controller;$/;"	v
controller	lib/Cake/Controller/Scaffold.php	/^	public $controller = null;$/;"	v
count	lib/Cake/Controller/Scaffold.php	/^		$count = count($this->_passedVars);$/;"	v
db	lib/Cake/Controller/Scaffold.php	/^		$db = ConnectionManager::getDataSource($this->ScaffoldModel->useDbConfig);$/;"	v
displayField	lib/Cake/Controller/Scaffold.php	/^		$displayField = $this->ScaffoldModel->displayField;$/;"	v
formAction	lib/Cake/Controller/Scaffold.php	/^			$formAction = 'add';$/;"	v
formAction	lib/Cake/Controller/Scaffold.php	/^		$formAction = 'edit';$/;"	v
id	lib/Cake/Controller/Scaffold.php	/^				$id = $request->params['pass'][0];$/;"	v
id	lib/Cake/Controller/Scaffold.php	/^			$id = false;$/;"	v
keys	lib/Cake/Controller/Scaffold.php	/^		$keys = array('belongsTo', 'hasOne', 'hasMany', 'hasAndBelongsToMany');$/;"	v
layout	lib/Cake/Controller/Scaffold.php	/^	public $layout = 'default';$/;"	v
message	lib/Cake/Controller/Scaffold.php	/^						$message = __d('cake',$/;"	v
message	lib/Cake/Controller/Scaffold.php	/^				$message = __d('cake', 'The %1$s with id: %2$s has been deleted.', Inflector::humanize($this->modelClass), $id);$/;"	v
message	lib/Cake/Controller/Scaffold.php	/^			$message = __d('cake',$/;"	v
model	lib/Cake/Controller/Scaffold.php	/^	public $model = null;$/;"	v
modelClass	lib/Cake/Controller/Scaffold.php	/^		$modelClass = $this->controller->modelClass;$/;"	v
modelClass	lib/Cake/Controller/Scaffold.php	/^		$this->modelClass = $controller->modelClass;$/;"	v
modelKey	lib/Cake/Controller/Scaffold.php	/^		$this->modelKey = $controller->modelKey;$/;"	v
name	lib/Cake/Controller/Scaffold.php	/^	public $name = null;$/;"	v
plugin	lib/Cake/Controller/Scaffold.php	/^					$plugin = Inflector::underscore($plugin);$/;"	v
pluralHumanName	lib/Cake/Controller/Scaffold.php	/^		$pluralHumanName = Inflector::humanize(Inflector::underscore($this->controller->name));$/;"	v
pluralVar	lib/Cake/Controller/Scaffold.php	/^		$pluralVar = Inflector::variable($this->controller->name);$/;"	v
prefixes	lib/Cake/Controller/Scaffold.php	/^		$prefixes = Configure::read('Routing.prefixes');$/;"	v
primaryKey	lib/Cake/Controller/Scaffold.php	/^		$primaryKey = $this->ScaffoldModel->primaryKey;$/;"	v
redirect	lib/Cake/Controller/Scaffold.php	/^		$this->redirect = array('action' => 'index');$/;"	v
request	lib/Cake/Controller/Scaffold.php	/^	public $request;$/;"	v
scaffoldActions	lib/Cake/Controller/Scaffold.php	/^				$this->scaffoldActions = array($/;"	v
scaffoldActions	lib/Cake/Controller/Scaffold.php	/^		$this->scaffoldActions = $controller->scaffold;$/;"	v
scaffoldFields	lib/Cake/Controller/Scaffold.php	/^		$scaffoldFields = array_keys($this->ScaffoldModel->schema());$/;"	v
scaffoldPrefix	lib/Cake/Controller/Scaffold.php	/^		$scaffoldPrefix = $this->scaffoldActions;$/;"	v
scaffoldTitle	lib/Cake/Controller/Scaffold.php	/^		$this->scaffoldTitle = Inflector::humanize(Inflector::underscore($this->viewPath));$/;"	v
scaffoldTitle	lib/Cake/Controller/Scaffold.php	/^	public $scaffoldTitle = null;$/;"	v
singularHumanName	lib/Cake/Controller/Scaffold.php	/^		$singularHumanName = Inflector::humanize(Inflector::underscore($modelClass));$/;"	v
singularVar	lib/Cake/Controller/Scaffold.php	/^		$singularVar = Inflector::variable($modelClass);$/;"	v
success	lib/Cake/Controller/Scaffold.php	/^			$success = __d('cake', 'saved');$/;"	v
success	lib/Cake/Controller/Scaffold.php	/^		$success = __d('cake', 'updated');$/;"	v
title	lib/Cake/Controller/Scaffold.php	/^		$title = __d('cake', 'Scaffold :: ') . Inflector::humanize($request->action) . ' :: ' . $this->scaffoldTitle;$/;"	v
var	lib/Cake/Controller/Scaffold.php	/^			$var = $this->_passedVars[$j];$/;"	v
varName	lib/Cake/Controller/Scaffold.php	/^				$varName = Inflector::variable(Inflector::pluralize($/;"	v
varName	lib/Cake/Controller/Scaffold.php	/^				$varName = Inflector::variable(Inflector::pluralize($assocName));$/;"	v
viewPath	lib/Cake/Controller/Scaffold.php	/^	public $viewPath;$/;"	v
App	lib/Cake/Core/App.php	/^class App {$/;"	c
_cacheChange	lib/Cake/Core/App.php	/^	protected static $_cacheChange = false;$/;"	v
_checkFatalError	lib/Cake/Core/App.php	/^	protected static function _checkFatalError() {$/;"	f
_classMap	lib/Cake/Core/App.php	/^	protected static $_classMap = array();$/;"	v
_loadClass	lib/Cake/Core/App.php	/^	protected static function _loadClass($name, $plugin, $type, $originalType, $parent) {$/;"	f
_loadFile	lib/Cake/Core/App.php	/^	protected static function _loadFile($name, $plugin, $search, $file, $return) {$/;"	f
_loadVendor	lib/Cake/Core/App.php	/^	protected static function _loadVendor($name, $plugin, $file, $ext) {$/;"	f
_map	lib/Cake/Core/App.php	/^	protected static $_map = array();$/;"	v
_map	lib/Cake/Core/App.php	/^	protected static function _map($file, $name, $plugin = null) {$/;"	f
_mapped	lib/Cake/Core/App.php	/^	protected static function _mapped($name, $plugin = null) {$/;"	f
_objectCacheChange	lib/Cake/Core/App.php	/^	protected static $_objectCacheChange = false;$/;"	v
_objects	lib/Cake/Core/App.php	/^	protected static $_objects = array();$/;"	v
_packageFormat	lib/Cake/Core/App.php	/^	protected static $_packageFormat = array();$/;"	v
_packageFormat	lib/Cake/Core/App.php	/^	protected static function _packageFormat() {$/;"	f
_packages	lib/Cake/Core/App.php	/^	protected static $_packages = array();$/;"	v
appLibs	lib/Cake/Core/App.php	/^			$appLibs = empty(self::$_packages['Lib']) ? APPLIBS : current(self::$_packages['Lib']);$/;"	v
bootstrapping	lib/Cake/Core/App.php	/^	public static $bootstrapping = false;$/;"	v
build	lib/Cake/Core/App.php	/^	public static function build($paths = array(), $mode = App::PREPEND) {$/;"	f
cacheLocation	lib/Cake/Core/App.php	/^		$cacheLocation = empty($plugin) ? 'app' : $plugin;$/;"	v
core	lib/Cake/Core/App.php	/^	public static function core($type) {$/;"	f
defaults	lib/Cake/Core/App.php	/^		$defaults = array();$/;"	v
errorHandler	lib/Cake/Core/App.php	/^			$errorHandler = Configure::read('Error.consoleHandler');$/;"	v
errorHandler	lib/Cake/Core/App.php	/^			$errorHandler = Configure::read('Error.handler');$/;"	v
ext	lib/Cake/Core/App.php	/^			$ext = 'php';$/;"	v
ext	lib/Cake/Core/App.php	/^		$ext = null;$/;"	v
extendType	lib/Cake/Core/App.php	/^				$extendType = implode('\/', $parts);$/;"	v
extendType	lib/Cake/Core/App.php	/^			$extendType = $type;$/;"	v
extends	lib/Cake/Core/App.php	/^				$extends = array_pop($parts);$/;"	v
extends	lib/Cake/Core/App.php	/^			$extends = self::$types[$originalType]['extends'];$/;"	v
extension	lib/Cake/Core/App.php	/^			$extension = '\/.*\/';$/;"	v
extension	lib/Cake/Core/App.php	/^			$extension = '\/\\.php$\/';$/;"	v
extension	lib/Cake/Core/App.php	/^		$extension = '\/\\.php$\/';$/;"	v
file	lib/Cake/Core/App.php	/^					$file = $path . $file;$/;"	v
file	lib/Cake/Core/App.php	/^					$file = false;$/;"	v
file	lib/Cake/Core/App.php	/^			$file = $mapped;$/;"	v
file	lib/Cake/Core/App.php	/^			$file = $path . $normalizedClassName . '.php';$/;"	v
file	lib/Cake/Core/App.php	/^		$file = self::_mapped($className, $plugin);$/;"	v
fileName	lib/Cake/Core/App.php	/^						$fileName = basename($file);$/;"	v
fileTries	lib/Cake/Core/App.php	/^		$fileTries = array();$/;"	v
files	lib/Cake/Core/App.php	/^					$files = new RegexIterator(new DirectoryIterator($dir), $extension);$/;"	v
formats	lib/Cake/Core/App.php	/^					$formats = array_merge($packageFormat[$package], $formats);$/;"	v
found	lib/Cake/Core/App.php	/^					$found = true;$/;"	v
found	lib/Cake/Core/App.php	/^				$found = false;$/;"	v
import	lib/Cake/Core/App.php	/^	public static function import($type = null, $name = null, $parent = true, $search = array(), $file = null, $return = false) {$/;"	f
includeDirectories	lib/Cake/Core/App.php	/^			$includeDirectories = true;$/;"	v
includeDirectories	lib/Cake/Core/App.php	/^		$includeDirectories = false;$/;"	v
init	lib/Cake/Core/App.php	/^	public static function init() {$/;"	f
isDir	lib/Cake/Core/App.php	/^							$isDir = $file->isDir();$/;"	v
key	lib/Cake/Core/App.php	/^			$key = 'plugin.' . $name;$/;"	v
key	lib/Cake/Core/App.php	/^		$key = $name;$/;"	v
lastError	lib/Cake/Core/App.php	/^		$lastError = error_get_last();$/;"	v
legacy	lib/Cake/Core/App.php	/^	public static $legacy = array($/;"	v
legacyPaths	lib/Cake/Core/App.php	/^		$legacyPaths = array();$/;"	v
load	lib/Cake/Core/App.php	/^	public static function load($className) {$/;"	f
location	lib/Cake/Core/App.php	/^	public static function location($className) {$/;"	f
mapped	lib/Cake/Core/App.php	/^		$mapped = self::_mapped($name, $plugin);$/;"	v
name	lib/Cake/Core/App.php	/^			$name = $type . str_replace(DS, '', $path);$/;"	v
name	lib/Cake/Core/App.php	/^		$name = $type;$/;"	v
name	lib/Cake/Core/App.php	/^		$name = Inflector::camelize($name);$/;"	v
newPath	lib/Cake/Core/App.php	/^				$newPath = (array)$paths[$type];$/;"	v
normalizedClassName	lib/Cake/Core/App.php	/^		$normalizedClassName = str_replace('\\\\', DS, $className);$/;"	v
objects	lib/Cake/Core/App.php	/^			$objects = array();$/;"	v
objects	lib/Cake/Core/App.php	/^	public static function objects($type, $path = null, $cache = true) {$/;"	f
originalType	lib/Cake/Core/App.php	/^		$originalType = strtolower($type);$/;"	v
packageFormat	lib/Cake/Core/App.php	/^			$packageFormat = self::_packageFormat();$/;"	v
packageFormat	lib/Cake/Core/App.php	/^		$packageFormat = self::_packageFormat();$/;"	v
parts	lib/Cake/Core/App.php	/^				$parts = explode('\/', $extends);$/;"	v
parts	lib/Cake/Core/App.php	/^		$parts = explode('.', self::$_classMap[$className], 2);$/;"	v
path	lib/Cake/Core/App.php	/^					$path = array_merge($newPath, $path);$/;"	v
path	lib/Cake/Core/App.php	/^					$path = array_merge($path, $newPath);$/;"	v
path	lib/Cake/Core/App.php	/^				$path = $default;$/;"	v
path	lib/Cake/Core/App.php	/^				$path = array_values(array_unique($path));$/;"	v
path	lib/Cake/Core/App.php	/^				$path = self::$_packages[$type];$/;"	v
path	lib/Cake/Core/App.php	/^				$path = self::path($type, $plugin);$/;"	v
path	lib/Cake/Core/App.php	/^			$path = array();$/;"	v
path	lib/Cake/Core/App.php	/^	public static function path($type, $plugin = null) {$/;"	f
paths	lib/Cake/Core/App.php	/^			$paths = array();$/;"	v
paths	lib/Cake/Core/App.php	/^		$paths = $legacyPaths;$/;"	v
paths	lib/Cake/Core/App.php	/^		$paths = ($plugin) ? App::path('vendors', $plugin) : App::path('vendors');$/;"	v
paths	lib/Cake/Core/App.php	/^		$paths = self::path($package, $plugin);$/;"	v
paths	lib/Cake/Core/App.php	/^	public static function paths() {$/;"	f
pluginPath	lib/Cake/Core/App.php	/^			$pluginPath = self::pluginPath($plugin);$/;"	v
pluginPath	lib/Cake/Core/App.php	/^	public static function pluginPath($plugin) {$/;"	f
return	lib/Cake/Core/App.php	/^	public static $return = false;$/;"	v
returnValue	lib/Cake/Core/App.php	/^			$returnValue = include $file;$/;"	v
search	lib/Cake/Core/App.php	/^	public static $search = array();$/;"	v
shutdown	lib/Cake/Core/App.php	/^	public static function shutdown() {$/;"	f
specialPackage	lib/Cake/Core/App.php	/^		$specialPackage = in_array($originalType, array('file', 'vendor'));$/;"	v
suffix	lib/Cake/Core/App.php	/^			$suffix = self::$types[$originalType]['suffix'];$/;"	v
themeDir	lib/Cake/Core/App.php	/^		$themeDir = 'Themed' . DS . Inflector::camelize($theme);$/;"	v
themePath	lib/Cake/Core/App.php	/^	public static function themePath($theme) {$/;"	f
type	lib/Cake/Core/App.php	/^				$type = self::$legacy[$type];$/;"	v
type	lib/Cake/Core/App.php	/^			$type = 'Console';$/;"	v
type	lib/Cake/Core/App.php	/^			$type = 'plugins';$/;"	v
type	lib/Cake/Core/App.php	/^			$type = self::$legacy[$originalType . 's'];$/;"	v
type	lib/Cake/Core/App.php	/^			$type = self::$legacy[$type . 's'];$/;"	v
type	lib/Cake/Core/App.php	/^			$type = self::$legacy[$type];$/;"	v
types	lib/Cake/Core/App.php	/^	public static $types = array($/;"	v
uses	lib/Cake/Core/App.php	/^	public static function uses($className, $location) {$/;"	f
CakePlugin	lib/Cake/Core/CakePlugin.php	/^class CakePlugin {$/;"	c
_includeFile	lib/Cake/Core/CakePlugin.php	/^	protected static function _includeFile($file, $ignoreMissing = false) {$/;"	f
_plugins	lib/Cake/Core/CakePlugin.php	/^	protected static $_plugins = array();$/;"	v
bootstrap	lib/Cake/Core/CakePlugin.php	/^		$bootstrap = (array)$config['bootstrap'];$/;"	v
bootstrap	lib/Cake/Core/CakePlugin.php	/^	public static function bootstrap($plugin) {$/;"	f
config	lib/Cake/Core/CakePlugin.php	/^		$config = self::$_plugins[$plugin];$/;"	v
load	lib/Cake/Core/CakePlugin.php	/^	public static function load($plugin, $config = array()) {$/;"	f
loadAll	lib/Cake/Core/CakePlugin.php	/^	public static function loadAll($options = array()) {$/;"	f
loaded	lib/Cake/Core/CakePlugin.php	/^	public static function loaded($plugin = null) {$/;"	f
opts	lib/Cake/Core/CakePlugin.php	/^			$opts = isset($options[$p]) ? (array)$options[$p] : array();$/;"	v
path	lib/Cake/Core/CakePlugin.php	/^		$path = self::path($plugin);$/;"	v
path	lib/Cake/Core/CakePlugin.php	/^	public static function path($plugin) {$/;"	f
plugins	lib/Cake/Core/CakePlugin.php	/^		$plugins = App::objects('plugins');$/;"	v
return	lib/Cake/Core/CakePlugin.php	/^		$return = array_keys(self::$_plugins);$/;"	v
routes	lib/Cake/Core/CakePlugin.php	/^	public static function routes($plugin = null) {$/;"	f
underscored	lib/Cake/Core/CakePlugin.php	/^				$underscored = Inflector::underscore($plugin);$/;"	v
unload	lib/Cake/Core/CakePlugin.php	/^	public static function unload($plugin = null) {$/;"	f
Configure	lib/Cake/Core/Configure.php	/^class Configure {$/;"	c
_appDefaults	lib/Cake/Core/Configure.php	/^	protected static function _appDefaults() {$/;"	f
_getReader	lib/Cake/Core/Configure.php	/^	protected static function _getReader($config) {$/;"	f
_readers	lib/Cake/Core/Configure.php	/^	protected static $_readers = array();$/;"	v
_setErrorHandlers	lib/Cake/Core/Configure.php	/^	protected static function _setErrorHandlers($error, $exception) {$/;"	f
_values	lib/Cake/Core/Configure.php	/^	protected static $_values = array($/;"	v
bootstrap	lib/Cake/Core/Configure.php	/^	public static function bootstrap($boot = true) {$/;"	f
check	lib/Cake/Core/Configure.php	/^	public static function check($var = null) {$/;"	f
clear	lib/Cake/Core/Configure.php	/^	public static function clear() {$/;"	f
config	lib/Cake/Core/Configure.php	/^			$config = array($config => $value);$/;"	v
config	lib/Cake/Core/Configure.php	/^	public static function config($name, ConfigReaderInterface $reader) {$/;"	f
configured	lib/Cake/Core/Configure.php	/^	public static function configured($name = null) {$/;"	f
data	lib/Cake/Core/Configure.php	/^			$data = self::$_values;$/;"	v
delete	lib/Cake/Core/Configure.php	/^	public static function delete($var = null) {$/;"	f
drop	lib/Cake/Core/Configure.php	/^	public static function drop($name) {$/;"	f
dump	lib/Cake/Core/Configure.php	/^	public static function dump($key, $config = 'default', $keys = array()) {$/;"	f
error	lib/Cake/Core/Configure.php	/^			$error = array($/;"	v
exception	lib/Cake/Core/Configure.php	/^			$exception = array($/;"	v
keys	lib/Cake/Core/Configure.php	/^			$keys = array_keys($values);$/;"	v
level	lib/Cake/Core/Configure.php	/^			$level = $error['level'];$/;"	v
level	lib/Cake/Core/Configure.php	/^		$level = -1;$/;"	v
load	lib/Cake/Core/Configure.php	/^	public static function load($key, $config = 'default', $merge = true) {$/;"	f
read	lib/Cake/Core/Configure.php	/^	public static function read($var = null) {$/;"	f
reader	lib/Cake/Core/Configure.php	/^		$reader = self::_getReader($config);$/;"	v
restore	lib/Cake/Core/Configure.php	/^	public static function restore($name, $cacheConfig = 'default') {$/;"	f
store	lib/Cake/Core/Configure.php	/^	public static function store($name, $cacheConfig = 'default', $data = null) {$/;"	f
values	lib/Cake/Core/Configure.php	/^			$values = array_intersect_key($values, array_flip($keys));$/;"	v
values	lib/Cake/Core/Configure.php	/^		$values = $reader->read($key);$/;"	v
values	lib/Cake/Core/Configure.php	/^		$values = Cache::read($name, $cacheConfig);$/;"	v
values	lib/Cake/Core/Configure.php	/^		$values = self::$_values;$/;"	v
version	lib/Cake/Core/Configure.php	/^	public static function version() {$/;"	f
write	lib/Cake/Core/Configure.php	/^	public static function write($config, $value = null) {$/;"	f
Object	lib/Cake/Core/Object.php	/^class Object {$/;"	c
__construct	lib/Cake/Core/Object.php	/^	public function __construct() {$/;"	f
_mergeVars	lib/Cake/Core/Object.php	/^	protected function _mergeVars($properties, $class, $normalize = true) {$/;"	f
_set	lib/Cake/Core/Object.php	/^	protected function _set($properties = array()) {$/;"	f
_stop	lib/Cake/Core/Object.php	/^	protected function _stop($status = 0) {$/;"	f
arrayUrl	lib/Cake/Core/Object.php	/^		$arrayUrl = is_array($url);$/;"	v
class	lib/Cake/Core/Object.php	/^		$class = get_class($this);$/;"	v
classProperties	lib/Cake/Core/Object.php	/^		$classProperties = get_class_vars($class);$/;"	v
data	lib/Cake/Core/Object.php	/^		$data = isset($extra['data']) ? $extra['data'] : null;$/;"	v
dispatchMethod	lib/Cake/Core/Object.php	/^	public function dispatchMethod($method, $params = array()) {$/;"	f
dispatcher	lib/Cake/Core/Object.php	/^		$dispatcher = new Dispatcher();$/;"	v
log	lib/Cake/Core/Object.php	/^	public function log($msg, $type = LOG_ERR, $scope = null) {$/;"	f
msg	lib/Cake/Core/Object.php	/^			$msg = print_r($msg, true);$/;"	v
params	lib/Cake/Core/Object.php	/^			$params = $extra + $params;$/;"	v
params	lib/Cake/Core/Object.php	/^			$params = $url + array('pass' => array(), 'named' => array(), 'base' => false);$/;"	v
request	lib/Cake/Core/Object.php	/^			$request = new CakeRequest($url);$/;"	v
request	lib/Cake/Core/Object.php	/^			$request = new CakeRequest(Router::reverse($params));$/;"	v
requestAction	lib/Cake/Core/Object.php	/^	public function requestAction($url, $extra = array()) {$/;"	f
result	lib/Cake/Core/Object.php	/^		$result = $dispatcher->dispatch($request, new CakeResponse(), $extra);$/;"	v
toString	lib/Cake/Core/Object.php	/^	public function toString() {$/;"	f
url	lib/Cake/Core/Object.php	/^			$url = Router::normalize(str_replace(Router::fullBaseUrl(), '', $url));$/;"	v
vars	lib/Cake/Core/Object.php	/^			$vars = get_object_vars($this);$/;"	v
ErrorHandler	lib/Cake/Error/ErrorHandler.php	/^class ErrorHandler {$/;"	c
_getMessage	lib/Cake/Error/ErrorHandler.php	/^	protected static function _getMessage($exception) {$/;"	f
_log	lib/Cake/Error/ErrorHandler.php	/^	protected static function _log(Exception $exception, $config) {$/;"	f
attributes	lib/Cake/Error/ErrorHandler.php	/^			$attributes = $exception->getAttributes();$/;"	v
config	lib/Cake/Error/ErrorHandler.php	/^		$config = Configure::read('Exception');$/;"	v
data	lib/Cake/Error/ErrorHandler.php	/^			$data = array($/;"	v
debug	lib/Cake/Error/ErrorHandler.php	/^		$debug = Configure::read('debug');$/;"	v
error	lib/Cake/Error/ErrorHandler.php	/^				$error = 'Deprecated';$/;"	v
error	lib/Cake/Error/ErrorHandler.php	/^				$error = 'Fatal Error';$/;"	v
error	lib/Cake/Error/ErrorHandler.php	/^				$error = 'Notice';$/;"	v
error	lib/Cake/Error/ErrorHandler.php	/^				$error = 'Strict';$/;"	v
error	lib/Cake/Error/ErrorHandler.php	/^				$error = 'Warning';$/;"	v
error	lib/Cake/Error/ErrorHandler.php	/^			$error = new $renderer($exception);$/;"	v
error	lib/Cake/Error/ErrorHandler.php	/^		$error = $log = null;$/;"	v
errorConfig	lib/Cake/Error/ErrorHandler.php	/^		$errorConfig = Configure::read('Error');$/;"	v
exceptionHandler	lib/Cake/Error/ErrorHandler.php	/^		$exceptionHandler = Configure::read('Exception.handler');$/;"	v
handleError	lib/Cake/Error/ErrorHandler.php	/^	public static function handleError($code, $description, $file = null, $line = null, $context = null) {$/;"	f
handleException	lib/Cake/Error/ErrorHandler.php	/^	public static function handleException(Exception $exception) {$/;"	f
handleFatalError	lib/Cake/Error/ErrorHandler.php	/^	public static function handleFatalError($code, $description, $file, $line) {$/;"	f
log	lib/Cake/Error/ErrorHandler.php	/^				$log = LOG_ERR;$/;"	v
log	lib/Cake/Error/ErrorHandler.php	/^				$log = LOG_NOTICE;$/;"	v
log	lib/Cake/Error/ErrorHandler.php	/^				$log = LOG_WARNING;$/;"	v
logMessage	lib/Cake/Error/ErrorHandler.php	/^		$logMessage = 'Fatal Error (' . $code . '): ' . $description . ' in [' . $file . ', line ' . $line . ']';$/;"	v
mapErrorCode	lib/Cake/Error/ErrorHandler.php	/^	public static function mapErrorCode($code) {$/;"	f
message	lib/Cake/Error/ErrorHandler.php	/^			$message = sprintf("[%s] %s\\n%s", \/\/ Keeping same message format$/;"	v
message	lib/Cake/Error/ErrorHandler.php	/^		$message = $error . ' (' . $code . '): ' . $description . ' in [' . $file . ', line ' . $line . ']';$/;"	v
message	lib/Cake/Error/ErrorHandler.php	/^		$message = sprintf("[%s] %s",$/;"	v
renderer	lib/Cake/Error/ErrorHandler.php	/^		$renderer = isset($config['renderer']) ? $config['renderer'] : 'ExceptionRenderer';$/;"	v
request	lib/Cake/Error/ErrorHandler.php	/^			$request = Router::getRequest();$/;"	v
trace	lib/Cake/Error/ErrorHandler.php	/^			$trace = Debugger::trace(array('start' => 1, 'format' => 'log'));$/;"	v
ExceptionRenderer	lib/Cake/Error/ExceptionRenderer.php	/^class ExceptionRenderer {$/;"	c
__construct	lib/Cake/Error/ExceptionRenderer.php	/^	public function __construct(Exception $exception) {$/;"	f
_cakeError	lib/Cake/Error/ExceptionRenderer.php	/^	protected function _cakeError(CakeException $error) {$/;"	f
_getController	lib/Cake/Error/ExceptionRenderer.php	/^	protected function _getController($exception) {$/;"	f
_outputMessage	lib/Cake/Error/ExceptionRenderer.php	/^	protected function _outputMessage($template) {$/;"	f
_outputMessageSafe	lib/Cake/Error/ExceptionRenderer.php	/^	protected function _outputMessageSafe($template) {$/;"	f
attributes	lib/Cake/Error/ExceptionRenderer.php	/^			$attributes = $e->getAttributes();$/;"	v
code	lib/Cake/Error/ExceptionRenderer.php	/^			$code = 500;$/;"	v
code	lib/Cake/Error/ExceptionRenderer.php	/^		$code = $exception->getCode();$/;"	v
code	lib/Cake/Error/ExceptionRenderer.php	/^		$code = ($error->getCode() > 500 && $error->getCode() < 506) ? $error->getCode() : 500;$/;"	v
code	lib/Cake/Error/ExceptionRenderer.php	/^		$code = ($error->getCode() >= 400 && $error->getCode() < 506) ? $error->getCode() : 500;$/;"	v
code	lib/Cake/Error/ExceptionRenderer.php	/^		$code = 500;$/;"	v
controller	lib/Cake/Error/ExceptionRenderer.php	/^				$controller = new CakeErrorController($request, $response);$/;"	v
controller	lib/Cake/Error/ExceptionRenderer.php	/^			$controller = new Controller($request, $response);$/;"	v
controller	lib/Cake/Error/ExceptionRenderer.php	/^		$this->controller = $this->_getController($exception);$/;"	v
controller	lib/Cake/Error/ExceptionRenderer.php	/^	public $controller = null;$/;"	v
error	lib/Cake/Error/ExceptionRenderer.php	/^		$this->error = $exception;$/;"	v
error	lib/Cake/Error/ExceptionRenderer.php	/^	public $error = null;$/;"	v
error400	lib/Cake/Error/ExceptionRenderer.php	/^	public function error400($error) {$/;"	f
error500	lib/Cake/Error/ExceptionRenderer.php	/^	public function error500($error) {$/;"	f
isNotDebug	lib/Cake/Error/ExceptionRenderer.php	/^		$isNotDebug = !Configure::read('debug');$/;"	v
message	lib/Cake/Error/ExceptionRenderer.php	/^			$message = __d('cake', 'An Internal Error Has Occurred.');$/;"	v
message	lib/Cake/Error/ExceptionRenderer.php	/^			$message = __d('cake', 'Not Found');$/;"	v
message	lib/Cake/Error/ExceptionRenderer.php	/^		$message = $error->getMessage();$/;"	v
method	lib/Cake/Error/ExceptionRenderer.php	/^				$method = 'error400';$/;"	v
method	lib/Cake/Error/ExceptionRenderer.php	/^			$method = '_cakeError';$/;"	v
method	lib/Cake/Error/ExceptionRenderer.php	/^			$method = 'error400';$/;"	v
method	lib/Cake/Error/ExceptionRenderer.php	/^			$method = 'error500';$/;"	v
method	lib/Cake/Error/ExceptionRenderer.php	/^			$method = 'pdoError';$/;"	v
method	lib/Cake/Error/ExceptionRenderer.php	/^		$method = $template = Inflector::variable(str_replace('Exception', '', get_class($exception)));$/;"	v
method	lib/Cake/Error/ExceptionRenderer.php	/^		$this->method = $method;$/;"	v
method	lib/Cake/Error/ExceptionRenderer.php	/^	public $method = '';$/;"	v
methodExists	lib/Cake/Error/ExceptionRenderer.php	/^		$methodExists = method_exists($this, $method);$/;"	v
pdoError	lib/Cake/Error/ExceptionRenderer.php	/^	public function pdoError(PDOException $error) {$/;"	f
render	lib/Cake/Error/ExceptionRenderer.php	/^	public function render() {$/;"	f
request	lib/Cake/Error/ExceptionRenderer.php	/^			$request = new CakeRequest();$/;"	v
response	lib/Cake/Error/ExceptionRenderer.php	/^		$response = new CakeResponse();$/;"	v
template	lib/Cake/Error/ExceptionRenderer.php	/^				$template = 'error500';$/;"	v
template	lib/Cake/Error/ExceptionRenderer.php	/^			$template = 'pdo_error';$/;"	v
template	lib/Cake/Error/ExceptionRenderer.php	/^		$this->template = $template;$/;"	v
template	lib/Cake/Error/ExceptionRenderer.php	/^	public $template = '';$/;"	v
url	lib/Cake/Error/ExceptionRenderer.php	/^		$url = $this->controller->request->here();$/;"	v
view	lib/Cake/Error/ExceptionRenderer.php	/^		$view = new View($this->controller);$/;"	v
AclException	lib/Cake/Error/exceptions.php	/^class AclException extends CakeException {$/;"	c
BadRequestException	lib/Cake/Error/exceptions.php	/^class BadRequestException extends HttpException {$/;"	c
CacheException	lib/Cake/Error/exceptions.php	/^class CacheException extends CakeException {$/;"	c
CakeBaseException	lib/Cake/Error/exceptions.php	/^class CakeBaseException extends RuntimeException {$/;"	c
CakeException	lib/Cake/Error/exceptions.php	/^class CakeException extends CakeBaseException {$/;"	c
CakeLogException	lib/Cake/Error/exceptions.php	/^class CakeLogException extends CakeException {$/;"	c
CakeSessionException	lib/Cake/Error/exceptions.php	/^class CakeSessionException extends CakeException {$/;"	c
ConfigureException	lib/Cake/Error/exceptions.php	/^class ConfigureException extends CakeException {$/;"	c
ConsoleException	lib/Cake/Error/exceptions.php	/^class ConsoleException extends CakeException {$/;"	c
FatalErrorException	lib/Cake/Error/exceptions.php	/^class FatalErrorException extends CakeException {$/;"	c
ForbiddenException	lib/Cake/Error/exceptions.php	/^class ForbiddenException extends HttpException {$/;"	c
HttpException	lib/Cake/Error/exceptions.php	/^	class HttpException extends CakeBaseException {$/;"	c
InternalErrorException	lib/Cake/Error/exceptions.php	/^class InternalErrorException extends HttpException {$/;"	c
MethodNotAllowedException	lib/Cake/Error/exceptions.php	/^class MethodNotAllowedException extends HttpException {$/;"	c
MissingActionException	lib/Cake/Error/exceptions.php	/^class MissingActionException extends CakeException {$/;"	c
MissingBehaviorException	lib/Cake/Error/exceptions.php	/^class MissingBehaviorException extends CakeException {$/;"	c
MissingComponentException	lib/Cake/Error/exceptions.php	/^class MissingComponentException extends CakeException {$/;"	c
MissingConnectionException	lib/Cake/Error/exceptions.php	/^class MissingConnectionException extends CakeException {$/;"	c
MissingControllerException	lib/Cake/Error/exceptions.php	/^class MissingControllerException extends CakeException {$/;"	c
MissingDatabaseException	lib/Cake/Error/exceptions.php	/^class MissingDatabaseException extends CakeException {$/;"	c
MissingDatasourceConfigException	lib/Cake/Error/exceptions.php	/^class MissingDatasourceConfigException extends CakeException {$/;"	c
MissingDatasourceException	lib/Cake/Error/exceptions.php	/^class MissingDatasourceException extends CakeException {$/;"	c
MissingDispatcherFilterException	lib/Cake/Error/exceptions.php	/^class MissingDispatcherFilterException extends CakeException {$/;"	c
MissingHelperException	lib/Cake/Error/exceptions.php	/^class MissingHelperException extends CakeException {$/;"	c
MissingLayoutException	lib/Cake/Error/exceptions.php	/^class MissingLayoutException extends CakeException {$/;"	c
MissingModelException	lib/Cake/Error/exceptions.php	/^class MissingModelException extends CakeException {$/;"	c
MissingPluginException	lib/Cake/Error/exceptions.php	/^class MissingPluginException extends CakeException {$/;"	c
MissingShellException	lib/Cake/Error/exceptions.php	/^class MissingShellException extends CakeException {$/;"	c
MissingShellMethodException	lib/Cake/Error/exceptions.php	/^class MissingShellMethodException extends CakeException {$/;"	c
MissingTableException	lib/Cake/Error/exceptions.php	/^class MissingTableException extends CakeException {$/;"	c
MissingTaskException	lib/Cake/Error/exceptions.php	/^class MissingTaskException extends CakeException {$/;"	c
MissingTestLoaderException	lib/Cake/Error/exceptions.php	/^class MissingTestLoaderException extends CakeException {$/;"	c
MissingViewException	lib/Cake/Error/exceptions.php	/^class MissingViewException extends CakeException {$/;"	c
NotFoundException	lib/Cake/Error/exceptions.php	/^class NotFoundException extends HttpException {$/;"	c
NotImplementedException	lib/Cake/Error/exceptions.php	/^class NotImplementedException extends CakeException {$/;"	c
PrivateActionException	lib/Cake/Error/exceptions.php	/^class PrivateActionException extends CakeException {$/;"	c
RouterException	lib/Cake/Error/exceptions.php	/^class RouterException extends CakeException {$/;"	c
SocketException	lib/Cake/Error/exceptions.php	/^class SocketException extends CakeException {$/;"	c
UnauthorizedException	lib/Cake/Error/exceptions.php	/^class UnauthorizedException extends HttpException {$/;"	c
XmlException	lib/Cake/Error/exceptions.php	/^class XmlException extends CakeException {$/;"	c
__construct	lib/Cake/Error/exceptions.php	/^	public function __construct($message = null, $code = 400) {$/;"	f
__construct	lib/Cake/Error/exceptions.php	/^	public function __construct($message = null, $code = 401) {$/;"	f
__construct	lib/Cake/Error/exceptions.php	/^	public function __construct($message = null, $code = 403) {$/;"	f
__construct	lib/Cake/Error/exceptions.php	/^	public function __construct($message = null, $code = 404) {$/;"	f
__construct	lib/Cake/Error/exceptions.php	/^	public function __construct($message = null, $code = 405) {$/;"	f
__construct	lib/Cake/Error/exceptions.php	/^	public function __construct($message = null, $code = 500) {$/;"	f
__construct	lib/Cake/Error/exceptions.php	/^	public function __construct($message, $code = 404) {$/;"	f
__construct	lib/Cake/Error/exceptions.php	/^	public function __construct($message, $code = 404, Exception $previous = null) {$/;"	f
__construct	lib/Cake/Error/exceptions.php	/^	public function __construct($message, $code = 500) {$/;"	f
__construct	lib/Cake/Error/exceptions.php	/^	public function __construct($message, $code = 500, $file = null, $line = null) {$/;"	f
__construct	lib/Cake/Error/exceptions.php	/^	public function __construct($message, $code = 501) {$/;"	f
_attributes	lib/Cake/Error/exceptions.php	/^			$this->_attributes = $message;$/;"	v
_attributes	lib/Cake/Error/exceptions.php	/^	protected $_attributes = array();$/;"	v
_messageTemplate	lib/Cake/Error/exceptions.php	/^	protected $_messageTemplate = "Unknown command %1\\$s %2\\$s.\\nFor usage try `cake %1\\$s --help`";$/;"	v
_messageTemplate	lib/Cake/Error/exceptions.php	/^	protected $_messageTemplate = '%s is not implemented.';$/;"	v
_messageTemplate	lib/Cake/Error/exceptions.php	/^	protected $_messageTemplate = '';$/;"	v
_messageTemplate	lib/Cake/Error/exceptions.php	/^	protected $_messageTemplate = 'Action %s::%s() could not be found.';$/;"	v
_messageTemplate	lib/Cake/Error/exceptions.php	/^	protected $_messageTemplate = 'Behavior class %s could not be found.';$/;"	v
_messageTemplate	lib/Cake/Error/exceptions.php	/^	protected $_messageTemplate = 'Component class %s could not be found.';$/;"	v
_messageTemplate	lib/Cake/Error/exceptions.php	/^	protected $_messageTemplate = 'Controller class %s could not be found.';$/;"	v
_messageTemplate	lib/Cake/Error/exceptions.php	/^	protected $_messageTemplate = 'Database connection "%s" could not be found.';$/;"	v
_messageTemplate	lib/Cake/Error/exceptions.php	/^	protected $_messageTemplate = 'Database connection "%s" is missing, or could not be created.';$/;"	v
_messageTemplate	lib/Cake/Error/exceptions.php	/^	protected $_messageTemplate = 'Datasource class %s could not be found. %s';$/;"	v
_messageTemplate	lib/Cake/Error/exceptions.php	/^	protected $_messageTemplate = 'Dispatcher filter %s could not be found.';$/;"	v
_messageTemplate	lib/Cake/Error/exceptions.php	/^	protected $_messageTemplate = 'Helper class %s could not be found.';$/;"	v
_messageTemplate	lib/Cake/Error/exceptions.php	/^	protected $_messageTemplate = 'Layout file "%s" is missing.';$/;"	v
_messageTemplate	lib/Cake/Error/exceptions.php	/^	protected $_messageTemplate = 'Model %s could not be found.';$/;"	v
_messageTemplate	lib/Cake/Error/exceptions.php	/^	protected $_messageTemplate = 'Plugin %s could not be found.';$/;"	v
_messageTemplate	lib/Cake/Error/exceptions.php	/^	protected $_messageTemplate = 'Private Action %s::%s() is not directly accessible.';$/;"	v
_messageTemplate	lib/Cake/Error/exceptions.php	/^	protected $_messageTemplate = 'Shell class %s could not be found.';$/;"	v
_messageTemplate	lib/Cake/Error/exceptions.php	/^	protected $_messageTemplate = 'Table %s for model %s was not found in datasource %s.';$/;"	v
_messageTemplate	lib/Cake/Error/exceptions.php	/^	protected $_messageTemplate = 'Task class %s could not be found.';$/;"	v
_messageTemplate	lib/Cake/Error/exceptions.php	/^	protected $_messageTemplate = 'Test loader %s could not be found.';$/;"	v
_messageTemplate	lib/Cake/Error/exceptions.php	/^	protected $_messageTemplate = 'The datasource configuration "%s" was not found in database.php';$/;"	v
_messageTemplate	lib/Cake/Error/exceptions.php	/^	protected $_messageTemplate = 'View file "%s" is missing.';$/;"	v
_responseHeaders	lib/Cake/Error/exceptions.php	/^			$this->_responseHeaders = array($header => $value);$/;"	v
_responseHeaders	lib/Cake/Error/exceptions.php	/^	protected $_responseHeaders = null;$/;"	v
file	lib/Cake/Error/exceptions.php	/^			$this->file = $file;$/;"	v
getAttributes	lib/Cake/Error/exceptions.php	/^	public function getAttributes() {$/;"	f
line	lib/Cake/Error/exceptions.php	/^			$this->line = $line;$/;"	v
message	lib/Cake/Error/exceptions.php	/^			$message = 'Bad Request';$/;"	v
message	lib/Cake/Error/exceptions.php	/^			$message = 'Forbidden';$/;"	v
message	lib/Cake/Error/exceptions.php	/^			$message = 'Internal Server Error';$/;"	v
message	lib/Cake/Error/exceptions.php	/^			$message = 'Method Not Allowed';$/;"	v
message	lib/Cake/Error/exceptions.php	/^			$message = 'Not Found';$/;"	v
message	lib/Cake/Error/exceptions.php	/^			$message = 'Unauthorized';$/;"	v
message	lib/Cake/Error/exceptions.php	/^			$message = __d('cake_dev', $this->_messageTemplate, $message);$/;"	v
responseHeader	lib/Cake/Error/exceptions.php	/^	public function responseHeader($header = null, $value = null) {$/;"	f
CakeEvent	lib/Cake/Event/CakeEvent.php	/^class CakeEvent {$/;"	c
__construct	lib/Cake/Event/CakeEvent.php	/^	public function __construct($name, $subject = null, $data = null) {$/;"	f
__get	lib/Cake/Event/CakeEvent.php	/^	public function __get($attribute) {$/;"	f
_name	lib/Cake/Event/CakeEvent.php	/^		$this->_name = $name;$/;"	v
_name	lib/Cake/Event/CakeEvent.php	/^	protected $_name = null;$/;"	v
_stopped	lib/Cake/Event/CakeEvent.php	/^	protected $_stopped = false;$/;"	v
_subject	lib/Cake/Event/CakeEvent.php	/^		$this->_subject = $subject;$/;"	v
_subject	lib/Cake/Event/CakeEvent.php	/^	protected $_subject;$/;"	v
data	lib/Cake/Event/CakeEvent.php	/^		$this->data = $data;$/;"	v
data	lib/Cake/Event/CakeEvent.php	/^	public $data = null;$/;"	v
isStopped	lib/Cake/Event/CakeEvent.php	/^	public function isStopped() {$/;"	f
name	lib/Cake/Event/CakeEvent.php	/^	public function name() {$/;"	f
result	lib/Cake/Event/CakeEvent.php	/^	public $result = null;$/;"	v
stopPropagation	lib/Cake/Event/CakeEvent.php	/^	public function stopPropagation() {$/;"	f
subject	lib/Cake/Event/CakeEvent.php	/^	public function subject() {$/;"	f
CakeEventListener	lib/Cake/Event/CakeEventListener.php	/^interface CakeEventListener {$/;"	i
implementedEvents	lib/Cake/Event/CakeEventListener.php	/^	public function implementedEvents();$/;"	f
CakeEventManager	lib/Cake/Event/CakeEventManager.php	/^class CakeEventManager {$/;"	c
_attachSubscriber	lib/Cake/Event/CakeEventManager.php	/^	protected function _attachSubscriber(CakeEventListener $subscriber) {$/;"	f
_detachSubscriber	lib/Cake/Event/CakeEventManager.php	/^	protected function _detachSubscriber(CakeEventListener $subscriber, $eventKey = null) {$/;"	f
_extractCallable	lib/Cake/Event/CakeEventManager.php	/^	protected function _extractCallable($function, $object) {$/;"	f
_generalManager	lib/Cake/Event/CakeEventManager.php	/^	protected static $_generalManager = null;$/;"	v
_isGlobal	lib/Cake/Event/CakeEventManager.php	/^	protected $_isGlobal = false;$/;"	v
_listeners	lib/Cake/Event/CakeEventManager.php	/^	protected $_listeners = array();$/;"	v
attach	lib/Cake/Event/CakeEventManager.php	/^	public function attach($callable, $eventKey = null, $options = array()) {$/;"	f
defaultPriority	lib/Cake/Event/CakeEventManager.php	/^	public static $defaultPriority = 10;$/;"	v
detach	lib/Cake/Event/CakeEventManager.php	/^	public function detach($callable, $eventKey = null) {$/;"	f
dispatch	lib/Cake/Event/CakeEventManager.php	/^	public function dispatch($event) {$/;"	f
event	lib/Cake/Event/CakeEventManager.php	/^			$event = new CakeEvent($event);$/;"	v
events	lib/Cake/Event/CakeEventManager.php	/^			$events = array($eventKey => $events[$eventKey]);$/;"	v
events	lib/Cake/Event/CakeEventManager.php	/^		$events = (array)$subscriber->implementedEvents();$/;"	v
function	lib/Cake/Event/CakeEventManager.php	/^				$function = $function['callable'];$/;"	v
globalListeners	lib/Cake/Event/CakeEventManager.php	/^		$globalListeners = empty($globalListeners) ? array() : $globalListeners;$/;"	v
globalListeners	lib/Cake/Event/CakeEventManager.php	/^		$globalListeners = self::instance()->prioritisedListeners($eventKey);$/;"	v
handler	lib/Cake/Event/CakeEventManager.php	/^						$handler = isset($handler['callable']) ? $handler['callable'] : $handler;$/;"	v
instance	lib/Cake/Event/CakeEventManager.php	/^	public static function instance($manager = null) {$/;"	f
listeners	lib/Cake/Event/CakeEventManager.php	/^		$listeners = $this->listeners($event->name());$/;"	v
listeners	lib/Cake/Event/CakeEventManager.php	/^	public function listeners($eventKey) {$/;"	f
localListeners	lib/Cake/Event/CakeEventManager.php	/^			$localListeners = $this->prioritisedListeners($eventKey);$/;"	v
localListeners	lib/Cake/Event/CakeEventManager.php	/^			$localListeners = empty($localListeners) ? array() : $localListeners;$/;"	v
localListeners	lib/Cake/Event/CakeEventManager.php	/^		$localListeners = array();$/;"	v
method	lib/Cake/Event/CakeEventManager.php	/^				$method = array($subscriber, $function);$/;"	v
method	lib/Cake/Event/CakeEventManager.php	/^			$method = $function;$/;"	v
method	lib/Cake/Event/CakeEventManager.php	/^			$method = array($object, $method);$/;"	v
method	lib/Cake/Event/CakeEventManager.php	/^		$method = $function['callable'];$/;"	v
options	lib/Cake/Event/CakeEventManager.php	/^			$options = array();$/;"	v
options	lib/Cake/Event/CakeEventManager.php	/^		$options = $function;$/;"	v
options	lib/Cake/Event/CakeEventManager.php	/^		$options = $options + array('priority' => self::$defaultPriority, 'passParams' => false);$/;"	v
priorities	lib/Cake/Event/CakeEventManager.php	/^		$priorities = array();$/;"	v
priorities	lib/Cake/Event/CakeEventManager.php	/^		$priorities = array_merge(array_keys($globalListeners), array_keys($localListeners));$/;"	v
priorities	lib/Cake/Event/CakeEventManager.php	/^		$priorities = array_unique($priorities);$/;"	v
prioritisedListeners	lib/Cake/Event/CakeEventManager.php	/^	public function prioritisedListeners($eventKey) {$/;"	f
result	lib/Cake/Event/CakeEventManager.php	/^				$result = array_merge($result, $globalListeners[$priority]);$/;"	v
result	lib/Cake/Event/CakeEventManager.php	/^				$result = array_merge($result, $localListeners[$priority]);$/;"	v
result	lib/Cake/Event/CakeEventManager.php	/^				$result = call_user_func($listener['callable'], $event);$/;"	v
result	lib/Cake/Event/CakeEventManager.php	/^				$result = call_user_func_array($listener['callable'], $event->data);$/;"	v
result	lib/Cake/Event/CakeEventManager.php	/^		$result = array();$/;"	v
I18n	lib/Cake/I18n/I18n.php	/^class I18n {$/;"	c
__construct	lib/Cake/I18n/I18n.php	/^	public function __construct() {$/;"	f
_bindTextDomain	lib/Cake/I18n/I18n.php	/^	protected function _bindTextDomain($domain) {$/;"	f
_categories	lib/Cake/I18n/I18n.php	/^	protected $_categories = array($/;"	v
_domains	lib/Cake/I18n/I18n.php	/^			$this->_domains = Hash::mergeDiff($this->_domains, $merge);$/;"	v
_domains	lib/Cake/I18n/I18n.php	/^	protected $_domains = array();$/;"	v
_escape	lib/Cake/I18n/I18n.php	/^	protected $_escape = null;$/;"	v
_lang	lib/Cake/I18n/I18n.php	/^	protected $_lang = null;$/;"	v
_noLocale	lib/Cake/I18n/I18n.php	/^						$this->_noLocale = false;$/;"	v
_noLocale	lib/Cake/I18n/I18n.php	/^					$this->_noLocale = false;$/;"	v
_noLocale	lib/Cake/I18n/I18n.php	/^		$this->_noLocale = true;$/;"	v
_noLocale	lib/Cake/I18n/I18n.php	/^	protected $_noLocale = false;$/;"	v
_parseLiteralValue	lib/Cake/I18n/I18n.php	/^	protected function _parseLiteralValue($string) {$/;"	f
_pluralGuess	lib/Cake/I18n/I18n.php	/^	protected function _pluralGuess($header, $n) {$/;"	f
_this	lib/Cake/I18n/I18n.php	/^		$_this = I18n::getInstance();$/;"	v
_translateTime	lib/Cake/I18n/I18n.php	/^	protected function _translateTime($format, $domain) {$/;"	f
app	lib/Cake/I18n/I18n.php	/^					$app = $directory . $lang . DS . $this->category . DS . 'core';$/;"	v
category	lib/Cake/I18n/I18n.php	/^	public $category = 'LC_MESSAGES';$/;"	v
clear	lib/Cake/I18n/I18n.php	/^	public static function clear() {$/;"	f
comment	lib/Cake/I18n/I18n.php	/^				$comment = $parts[1];$/;"	v
comment	lib/Cake/I18n/I18n.php	/^		$comment = '#';$/;"	v
core	lib/Cake/I18n/I18n.php	/^						$core = null;$/;"	v
core	lib/Cake/I18n/I18n.php	/^		$core = true;$/;"	v
count	lib/Cake/I18n/I18n.php	/^			$count = count($parts);$/;"	v
currentToken	lib/Cake/I18n/I18n.php	/^				$currentToken = $parts[0];$/;"	v
currentToken	lib/Cake/I18n/I18n.php	/^		$currentToken = false;$/;"	v
defaultDomain	lib/Cake/I18n/I18n.php	/^	public static $defaultDomain = 'default';$/;"	v
definitions	lib/Cake/I18n/I18n.php	/^					$definitions = self::loadLocaleDefinition($localeDef);$/;"	v
definitions	lib/Cake/I18n/I18n.php	/^		$definitions = array();$/;"	v
delimiter	lib/Cake/I18n/I18n.php	/^			$delimiter = $this->_escape . 'd';$/;"	v
delimiter	lib/Cake/I18n/I18n.php	/^			$delimiter = $this->_escape . 'x';$/;"	v
delimiter	lib/Cake/I18n/I18n.php	/^			$delimiter = $this->_escape;$/;"	v
delimiter	lib/Cake/I18n/I18n.php	/^			$delimiter = 'U00';$/;"	v
domain	lib/Cake/I18n/I18n.php	/^			$domain = self::$defaultDomain;$/;"	v
domain	lib/Cake/I18n/I18n.php	/^	public $domain = null;$/;"	v
domains	lib/Cake/I18n/I18n.php	/^	public static function domains() {$/;"	f
escape	lib/Cake/I18n/I18n.php	/^				$escape = $parts[1];$/;"	v
escape	lib/Cake/I18n/I18n.php	/^		$escape = '\\\\';$/;"	v
file	lib/Cake/I18n/I18n.php	/^				$file = $directory . $lang . DS . $this->category . DS . $domain;$/;"	v
getInstance	lib/Cake/I18n/I18n.php	/^	public static function getInstance() {$/;"	f
head	lib/Cake/I18n/I18n.php	/^			$head = $this->_domains[$domain][$this->_lang][$this->category][""];$/;"	v
header	lib/Cake/I18n/I18n.php	/^				$header = '';$/;"	v
header	lib/Cake/I18n/I18n.php	/^				$header = strtok($line, ':');$/;"	v
header	lib/Cake/I18n/I18n.php	/^			$header = $_this->_domains[$domain][$_this->_lang][$_this->category]["%plural-c"];$/;"	v
header	lib/Cake/I18n/I18n.php	/^			$header = substr($data, 0, 20);$/;"	v
header	lib/Cake/I18n/I18n.php	/^			$header = unpack('L1magic\/L1version\/L1count\/L1o_msg\/L1o_trn', $header);$/;"	v
header	lib/Cake/I18n/I18n.php	/^		$header = '';$/;"	v
instance	lib/Cake/I18n/I18n.php	/^		static $instance = array();$/;"	v
l10n	lib/Cake/I18n/I18n.php	/^		$this->l10n = new L10n();$/;"	v
l10n	lib/Cake/I18n/I18n.php	/^	public $l10n = null;$/;"	v
lang	lib/Cake/I18n/I18n.php	/^			$lang = $_this->l10n->get($language);$/;"	v
language	lib/Cake/I18n/I18n.php	/^				$language = CakeSession::read('Config.language');$/;"	v
language	lib/Cake/I18n/I18n.php	/^				$language = Configure::read('Config.language');$/;"	v
len	lib/Cake/I18n/I18n.php	/^			$len = strlen($value) - 1;$/;"	v
line	lib/Cake/I18n/I18n.php	/^				$line = trim(strtok("\\n"));$/;"	v
line	lib/Cake/I18n/I18n.php	/^			$line = trim($line);$/;"	v
line	lib/Cake/I18n/I18n.php	/^			$line = trim(fgets($file));$/;"	v
loadLocaleDefinition	lib/Cake/I18n/I18n.php	/^	public static function loadLocaleDefinition($filename) {$/;"	f
loadMo	lib/Cake/I18n/I18n.php	/^	public static function loadMo($filename) {$/;"	f
loadPo	lib/Cake/I18n/I18n.php	/^	public static function loadPo($filename) {$/;"	f
localeDef	lib/Cake/I18n/I18n.php	/^				$localeDef = $directory . $lang . DS . $this->category;$/;"	v
merge	lib/Cake/I18n/I18n.php	/^		$merge = array();$/;"	v
msgid	lib/Cake/I18n/I18n.php	/^					$msgid = substr($data, $r["offs"], $r["len"]);$/;"	v
msgstr	lib/Cake/I18n/I18n.php	/^						$msgstr = explode("\\000", $msgstr);$/;"	v
msgstr	lib/Cake/I18n/I18n.php	/^					$msgstr = substr($data, $r["offs"], $r["len"]);$/;"	v
mustEscape	lib/Cake/I18n/I18n.php	/^			$mustEscape = array($escape . ',', $escape . ';', $escape . '<', $escape . '>', $escape . $escape);$/;"	v
parts	lib/Cake/I18n/I18n.php	/^			$parts = preg_split("\/[[:space:]]+\/", $line);$/;"	v
pluginDomain	lib/Cake/I18n/I18n.php	/^				$pluginDomain = Inflector::underscore($plugin);$/;"	v
plugins	lib/Cake/I18n/I18n.php	/^		$plugins = CakePlugin::loaded();$/;"	v
plural	lib/Cake/I18n/I18n.php	/^				$plural = $regs[1];$/;"	v
plural	lib/Cake/I18n/I18n.php	/^				$plural = 0;$/;"	v
plural	lib/Cake/I18n/I18n.php	/^			$plural = str_replace("\\r\\n", "\\n", $plural);$/;"	v
plural	lib/Cake/I18n/I18n.php	/^		$plural = 0;$/;"	v
plurals	lib/Cake/I18n/I18n.php	/^				$plurals = 0;$/;"	v
plurals	lib/Cake/I18n/I18n.php	/^				$plurals = 1;$/;"	v
plurals	lib/Cake/I18n/I18n.php	/^			$plurals = $_this->_pluralGuess($header, $count);$/;"	v
plurals	lib/Cake/I18n/I18n.php	/^			$plurals = 0;$/;"	v
r	lib/Cake/I18n/I18n.php	/^					$r = unpack("L1len\/L1offs", substr($data, $o_msg + $n * 8, 8));$/;"	v
r	lib/Cake/I18n/I18n.php	/^					$r = unpack("L1len\/L1offs", substr($data, $o_trn + $n * 8, 8));$/;"	v
replacements	lib/Cake/I18n/I18n.php	/^			$replacements = array_map('crc32', $mustEscape);$/;"	v
searchPaths	lib/Cake/I18n/I18n.php	/^					$searchPaths = array_reverse($searchPaths);$/;"	v
searchPaths	lib/Cake/I18n/I18n.php	/^		$searchPaths = App::path('locales');$/;"	v
self	lib/Cake/I18n/I18n.php	/^		$self = I18n::getInstance();$/;"	v
singular	lib/Cake/I18n/I18n.php	/^			$singular = str_replace("\\r\\n", "\\n", $singular);$/;"	v
string	lib/Cake/I18n/I18n.php	/^		$string = $string[1];$/;"	v
switch	lib/Cake/I18n/I18n.php	/^				$switch = preg_replace("\/(?:[() {}\\\\[\\\\]^\\\\s*\\\\]]+)\/", "", $this->_domains[$domain][$this->_lang][$this->category]["%po-header"]["plural-forms"]);$/;"	v
trans	lib/Cake/I18n/I18n.php	/^						$trans = $trans[$plurals];$/;"	v
trans	lib/Cake/I18n/I18n.php	/^						$trans = $trans[0];$/;"	v
translate	lib/Cake/I18n/I18n.php	/^	public static function translate($singular, $plural = null, $domain = null, $category = self::LC_MESSAGES, $count = null, $language = null) {$/;"	f
translationKey	lib/Cake/I18n/I18n.php	/^				$translationKey = '';$/;"	v
translationKey	lib/Cake/I18n/I18n.php	/^				$translationKey = stripcslashes($regs[1]);$/;"	v
translationKey	lib/Cake/I18n/I18n.php	/^		$translationKey = '';$/;"	v
translations	lib/Cake/I18n/I18n.php	/^						$translations = self::loadMo($app . '.mo');$/;"	v
translations	lib/Cake/I18n/I18n.php	/^						$translations = self::loadPo($app . '.po');$/;"	v
translations	lib/Cake/I18n/I18n.php	/^					$translations = false;$/;"	v
translations	lib/Cake/I18n/I18n.php	/^					$translations = self::loadMo($file . '.mo');$/;"	v
translations	lib/Cake/I18n/I18n.php	/^					$translations = self::loadPo($file . '.po');$/;"	v
translations	lib/Cake/I18n/I18n.php	/^				$translations = false;$/;"	v
translations	lib/Cake/I18n/I18n.php	/^			$translations = array();$/;"	v
translations	lib/Cake/I18n/I18n.php	/^		$translations = array();$/;"	v
translations	lib/Cake/I18n/I18n.php	/^		$translations = false;$/;"	v
type	lib/Cake/I18n/I18n.php	/^				$type = 0;$/;"	v
type	lib/Cake/I18n/I18n.php	/^				$type = 1;$/;"	v
type	lib/Cake/I18n/I18n.php	/^				$type = 2;$/;"	v
type	lib/Cake/I18n/I18n.php	/^				$type = 3;$/;"	v
type	lib/Cake/I18n/I18n.php	/^				$type = 4;$/;"	v
type	lib/Cake/I18n/I18n.php	/^				$type = 5;$/;"	v
type	lib/Cake/I18n/I18n.php	/^				$type = 6;$/;"	v
type	lib/Cake/I18n/I18n.php	/^				$type = 7;$/;"	v
type	lib/Cake/I18n/I18n.php	/^		$type = 0;$/;"	v
val	lib/Cake/I18n/I18n.php	/^				$val = preg_replace_callback('\/(?:<)?(.[^>]*)(?:>)?\/', array(&$_this, '_parseLiteralValue'), $val);$/;"	v
val	lib/Cake/I18n/I18n.php	/^				$val = str_replace($replacements, $mustEscape, $val);$/;"	v
val	lib/Cake/I18n/I18n.php	/^				$val = trim($val, '"');$/;"	v
value	lib/Cake/I18n/I18n.php	/^				$value = $parts[1];$/;"	v
value	lib/Cake/I18n/I18n.php	/^				$value = is_array($value) ? $parts[0] : $value . $parts[0];$/;"	v
value	lib/Cake/I18n/I18n.php	/^				$value = substr($value, 0, $len);$/;"	v
value	lib/Cake/I18n/I18n.php	/^			$value = explode(';', $value);$/;"	v
value	lib/Cake/I18n/I18n.php	/^			$value = str_replace($mustEscape, $replacements, $value);$/;"	v
value	lib/Cake/I18n/I18n.php	/^		$value = '';$/;"	v
L10n	lib/Cake/I18n/L10n.php	/^class L10n {$/;"	c
__construct	lib/Cake/I18n/L10n.php	/^	public function __construct() {$/;"	f
_autoLanguage	lib/Cake/I18n/L10n.php	/^	protected function _autoLanguage() {$/;"	f
_detectableLanguages	lib/Cake/I18n/L10n.php	/^		$_detectableLanguages = CakeRequest::acceptLanguage();$/;"	v
_l10nCatalog	lib/Cake/I18n/L10n.php	/^	protected $_l10nCatalog = array($/;"	v
_l10nMap	lib/Cake/I18n/L10n.php	/^	protected $_l10nMap = array($/;"	v
_setLanguage	lib/Cake/I18n/L10n.php	/^	protected function _setLanguage($language = null) {$/;"	f
catalog	lib/Cake/I18n/L10n.php	/^			$catalog = $this->catalog($language);$/;"	v
catalog	lib/Cake/I18n/L10n.php	/^			$catalog = $this->catalog($this->default);$/;"	v
catalog	lib/Cake/I18n/L10n.php	/^		$catalog = false;$/;"	v
catalog	lib/Cake/I18n/L10n.php	/^	public function catalog($language = null) {$/;"	f
charset	lib/Cake/I18n/L10n.php	/^			$this->charset = $catalog['charset'];$/;"	v
charset	lib/Cake/I18n/L10n.php	/^	public $charset = 'utf-8';$/;"	v
default	lib/Cake/I18n/L10n.php	/^			$this->default = $default;$/;"	v
default	lib/Cake/I18n/L10n.php	/^			$this->default = DEFAULT_LANGUAGE;$/;"	v
default	lib/Cake/I18n/L10n.php	/^		$default = Configure::read('Config.language');$/;"	v
default	lib/Cake/I18n/L10n.php	/^	public $default = null;$/;"	v
direction	lib/Cake/I18n/L10n.php	/^			$this->direction = $catalog['direction'];$/;"	v
direction	lib/Cake/I18n/L10n.php	/^	public $direction = 'ltr';$/;"	v
fallback	lib/Cake/I18n/L10n.php	/^			$fallback = $catalog['localeFallback'];$/;"	v
get	lib/Cake/I18n/L10n.php	/^	public function get($language = null) {$/;"	f
lang	lib/Cake/I18n/L10n.php	/^			$this->lang = $language;$/;"	v
lang	lib/Cake/I18n/L10n.php	/^	public $lang = 'eng';$/;"	v
langKey	lib/Cake/I18n/L10n.php	/^				$langKey = substr($langKey, 0, 2);$/;"	v
language	lib/Cake/I18n/L10n.php	/^			$language = $this->default;$/;"	v
language	lib/Cake/I18n/L10n.php	/^			$this->language = $catalog['language'];$/;"	v
language	lib/Cake/I18n/L10n.php	/^	public $language = 'English (United States)';$/;"	v
languagePath	lib/Cake/I18n/L10n.php	/^			$this->languagePath = array($language);$/;"	v
languagePath	lib/Cake/I18n/L10n.php	/^			$this->languagePath = array_unique(array($/;"	v
languagePath	lib/Cake/I18n/L10n.php	/^	public $languagePath = array('en_us', 'eng');$/;"	v
locale	lib/Cake/I18n/L10n.php	/^			$this->locale = $catalog['locale'];$/;"	v
locale	lib/Cake/I18n/L10n.php	/^	public $locale = 'en_us';$/;"	v
map	lib/Cake/I18n/L10n.php	/^	public function map($mixed = null) {$/;"	f
result	lib/Cake/I18n/L10n.php	/^			$result = array();$/;"	v
Multibyte	lib/Cake/I18n/Multibyte.php	/^class Multibyte {$/;"	c
_caseFold	lib/Cake/I18n/Multibyte.php	/^	protected static $_caseFold = array();$/;"	v
_codeRange	lib/Cake/I18n/Multibyte.php	/^	protected static $_codeRange = array();$/;"	v
_codepoint	lib/Cake/I18n/Multibyte.php	/^	protected static function _codepoint($decimal) {$/;"	f
_find	lib/Cake/I18n/Multibyte.php	/^	protected static function _find($char, $type = 'lower') {$/;"	f
_table	lib/Cake/I18n/Multibyte.php	/^	protected static $_table = null;$/;"	v
ascii	lib/Cake/I18n/Multibyte.php	/^		$ascii = '';$/;"	v
ascii	lib/Cake/I18n/Multibyte.php	/^	public static function ascii($array) {$/;"	f
char	lib/Cake/I18n/Multibyte.php	/^			$char = $utf8Map[$i];$/;"	v
charset	lib/Cake/I18n/Multibyte.php	/^			$charset = Configure::read('App.encoding');$/;"	v
charset	lib/Cake/I18n/Multibyte.php	/^		$charset = strtoupper($charset);$/;"	v
check	lib/Cake/I18n/Multibyte.php	/^			$check = Multibyte::strtoupper($haystack);$/;"	v
check	lib/Cake/I18n/Multibyte.php	/^			$check = Multibyte::utf8($check);$/;"	v
check	lib/Cake/I18n/Multibyte.php	/^			$check = Multibyte::utf8($haystack);$/;"	v
check	lib/Cake/I18n/Multibyte.php	/^		$check = Multibyte::strtoupper($haystack);$/;"	v
check	lib/Cake/I18n/Multibyte.php	/^		$check = Multibyte::utf8($check);$/;"	v
check	lib/Cake/I18n/Multibyte.php	/^		$check = Multibyte::utf8($haystack);$/;"	v
checkMultibyte	lib/Cake/I18n/Multibyte.php	/^	public static function checkMultibyte($string) {$/;"	f
count	lib/Cake/I18n/Multibyte.php	/^		$count = 0;$/;"	v
count	lib/Cake/I18n/Multibyte.php	/^		$count = count(self::$_caseFold[self::$_table]);$/;"	v
end	lib/Cake/I18n/Multibyte.php	/^		$end = '?=';$/;"	v
find	lib/Cake/I18n/Multibyte.php	/^					$find = ($value < 224) ? 2 : 3;$/;"	v
find	lib/Cake/I18n/Multibyte.php	/^					$find = 1;$/;"	v
find	lib/Cake/I18n/Multibyte.php	/^		$find = 1;$/;"	v
found	lib/Cake/I18n/Multibyte.php	/^								$found = true;$/;"	v
found	lib/Cake/I18n/Multibyte.php	/^							$found = true;$/;"	v
found	lib/Cake/I18n/Multibyte.php	/^						$found = true;$/;"	v
found	lib/Cake/I18n/Multibyte.php	/^					$found = true;$/;"	v
found	lib/Cake/I18n/Multibyte.php	/^			$found = false;$/;"	v
found	lib/Cake/I18n/Multibyte.php	/^		$found = array();$/;"	v
found	lib/Cake/I18n/Multibyte.php	/^		$found = false;$/;"	v
haystack	lib/Cake/I18n/Multibyte.php	/^						$haystack = array_merge(array($haystack[$position]), $haystack);$/;"	v
haystack	lib/Cake/I18n/Multibyte.php	/^			$haystack = Multibyte::strtoupper($haystack);$/;"	v
haystack	lib/Cake/I18n/Multibyte.php	/^			$haystack = Multibyte::utf8($haystack);$/;"	v
haystack	lib/Cake/I18n/Multibyte.php	/^		$haystack = Multibyte::utf8($haystack);$/;"	v
haystackCount	lib/Cake/I18n/Multibyte.php	/^			$haystackCount = count($haystack);$/;"	v
haystackCount	lib/Cake/I18n/Multibyte.php	/^		$haystackCount = count($haystack);$/;"	v
i	lib/Cake/I18n/Multibyte.php	/^				$i = (int)$maxchars;$/;"	v
j	lib/Cake/I18n/Multibyte.php	/^							$j = 0;$/;"	v
keyCount	lib/Cake/I18n/Multibyte.php	/^				$keyCount = count($keys);$/;"	v
keys	lib/Cake/I18n/Multibyte.php	/^				$keys = self::_find($char);$/;"	v
keys	lib/Cake/I18n/Multibyte.php	/^				$keys = self::_find($char, 'upper');$/;"	v
length	lib/Cake/I18n/Multibyte.php	/^		$length = $length - ($length % 4);$/;"	v
length	lib/Cake/I18n/Multibyte.php	/^		$length = 75 - strlen($start) - strlen($end);$/;"	v
length	lib/Cake/I18n/Multibyte.php	/^		$length = count($utf8Map);$/;"	v
length	lib/Cake/I18n/Multibyte.php	/^		$length = strlen($string);$/;"	v
lower	lib/Cake/I18n/Multibyte.php	/^					$lower = ord(substr($str, $ii, 1));$/;"	v
lowerCase	lib/Cake/I18n/Multibyte.php	/^		$lowerCase = array();$/;"	v
map	lib/Cake/I18n/Multibyte.php	/^		$map = array();$/;"	v
matched	lib/Cake/I18n/Multibyte.php	/^										$matched = true;$/;"	v
matched	lib/Cake/I18n/Multibyte.php	/^								$matched = true;$/;"	v
matched	lib/Cake/I18n/Multibyte.php	/^							$matched = true;$/;"	v
matched	lib/Cake/I18n/Multibyte.php	/^						$matched = false;$/;"	v
matched	lib/Cake/I18n/Multibyte.php	/^				$matched = false;$/;"	v
matched	lib/Cake/I18n/Multibyte.php	/^				$matched = true;$/;"	v
matches	lib/Cake/I18n/Multibyte.php	/^			$matches = array_count_values($haystack);$/;"	v
matches	lib/Cake/I18n/Multibyte.php	/^		$matches = array_count_values($check);$/;"	v
matches	lib/Cake/I18n/Multibyte.php	/^		$matches = array_count_values($haystack);$/;"	v
maxchars	lib/Cake/I18n/Multibyte.php	/^			$maxchars = floor(($length * 3) \/ 4);$/;"	v
mimeEncode	lib/Cake/I18n/Multibyte.php	/^	public static function mimeEncode($string, $charset = null, $newline = "\\r\\n") {$/;"	f
needle	lib/Cake/I18n/Multibyte.php	/^			$needle = Multibyte::strtoupper($needle);$/;"	v
needle	lib/Cake/I18n/Multibyte.php	/^			$needle = Multibyte::utf8($needle);$/;"	v
needle	lib/Cake/I18n/Multibyte.php	/^		$needle = Multibyte::strtoupper($needle);$/;"	v
needle	lib/Cake/I18n/Multibyte.php	/^		$needle = Multibyte::utf8($needle);$/;"	v
needleCount	lib/Cake/I18n/Multibyte.php	/^			$needleCount = count($needle);$/;"	v
needleCount	lib/Cake/I18n/Multibyte.php	/^		$needleCount = count($needle);$/;"	v
nextChar	lib/Cake/I18n/Multibyte.php	/^										$nextChar = $utf8Map[$i + $jj];$/;"	v
nextChar	lib/Cake/I18n/Multibyte.php	/^								$nextChar = $utf8Map[$i + $ii - 1];$/;"	v
nextChar	lib/Cake/I18n/Multibyte.php	/^								$nextChar = $utf8Map[$i + $ii];$/;"	v
parts	lib/Cake/I18n/Multibyte.php	/^			$parts = array();$/;"	v
parts	lib/Cake/I18n/Multibyte.php	/^		$parts = array();$/;"	v
php	lib/Cake/I18n/Multibyte.php	/^		$php = (PHP_VERSION < 5.3);$/;"	v
position	lib/Cake/I18n/Multibyte.php	/^			$position = $offset;$/;"	v
position	lib/Cake/I18n/Multibyte.php	/^			$position = 0;$/;"	v
position	lib/Cake/I18n/Multibyte.php	/^		$position = 0;$/;"	v
range	lib/Cake/I18n/Multibyte.php	/^			$range = self::_codepoint($char);$/;"	v
replace	lib/Cake/I18n/Multibyte.php	/^						$replace = 0;$/;"	v
replaced	lib/Cake/I18n/Multibyte.php	/^										$replaced = array_merge($replaced, array_values($keys[$ii]['lower']));$/;"	v
replaced	lib/Cake/I18n/Multibyte.php	/^								$replaced = array_merge($replaced, array_values($keys[$key]['lower']));$/;"	v
replaced	lib/Cake/I18n/Multibyte.php	/^		$replaced = array();$/;"	v
return	lib/Cake/I18n/Multibyte.php	/^			$return = '0080_00ff'; \/\/ Latin-1 Supplement$/;"	v
return	lib/Cake/I18n/Multibyte.php	/^			$return = '0100_017f'; \/\/ Latin Extended-A$/;"	v
return	lib/Cake/I18n/Multibyte.php	/^			$return = '0180_024F'; \/\/ Latin Extended-B$/;"	v
return	lib/Cake/I18n/Multibyte.php	/^			$return = '0250_02af'; \/\/ IPA Extensions$/;"	v
return	lib/Cake/I18n/Multibyte.php	/^			$return = '0370_03ff'; \/\/ Greek and Coptic$/;"	v
return	lib/Cake/I18n/Multibyte.php	/^			$return = '0400_04ff'; \/\/ Cyrillic$/;"	v
return	lib/Cake/I18n/Multibyte.php	/^			$return = '0500_052f'; \/\/ Cyrillic Supplement$/;"	v
return	lib/Cake/I18n/Multibyte.php	/^			$return = '0530_058f'; \/\/ Armenian$/;"	v
return	lib/Cake/I18n/Multibyte.php	/^			$return = '1e00_1eff'; \/\/ Latin Extended Additional$/;"	v
return	lib/Cake/I18n/Multibyte.php	/^			$return = '1f00_1fff'; \/\/ Greek Extended$/;"	v
return	lib/Cake/I18n/Multibyte.php	/^			$return = '2100_214f'; \/\/ Letterlike Symbols$/;"	v
return	lib/Cake/I18n/Multibyte.php	/^			$return = '2150_218f'; \/\/ Number Forms$/;"	v
return	lib/Cake/I18n/Multibyte.php	/^			$return = '2460_24ff'; \/\/ Enclosed Alphanumerics$/;"	v
return	lib/Cake/I18n/Multibyte.php	/^			$return = '2c00_2c5f'; \/\/ Glagolitic$/;"	v
return	lib/Cake/I18n/Multibyte.php	/^			$return = '2c60_2c7f'; \/\/ Latin Extended-C$/;"	v
return	lib/Cake/I18n/Multibyte.php	/^			$return = '2c80_2cff'; \/\/ Coptic$/;"	v
return	lib/Cake/I18n/Multibyte.php	/^			$return = 'ff00_ffef'; \/\/ Halfwidth and Fullwidth Forms$/;"	v
return	lib/Cake/I18n/Multibyte.php	/^			$return = false;$/;"	v
spacer	lib/Cake/I18n/Multibyte.php	/^		$spacer = $end . $newline . ' ' . $start;$/;"	v
start	lib/Cake/I18n/Multibyte.php	/^		$start = '=?' . $charset . '?B?';$/;"	v
str	lib/Cake/I18n/Multibyte.php	/^				$str = strtolower(chr($char));$/;"	v
str	lib/Cake/I18n/Multibyte.php	/^				$str = strtoupper(chr($char));$/;"	v
string	lib/Cake/I18n/Multibyte.php	/^				$string = substr($string, $i);$/;"	v
string	lib/Cake/I18n/Multibyte.php	/^			$string = Multibyte::utf8($string);$/;"	v
string	lib/Cake/I18n/Multibyte.php	/^			$string = chunk_split(base64_encode($string), $length, $spacer);$/;"	v
string	lib/Cake/I18n/Multibyte.php	/^			$string = implode($spacer, $parts);$/;"	v
string	lib/Cake/I18n/Multibyte.php	/^			$string = preg_replace('\/' . preg_quote($spacer) . '$\/', '', $string);$/;"	v
string	lib/Cake/I18n/Multibyte.php	/^		$string = Multibyte::utf8($string);$/;"	v
string	lib/Cake/I18n/Multibyte.php	/^		$string = array_values($string);$/;"	v
stringLength	lib/Cake/I18n/Multibyte.php	/^				$stringLength = strlen($string);$/;"	v
stringLength	lib/Cake/I18n/Multibyte.php	/^			$stringLength = strlen($string);$/;"	v
stripos	lib/Cake/I18n/Multibyte.php	/^	public static function stripos($haystack, $needle, $offset = 0) {$/;"	f
stristr	lib/Cake/I18n/Multibyte.php	/^	public static function stristr($haystack, $needle, $part = false) {$/;"	f
strlen	lib/Cake/I18n/Multibyte.php	/^				$strlen = strlen($str);$/;"	v
strlen	lib/Cake/I18n/Multibyte.php	/^	public static function strlen($string) {$/;"	f
strpos	lib/Cake/I18n/Multibyte.php	/^	public static function strpos($haystack, $needle, $offset = 0) {$/;"	f
strrchr	lib/Cake/I18n/Multibyte.php	/^	public static function strrchr($haystack, $needle, $part = false) {$/;"	f
strrichr	lib/Cake/I18n/Multibyte.php	/^	public static function strrichr($haystack, $needle, $part = false) {$/;"	f
strripos	lib/Cake/I18n/Multibyte.php	/^	public static function strripos($haystack, $needle, $offset = 0) {$/;"	f
strrpos	lib/Cake/I18n/Multibyte.php	/^	public static function strrpos($haystack, $needle, $offset = 0) {$/;"	f
strstr	lib/Cake/I18n/Multibyte.php	/^	public static function strstr($haystack, $needle, $part = false) {$/;"	f
strtolower	lib/Cake/I18n/Multibyte.php	/^	public static function strtolower($string) {$/;"	f
strtoupper	lib/Cake/I18n/Multibyte.php	/^	public static function strtoupper($string) {$/;"	f
substr	lib/Cake/I18n/Multibyte.php	/^	public static function substr($string, $start, $length = null) {$/;"	f
substrCount	lib/Cake/I18n/Multibyte.php	/^	public static function substrCount($haystack, $needle) {$/;"	f
test	lib/Cake/I18n/Multibyte.php	/^					$test = ord($string[$i]);$/;"	v
test	lib/Cake/I18n/Multibyte.php	/^				$test = ord($string[$i]);$/;"	v
upper	lib/Cake/I18n/Multibyte.php	/^					$upper = ord(substr($str, $ii, 1));$/;"	v
upperCase	lib/Cake/I18n/Multibyte.php	/^		$upperCase = array();$/;"	v
utf8	lib/Cake/I18n/Multibyte.php	/^	public static function utf8($string) {$/;"	f
utf8Map	lib/Cake/I18n/Multibyte.php	/^		$utf8Map = Multibyte::utf8($string);$/;"	v
value	lib/Cake/I18n/Multibyte.php	/^			$value = ord($string[$i]);$/;"	v
value	lib/Cake/I18n/Multibyte.php	/^			$value = ord(($string[$i]));$/;"	v
value	lib/Cake/I18n/Multibyte.php	/^		$value = array();$/;"	v
values	lib/Cake/I18n/Multibyte.php	/^					$values = array();$/;"	v
values	lib/Cake/I18n/Multibyte.php	/^		$values = array();$/;"	v
CakeLog	lib/Cake/Log/CakeLog.php	/^class CakeLog {$/;"	c
_Collection	lib/Cake/Log/CakeLog.php	/^	protected static $_Collection;$/;"	v
_defaultLevels	lib/Cake/Log/CakeLog.php	/^	protected static $_defaultLevels = array($/;"	v
_init	lib/Cake/Log/CakeLog.php	/^	protected static function _init() {$/;"	f
_levelMap	lib/Cake/Log/CakeLog.php	/^	protected static $_levelMap;$/;"	v
_levels	lib/Cake/Log/CakeLog.php	/^	protected static $_levels;$/;"	v
alert	lib/Cake/Log/CakeLog.php	/^	public static function alert($message, $scope = array()) {$/;"	f
config	lib/Cake/Log/CakeLog.php	/^				$config = $logger->config();$/;"	v
config	lib/Cake/Log/CakeLog.php	/^	public static function config($key, $config) {$/;"	f
configured	lib/Cake/Log/CakeLog.php	/^	public static function configured() {$/;"	f
correctLevel	lib/Cake/Log/CakeLog.php	/^			$correctLevel = in_array($type, $types);$/;"	v
critical	lib/Cake/Log/CakeLog.php	/^	public static function critical($message, $scope = array()) {$/;"	f
debug	lib/Cake/Log/CakeLog.php	/^	public static function debug($message, $scope = array()) {$/;"	f
defaultLevels	lib/Cake/Log/CakeLog.php	/^	public static function defaultLevels() {$/;"	f
disable	lib/Cake/Log/CakeLog.php	/^	public static function disable($streamName) {$/;"	f
drop	lib/Cake/Log/CakeLog.php	/^	public static function drop($streamName) {$/;"	f
emergency	lib/Cake/Log/CakeLog.php	/^	public static function emergency($message, $scope = array()) {$/;"	f
enable	lib/Cake/Log/CakeLog.php	/^	public static function enable($streamName) {$/;"	f
enabled	lib/Cake/Log/CakeLog.php	/^	public static function enabled($streamName) {$/;"	f
error	lib/Cake/Log/CakeLog.php	/^	public static function error($message, $scope = array()) {$/;"	f
inScope	lib/Cake/Log/CakeLog.php	/^			$inScope = (count(array_intersect((array)$scope, $scopes)) > 0);$/;"	v
info	lib/Cake/Log/CakeLog.php	/^	public static function info($message, $scope = array()) {$/;"	f
levels	lib/Cake/Log/CakeLog.php	/^		$levels = array_values($levels);$/;"	v
levels	lib/Cake/Log/CakeLog.php	/^	public static function levels($levels = array(), $append = true) {$/;"	f
logged	lib/Cake/Log/CakeLog.php	/^				$logged = true;$/;"	v
logged	lib/Cake/Log/CakeLog.php	/^		$logged = false;$/;"	v
logger	lib/Cake/Log/CakeLog.php	/^			$logger = self::$_Collection->{$streamName};$/;"	v
notice	lib/Cake/Log/CakeLog.php	/^	public static function notice($message, $scope = array()) {$/;"	f
scope	lib/Cake/Log/CakeLog.php	/^			$scope = $type;$/;"	v
scopes	lib/Cake/Log/CakeLog.php	/^				$scopes = $config['scopes'];$/;"	v
stream	lib/Cake/Log/CakeLog.php	/^	public static function stream($streamName) {$/;"	f
type	lib/Cake/Log/CakeLog.php	/^			$type = self::$_levels[$type];$/;"	v
types	lib/Cake/Log/CakeLog.php	/^				$types = $config['types'];$/;"	v
types	lib/Cake/Log/CakeLog.php	/^			$types = $scopes = $config = array();$/;"	v
warning	lib/Cake/Log/CakeLog.php	/^	public static function warning($message, $scope = array()) {$/;"	f
write	lib/Cake/Log/CakeLog.php	/^	public static function write($type, $message, $scope = array()) {$/;"	f
CakeLogInterface	lib/Cake/Log/CakeLogInterface.php	/^interface CakeLogInterface {$/;"	i
write	lib/Cake/Log/CakeLogInterface.php	/^	public function write($type, $message);$/;"	f
BaseLog	lib/Cake/Log/Engine/BaseLog.php	/^abstract class BaseLog implements CakeLogInterface {$/;"	c
__construct	lib/Cake/Log/Engine/BaseLog.php	/^	public function __construct($config = array()) {$/;"	f
_config	lib/Cake/Log/Engine/BaseLog.php	/^			$this->_config = $config;$/;"	v
_config	lib/Cake/Log/Engine/BaseLog.php	/^	protected $_config = array();$/;"	v
config	lib/Cake/Log/Engine/BaseLog.php	/^	public function config($config = array()) {$/;"	f
ConsoleLog	lib/Cake/Log/Engine/ConsoleLog.php	/^class ConsoleLog extends BaseLog {$/;"	c
__construct	lib/Cake/Log/Engine/ConsoleLog.php	/^	public function __construct($config = array()) {$/;"	f
_output	lib/Cake/Log/Engine/ConsoleLog.php	/^			$this->_output = $config['stream'];$/;"	v
_output	lib/Cake/Log/Engine/ConsoleLog.php	/^			$this->_output = new ConsoleOutput($config['stream']);$/;"	v
_output	lib/Cake/Log/Engine/ConsoleLog.php	/^	protected $_output = null;$/;"	v
config	lib/Cake/Log/Engine/ConsoleLog.php	/^		$config = $this->config($config);$/;"	v
config	lib/Cake/Log/Engine/ConsoleLog.php	/^		$config = Hash::merge(array($/;"	v
output	lib/Cake/Log/Engine/ConsoleLog.php	/^		$output = date('Y-m-d H:i:s') . ' ' . ucfirst($type) . ': ' . $message . "\\n";$/;"	v
outputAs	lib/Cake/Log/Engine/ConsoleLog.php	/^			$outputAs = ConsoleOutput::COLOR;$/;"	v
outputAs	lib/Cake/Log/Engine/ConsoleLog.php	/^			$outputAs = ConsoleOutput::PLAIN;$/;"	v
write	lib/Cake/Log/Engine/ConsoleLog.php	/^	public function write($type, $message) {$/;"	f
FileLog	lib/Cake/Log/Engine/FileLog.php	/^class FileLog extends BaseLog {$/;"	c
__construct	lib/Cake/Log/Engine/FileLog.php	/^	public function __construct($config = array()) {$/;"	f
_defaults	lib/Cake/Log/Engine/FileLog.php	/^	protected $_defaults = array($/;"	v
_file	lib/Cake/Log/Engine/FileLog.php	/^			$this->_file = $config['file'];$/;"	v
_file	lib/Cake/Log/Engine/FileLog.php	/^	protected $_file = null;$/;"	v
_getFilename	lib/Cake/Log/Engine/FileLog.php	/^	protected function _getFilename($type) {$/;"	f
_path	lib/Cake/Log/Engine/FileLog.php	/^			$this->_path = $config['path'];$/;"	v
_path	lib/Cake/Log/Engine/FileLog.php	/^	protected $_path = null;$/;"	v
_rotateFile	lib/Cake/Log/Engine/FileLog.php	/^	protected function _rotateFile($filename) {$/;"	f
_size	lib/Cake/Log/Engine/FileLog.php	/^				$this->_size = (int)$config['size'];$/;"	v
_size	lib/Cake/Log/Engine/FileLog.php	/^				$this->_size = CakeNumber::fromReadableSize($config['size']);$/;"	v
_size	lib/Cake/Log/Engine/FileLog.php	/^	protected $_size = null;$/;"	v
config	lib/Cake/Log/Engine/FileLog.php	/^		$config = Hash::merge($this->_defaults, $config);$/;"	v
config	lib/Cake/Log/Engine/FileLog.php	/^	public function config($config = array()) {$/;"	f
debugTypes	lib/Cake/Log/Engine/FileLog.php	/^		$debugTypes = array('notice', 'info', 'debug');$/;"	v
exists	lib/Cake/Log/Engine/FileLog.php	/^		$exists = file_exists($pathname);$/;"	v
filename	lib/Cake/Log/Engine/FileLog.php	/^			$filename = $this->_file;$/;"	v
filename	lib/Cake/Log/Engine/FileLog.php	/^			$filename = $type . '.log';$/;"	v
filename	lib/Cake/Log/Engine/FileLog.php	/^			$filename = 'debug.log';$/;"	v
filename	lib/Cake/Log/Engine/FileLog.php	/^			$filename = 'error.log';$/;"	v
filename	lib/Cake/Log/Engine/FileLog.php	/^		$filename = $this->_getFilename($type);$/;"	v
filepath	lib/Cake/Log/Engine/FileLog.php	/^		$filepath = $this->_path . $filename;$/;"	v
files	lib/Cake/Log/Engine/FileLog.php	/^		$files = glob($filepath . '.*');$/;"	v
filesToDelete	lib/Cake/Log/Engine/FileLog.php	/^			$filesToDelete = count($files) - $this->_config['rotate'];$/;"	v
output	lib/Cake/Log/Engine/FileLog.php	/^		$output = date('Y-m-d H:i:s') . ' ' . ucfirst($type) . ': ' . $message . "\\n";$/;"	v
pathname	lib/Cake/Log/Engine/FileLog.php	/^		$pathname = $this->_path . $filename;$/;"	v
result	lib/Cake/Log/Engine/FileLog.php	/^			$result = rename($filepath, $filepath . '.' . time());$/;"	v
result	lib/Cake/Log/Engine/FileLog.php	/^			$result = unlink($filepath);$/;"	v
result	lib/Cake/Log/Engine/FileLog.php	/^		$result = file_put_contents($pathname, $output, FILE_APPEND);$/;"	v
selfError	lib/Cake/Log/Engine/FileLog.php	/^			$selfError = false;$/;"	v
selfError	lib/Cake/Log/Engine/FileLog.php	/^			$selfError = true;$/;"	v
selfError	lib/Cake/Log/Engine/FileLog.php	/^		static $selfError = false;$/;"	v
write	lib/Cake/Log/Engine/FileLog.php	/^	public function write($type, $message) {$/;"	f
SyslogLog	lib/Cake/Log/Engine/SyslogLog.php	/^class SyslogLog extends BaseLog {$/;"	c
__construct	lib/Cake/Log/Engine/SyslogLog.php	/^	public function __construct($config = array()) {$/;"	f
__destruct	lib/Cake/Log/Engine/SyslogLog.php	/^	public function __destruct() {$/;"	f
_defaults	lib/Cake/Log/Engine/SyslogLog.php	/^	protected $_defaults = array($/;"	v
_open	lib/Cake/Log/Engine/SyslogLog.php	/^			$this->_open = true;$/;"	v
_open	lib/Cake/Log/Engine/SyslogLog.php	/^	protected $_open = false;$/;"	v
_open	lib/Cake/Log/Engine/SyslogLog.php	/^	protected function _open($ident, $options, $facility) {$/;"	f
_priorityMap	lib/Cake/Log/Engine/SyslogLog.php	/^	protected $_priorityMap = array($/;"	v
_write	lib/Cake/Log/Engine/SyslogLog.php	/^	protected function _write($priority, $message) {$/;"	f
config	lib/Cake/Log/Engine/SyslogLog.php	/^			$config = $this->_config;$/;"	v
message	lib/Cake/Log/Engine/SyslogLog.php	/^			$message = sprintf($this->_config['format'], $type, $message);$/;"	v
messages	lib/Cake/Log/Engine/SyslogLog.php	/^		$messages = explode("\\n", $message);$/;"	v
priority	lib/Cake/Log/Engine/SyslogLog.php	/^			$priority = $this->_priorityMap[$type];$/;"	v
priority	lib/Cake/Log/Engine/SyslogLog.php	/^		$priority = LOG_DEBUG;$/;"	v
write	lib/Cake/Log/Engine/SyslogLog.php	/^	public function write($type, $message) {$/;"	f
LogEngineCollection	lib/Cake/Log/LogEngineCollection.php	/^class LogEngineCollection extends ObjectCollection {$/;"	c
_getLogger	lib/Cake/Log/LogEngineCollection.php	/^	protected static function _getLogger($loggerName) {$/;"	f
className	lib/Cake/Log/LogEngineCollection.php	/^		$className = $this->_getLogger($loggerName);$/;"	v
enable	lib/Cake/Log/LogEngineCollection.php	/^		$enable = isset($options['enabled']) ? $options['enabled'] : true;$/;"	v
load	lib/Cake/Log/LogEngineCollection.php	/^	public function load($name, $options = array()) {$/;"	f
logger	lib/Cake/Log/LogEngineCollection.php	/^		$logger = new $className($options);$/;"	v
loggerName	lib/Cake/Log/LogEngineCollection.php	/^		$loggerName = $options['engine'];$/;"	v
AclNode	lib/Cake/Model/AclNode.php	/^class AclNode extends Model {$/;"	c
__construct	lib/Cake/Model/AclNode.php	/^	public function __construct() {$/;"	f
actsAs	lib/Cake/Model/AclNode.php	/^	public $actsAs = array('Tree' => array('type' => 'nested'));$/;"	v
cacheQueries	lib/Cake/Model/AclNode.php	/^	public $cacheQueries = false;$/;"	v
config	lib/Cake/Model/AclNode.php	/^		$config = Configure::read('Acl.database');$/;"	v
db	lib/Cake/Model/AclNode.php	/^		$db = $this->getDataSource();$/;"	v
j	lib/Cake/Model/AclNode.php	/^				$j = $i - 1;$/;"	v
model	lib/Cake/Model/AclNode.php	/^			$model = ClassRegistry::init(array('class' => $name, 'alias' => $alias));$/;"	v
name	lib/Cake/Model/AclNode.php	/^				$name = key($ref);$/;"	v
name	lib/Cake/Model/AclNode.php	/^			$name = key($ref);$/;"	v
node	lib/Cake/Model/AclNode.php	/^	public function node($ref = null) {$/;"	f
path	lib/Cake/Model/AclNode.php	/^			$path = array_values($path);$/;"	v
path	lib/Cake/Model/AclNode.php	/^			$path = explode('\/', $ref);$/;"	v
queryData	lib/Cake/Model/AclNode.php	/^			$queryData = array($/;"	v
ref	lib/Cake/Model/AclNode.php	/^				$ref = $tmpRef;$/;"	v
ref	lib/Cake/Model/AclNode.php	/^				$ref = array('model' => $alias, 'foreign_key' => $ref[$name][$model->primaryKey]);$/;"	v
ref	lib/Cake/Model/AclNode.php	/^				$ref = current($ref);$/;"	v
ref	lib/Cake/Model/AclNode.php	/^			$ref = array('model' => $ref->name, 'foreign_key' => $ref->id);$/;"	v
result	lib/Cake/Model/AclNode.php	/^			$result = $db->read($this, $queryData, -1);$/;"	v
result	lib/Cake/Model/AclNode.php	/^		$result = null;$/;"	v
start	lib/Cake/Model/AclNode.php	/^			$start = $path[0];$/;"	v
table	lib/Cake/Model/AclNode.php	/^			$table = $this->useTable;$/;"	v
table	lib/Cake/Model/AclNode.php	/^			$table = Inflector::pluralize(Inflector::underscore($type));$/;"	v
tmpRef	lib/Cake/Model/AclNode.php	/^				$tmpRef = $model->bindNode($ref);$/;"	v
tmpRef	lib/Cake/Model/AclNode.php	/^			$tmpRef = null;$/;"	v
type	lib/Cake/Model/AclNode.php	/^		$type = $this->alias;$/;"	v
useDbConfig	lib/Cake/Model/AclNode.php	/^			$this->useDbConfig = $config;$/;"	v
Aco	lib/Cake/Model/Aco.php	/^class Aco extends AclNode {$/;"	c
hasAndBelongsToMany	lib/Cake/Model/Aco.php	/^	public $hasAndBelongsToMany = array('Aro' => array('with' => 'Permission'));$/;"	v
name	lib/Cake/Model/Aco.php	/^	public $name = 'Aco';$/;"	v
AcoAction	lib/Cake/Model/AcoAction.php	/^class AcoAction extends AppModel {$/;"	c
belongsTo	lib/Cake/Model/AcoAction.php	/^	public $belongsTo = array('Aco');$/;"	v
name	lib/Cake/Model/AcoAction.php	/^	public $name = 'AcoAction';$/;"	v
Aro	lib/Cake/Model/Aro.php	/^class Aro extends AclNode {$/;"	c
hasAndBelongsToMany	lib/Cake/Model/Aro.php	/^	public $hasAndBelongsToMany = array('Aco' => array('with' => 'Permission'));$/;"	v
name	lib/Cake/Model/Aro.php	/^	public $name = 'Aro';$/;"	v
AclBehavior	lib/Cake/Model/Behavior/AclBehavior.php	/^class AclBehavior extends ModelBehavior {$/;"	c
_typeMaps	lib/Cake/Model/Behavior/AclBehavior.php	/^	protected $_typeMaps = array('requester' => 'Aro', 'controlled' => 'Aco', 'both' => array('Aro', 'Aco'));$/;"	v
afterDelete	lib/Cake/Model/Behavior/AclBehavior.php	/^	public function afterDelete(Model $model) {$/;"	f
afterSave	lib/Cake/Model/Behavior/AclBehavior.php	/^	public function afterSave(Model $model, $created, $options = array()) {$/;"	f
data	lib/Cake/Model/Behavior/AclBehavior.php	/^			$data = array($/;"	v
node	lib/Cake/Model/Behavior/AclBehavior.php	/^				$node = $this->node($model, null, $type);$/;"	v
node	lib/Cake/Model/Behavior/AclBehavior.php	/^			$node = Hash::extract($this->node($model, null, $type), "0.{$type}.id");$/;"	v
node	lib/Cake/Model/Behavior/AclBehavior.php	/^	public function node(Model $model, $ref = null, $type = null) {$/;"	f
parent	lib/Cake/Model/Behavior/AclBehavior.php	/^				$parent = $this->node($model, $parent, $type);$/;"	v
parent	lib/Cake/Model/Behavior/AclBehavior.php	/^			$parent = $model->parentNode();$/;"	v
ref	lib/Cake/Model/Behavior/AclBehavior.php	/^			$ref = array('model' => $model->name, 'foreign_key' => $model->id);$/;"	v
setup	lib/Cake/Model/Behavior/AclBehavior.php	/^	public function setup(Model $model, $config = array()) {$/;"	f
type	lib/Cake/Model/Behavior/AclBehavior.php	/^			$type = $this->_typeMaps[$this->settings[$model->name]['type']];$/;"	v
types	lib/Cake/Model/Behavior/AclBehavior.php	/^			$types = array($types);$/;"	v
types	lib/Cake/Model/Behavior/AclBehavior.php	/^		$types = $this->_typeMaps[$this->settings[$model->name]['type']];$/;"	v
ContainableBehavior	lib/Cake/Model/Behavior/ContainableBehavior.php	/^class ContainableBehavior extends ModelBehavior {$/;"	c
args	lib/Cake/Model/Behavior/ContainableBehavior.php	/^		$args = func_get_args();$/;"	v
assocs	lib/Cake/Model/Behavior/ContainableBehavior.php	/^			$assocs = $Model->__backInnerAssociation;$/;"	v
autoFields	lib/Cake/Model/Behavior/ContainableBehavior.php	/^		$autoFields = ($this->settings[$Model->alias]['autoFields']$/;"	v
backupBindings	lib/Cake/Model/Behavior/ContainableBehavior.php	/^				$backupBindings = array();$/;"	v
beforeFind	lib/Cake/Model/Behavior/ContainableBehavior.php	/^	public function beforeFind(Model $Model, $query) {$/;"	f
chain	lib/Cake/Model/Behavior/ContainableBehavior.php	/^				$chain = explode('.', $name);$/;"	v
children	lib/Cake/Model/Behavior/ContainableBehavior.php	/^						$children = Hash::merge($children, $newChildren);$/;"	v
children	lib/Cake/Model/Behavior/ContainableBehavior.php	/^				$children = array();$/;"	v
children	lib/Cake/Model/Behavior/ContainableBehavior.php	/^				$children = array(implode('.', $chain) => $children);$/;"	v
children	lib/Cake/Model/Behavior/ContainableBehavior.php	/^			$children = (array)$children;$/;"	v
contain	lib/Cake/Model/Behavior/ContainableBehavior.php	/^				$contain = array_merge($contain, (array)$query['contain']);$/;"	v
contain	lib/Cake/Model/Behavior/ContainableBehavior.php	/^			$contain = $this->runtime[$Model->alias]['contain'];$/;"	v
contain	lib/Cake/Model/Behavior/ContainableBehavior.php	/^		$contain = array();$/;"	v
contain	lib/Cake/Model/Behavior/ContainableBehavior.php	/^		$contain = call_user_func_array('am', array_slice($args, 1));$/;"	v
contain	lib/Cake/Model/Behavior/ContainableBehavior.php	/^	public function contain(Model $Model) {$/;"	f
containments	lib/Cake/Model/Behavior/ContainableBehavior.php	/^			$containments = $this->containments($Model->{$name}, $children, $containments);$/;"	v
containments	lib/Cake/Model/Behavior/ContainableBehavior.php	/^		$containments = $this->containments($Model, $contain);$/;"	v
containments	lib/Cake/Model/Behavior/ContainableBehavior.php	/^	public function containments(Model $Model, $contain, $containments = array(), $throwErrors = null) {$/;"	f
containmentsMap	lib/Cake/Model/Behavior/ContainableBehavior.php	/^	public function containmentsMap($containments) {$/;"	f
field	lib/Cake/Model/Behavior/ContainableBehavior.php	/^						$field = $modelName . '.' . ($/;"	v
field	lib/Cake/Model/Behavior/ContainableBehavior.php	/^						$field = null;$/;"	v
field	lib/Cake/Model/Behavior/ContainableBehavior.php	/^					$field = $Model->primaryKey;$/;"	v
fieldDependencies	lib/Cake/Model/Behavior/ContainableBehavior.php	/^	public function fieldDependencies(Model $Model, $map, $fields = array()) {$/;"	f
innerFields	lib/Cake/Model/Behavior/ContainableBehavior.php	/^				$innerFields = array();$/;"	v
instance	lib/Cake/Model/Behavior/ContainableBehavior.php	/^			$instance = $model['instance'];$/;"	v
keep	lib/Cake/Model/Behavior/ContainableBehavior.php	/^		$keep = array();$/;"	v
key	lib/Cake/Model/Behavior/ContainableBehavior.php	/^					$key = $option;$/;"	v
keys	lib/Cake/Model/Behavior/ContainableBehavior.php	/^				$keys = array_merge(array_values($children), $keys);$/;"	v
keys	lib/Cake/Model/Behavior/ContainableBehavior.php	/^			$keys = array_keys($children);$/;"	v
mandatory	lib/Cake/Model/Behavior/ContainableBehavior.php	/^				$mandatory = array_merge($mandatory, $needed);$/;"	v
mandatory	lib/Cake/Model/Behavior/ContainableBehavior.php	/^		$mandatory = array();$/;"	v
map	lib/Cake/Model/Behavior/ContainableBehavior.php	/^		$map = $this->containmentsMap($containments);$/;"	v
map	lib/Cake/Model/Behavior/ContainableBehavior.php	/^		$map = array();$/;"	v
name	lib/Cake/Model/Behavior/ContainableBehavior.php	/^				$name = $children;$/;"	v
name	lib/Cake/Model/Behavior/ContainableBehavior.php	/^				$name = array_shift($chain);$/;"	v
name	lib/Cake/Model/Behavior/ContainableBehavior.php	/^				$name = str_replace('(', '.(', $name);$/;"	v
needed	lib/Cake/Model/Behavior/ContainableBehavior.php	/^			$needed = $this->fieldDependencies($instance, $map, false);$/;"	v
newChildren	lib/Cake/Model/Behavior/ContainableBehavior.php	/^						$newChildren = $children[$key];$/;"	v
newChildren	lib/Cake/Model/Behavior/ContainableBehavior.php	/^					$newChildren = null;$/;"	v
noContain	lib/Cake/Model/Behavior/ContainableBehavior.php	/^			$noContain = $noContain || empty($query['contain']);$/;"	v
noContain	lib/Cake/Model/Behavior/ContainableBehavior.php	/^			$noContain = empty($this->runtime[$Model->alias]['contain']);$/;"	v
noContain	lib/Cake/Model/Behavior/ContainableBehavior.php	/^		$noContain = $noContain && empty($contain);$/;"	v
noContain	lib/Cake/Model/Behavior/ContainableBehavior.php	/^		$noContain = false;$/;"	v
option	lib/Cake/Model/Behavior/ContainableBehavior.php	/^						$option = 'conditions';$/;"	v
option	lib/Cake/Model/Behavior/ContainableBehavior.php	/^						$option = 'order';$/;"	v
option	lib/Cake/Model/Behavior/ContainableBehavior.php	/^					$option = 'fields';$/;"	v
optionKey	lib/Cake/Model/Behavior/ContainableBehavior.php	/^					$optionKey = true;$/;"	v
optionKey	lib/Cake/Model/Behavior/ContainableBehavior.php	/^				$optionKey = in_array($key, $options, true);$/;"	v
options	lib/Cake/Model/Behavior/ContainableBehavior.php	/^		$options = array('className', 'joinTable', 'with', 'foreignKey', 'associationForeignKey', 'conditions', 'fields', 'order', 'limit', 'offset', 'unique', 'finderQuery');$/;"	v
reset	lib/Cake/Model/Behavior/ContainableBehavior.php	/^			$reset = is_bool(end($contain))$/;"	v
reset	lib/Cake/Model/Behavior/ContainableBehavior.php	/^		$reset = (isset($query['reset']) ? $query['reset'] : true);$/;"	v
resetBindings	lib/Cake/Model/Behavior/ContainableBehavior.php	/^	public function resetBindings(Model $Model) {$/;"	f
runtime	lib/Cake/Model/Behavior/ContainableBehavior.php	/^	public $runtime = array();$/;"	v
setup	lib/Cake/Model/Behavior/ContainableBehavior.php	/^	public function setup(Model $Model, $settings = array()) {$/;"	f
throwErrors	lib/Cake/Model/Behavior/ContainableBehavior.php	/^			$throwErrors = (empty($this->settings[$Model->alias]) ? true : $this->settings[$Model->alias]['notices']);$/;"	v
types	lib/Cake/Model/Behavior/ContainableBehavior.php	/^	public $types = array('belongsTo', 'hasOne', 'hasMany', 'hasAndBelongsToMany');$/;"	v
unbind	lib/Cake/Model/Behavior/ContainableBehavior.php	/^					$unbind = array();$/;"	v
val	lib/Cake/Model/Behavior/ContainableBehavior.php	/^						$val = $Model->{$name}->alias . '.' . $key;$/;"	v
val	lib/Cake/Model/Behavior/ContainableBehavior.php	/^						$val = preg_split('\/\\s*,\\s*\/', substr($key, 1, -1));$/;"	v
val	lib/Cake/Model/Behavior/ContainableBehavior.php	/^					$val = array($key);$/;"	v
I18n	lib/Cake/Model/Behavior/TranslateBehavior.php	/^			$I18n = I18n::getInstance();$/;"	v
RuntimeModel	lib/Cake/Model/Behavior/TranslateBehavior.php	/^		$RuntimeModel = $this->_runtimeModel;$/;"	v
RuntimeModel	lib/Cake/Model/Behavior/TranslateBehavior.php	/^		$RuntimeModel = $this->translateModel($Model);$/;"	v
TranslateBehavior	lib/Cake/Model/Behavior/TranslateBehavior.php	/^class TranslateBehavior extends ModelBehavior {$/;"	c
_addJoin	lib/Cake/Model/Behavior/TranslateBehavior.php	/^	protected function _addJoin(Model $Model, $query, $field, $aliasField, $locale) {$/;"	f
_checkConditions	lib/Cake/Model/Behavior/TranslateBehavior.php	/^	protected function _checkConditions(Model $Model, $query) {$/;"	f
_getLocale	lib/Cake/Model/Behavior/TranslateBehavior.php	/^	protected function _getLocale(Model $Model) {$/;"	f
_joinTable	lib/Cake/Model/Behavior/TranslateBehavior.php	/^		$this->_joinTable = $joinTable;$/;"	v
_joinTable	lib/Cake/Model/Behavior/TranslateBehavior.php	/^	protected $_joinTable;$/;"	v
_prepareTranslations	lib/Cake/Model/Behavior/TranslateBehavior.php	/^	protected function _prepareTranslations(Model $Model, $data) {$/;"	f
_removeField	lib/Cake/Model/Behavior/TranslateBehavior.php	/^	protected function _removeField(Model $Model, $field) {$/;"	f
_runtimeModel	lib/Cake/Model/Behavior/TranslateBehavior.php	/^		$this->_runtimeModel = $RuntimeModel;$/;"	v
_runtimeModel	lib/Cake/Model/Behavior/TranslateBehavior.php	/^	protected $_runtimeModel;$/;"	v
_setRuntimeData	lib/Cake/Model/Behavior/TranslateBehavior.php	/^	protected function _setRuntimeData(Model $Model) {$/;"	f
addFields	lib/Cake/Model/Behavior/TranslateBehavior.php	/^			$addFields = $fields;$/;"	v
addFields	lib/Cake/Model/Behavior/TranslateBehavior.php	/^		$addFields = array();$/;"	v
afterDelete	lib/Cake/Model/Behavior/TranslateBehavior.php	/^	public function afterDelete(Model $Model) {$/;"	f
afterFind	lib/Cake/Model/Behavior/TranslateBehavior.php	/^	public function afterFind(Model $Model, $results, $primary = false) {$/;"	f
afterSave	lib/Cake/Model/Behavior/TranslateBehavior.php	/^	public function afterSave(Model $Model, $created, $options = array()) {$/;"	f
afterValidate	lib/Cake/Model/Behavior/TranslateBehavior.php	/^	public function afterValidate(Model $Model) {$/;"	f
alias	lib/Cake/Model/Behavior/TranslateBehavior.php	/^		$alias = "I18n__{$field}";$/;"	v
aliasField	lib/Cake/Model/Behavior/TranslateBehavior.php	/^				$aliasField = is_numeric($_f) ? $field : $_f;$/;"	v
aliasLocale	lib/Cake/Model/Behavior/TranslateBehavior.php	/^				$aliasLocale = "{$alias}__{$_locale}";$/;"	v
aliasVirtual	lib/Cake/Model/Behavior/TranslateBehavior.php	/^				$aliasVirtual = "i18n_{$field}";$/;"	v
aliasVirtual	lib/Cake/Model/Behavior/TranslateBehavior.php	/^		$aliasVirtual = "i18n_{$field}";$/;"	v
aliasVirtualLocale	lib/Cake/Model/Behavior/TranslateBehavior.php	/^						$aliasVirtualLocale = "{$aliasVirtual}_{$_locale}";$/;"	v
aliasVirtualLocale	lib/Cake/Model/Behavior/TranslateBehavior.php	/^				$aliasVirtualLocale = "{$aliasVirtual}_{$_locale}";$/;"	v
association	lib/Cake/Model/Behavior/TranslateBehavior.php	/^				$association = $value;$/;"	v
association	lib/Cake/Model/Behavior/TranslateBehavior.php	/^				$association = null;$/;"	v
associations	lib/Cake/Model/Behavior/TranslateBehavior.php	/^		$associations = array();$/;"	v
beforeFind	lib/Cake/Model/Behavior/TranslateBehavior.php	/^		$beforeFind = $this->runtime[$Model->alias]['beforeFind'];$/;"	v
beforeFind	lib/Cake/Model/Behavior/TranslateBehavior.php	/^	public function beforeFind(Model $Model, $query) {$/;"	f
beforeSave	lib/Cake/Model/Behavior/TranslateBehavior.php	/^	public function beforeSave(Model $Model, $options = array()) {$/;"	f
beforeValidate	lib/Cake/Model/Behavior/TranslateBehavior.php	/^	public function beforeValidate(Model $Model, $options = array()) {$/;"	f
bindTranslation	lib/Cake/Model/Behavior/TranslateBehavior.php	/^	public function bindTranslation(Model $Model, $fields, $reset = true) {$/;"	f
className	lib/Cake/Model/Behavior/TranslateBehavior.php	/^				$className = $Model->translateModel;$/;"	v
className	lib/Cake/Model/Behavior/TranslateBehavior.php	/^				$className = 'I18nModel';$/;"	v
cleanup	lib/Cake/Model/Behavior/TranslateBehavior.php	/^	public function cleanup(Model $Model) {$/;"	f
conditionFields	lib/Cake/Model/Behavior/TranslateBehavior.php	/^			$conditionFields = $this->_checkConditions($Model, $query);$/;"	v
conditionFields	lib/Cake/Model/Behavior/TranslateBehavior.php	/^		$conditionFields = array();$/;"	v
conditions	lib/Cake/Model/Behavior/TranslateBehavior.php	/^		$conditions = array('model' => $Model->name, 'foreign_key' => $Model->id);$/;"	v
db	lib/Cake/Model/Behavior/TranslateBehavior.php	/^		$db = $Model->getDataSource();$/;"	v
db	lib/Cake/Model/Behavior/TranslateBehavior.php	/^		$db = ConnectionManager::getDataSource($Model->useDbConfig);$/;"	v
default	lib/Cake/Model/Behavior/TranslateBehavior.php	/^		$default = array($/;"	v
field	lib/Cake/Model/Behavior/TranslateBehavior.php	/^					$field = $assoc;$/;"	v
field	lib/Cake/Model/Behavior/TranslateBehavior.php	/^				$field = $key;$/;"	v
field	lib/Cake/Model/Behavior/TranslateBehavior.php	/^				$field = $value;$/;"	v
field	lib/Cake/Model/Behavior/TranslateBehavior.php	/^				$field = (is_numeric($key)) ? $value : $key;$/;"	v
field	lib/Cake/Model/Behavior/TranslateBehavior.php	/^			$field = (is_numeric($key)) ? $value : $key;$/;"	v
fields	lib/Cake/Model/Behavior/TranslateBehavior.php	/^			$fields = array($fields);$/;"	v
fields	lib/Cake/Model/Behavior/TranslateBehavior.php	/^		$fields = array_merge($/;"	v
fields	lib/Cake/Model/Behavior/TranslateBehavior.php	/^		$fields = array_merge($this->settings[$Model->alias], $this->runtime[$Model->alias]['fields']);$/;"	v
hasLocales	lib/Cake/Model/Behavior/TranslateBehavior.php	/^		$hasLocales = count($locales) > 0;$/;"	v
isAllFields	lib/Cake/Model/Behavior/TranslateBehavior.php	/^			$isAllFields = ($/;"	v
joinTable	lib/Cake/Model/Behavior/TranslateBehavior.php	/^		$joinTable = $this->_joinTable;$/;"	v
joinTable	lib/Cake/Model/Behavior/TranslateBehavior.php	/^		$joinTable = new StdClass();$/;"	v
key	lib/Cake/Model/Behavior/TranslateBehavior.php	/^					$key = array_search($_field, (array)$query['fields']);$/;"	v
locale	lib/Cake/Model/Behavior/TranslateBehavior.php	/^		$locale = $this->_getLocale($Model);$/;"	v
locales	lib/Cake/Model/Behavior/TranslateBehavior.php	/^				$locales = array_merge($locales, array_keys($value));$/;"	v
locales	lib/Cake/Model/Behavior/TranslateBehavior.php	/^		$locales = array();$/;"	v
locales	lib/Cake/Model/Behavior/TranslateBehavior.php	/^		$locales = array_unique($locales);$/;"	v
query	lib/Cake/Model/Behavior/TranslateBehavior.php	/^				$query = $this->_addJoin($Model, $query, $field, $aliasField, $locale);$/;"	v
query	lib/Cake/Model/Behavior/TranslateBehavior.php	/^				$query = $this->_addJoin($Model, $query, $field, $field, $locale);$/;"	v
runtime	lib/Cake/Model/Behavior/TranslateBehavior.php	/^	public $runtime = array();$/;"	v
setup	lib/Cake/Model/Behavior/TranslateBehavior.php	/^	public function setup(Model $Model, $config = array()) {$/;"	f
tablePrefix	lib/Cake/Model/Behavior/TranslateBehavior.php	/^			$tablePrefix = $RuntimeModel->tablePrefix;$/;"	v
tablePrefix	lib/Cake/Model/Behavior/TranslateBehavior.php	/^			$tablePrefix = $db->config['prefix'];$/;"	v
tempData	lib/Cake/Model/Behavior/TranslateBehavior.php	/^			$tempData = $this->_prepareTranslations($Model, $tempData);$/;"	v
tempData	lib/Cake/Model/Behavior/TranslateBehavior.php	/^			$tempData = $this->runtime[$Model->alias]['beforeSave'];$/;"	v
tempData	lib/Cake/Model/Behavior/TranslateBehavior.php	/^			$tempData = $this->runtime[$Model->alias]['beforeValidate'];$/;"	v
tempData	lib/Cake/Model/Behavior/TranslateBehavior.php	/^		$tempData = array();$/;"	v
translateModel	lib/Cake/Model/Behavior/TranslateBehavior.php	/^	public function translateModel(Model $Model) {$/;"	f
translations	lib/Cake/Model/Behavior/TranslateBehavior.php	/^			$translations = $RuntimeModel->find('list', array($/;"	v
unbindTranslation	lib/Cake/Model/Behavior/TranslateBehavior.php	/^	public function unbindTranslation(Model $Model, $fields = null) {$/;"	f
value	lib/Cake/Model/Behavior/TranslateBehavior.php	/^						$value = $row[$Model->alias][$aliasVirtual];$/;"	v
value	lib/Cake/Model/Behavior/TranslateBehavior.php	/^					$value = '';$/;"	v
value	lib/Cake/Model/Behavior/TranslateBehavior.php	/^					$value = array($locale => $value);$/;"	v
value	lib/Cake/Model/Behavior/TranslateBehavior.php	/^					$value = array($locale[0] => $value);$/;"	v
values	lib/Cake/Model/Behavior/TranslateBehavior.php	/^						$values = array_values($Model->data[$Model->alias][$field]);$/;"	v
ModelRecursive	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$ModelRecursive = $Model->recursive;$/;"	v
Parent	lib/Cake/Model/Behavior/TreeBehavior.php	/^			$Parent = $Model->{$settings['scope']};$/;"	v
TreeBehavior	lib/Cake/Model/Behavior/TreeBehavior.php	/^class TreeBehavior extends ModelBehavior {$/;"	c
_defaults	lib/Cake/Model/Behavior/TreeBehavior.php	/^	protected $_defaults = array($/;"	v
_deletedRow	lib/Cake/Model/Behavior/TreeBehavior.php	/^	protected $_deletedRow = array();$/;"	v
_getMax	lib/Cake/Model/Behavior/TreeBehavior.php	/^	protected function _getMax(Model $Model, $scope, $right, $recursive = -1, $created = false) {$/;"	f
_getMin	lib/Cake/Model/Behavior/TreeBehavior.php	/^	protected function _getMin(Model $Model, $scope, $left, $recursive = -1) {$/;"	f
_recoverByParentId	lib/Cake/Model/Behavior/TreeBehavior.php	/^	protected function _recoverByParentId(Model $Model, $counter = 1, $parentId = null) {$/;"	f
_setParent	lib/Cake/Model/Behavior/TreeBehavior.php	/^	protected function _setParent(Model $Model, $parentId = null, $created = false) {$/;"	f
_sync	lib/Cake/Model/Behavior/TreeBehavior.php	/^	protected function _sync(Model $Model, $shift, $dir = '+', $conditions = array(), $created = false, $field = 'both') {$/;"	f
afterDelete	lib/Cake/Model/Behavior/TreeBehavior.php	/^	public function afterDelete(Model $Model) {$/;"	f
afterSave	lib/Cake/Model/Behavior/TreeBehavior.php	/^	public function afterSave(Model $Model, $created, $options = array()) {$/;"	f
beforeDelete	lib/Cake/Model/Behavior/TreeBehavior.php	/^	public function beforeDelete(Model $Model, $cascade = true) {$/;"	f
beforeFind	lib/Cake/Model/Behavior/TreeBehavior.php	/^	public function beforeFind(Model $Model, $query) {$/;"	f
beforeSave	lib/Cake/Model/Behavior/TreeBehavior.php	/^	public function beforeSave(Model $Model, $options = array()) {$/;"	f
cacheQueries	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$cacheQueries = $Model->cacheQueries;$/;"	v
childCount	lib/Cake/Model/Behavior/TreeBehavior.php	/^	public function childCount(Model $Model, $id = null, $direct = false) {$/;"	f
children	lib/Cake/Model/Behavior/TreeBehavior.php	/^			$children = $Model->find('all', $params);$/;"	v
children	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$children = $Model->find('all', $params);$/;"	v
children	lib/Cake/Model/Behavior/TreeBehavior.php	/^	public function children(Model $Model, $id = null, $direct = false, $fields = null, $order = null, $limit = null, $page = 1, $recursive = null) {$/;"	f
conditions	lib/Cake/Model/Behavior/TreeBehavior.php	/^			$conditions = $scope;$/;"	v
conditions	lib/Cake/Model/Behavior/TreeBehavior.php	/^			$conditions = array($Model->escapeField($field) . " {$conditions}");$/;"	v
conditions	lib/Cake/Model/Behavior/TreeBehavior.php	/^			$conditions = array($scope, $Model->escapeField($parent) => $id);$/;"	v
conditions	lib/Cake/Model/Behavior/TreeBehavior.php	/^			$conditions = array($scope,$/;"	v
conditions	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$conditions = (array)$conditions;$/;"	v
count	lib/Cake/Model/Behavior/TreeBehavior.php	/^			$count = $Model->find('count', array('conditions' => array($/;"	v
count	lib/Cake/Model/Behavior/TreeBehavior.php	/^			$count = count($stack);$/;"	v
counter	lib/Cake/Model/Behavior/TreeBehavior.php	/^				$counter = $this->_recoverByParentId($Model, $counter, $row[$Model->alias][$Model->primaryKey]);$/;"	v
data	lib/Cake/Model/Behavior/TreeBehavior.php	/^			$data = $Model->data[$Model->alias];$/;"	v
data	lib/Cake/Model/Behavior/TreeBehavior.php	/^			$data = $Model->find('first', array('conditions' => array($scope, $Model->escapeField() => $id), 'recursive' => $recursive));$/;"	v
data	lib/Cake/Model/Behavior/TreeBehavior.php	/^			$data = $Model->getAssociated($settings['scope']);$/;"	v
data	lib/Cake/Model/Behavior/TreeBehavior.php	/^			$data = $data[$Model->alias];$/;"	v
data	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$data = $Model->find('first', array($/;"	v
data	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$data = $this->_deletedRow[$Model->alias];$/;"	v
db	lib/Cake/Model/Behavior/TreeBehavior.php	/^			$db = ConnectionManager::getDataSource($Model->useDbConfig);$/;"	v
db	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$db = ConnectionManager::getDataSource($Model->useDbConfig);$/;"	v
diff	lib/Cake/Model/Behavior/TreeBehavior.php	/^				$diff = $node[$right] - $node[$left] + 1;$/;"	v
diff	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$diff = $data[$right] - $data[$left] + 1;$/;"	v
edge	lib/Cake/Model/Behavior/TreeBehavior.php	/^				$edge = $this->_getMax($Model, $scope, $right, $recursive);$/;"	v
edge	lib/Cake/Model/Behavior/TreeBehavior.php	/^			$edge = $edge - 2;$/;"	v
edge	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$edge = $this->_getMax($Model, $scope, $right, $recursive);$/;"	v
edge	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$edge = $this->_getMax($Model, $scope, $right, $recursive, $created);$/;"	v
errors	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$errors = array();$/;"	v
errors	lib/Cake/Model/Behavior/TreeBehavior.php	/^	public $errors = array();$/;"	v
field	lib/Cake/Model/Behavior/TreeBehavior.php	/^			$field = $right;$/;"	v
fields	lib/Cake/Model/Behavior/TreeBehavior.php	/^			$fields = array($Model->primaryKey, $Model->displayField, $left, $right);$/;"	v
fields	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$fields = array($Model->primaryKey, $field, $left, $right);$/;"	v
fields	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$fields = null;$/;"	v
generateTreeList	lib/Cake/Model/Behavior/TreeBehavior.php	/^	public function generateTreeList(Model $Model, $conditions = null, $keyPath = null, $valuePath = null, $spacer = '_', $recursive = null) {$/;"	f
getParentNode	lib/Cake/Model/Behavior/TreeBehavior.php	/^	public function getParentNode(Model $Model, $id = null, $fields = null, $recursive = null) {$/;"	f
getPath	lib/Cake/Model/Behavior/TreeBehavior.php	/^	public function getPath(Model $Model, $id = null, $fields = null, $recursive = null) {$/;"	f
hasChildren	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$hasChildren = (bool)$children;$/;"	v
id	lib/Cake/Model/Behavior/TreeBehavior.php	/^				$id = $node[$Model->alias][$Model->primaryKey];$/;"	v
id	lib/Cake/Model/Behavior/TreeBehavior.php	/^			$id = $Model->id;$/;"	v
id	lib/Cake/Model/Behavior/TreeBehavior.php	/^			$id = null;$/;"	v
item	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$item = $result[0];$/;"	v
keyPath	lib/Cake/Model/Behavior/TreeBehavior.php	/^			$keyPath = '{n}.' . $Model->alias . '.' . $Model->primaryKey;$/;"	v
min	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$min = $this->_getMin($Model, $scope, $left, $recursive);$/;"	v
missingParents	lib/Cake/Model/Behavior/TreeBehavior.php	/^			$missingParents = $Model->find('list', array($/;"	v
moveDown	lib/Cake/Model/Behavior/TreeBehavior.php	/^	public function moveDown(Model $Model, $id = null, $number = 1) {$/;"	f
moveUp	lib/Cake/Model/Behavior/TreeBehavior.php	/^	public function moveUp(Model $Model, $id = null, $number = 1) {$/;"	f
name	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$name = $Model->escapeField($left);$/;"	v
name	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$name = $Model->escapeField($right);$/;"	v
nextNode	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$nextNode = $Model->find('first', array($/;"	v
node	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$node = $Model->find('first', array('conditions' => array($scope, $Model->escapeField($right) . '< ' . $Model->escapeField($left)), 'recursive' => 0));$/;"	v
nodes	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$nodes = $this->children($Model, $id, true, $fields, $sort, null, null, $recursive);$/;"	v
order	lib/Cake/Model/Behavior/TreeBehavior.php	/^			$order = $Model->escapeField($left) . " asc";$/;"	v
order	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$order = $Model->escapeField($left) . " asc";$/;"	v
overrideRecursive	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$overrideRecursive = $recursive;$/;"	v
params	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$params = array($/;"	v
parent	lib/Cake/Model/Behavior/TreeBehavior.php	/^			$parent = $Model->find('first', array('conditions' => array($Model->escapeField() => $parentId), 'fields' => $fields, 'recursive' => $recursive));$/;"	v
parentId	lib/Cake/Model/Behavior/TreeBehavior.php	/^					$parentId = $path[count($path) - 2][$Model->alias][$Model->primaryKey];$/;"	v
parentId	lib/Cake/Model/Behavior/TreeBehavior.php	/^				$parentId = null;$/;"	v
parentId	lib/Cake/Model/Behavior/TreeBehavior.php	/^			$parentId = $parentId[$Model->alias][$parent];$/;"	v
parentId	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$parentId = $Model->find('first', array('conditions' => array($Model->primaryKey => $id), 'fields' => array($parent), 'recursive' => -1));$/;"	v
parentNode	lib/Cake/Model/Behavior/TreeBehavior.php	/^				$parentNode = $Model->find('first', array($/;"	v
parentNode	lib/Cake/Model/Behavior/TreeBehavior.php	/^			$parentNode = $parentNode[0];$/;"	v
parentNode	lib/Cake/Model/Behavior/TreeBehavior.php	/^			$parentNode = array_values($values);$/;"	v
path	lib/Cake/Model/Behavior/TreeBehavior.php	/^				$path = $this->getPath($Model, $array[$Model->alias][$Model->primaryKey]);$/;"	v
previousNode	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$previousNode = $Model->find('first', array($/;"	v
recover	lib/Cake/Model/Behavior/TreeBehavior.php	/^	public function recover(Model $Model, $mode = 'parent', $missingParentAction = null) {$/;"	f
recursive	lib/Cake/Model/Behavior/TreeBehavior.php	/^			$recursive = $overrideRecursive;$/;"	v
removeFromTree	lib/Cake/Model/Behavior/TreeBehavior.php	/^	public function removeFromTree(Model $Model, $id = null, $delete = false) {$/;"	f
reorder	lib/Cake/Model/Behavior/TreeBehavior.php	/^	public function reorder(Model $Model, $options = array()) {$/;"	f
result	lib/Cake/Model/Behavior/TreeBehavior.php	/^				$result = $Model->save($/;"	v
result	lib/Cake/Model/Behavior/TreeBehavior.php	/^			$result = array_values($result);$/;"	v
result	lib/Cake/Model/Behavior/TreeBehavior.php	/^			$result = array_values((array)$Model->find('first', array($/;"	v
result	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$result = $Model->find('first', array('conditions' => array($Model->escapeField() => $id), 'fields' => array($left, $right), 'recursive' => $recursive));$/;"	v
results	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$results = $Model->find('all', array($/;"	v
results	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$results = $Model->find('all', compact('conditions', 'fields', 'order', 'recursive'));$/;"	v
scope	lib/Cake/Model/Behavior/TreeBehavior.php	/^				$scope = array($scope);$/;"	v
scope	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$scope = $this->settings[$Model->alias]['scope'];$/;"	v
settings	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$settings = $config + $this->_defaults;$/;"	v
setup	lib/Cake/Model/Behavior/TreeBehavior.php	/^	public function setup(Model $Model, $config = array()) {$/;"	f
sort	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$sort = $field . ' ' . $order;$/;"	v
stack	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$stack = array();$/;"	v
valuePath	lib/Cake/Model/Behavior/TreeBehavior.php	/^			$valuePath = array('%s%s', '{n}.tree_prefix', $valuePath);$/;"	v
valuePath	lib/Cake/Model/Behavior/TreeBehavior.php	/^			$valuePath = array('%s%s', '{n}.tree_prefix', '{n}.' . $Model->alias . '.' . $Model->displayField);$/;"	v
values	lib/Cake/Model/Behavior/TreeBehavior.php	/^				$values = $Model->find('first', array($/;"	v
values	lib/Cake/Model/Behavior/TreeBehavior.php	/^			$values = $Model->find('first', array($/;"	v
verify	lib/Cake/Model/Behavior/TreeBehavior.php	/^		$verify = false;$/;"	v
verify	lib/Cake/Model/Behavior/TreeBehavior.php	/^	public function verify(Model $Model) {$/;"	f
BehaviorCollection	lib/Cake/Model/BehaviorCollection.php	/^class BehaviorCollection extends ObjectCollection implements CakeEventListener {$/;"	c
_mappedMethods	lib/Cake/Model/BehaviorCollection.php	/^	protected $_mappedMethods = array();$/;"	v
_methods	lib/Cake/Model/BehaviorCollection.php	/^	protected $_methods = array();$/;"	v
alias	lib/Cake/Model/BehaviorCollection.php	/^			$alias = $behavior;$/;"	v
alias	lib/Cake/Model/BehaviorCollection.php	/^			$alias = $name;$/;"	v
attach	lib/Cake/Model/BehaviorCollection.php	/^	public function attach($behavior, $config = array()) {$/;"	f
behavior	lib/Cake/Model/BehaviorCollection.php	/^			$behavior = $config['className'];$/;"	v
callbacks	lib/Cake/Model/BehaviorCollection.php	/^		$callbacks = array($/;"	v
class	lib/Cake/Model/BehaviorCollection.php	/^		$class = $name . 'Behavior';$/;"	v
config	lib/Cake/Model/BehaviorCollection.php	/^				$config = array();$/;"	v
config	lib/Cake/Model/BehaviorCollection.php	/^				$config = array_merge($this->_loaded[$alias]->settings[$this->modelName], $config);$/;"	v
config	lib/Cake/Model/BehaviorCollection.php	/^			$config = array();$/;"	v
configDisabled	lib/Cake/Model/BehaviorCollection.php	/^		$configDisabled = isset($config['enabled']) && $config['enabled'] === false;$/;"	v
detach	lib/Cake/Model/BehaviorCollection.php	/^	public function detach($name) {$/;"	f
dispatchMethod	lib/Cake/Model/BehaviorCollection.php	/^	public function dispatchMethod($model, $method, $params = array(), $strict = false) {$/;"	f
hasMethod	lib/Cake/Model/BehaviorCollection.php	/^	public function hasMethod($method, $callback = false) {$/;"	f
implementedEvents	lib/Cake/Model/BehaviorCollection.php	/^	public function implementedEvents() {$/;"	f
init	lib/Cake/Model/BehaviorCollection.php	/^	public function init($modelName, $behaviors = array()) {$/;"	f
load	lib/Cake/Model/BehaviorCollection.php	/^	public function load($behavior, $config = array()) {$/;"	f
method	lib/Cake/Model/BehaviorCollection.php	/^		$method = $this->hasMethod($method, true);$/;"	v
methodAllowed	lib/Cake/Model/BehaviorCollection.php	/^				$methodAllowed = ($/;"	v
methods	lib/Cake/Model/BehaviorCollection.php	/^		$methods = get_class_methods($this->_loaded[$alias]);$/;"	v
methods	lib/Cake/Model/BehaviorCollection.php	/^	public function methods() {$/;"	f
modelName	lib/Cake/Model/BehaviorCollection.php	/^		$this->modelName = $modelName;$/;"	v
modelName	lib/Cake/Model/BehaviorCollection.php	/^	public $modelName = null;$/;"	v
parentMethods	lib/Cake/Model/BehaviorCollection.php	/^		$parentMethods = array_flip(get_class_methods('ModelBehavior'));$/;"	v
priority	lib/Cake/Model/BehaviorCollection.php	/^		$priority = isset($config['priority']) ? $config['priority'] : $this->defaultPriority;$/;"	v
unload	lib/Cake/Model/BehaviorCollection.php	/^	public function unload($name) {$/;"	f
CakeSchema	lib/Cake/Model/CakeSchema.php	/^class CakeSchema extends Object {$/;"	c
Object	lib/Cake/Model/CakeSchema.php	/^					$Object = ClassRegistry::init(array('class' => $model, 'ds' => $connection));$/;"	v
Object	lib/Cake/Model/CakeSchema.php	/^				$Object = new AppModel(array($/;"	v
Schema	lib/Cake/Model/CakeSchema.php	/^			$Schema = new $class($options);$/;"	v
__construct	lib/Cake/Model/CakeSchema.php	/^	public function __construct($options = array()) {$/;"	f
_arrayDiffAssoc	lib/Cake/Model/CakeSchema.php	/^	protected function _arrayDiffAssoc($array1, $array2) {$/;"	f
_columns	lib/Cake/Model/CakeSchema.php	/^	protected function _columns(&$Obj) {$/;"	f
_compareIndexes	lib/Cake/Model/CakeSchema.php	/^	protected function _compareIndexes($new, $old) {$/;"	f
_compareTableParameters	lib/Cake/Model/CakeSchema.php	/^	protected function _compareTableParameters($new, $old) {$/;"	f
_noPrefixTable	lib/Cake/Model/CakeSchema.php	/^	protected function _noPrefixTable($prefix, $table) {$/;"	f
_values	lib/Cake/Model/CakeSchema.php	/^	protected function _values($values) {$/;"	f
add	lib/Cake/Model/CakeSchema.php	/^			$add = $diff;$/;"	v
add	lib/Cake/Model/CakeSchema.php	/^		$add = $drop = array();$/;"	v
after	lib/Cake/Model/CakeSchema.php	/^	public function after($event = array()) {$/;"	f
before	lib/Cake/Model/CakeSchema.php	/^	public function before($event = array()) {$/;"	f
build	lib/Cake/Model/CakeSchema.php	/^	public function build($data) {$/;"	f
change	lib/Cake/Model/CakeSchema.php	/^		$change = $this->_arrayDiffAssoc($new, $old);$/;"	v
class	lib/Cake/Model/CakeSchema.php	/^						$class = $assocData['with'];$/;"	v
class	lib/Cake/Model/CakeSchema.php	/^		$class = $name . 'Schema';$/;"	v
col	lib/Cake/Model/CakeSchema.php	/^					$col = "\\t\\t'indexes' => array(\\n\\t\\t\\t";$/;"	v
col	lib/Cake/Model/CakeSchema.php	/^					$col = "\\t\\t'tableParameters' => array(";$/;"	v
col	lib/Cake/Model/CakeSchema.php	/^					$col = "\\t\\t'{$field}' => array('type' => '" . $value['type'] . "', ";$/;"	v
cols	lib/Cake/Model/CakeSchema.php	/^			$cols = array();$/;"	v
columns	lib/Cake/Model/CakeSchema.php	/^		$columns = array();$/;"	v
compare	lib/Cake/Model/CakeSchema.php	/^	public function compare($old, $new = null) {$/;"	f
connection	lib/Cake/Model/CakeSchema.php	/^	public $connection = 'default';$/;"	v
content	lib/Cake/Model/CakeSchema.php	/^		$content = "<?php \\n{$out}";$/;"	v
correspondingValue	lib/Cake/Model/CakeSchema.php	/^			$correspondingValue = $array2[$key];$/;"	v
currentTables	lib/Cake/Model/CakeSchema.php	/^		$currentTables = (array)$db->listSources();$/;"	v
db	lib/Cake/Model/CakeSchema.php	/^				$db = $Object->getDataSource();$/;"	v
db	lib/Cake/Model/CakeSchema.php	/^		$db = $Obj->getDataSource();$/;"	v
db	lib/Cake/Model/CakeSchema.php	/^		$db = ConnectionManager::getDataSource($connection);$/;"	v
defaultCol	lib/Cake/Model/CakeSchema.php	/^				$defaultCol = $db->columns[$value['type']];$/;"	v
diff	lib/Cake/Model/CakeSchema.php	/^					$diff = $this->_arrayDiffAssoc($value, $old[$table][$field]);$/;"	v
diff	lib/Cake/Model/CakeSchema.php	/^					$diff = ($newColumn != $oldColumn);$/;"	v
diff	lib/Cake/Model/CakeSchema.php	/^					$diff = ($newColumn !== $oldColumn);$/;"	v
diff	lib/Cake/Model/CakeSchema.php	/^					$diff = true;$/;"	v
diff	lib/Cake/Model/CakeSchema.php	/^				$diff = $this->_arrayDiffAssoc($fields, $old[$table]);$/;"	v
diff	lib/Cake/Model/CakeSchema.php	/^				$diff = $this->_arrayDiffAssoc($old[$table], $fields);$/;"	v
diff	lib/Cake/Model/CakeSchema.php	/^				$diff = $this->_compareIndexes($new[$table]['indexes'], $old[$table]['indexes']);$/;"	v
diff	lib/Cake/Model/CakeSchema.php	/^				$diff = $this->_compareTableParameters($new[$table]['tableParameters'], $old[$table]['tableParameters']);$/;"	v
diff	lib/Cake/Model/CakeSchema.php	/^				$diff = false;$/;"	v
diff	lib/Cake/Model/CakeSchema.php	/^		$diff = $this->_arrayDiffAssoc($new, $old);$/;"	v
diff	lib/Cake/Model/CakeSchema.php	/^		$diff = $this->_arrayDiffAssoc($old, $new);$/;"	v
difference	lib/Cake/Model/CakeSchema.php	/^		$difference = array();$/;"	v
drop	lib/Cake/Model/CakeSchema.php	/^			$drop = $diff;$/;"	v
fields	lib/Cake/Model/CakeSchema.php	/^		$fields = $Obj->schema(true);$/;"	v
file	lib/Cake/Model/CakeSchema.php	/^						$file = Inflector::underscore($val) . '.php';$/;"	v
file	lib/Cake/Model/CakeSchema.php	/^			$this->file = $file;$/;"	v
file	lib/Cake/Model/CakeSchema.php	/^		$file = new File($path . DS . $file, true);$/;"	v
file	lib/Cake/Model/CakeSchema.php	/^		$file = null;$/;"	v
file	lib/Cake/Model/CakeSchema.php	/^	public $file = 'schema.php';$/;"	v
fulltable	lib/Cake/Model/CakeSchema.php	/^				$fulltable = $db->fullTableName($Object, false, false);$/;"	v
fulltable	lib/Cake/Model/CakeSchema.php	/^				$fulltable = $table = $db->fullTableName($Object, false, false);$/;"	v
generateTable	lib/Cake/Model/CakeSchema.php	/^	public function generateTable($table, $fields) {$/;"	f
importModel	lib/Cake/Model/CakeSchema.php	/^					$importModel = $model;$/;"	v
importModel	lib/Cake/Model/CakeSchema.php	/^				$importModel = $model;$/;"	v
key	lib/Cake/Model/CakeSchema.php	/^						$key = array_search($withTable, $currentTables);$/;"	v
key	lib/Cake/Model/CakeSchema.php	/^				$key = array_search($fulltable, $currentTables);$/;"	v
load	lib/Cake/Model/CakeSchema.php	/^	public function load($options = array()) {$/;"	f
models	lib/Cake/Model/CakeSchema.php	/^				$models = App::objects($this->plugin . '.Model', null, false);$/;"	v
models	lib/Cake/Model/CakeSchema.php	/^				$models = App::objects('Model');$/;"	v
name	lib/Cake/Model/CakeSchema.php	/^			$this->name = Inflector::camelize(Inflector::slug(Configure::read('App.dir')));$/;"	v
name	lib/Cake/Model/CakeSchema.php	/^			$this->name = preg_replace('\/schema$\/i', '', get_class($this));$/;"	v
name	lib/Cake/Model/CakeSchema.php	/^	public $name = null;$/;"	v
new	lib/Cake/Model/CakeSchema.php	/^				$new = $new['tables'];$/;"	v
new	lib/Cake/Model/CakeSchema.php	/^			$new = $new->tables;$/;"	v
new	lib/Cake/Model/CakeSchema.php	/^			$new = $this;$/;"	v
newColumn	lib/Cake/Model/CakeSchema.php	/^				$newColumn = $value['column'];$/;"	v
newUnique	lib/Cake/Model/CakeSchema.php	/^				$newUnique = isset($value['unique']) ? $value['unique'] : 0;$/;"	v
noPrefixWith	lib/Cake/Model/CakeSchema.php	/^						$noPrefixWith = $this->_noPrefixTable($prefix, $withTable);$/;"	v
object	lib/Cake/Model/CakeSchema.php	/^			$object = get_object_vars($object);$/;"	v
old	lib/Cake/Model/CakeSchema.php	/^				$old = $old['tables'];$/;"	v
old	lib/Cake/Model/CakeSchema.php	/^			$old = $old->tables;$/;"	v
oldColumn	lib/Cake/Model/CakeSchema.php	/^				$oldColumn = $old[$name]['column'];$/;"	v
oldUnique	lib/Cake/Model/CakeSchema.php	/^				$oldUnique = isset($old[$name]['unique']) ? $old[$name]['unique'] : 0;$/;"	v
options	lib/Cake/Model/CakeSchema.php	/^			$options = $object;$/;"	v
options	lib/Cake/Model/CakeSchema.php	/^			$options = array('path' => $options);$/;"	v
options	lib/Cake/Model/CakeSchema.php	/^		$options = array_merge(get_object_vars($this), $options);$/;"	v
out	lib/Cake/Model/CakeSchema.php	/^		$out = "\\tpublic \\${$table} = array(\\n";$/;"	v
out	lib/Cake/Model/CakeSchema.php	/^		$out = "class {$name}Schema extends CakeSchema {\\n\\n";$/;"	v
path	lib/Cake/Model/CakeSchema.php	/^			$this->path = APP . 'Config' . DS . 'Schema';$/;"	v
path	lib/Cake/Model/CakeSchema.php	/^			$this->path = CakePlugin::path($this->plugin) . 'Config' . DS . 'Schema';$/;"	v
path	lib/Cake/Model/CakeSchema.php	/^	public $path = null;$/;"	v
plugin	lib/Cake/Model/CakeSchema.php	/^					$plugin = $this->plugin . '.';$/;"	v
plugin	lib/Cake/Model/CakeSchema.php	/^				$plugin = null;$/;"	v
plugin	lib/Cake/Model/CakeSchema.php	/^			$this->plugin = $options['plugin'];$/;"	v
plugin	lib/Cake/Model/CakeSchema.php	/^	public $plugin = null;$/;"	v
prefix	lib/Cake/Model/CakeSchema.php	/^			$prefix = $db->config['prefix'];$/;"	v
prefix	lib/Cake/Model/CakeSchema.php	/^		$prefix = null;$/;"	v
props	lib/Cake/Model/CakeSchema.php	/^					$props = array();$/;"	v
read	lib/Cake/Model/CakeSchema.php	/^	public function read($options = array()) {$/;"	f
systemTables	lib/Cake/Model/CakeSchema.php	/^				$systemTables = array($/;"	v
table	lib/Cake/Model/CakeSchema.php	/^					$table = $this->_noPrefixTable($prefix, $table);$/;"	v
table	lib/Cake/Model/CakeSchema.php	/^				$table = $this->_noPrefixTable($prefix, $table);$/;"	v
tables	lib/Cake/Model/CakeSchema.php	/^		$tables = array();$/;"	v
tables	lib/Cake/Model/CakeSchema.php	/^	public $tables = array();$/;"	v
type	lib/Cake/Model/CakeSchema.php	/^						$type = $value;$/;"	v
val	lib/Cake/Model/CakeSchema.php	/^						$val = 'null';$/;"	v
val	lib/Cake/Model/CakeSchema.php	/^					$val = var_export($val, true);$/;"	v
vals	lib/Cake/Model/CakeSchema.php	/^		$vals = array();$/;"	v
value	lib/Cake/Model/CakeSchema.php	/^						$value = array('type' => $type);$/;"	v
vars	lib/Cake/Model/CakeSchema.php	/^				$vars = get_class_vars($model);$/;"	v
withTable	lib/Cake/Model/CakeSchema.php	/^					$withTable = $db->fullTableName($Object->$class, false, false);$/;"	v
wrapper	lib/Cake/Model/CakeSchema.php	/^					$wrapper = array_keys($fields);$/;"	v
write	lib/Cake/Model/CakeSchema.php	/^	public function write($object, $options = array()) {$/;"	f
ConnectionManager	lib/Cake/Model/ConnectionManager.php	/^class ConnectionManager {$/;"	c
_connectionData	lib/Cake/Model/ConnectionManager.php	/^	protected static function _connectionData($config) {$/;"	f
_connectionsEnum	lib/Cake/Model/ConnectionManager.php	/^	protected static $_connectionsEnum = array();$/;"	v
_dataSources	lib/Cake/Model/ConnectionManager.php	/^	protected static $_dataSources = array();$/;"	v
_getConnectionObject	lib/Cake/Model/ConnectionManager.php	/^	protected static function _getConnectionObject($name) {$/;"	f
_init	lib/Cake/Model/ConnectionManager.php	/^	protected static $_init = false;$/;"	v
_init	lib/Cake/Model/ConnectionManager.php	/^	protected static function _init() {$/;"	f
class	lib/Cake/Model/ConnectionManager.php	/^		$class = $conn['classname'];$/;"	v
classname	lib/Cake/Model/ConnectionManager.php	/^			$classname = basename($classname);$/;"	v
config	lib/Cake/Model/ConnectionManager.php	/^	public static $config = null;$/;"	v
conn	lib/Cake/Model/ConnectionManager.php	/^			$conn = $connName;$/;"	v
conn	lib/Cake/Model/ConnectionManager.php	/^			$conn = self::$_connectionsEnum[$connName];$/;"	v
conn	lib/Cake/Model/ConnectionManager.php	/^		$conn = self::$_connectionsEnum[$name];$/;"	v
create	lib/Cake/Model/ConnectionManager.php	/^	public static function create($name = '', $config = array()) {$/;"	f
drop	lib/Cake/Model/ConnectionManager.php	/^	public static function drop($name) {$/;"	f
enumConnectionObjects	lib/Cake/Model/ConnectionManager.php	/^	public static function enumConnectionObjects() {$/;"	f
getDataSource	lib/Cake/Model/ConnectionManager.php	/^	public static function getDataSource($name) {$/;"	f
getSourceName	lib/Cake/Model/ConnectionManager.php	/^	public static function getSourceName($source) {$/;"	f
loadDataSource	lib/Cake/Model/ConnectionManager.php	/^	public static function loadDataSource($connName) {$/;"	f
package	lib/Cake/Model/ConnectionManager.php	/^			$package = '\/' . $conn['package'];$/;"	v
package	lib/Cake/Model/ConnectionManager.php	/^			$package = dirname($classname);$/;"	v
package	lib/Cake/Model/ConnectionManager.php	/^		$package = $classname = $plugin = null;$/;"	v
plugin	lib/Cake/Model/ConnectionManager.php	/^			$plugin = $conn['plugin'] . '.';$/;"	v
plugin	lib/Cake/Model/ConnectionManager.php	/^		$plugin = $package = null;$/;"	v
return	lib/Cake/Model/ConnectionManager.php	/^		$return = self::getDataSource($name);$/;"	v
sourceList	lib/Cake/Model/ConnectionManager.php	/^	public static function sourceList() {$/;"	f
CakeSession	lib/Cake/Model/Datasource/CakeSession.php	/^class CakeSession {$/;"	c
_SESSION	lib/Cake/Model/Datasource/CakeSession.php	/^				$_SESSION = array();$/;"	v
_SESSION	lib/Cake/Model/Datasource/CakeSession.php	/^		$_SESSION = null;$/;"	v
_checkValid	lib/Cake/Model/Datasource/CakeSession.php	/^	protected static function _checkValid() {$/;"	f
_configureSession	lib/Cake/Model/Datasource/CakeSession.php	/^	protected static function _configureSession() {$/;"	f
_cookieName	lib/Cake/Model/Datasource/CakeSession.php	/^	protected static $_cookieName = null;$/;"	v
_cookieName	lib/Cake/Model/Datasource/CakeSession.php	/^	protected static function _cookieName() {$/;"	f
_defaultConfig	lib/Cake/Model/Datasource/CakeSession.php	/^	protected static function _defaultConfig($name) {$/;"	f
_error	lib/Cake/Model/Datasource/CakeSession.php	/^	protected static function _error($errorNumber) {$/;"	f
_getHandler	lib/Cake/Model/Datasource/CakeSession.php	/^	protected static function _getHandler($handler) {$/;"	f
_hasSession	lib/Cake/Model/Datasource/CakeSession.php	/^	protected static function _hasSession() {$/;"	f
_initialized	lib/Cake/Model/Datasource/CakeSession.php	/^	protected static $_initialized = false;$/;"	v
_overwrite	lib/Cake/Model/Datasource/CakeSession.php	/^	protected static function _overwrite(&$old, $new) {$/;"	f
_returnSessionVars	lib/Cake/Model/Datasource/CakeSession.php	/^	protected static function _returnSessionVars() {$/;"	f
_setError	lib/Cake/Model/Datasource/CakeSession.php	/^	protected static function _setError($errorNumber, $errorMessage) {$/;"	f
_setHost	lib/Cake/Model/Datasource/CakeSession.php	/^	protected static function _setHost($host) {$/;"	f
_setPath	lib/Cake/Model/Datasource/CakeSession.php	/^	protected static function _setPath($base = null) {$/;"	f
_startSession	lib/Cake/Model/Datasource/CakeSession.php	/^	protected static function _startSession() {$/;"	f
_userAgent	lib/Cake/Model/Datasource/CakeSession.php	/^	protected static $_userAgent = '';$/;"	v
_validAgentAndTime	lib/Cake/Model/Datasource/CakeSession.php	/^	protected static function _validAgentAndTime() {$/;"	f
_writeConfig	lib/Cake/Model/Datasource/CakeSession.php	/^	protected static function _writeConfig() {$/;"	f
base	lib/Cake/Model/Datasource/CakeSession.php	/^			$base = str_replace('?', '', $base);$/;"	v
base	lib/Cake/Model/Datasource/CakeSession.php	/^			$base = str_replace('index.php', '', $base);$/;"	v
check	lib/Cake/Model/Datasource/CakeSession.php	/^					$check = $config['countdown'];$/;"	v
check	lib/Cake/Model/Datasource/CakeSession.php	/^	public static function check($name = null) {$/;"	f
clear	lib/Cake/Model/Datasource/CakeSession.php	/^	public static function clear() {$/;"	f
config	lib/Cake/Model/Datasource/CakeSession.php	/^		$config = self::read('Config');$/;"	v
cookieLifeTime	lib/Cake/Model/Datasource/CakeSession.php	/^	public static $cookieLifeTime;$/;"	v
defaults	lib/Cake/Model/Datasource/CakeSession.php	/^			$defaults = self::_defaultConfig($sessionConfig['defaults']);$/;"	v
defaults	lib/Cake/Model/Datasource/CakeSession.php	/^		$defaults = array($/;"	v
delete	lib/Cake/Model/Datasource/CakeSession.php	/^	public static function delete($name) {$/;"	f
destroy	lib/Cake/Model/Datasource/CakeSession.php	/^	public static function destroy() {$/;"	f
error	lib/Cake/Model/Datasource/CakeSession.php	/^	public static $error = false;$/;"	v
error	lib/Cake/Model/Datasource/CakeSession.php	/^	public static function error() {$/;"	f
handler	lib/Cake/Model/Datasource/CakeSession.php	/^			$handler = self::_getHandler($sessionConfig['handler']['engine']);$/;"	v
handler	lib/Cake/Model/Datasource/CakeSession.php	/^		$handler = new $class();$/;"	v
host	lib/Cake/Model/Datasource/CakeSession.php	/^	public static $host = null;$/;"	v
id	lib/Cake/Model/Datasource/CakeSession.php	/^		$id = self::id();$/;"	v
id	lib/Cake/Model/Datasource/CakeSession.php	/^		$id = session_id();$/;"	v
id	lib/Cake/Model/Datasource/CakeSession.php	/^	public static $id = null;$/;"	v
id	lib/Cake/Model/Datasource/CakeSession.php	/^	public static function id($id = null) {$/;"	f
init	lib/Cake/Model/Datasource/CakeSession.php	/^	public static function init($base = null) {$/;"	f
lastError	lib/Cake/Model/Datasource/CakeSession.php	/^	public static $lastError = null;$/;"	v
path	lib/Cake/Model/Datasource/CakeSession.php	/^	public static $path = '\/';$/;"	v
read	lib/Cake/Model/Datasource/CakeSession.php	/^	public static function read($name = null) {$/;"	f
renew	lib/Cake/Model/Datasource/CakeSession.php	/^	public static function renew() {$/;"	f
requestCountdown	lib/Cake/Model/Datasource/CakeSession.php	/^	public static $requestCountdown = 10;$/;"	v
result	lib/Cake/Model/Datasource/CakeSession.php	/^		$result = Hash::get($_SESSION, $name);$/;"	v
sessionConfig	lib/Cake/Model/Datasource/CakeSession.php	/^				$sessionConfig = Hash::merge($defaults, $sessionConfig);$/;"	v
sessionConfig	lib/Cake/Model/Datasource/CakeSession.php	/^			$sessionConfig = Configure::read('Session');$/;"	v
sessionConfig	lib/Cake/Model/Datasource/CakeSession.php	/^		$sessionConfig = Configure::read('Session');$/;"	v
sessionTime	lib/Cake/Model/Datasource/CakeSession.php	/^	public static $sessionTime = false;$/;"	v
start	lib/Cake/Model/Datasource/CakeSession.php	/^	public static function start() {$/;"	f
started	lib/Cake/Model/Datasource/CakeSession.php	/^	public static function started() {$/;"	f
time	lib/Cake/Model/Datasource/CakeSession.php	/^	public static $time = false;$/;"	v
timeout	lib/Cake/Model/Datasource/CakeSession.php	/^	public static $timeout = null;$/;"	v
userAgent	lib/Cake/Model/Datasource/CakeSession.php	/^	public static function userAgent($userAgent = null) {$/;"	f
valid	lib/Cake/Model/Datasource/CakeSession.php	/^	public static $valid = false;$/;"	v
valid	lib/Cake/Model/Datasource/CakeSession.php	/^	public static function valid() {$/;"	f
validAgent	lib/Cake/Model/Datasource/CakeSession.php	/^		$validAgent = ($/;"	v
write	lib/Cake/Model/Datasource/CakeSession.php	/^			$write = array($name => $value);$/;"	v
write	lib/Cake/Model/Datasource/CakeSession.php	/^		$write = $name;$/;"	v
write	lib/Cake/Model/Datasource/CakeSession.php	/^	public static function write($name, $value = null) {$/;"	f
DataSource	lib/Cake/Model/Datasource/DataSource.php	/^class DataSource extends Object {$/;"	c
InsertModel	lib/Cake/Model/Datasource/DataSource.php	/^								$InsertModel = $Model->{$assoc};$/;"	v
InsertModel	lib/Cake/Model/Datasource/DataSource.php	/^					$InsertModel = $Model;$/;"	v
__construct	lib/Cake/Model/Datasource/DataSource.php	/^	public function __construct($config = array()) {$/;"	f
__destruct	lib/Cake/Model/Datasource/DataSource.php	/^	public function __destruct() {$/;"	f
_baseConfig	lib/Cake/Model/Datasource/DataSource.php	/^	protected $_baseConfig = array();$/;"	v
_cacheDescription	lib/Cake/Model/Datasource/DataSource.php	/^	protected function _cacheDescription($object, $data = null) {$/;"	f
_descriptions	lib/Cake/Model/Datasource/DataSource.php	/^	protected $_descriptions = array();$/;"	v
_sources	lib/Cake/Model/Datasource/DataSource.php	/^	protected $_sources = null;$/;"	v
_transactionStarted	lib/Cake/Model/Datasource/DataSource.php	/^	protected $_transactionStarted = false;$/;"	v
begin	lib/Cake/Model/Datasource/DataSource.php	/^	public function begin() {$/;"	f
cache	lib/Cake/Model/Datasource/DataSource.php	/^			$cache = $data;$/;"	v
cache	lib/Cake/Model/Datasource/DataSource.php	/^		$cache = $this->_cacheDescription($table);$/;"	v
cache	lib/Cake/Model/Datasource/DataSource.php	/^		$cache = Cache::read($key, '_cake_model_');$/;"	v
cacheSources	lib/Cake/Model/Datasource/DataSource.php	/^	public $cacheSources = true;$/;"	v
close	lib/Cake/Model/Datasource/DataSource.php	/^	public function close() {$/;"	f
column	lib/Cake/Model/Datasource/DataSource.php	/^	public function column($real) {$/;"	f
commit	lib/Cake/Model/Datasource/DataSource.php	/^	public function commit() {$/;"	f
config	lib/Cake/Model/Datasource/DataSource.php	/^		$this->config = array_merge($this->_baseConfig, $this->config, $config);$/;"	v
config	lib/Cake/Model/Datasource/DataSource.php	/^	public $config = array();$/;"	v
connected	lib/Cake/Model/Datasource/DataSource.php	/^	public $connected = false;$/;"	v
create	lib/Cake/Model/Datasource/DataSource.php	/^	public function create(Model $Model, $fields = null, $values = null) {$/;"	f
dataType	lib/Cake/Model/Datasource/DataSource.php	/^				$dataType = $InsertModel->getColumnType($InsertModel->primaryKey);$/;"	v
delete	lib/Cake/Model/Datasource/DataSource.php	/^	public function delete(Model $Model, $conditions = null) {$/;"	f
describe	lib/Cake/Model/Datasource/DataSource.php	/^	public function describe($model) {$/;"	f
enabled	lib/Cake/Model/Datasource/DataSource.php	/^	public function enabled() {$/;"	f
found	lib/Cake/Model/Datasource/DataSource.php	/^							$found = true;$/;"	v
found	lib/Cake/Model/Datasource/DataSource.php	/^					$found = false;$/;"	v
getSchemaName	lib/Cake/Model/Datasource/DataSource.php	/^	public function getSchemaName() {$/;"	f
insertKey	lib/Cake/Model/Datasource/DataSource.php	/^								$insertKey = $assocData['foreignKey'];$/;"	v
insertKey	lib/Cake/Model/Datasource/DataSource.php	/^					$insertKey = $Model->primaryKey;$/;"	v
insertKey	lib/Cake/Model/Datasource/DataSource.php	/^			$insertKey = $InsertModel = null;$/;"	v
insertQueryData	lib/Cake/Model/Datasource/DataSource.php	/^	public function insertQueryData($query, $data, $association, Model $Model, $stack) {$/;"	f
key	lib/Cake/Model/Datasource/DataSource.php	/^		$key = ConnectionManager::getSourceName($this) . '_' . $object;$/;"	v
key	lib/Cake/Model/Datasource/DataSource.php	/^		$key = ConnectionManager::getSourceName($this) . '_' . $this->config['database'] . '_list';$/;"	v
key	lib/Cake/Model/Datasource/DataSource.php	/^		$key = preg_replace('\/[^A-Za-z0-9_\\-.+]\/', '_', $key);$/;"	v
keys	lib/Cake/Model/Datasource/DataSource.php	/^		$keys = array('{$__cakeID__$}', '{$__cakeForeignKey__$}');$/;"	v
lastAffected	lib/Cake/Model/Datasource/DataSource.php	/^	public function lastAffected($source = null) {$/;"	f
lastInsertId	lib/Cake/Model/Datasource/DataSource.php	/^	public function lastInsertId($source = null) {$/;"	f
lastNumRows	lib/Cake/Model/Datasource/DataSource.php	/^	public function lastNumRows($source = null) {$/;"	f
listSources	lib/Cake/Model/Datasource/DataSource.php	/^	public function listSources($data = null) {$/;"	f
modelAlias	lib/Cake/Model/Datasource/DataSource.php	/^		$modelAlias = $Model->alias;$/;"	v
query	lib/Cake/Model/Datasource/DataSource.php	/^			$query = str_replace($key, $this->value($val, $dataType), $query);$/;"	v
read	lib/Cake/Model/Datasource/DataSource.php	/^	public function read(Model $Model, $queryData = array(), $recursive = null) {$/;"	f
resolveKey	lib/Cake/Model/Datasource/DataSource.php	/^	public function resolveKey(Model $Model, $key) {$/;"	f
rollback	lib/Cake/Model/Datasource/DataSource.php	/^	public function rollback() {$/;"	f
setConfig	lib/Cake/Model/Datasource/DataSource.php	/^	public function setConfig($config = array()) {$/;"	f
sources	lib/Cake/Model/Datasource/DataSource.php	/^			$sources = $data;$/;"	v
sources	lib/Cake/Model/Datasource/DataSource.php	/^		$sources = Cache::read($key, '_cake_model_');$/;"	v
table	lib/Cake/Model/Datasource/DataSource.php	/^			$table = $model->tablePrefix . $model->table;$/;"	v
table	lib/Cake/Model/Datasource/DataSource.php	/^			$table = $model;$/;"	v
update	lib/Cake/Model/Datasource/DataSource.php	/^	public function update(Model $Model, $fields = null, $values = null, $conditions = null) {$/;"	f
val	lib/Cake/Model/Datasource/DataSource.php	/^							$val = $data[$assocData][$insertKey];$/;"	v
val	lib/Cake/Model/Datasource/DataSource.php	/^						$val = '';$/;"	v
val	lib/Cake/Model/Datasource/DataSource.php	/^					$val = $data[$association][$insertKey];$/;"	v
val	lib/Cake/Model/Datasource/DataSource.php	/^					$val = $data[$modelAlias][$insertKey];$/;"	v
val	lib/Cake/Model/Datasource/DataSource.php	/^			$val = $dataType = null;$/;"	v
Mysql	lib/Cake/Model/Datasource/Database/Mysql.php	/^class Mysql extends DboSource {$/;"	c
_alterIndexes	lib/Cake/Model/Datasource/Database/Mysql.php	/^	protected function _alterIndexes($table, $indexes) {$/;"	f
_alterTableParameters	lib/Cake/Model/Datasource/Database/Mysql.php	/^	protected function _alterTableParameters($table, $parameters) {$/;"	f
_baseConfig	lib/Cake/Model/Datasource/Database/Mysql.php	/^	protected $_baseConfig = array($/;"	v
_buildIndexSubPart	lib/Cake/Model/Datasource/Database/Mysql.php	/^	protected function _buildIndexSubPart($lengths, $column) {$/;"	f
_charsets	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$this->_charsets = array();$/;"	v
_charsets	lib/Cake/Model/Datasource/Database/Mysql.php	/^	protected $_charsets = array();$/;"	v
_connection	lib/Cake/Model/Datasource/Database/Mysql.php	/^			$this->_connection = new PDO($/;"	v
_connection	lib/Cake/Model/Datasource/Database/Mysql.php	/^	protected $_connection = null;$/;"	v
_dropTable	lib/Cake/Model/Datasource/Database/Mysql.php	/^	protected function _dropTable($table) {$/;"	f
_unsigned	lib/Cake/Model/Datasource/Database/Mysql.php	/^	protected function _unsigned($real) {$/;"	f
_useAlias	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$this->_useAlias = (bool)version_compare($this->getVersion(), "4.1", ">=");$/;"	v
_useAlias	lib/Cake/Model/Datasource/Database/Mysql.php	/^	protected $_useAlias = true;$/;"	v
add	lib/Cake/Model/Datasource/Database/Mysql.php	/^			$add = $this->buildIndex($indexes['add']);$/;"	v
alias	lib/Cake/Model/Datasource/Database/Mysql.php	/^			$alias = $joins = false;$/;"	v
alias	lib/Cake/Model/Datasource/Database/Mysql.php	/^			$alias = $this->name($model->alias);$/;"	v
alias	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$alias = $joins = false;$/;"	v
alias	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$alias = $this->name($model->alias);$/;"	v
alter	lib/Cake/Model/Datasource/Database/Mysql.php	/^								$alter = 'ADD ' . $this->buildColumn($col);$/;"	v
alter	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$alter = array();$/;"	v
alterSchema	lib/Cake/Model/Datasource/Database/Mysql.php	/^	public function alterSchema($compare, $table = null) {$/;"	f
buildIndex	lib/Cake/Model/Datasource/Database/Mysql.php	/^	public function buildIndex($indexes, $table = null) {$/;"	f
cache	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$cache = parent::describe($key);$/;"	v
cache	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$cache = parent::listSources();$/;"	v
charset	lib/Cake/Model/Datasource/Database/Mysql.php	/^				$charset = $this->getCharsetName($fields[$column->Field]['collate']);$/;"	v
charset	lib/Cake/Model/Datasource/Database/Mysql.php	/^				$charset = $this->getCharsetName($row['Collation']);$/;"	v
col	lib/Cake/Model/Datasource/Database/Mysql.php	/^					$col = array();$/;"	v
col	lib/Cake/Model/Datasource/Database/Mysql.php	/^			$col = $real['name'];$/;"	v
col	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$col = str_replace(')', '', $real);$/;"	v
colList	lib/Cake/Model/Datasource/Database/Mysql.php	/^				$colList = array_merge($colList, $this->_alterIndexes($curTable, $indexes));$/;"	v
colList	lib/Cake/Model/Datasource/Database/Mysql.php	/^				$colList = array_merge($colList, $this->_alterTableParameters($curTable, $tableParameters));$/;"	v
colList	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$colList = array();$/;"	v
cols	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$cols = $r->fetch(PDO::FETCH_ASSOC);$/;"	v
cols	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$cols = $this->_execute('SHOW FULL COLUMNS FROM ' . $table);$/;"	v
column	lib/Cake/Model/Datasource/Database/Mysql.php	/^			$column = $results->getColumnMeta($index);$/;"	v
column	lib/Cake/Model/Datasource/Database/Mysql.php	/^	public function column($real) {$/;"	f
columns	lib/Cake/Model/Datasource/Database/Mysql.php	/^	public $columns = array($/;"	v
combined	lib/Cake/Model/Datasource/Database/Mysql.php	/^			$combined = $fields;$/;"	v
combined	lib/Cake/Model/Datasource/Database/Mysql.php	/^			$combined = array_combine($fields, $values);$/;"	v
complexConditions	lib/Cake/Model/Datasource/Database/Mysql.php	/^				$complexConditions = true;$/;"	v
complexConditions	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$complexConditions = false;$/;"	v
condition	lib/Cake/Model/Datasource/Database/Mysql.php	/^			$condition = ' WHERE name = ' . $this->value($name);$/;"	v
condition	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$condition = '';$/;"	v
conditions	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$conditions = $this->conditions($this->defaultConditions($model, $conditions, $alias), true, true, $model);$/;"	v
config	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$config = $this->config;$/;"	v
connect	lib/Cake/Model/Datasource/Database/Mysql.php	/^	public function connect() {$/;"	f
connected	lib/Cake/Model/Datasource/Database/Mysql.php	/^			$this->connected = true;$/;"	v
connected	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$this->connected = false;$/;"	v
delete	lib/Cake/Model/Datasource/Database/Mysql.php	/^	public function delete(Model $model, $conditions = null) {$/;"	f
describe	lib/Cake/Model/Datasource/Database/Mysql.php	/^	public function describe($model) {$/;"	f
description	lib/Cake/Model/Datasource/Database/Mysql.php	/^	public $description = "MySQL DBO Driver";$/;"	v
dsn	lib/Cake/Model/Datasource/Database/Mysql.php	/^			$dsn = "mysql:host={$config['host']};port={$config['port']};dbname={$config['database']}";$/;"	v
dsn	lib/Cake/Model/Datasource/Database/Mysql.php	/^			$dsn = "mysql:unix_socket={$config['unix_socket']};dbname={$config['database']}";$/;"	v
enabled	lib/Cake/Model/Datasource/Database/Mysql.php	/^	public function enabled() {$/;"	f
endQuote	lib/Cake/Model/Datasource/Database/Mysql.php	/^	public $endQuote = "`";$/;"	v
fetchResult	lib/Cake/Model/Datasource/Database/Mysql.php	/^	public function fetchResult() {$/;"	f
fieldParameters	lib/Cake/Model/Datasource/Database/Mysql.php	/^	public $fieldParameters = array($/;"	v
fields	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$fields = $this->_prepareUpdateFields($model, $combined, empty($conditions), !empty($conditions));$/;"	v
fields	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$fields = false;$/;"	v
fields	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$fields = implode(', ', $fields);$/;"	v
flags	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$flags = $config['flags'] + array($/;"	v
getCharsetName	lib/Cake/Model/Datasource/Database/Mysql.php	/^	public function getCharsetName($name) {$/;"	f
getEncoding	lib/Cake/Model/Datasource/Database/Mysql.php	/^	public function getEncoding() {$/;"	f
getSchemaName	lib/Cake/Model/Datasource/Database/Mysql.php	/^	public function getSchemaName() {$/;"	f
idx	lib/Cake/Model/Datasource/Database/Mysql.php	/^					$idx = (object)current((array)$idx);$/;"	v
index	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$index = 0;$/;"	v
index	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$index = array();$/;"	v
index	lib/Cake/Model/Datasource/Database/Mysql.php	/^	public function index($model) {$/;"	f
indexes	lib/Cake/Model/Datasource/Database/Mysql.php	/^			$indexes = $tableParameters = $colList = array();$/;"	v
indexes	lib/Cake/Model/Datasource/Database/Mysql.php	/^			$indexes = $this->_execute('SHOW INDEX FROM ' . $table);$/;"	v
join	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$join = array();$/;"	v
joins	lib/Cake/Model/Datasource/Database/Mysql.php	/^				$joins = implode(' ', $this->_getJoins($model));$/;"	v
joins	lib/Cake/Model/Datasource/Database/Mysql.php	/^			$joins = false;$/;"	v
joins	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$joins = implode(' ', $this->_getJoins($model));$/;"	v
key	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$key = $this->fullTableName($model, false);$/;"	v
limit	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$limit = $this->length($real);$/;"	v
listDetailedSources	lib/Cake/Model/Datasource/Database/Mysql.php	/^	public function listDetailedSources($name = null) {$/;"	f
listSources	lib/Cake/Model/Datasource/Database/Mysql.php	/^	public function listSources($data = null) {$/;"	f
map	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$this->map = array();$/;"	v
name	lib/Cake/Model/Datasource/Database/Mysql.php	/^						$name = $this->name($column);$/;"	v
name	lib/Cake/Model/Datasource/Database/Mysql.php	/^				$name = $this->startQuote . $name . $this->endQuote;$/;"	v
name	lib/Cake/Model/Datasource/Database/Mysql.php	/^				$name = null;$/;"	v
nestedTransactionSupported	lib/Cake/Model/Datasource/Database/Mysql.php	/^	public function nestedTransactionSupported() {$/;"	f
numFields	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$numFields = $results->columnCount();$/;"	v
old	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$old = version_compare($this->getVersion(), '4.1', '<=');$/;"	v
out	lib/Cake/Model/Datasource/Database/Mysql.php	/^				$out = 'DROP ';$/;"	v
out	lib/Cake/Model/Datasource/Database/Mysql.php	/^			$out = '';$/;"	v
out	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$out = '';$/;"	v
r	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$r = $this->_execute($/;"	v
result	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$result = $this->_connection->query('SHOW TABLE STATUS ' . $condition, PDO::FETCH_ASSOC);$/;"	v
result	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$result = $this->_execute('SHOW TABLES FROM ' . $this->name($this->config['database']));$/;"	v
resultRow	lib/Cake/Model/Datasource/Database/Mysql.php	/^			$resultRow = array();$/;"	v
resultSet	lib/Cake/Model/Datasource/Database/Mysql.php	/^	public function resultSet($results) {$/;"	f
setEncoding	lib/Cake/Model/Datasource/Database/Mysql.php	/^	public function setEncoding($enc) {$/;"	f
startQuote	lib/Cake/Model/Datasource/Database/Mysql.php	/^	public $startQuote = "`";$/;"	v
table	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$table = $this->fullTableName($model);$/;"	v
tableParameters	lib/Cake/Model/Datasource/Database/Mysql.php	/^	public $tableParameters = array($/;"	v
tables	lib/Cake/Model/Datasource/Database/Mysql.php	/^		$tables = array();$/;"	v
type	lib/Cake/Model/Datasource/Database/Mysql.php	/^				$type = 'boolean';$/;"	v
type	lib/Cake/Model/Datasource/Database/Mysql.php	/^				$type = empty($column['native_type']) ? 'string' : $column['native_type'];$/;"	v
update	lib/Cake/Model/Datasource/Database/Mysql.php	/^	public function update(Model $model, $fields = array(), $values = null, $conditions = null) {$/;"	f
vals	lib/Cake/Model/Datasource/Database/Mysql.php	/^					$vals = array();$/;"	v
AssociatedModel	lib/Cake/Model/Datasource/Database/Postgres.php	/^							$AssociatedModel = $model->{$build[0]};$/;"	v
AssociatedModel	lib/Cake/Model/Datasource/Database/Postgres.php	/^							$AssociatedModel = $model;$/;"	v
Postgres	lib/Cake/Model/Datasource/Database/Postgres.php	/^class Postgres extends DboSource {$/;"	c
_alterIndexes	lib/Cake/Model/Datasource/Database/Postgres.php	/^	protected function _alterIndexes($table, $indexes) {$/;"	f
_baseConfig	lib/Cake/Model/Datasource/Database/Postgres.php	/^	protected $_baseConfig = array($/;"	v
_connection	lib/Cake/Model/Datasource/Database/Postgres.php	/^			$this->_connection = new PDO($/;"	v
_fields	lib/Cake/Model/Datasource/Database/Postgres.php	/^						$_fields = $this->fields($AssociatedModel, $AssociatedModel->alias, array_keys($AssociatedModel->schema()));$/;"	v
_quoteFunctionField	lib/Cake/Model/Datasource/Database/Postgres.php	/^	protected function _quoteFunctionField($match) {$/;"	f
_sequenceMap	lib/Cake/Model/Datasource/Database/Postgres.php	/^	protected $_sequenceMap = array();$/;"	v
_sqlOps	lib/Cake/Model/Datasource/Database/Postgres.php	/^	protected $_sqlOps = array('like', 'ilike', 'or', 'not', 'in', 'between', '~', '~*', '!~', '!~*', 'similar to');$/;"	v
alias	lib/Cake/Model/Datasource/Database/Postgres.php	/^			$alias = $model->alias;$/;"	v
alter	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$alter = array();$/;"	v
alterSchema	lib/Cake/Model/Datasource/Database/Postgres.php	/^	public function alterSchema($compare, $table = null) {$/;"	f
boolToInt	lib/Cake/Model/Datasource/Database/Postgres.php	/^								$boolToInt = $original['type'] === 'boolean' && $col['type'] === 'integer';$/;"	v
boolean	lib/Cake/Model/Datasource/Database/Postgres.php	/^	public function boolean($data, $quote = false) {$/;"	f
build	lib/Cake/Model/Datasource/Database/Postgres.php	/^							$build = explode('.', $fields[$i]);$/;"	v
build	lib/Cake/Model/Datasource/Database/Postgres.php	/^						$build = explode('.', $fields[$i]);$/;"	v
buildColumn	lib/Cake/Model/Datasource/Database/Postgres.php	/^	public function buildColumn($column) {$/;"	f
buildIndex	lib/Cake/Model/Datasource/Database/Postgres.php	/^	public function buildIndex($indexes, $table = null) {$/;"	f
cache	lib/Cake/Model/Datasource/Database/Postgres.php	/^			$cache = $this->cacheSources;$/;"	v
cache	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$cache = parent::listSources();$/;"	v
cacheSources	lib/Cake/Model/Datasource/Database/Postgres.php	/^			$this->cacheSources = $cache;$/;"	v
cacheSources	lib/Cake/Model/Datasource/Database/Postgres.php	/^			$this->cacheSources = false;$/;"	v
col	lib/Cake/Model/Datasource/Database/Postgres.php	/^			$col = $real['name'];$/;"	v
col	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$col = $this->columns[$column['type']];$/;"	v
col	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$col = str_replace(')', '', $real);$/;"	v
col	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$col = str_replace(array(')', 'unsigned'), '', $real);$/;"	v
colList	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$colList = array();$/;"	v
cols	lib/Cake/Model/Datasource/Database/Postgres.php	/^						$cols = implode(', ', $cols);$/;"	v
cols	lib/Cake/Model/Datasource/Database/Postgres.php	/^					$cols = $indexes['add']['PRIMARY']['column'];$/;"	v
cols	lib/Cake/Model/Datasource/Database/Postgres.php	/^			$cols = $this->_execute($/;"	v
cols	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$cols = null;$/;"	v
column	lib/Cake/Model/Datasource/Database/Postgres.php	/^			$column = $results->getColumnMeta($j);$/;"	v
column	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$column = $this->name($column);$/;"	v
column	lib/Cake/Model/Datasource/Database/Postgres.php	/^	public function column($real) {$/;"	f
columns	lib/Cake/Model/Datasource/Database/Postgres.php	/^	public $columns = array($/;"	v
config	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$config = $this->config;$/;"	v
connect	lib/Cake/Model/Datasource/Database/Postgres.php	/^	public function connect() {$/;"	f
connected	lib/Cake/Model/Datasource/Database/Postgres.php	/^			$this->connected = true;$/;"	v
connected	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$this->connected = false;$/;"	v
constant	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$constant = preg_match('\/^\\d+|NULL|FALSE|TRUE$\/i', $match[1]);$/;"	v
count	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$count = count($fields);$/;"	v
data	lib/Cake/Model/Datasource/Database/Postgres.php	/^			$data = str_replace('"__"', '__', $data);$/;"	v
default	lib/Cake/Model/Datasource/Database/Postgres.php	/^								$default = isset($col['default']) ? $col['default'] : null;$/;"	v
describe	lib/Cake/Model/Datasource/Database/Postgres.php	/^	public function describe($model) {$/;"	f
description	lib/Cake/Model/Datasource/Database/Postgres.php	/^	public $description = "PostgreSQL DBO Driver";$/;"	v
enabled	lib/Cake/Model/Datasource/Database/Postgres.php	/^	public function enabled() {$/;"	f
endQuote	lib/Cake/Model/Datasource/Database/Postgres.php	/^	public $endQuote = '"';$/;"	v
fetchResult	lib/Cake/Model/Datasource/Database/Postgres.php	/^	public function fetchResult() {$/;"	f
fieldName	lib/Cake/Model/Datasource/Database/Postgres.php	/^									$fieldName = $newName;$/;"	v
fieldName	lib/Cake/Model/Datasource/Database/Postgres.php	/^								$fieldName = $this->name($field);$/;"	v
fields	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$fields = parent::describe($table);$/;"	v
fields	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$fields = parent::fields($model, $alias, $fields, false);$/;"	v
fields	lib/Cake/Model/Datasource/Database/Postgres.php	/^	public function fields(Model $model, $alias = null, $fields = array(), $quote = true) {$/;"	f
flags	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$flags = $config['flags'] + array($/;"	v
floats	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$floats = array($/;"	v
fullTable	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$fullTable = $this->fullTableName($table);$/;"	v
getEncoding	lib/Cake/Model/Datasource/Database/Postgres.php	/^	public function getEncoding() {$/;"	f
getSchemaName	lib/Cake/Model/Datasource/Database/Postgres.php	/^	public function getSchemaName() {$/;"	f
getSequence	lib/Cake/Model/Datasource/Database/Postgres.php	/^	public function getSequence($table, $field = 'id') {$/;"	f
index	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$index = 0;$/;"	v
index	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$index = array();$/;"	v
index	lib/Cake/Model/Datasource/Database/Postgres.php	/^	public function index($model) {$/;"	f
indexes	lib/Cake/Model/Datasource/Database/Postgres.php	/^			$indexes = $colList = array();$/;"	v
indexes	lib/Cake/Model/Datasource/Database/Postgres.php	/^			$indexes = $this->query("SELECT c2.relname, i.indisprimary, i.indisunique, i.indisclustered, i.indisvalid, pg_catalog.pg_get_indexdef(i.indexrelid, 0, true) as statement, c2.reltablespace$/;"	v
j	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$j = 0;$/;"	v
join	lib/Cake/Model/Datasource/Database/Postgres.php	/^				$join = array('columns' => ",\\n\\t", 'indexes' => "\\n");$/;"	v
join	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$join = array();$/;"	v
key	lib/Cake/Model/Datasource/Database/Postgres.php	/^				$key = array_pop($info);$/;"	v
lastInsertId	lib/Cake/Model/Datasource/Database/Postgres.php	/^	public function lastInsertId($source = null, $field = 'id') {$/;"	f
length	lib/Cake/Model/Datasource/Database/Postgres.php	/^						$length = 36;$/;"	v
length	lib/Cake/Model/Datasource/Database/Postgres.php	/^						$length = intval($c->oct_length);$/;"	v
length	lib/Cake/Model/Datasource/Database/Postgres.php	/^						$length = null;$/;"	v
length	lib/Cake/Model/Datasource/Database/Postgres.php	/^					$length = $this->length($c->type);$/;"	v
length	lib/Cake/Model/Datasource/Database/Postgres.php	/^					$length = intval($c->char_length);$/;"	v
length	lib/Cake/Model/Datasource/Database/Postgres.php	/^					$length = null;$/;"	v
length	lib/Cake/Model/Datasource/Database/Postgres.php	/^	public function length($real) {$/;"	f
limit	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$limit = null;$/;"	v
limit	lib/Cake/Model/Datasource/Database/Postgres.php	/^	public function limit($limit, $offset = null) {$/;"	f
listSources	lib/Cake/Model/Datasource/Database/Postgres.php	/^	public function listSources($data = null) {$/;"	f
map	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$this->map = array();$/;"	v
name	lib/Cake/Model/Datasource/Database/Postgres.php	/^	public function name($data) {$/;"	f
nestedTransactionSupported	lib/Cake/Model/Datasource/Database/Postgres.php	/^	public function nestedTransactionSupported() {$/;"	f
newName	lib/Cake/Model/Datasource/Database/Postgres.php	/^									$newName = $this->name($col['name']);$/;"	v
nullable	lib/Cake/Model/Datasource/Database/Postgres.php	/^									$nullable = ($nullable) ? 'DROP NOT NULL' : 'SET NOT NULL';$/;"	v
nullable	lib/Cake/Model/Datasource/Database/Postgres.php	/^								$nullable = isset($col['null']) ? $col['null'] : null;$/;"	v
numFields	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$numFields = $results->columnCount();$/;"	v
original	lib/Cake/Model/Datasource/Database/Postgres.php	/^								$original = $schema[$field];$/;"	v
out	lib/Cake/Model/Datasource/Database/Postgres.php	/^					$out = '';$/;"	v
out	lib/Cake/Model/Datasource/Database/Postgres.php	/^				$out = 'CREATE ';$/;"	v
out	lib/Cake/Model/Datasource/Database/Postgres.php	/^				$out = 'DROP ';$/;"	v
out	lib/Cake/Model/Datasource/Database/Postgres.php	/^				$out = 'PRIMARY KEY  (' . $this->name($value['column']) . ')';$/;"	v
out	lib/Cake/Model/Datasource/Database/Postgres.php	/^				$out = str_replace('DEFAULT DEFAULT', 'DEFAULT 0', $out);$/;"	v
out	lib/Cake/Model/Datasource/Database/Postgres.php	/^				$out = str_replace('DEFAULT DEFAULT', 'DEFAULT FALSE', $out);$/;"	v
out	lib/Cake/Model/Datasource/Database/Postgres.php	/^				$out = str_replace('DEFAULT DEFAULT', 'DEFAULT NULL', $out);$/;"	v
out	lib/Cake/Model/Datasource/Database/Postgres.php	/^				$out = str_replace('DEFAULT NOT NULL', '', $out);$/;"	v
out	lib/Cake/Model/Datasource/Database/Postgres.php	/^				$out = str_replace('DEFAULT NULL', '', $out);$/;"	v
out	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$out = '';$/;"	v
out	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$out = parent::buildColumn($column);$/;"	v
out	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$out = preg_replace($/;"	v
out	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$out = str_replace('bigint serial', 'bigserial', $out);$/;"	v
out	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$out = str_replace('integer serial', 'serial', $out);$/;"	v
parsedColumn	lib/Cake/Model/Datasource/Database/Postgres.php	/^					$parsedColumn = explode(', ', $indexColumns[1]);$/;"	v
parsedColumn	lib/Cake/Model/Datasource/Database/Postgres.php	/^				$parsedColumn = $indexColumns[1];$/;"	v
parts	lib/Cake/Model/Datasource/Database/Postgres.php	/^			$parts = explode('.', $match[1]);$/;"	v
prepend	lib/Cake/Model/Datasource/Database/Postgres.php	/^						$prepend = 'DISTINCT ';$/;"	v
prepend	lib/Cake/Model/Datasource/Database/Postgres.php	/^					$prepend = '';$/;"	v
prepend	lib/Cake/Model/Datasource/Database/Postgres.php	/^			$prepend = 'DISTINCT ';$/;"	v
prepend	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$prepend = '';$/;"	v
renderStatement	lib/Cake/Model/Datasource/Database/Postgres.php	/^	public function renderStatement($type, $data) {$/;"	f
resetSequence	lib/Cake/Model/Datasource/Database/Postgres.php	/^	public function resetSequence($table, $column) {$/;"	f
result	lib/Cake/Model/Datasource/Database/Postgres.php	/^						$result = array_merge($result, $_fields);$/;"	v
result	lib/Cake/Model/Datasource/Database/Postgres.php	/^				$result = $data;$/;"	v
result	lib/Cake/Model/Datasource/Database/Postgres.php	/^				$result = ($data === 'TRUE');$/;"	v
result	lib/Cake/Model/Datasource/Database/Postgres.php	/^				$result = ($data === 't');$/;"	v
result	lib/Cake/Model/Datasource/Database/Postgres.php	/^				$result = ($data === 'true');$/;"	v
result	lib/Cake/Model/Datasource/Database/Postgres.php	/^				$result = (bool)$data;$/;"	v
result	lib/Cake/Model/Datasource/Database/Postgres.php	/^			$result = array();$/;"	v
result	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$result = $this->_execute($sql, array($schema));$/;"	v
result	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$result = $this->_execute('SHOW client_encoding')->fetch();$/;"	v
resultRow	lib/Cake/Model/Datasource/Database/Postgres.php	/^			$resultRow = array();$/;"	v
resultSet	lib/Cake/Model/Datasource/Database/Postgres.php	/^	public function resultSet(&$results) {$/;"	f
rt	lib/Cake/Model/Datasource/Database/Postgres.php	/^			$rt = sprintf(' LIMIT %u', $limit);$/;"	v
schema	lib/Cake/Model/Datasource/Database/Postgres.php	/^							$schema = $this->describe($curTable);$/;"	v
schema	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$schema = $this->config['schema'];$/;"	v
seq	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$seq = $this->getSequence($source, $field);$/;"	v
sequence	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$sequence = $this->value($this->getSequence($tableName, $column));$/;"	v
sequenceName	lib/Cake/Model/Datasource/Database/Postgres.php	/^							$sequenceName = $c->schema . '.' . $seq[1];$/;"	v
sequenceName	lib/Cake/Model/Datasource/Database/Postgres.php	/^							$sequenceName = $seq[1];$/;"	v
setEncoding	lib/Cake/Model/Datasource/Database/Postgres.php	/^	public function setEncoding($enc) {$/;"	f
sql	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$sql = "SELECT table_name as name FROM INFORMATION_SCHEMA.tables WHERE table_schema = ?";$/;"	v
startQuote	lib/Cake/Model/Datasource/Database/Postgres.php	/^	public $startQuote = '"';$/;"	v
table	lib/Cake/Model/Datasource/Database/Postgres.php	/^			$table = $this->fullTableName($table, false, false);$/;"	v
table	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$table = $this->fullTableName($model, false, false);$/;"	v
table	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$table = $this->fullTableName($table, false, false);$/;"	v
tableName	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$tableName = $this->fullTableName($table, false, false);$/;"	v
tables	lib/Cake/Model/Datasource/Database/Postgres.php	/^		$tables = array();$/;"	v
truncate	lib/Cake/Model/Datasource/Database/Postgres.php	/^	public function truncate($table, $reset = false) {$/;"	f
type	lib/Cake/Model/Datasource/Database/Postgres.php	/^						$type = 'text';$/;"	v
type	lib/Cake/Model/Datasource/Database/Postgres.php	/^				$type = $c->type;$/;"	v
Sqlite	lib/Cake/Model/Datasource/Database/Sqlite.php	/^class Sqlite extends DboSource {$/;"	c
_baseConfig	lib/Cake/Model/Datasource/Database/Sqlite.php	/^	protected $_baseConfig = array($/;"	v
_connection	lib/Cake/Model/Datasource/Database/Sqlite.php	/^			$this->_connection = new PDO('sqlite:' . $config['database'], null, null, $flags);$/;"	v
_dropTable	lib/Cake/Model/Datasource/Database/Sqlite.php	/^	protected function _dropTable($table) {$/;"	f
buildColumn	lib/Cake/Model/Datasource/Database/Sqlite.php	/^	public function buildColumn($column) {$/;"	f
buildIndex	lib/Cake/Model/Datasource/Database/Sqlite.php	/^	public function buildIndex($indexes, $table = null) {$/;"	f
cache	lib/Cake/Model/Datasource/Database/Sqlite.php	/^		$cache = parent::describe($table);$/;"	v
cache	lib/Cake/Model/Datasource/Database/Sqlite.php	/^		$cache = parent::listSources();$/;"	v
col	lib/Cake/Model/Datasource/Database/Sqlite.php	/^						$col = array();$/;"	v
col	lib/Cake/Model/Datasource/Database/Sqlite.php	/^			$col = $real['name'];$/;"	v
col	lib/Cake/Model/Datasource/Database/Sqlite.php	/^		$col = strtolower(str_replace(')', '', $real));$/;"	v
column	lib/Cake/Model/Datasource/Database/Sqlite.php	/^			$column = (array)$column;$/;"	v
column	lib/Cake/Model/Datasource/Database/Sqlite.php	/^	public function column($real) {$/;"	f
columnName	lib/Cake/Model/Datasource/Database/Sqlite.php	/^				$columnName = str_ireplace('DISTINCT', '', $columnName);$/;"	v
columnName	lib/Cake/Model/Datasource/Database/Sqlite.php	/^				$columnName = trim($matches[1], '"');$/;"	v
columnName	lib/Cake/Model/Datasource/Database/Sqlite.php	/^				$columnName = trim(str_replace('"', '', $selects[$j]));$/;"	v
columns	lib/Cake/Model/Datasource/Database/Sqlite.php	/^					$columns = "\\t" . implode(",\\n\\t", array_filter($columns));$/;"	v
columns	lib/Cake/Model/Datasource/Database/Sqlite.php	/^	public $columns = array($/;"	v
config	lib/Cake/Model/Datasource/Database/Sqlite.php	/^		$config = $this->config;$/;"	v
connect	lib/Cake/Model/Datasource/Database/Sqlite.php	/^	public function connect() {$/;"	f
connected	lib/Cake/Model/Datasource/Database/Sqlite.php	/^			$this->connected = true;$/;"	v
dbname	lib/Cake/Model/Datasource/Database/Sqlite.php	/^		$dbname = $this->name($dbname);$/;"	v
default	lib/Cake/Model/Datasource/Database/Sqlite.php	/^			$default = ($column['dflt_value'] === 'NULL') ? null : trim($column['dflt_value'], "'");$/;"	v
describe	lib/Cake/Model/Datasource/Database/Sqlite.php	/^	public function describe($model) {$/;"	f
description	lib/Cake/Model/Datasource/Database/Sqlite.php	/^	public $description = "SQLite DBO Driver";$/;"	v
enabled	lib/Cake/Model/Datasource/Database/Sqlite.php	/^	public function enabled() {$/;"	f
endQuote	lib/Cake/Model/Datasource/Database/Sqlite.php	/^	public $endQuote = '"';$/;"	v
fetchResult	lib/Cake/Model/Datasource/Database/Sqlite.php	/^	public function fetchResult() {$/;"	f
field	lib/Cake/Model/Datasource/Database/Sqlite.php	/^					$field = str_replace($model->alias . '.', "", $field);$/;"	v
fieldParameters	lib/Cake/Model/Datasource/Database/Sqlite.php	/^	public $fieldParameters = array($/;"	v
fields	lib/Cake/Model/Datasource/Database/Sqlite.php	/^		$fields = array();$/;"	v
flags	lib/Cake/Model/Datasource/Database/Sqlite.php	/^		$flags = $config['flags'] + array($/;"	v
getEncoding	lib/Cake/Model/Datasource/Database/Sqlite.php	/^	public function getEncoding() {$/;"	f
getSchemaName	lib/Cake/Model/Datasource/Database/Sqlite.php	/^	public function getSchemaName() {$/;"	f
hasResult	lib/Cake/Model/Datasource/Database/Sqlite.php	/^	public function hasResult() {$/;"	f
index	lib/Cake/Model/Datasource/Database/Sqlite.php	/^		$index = 0;$/;"	v
index	lib/Cake/Model/Datasource/Database/Sqlite.php	/^		$index = array();$/;"	v
index	lib/Cake/Model/Datasource/Database/Sqlite.php	/^	public function index($model) {$/;"	f
indexes	lib/Cake/Model/Datasource/Database/Sqlite.php	/^					$indexes = "\\t" . implode("\\n\\t", array_filter($indexes));$/;"	v
indexes	lib/Cake/Model/Datasource/Database/Sqlite.php	/^			$indexes = $this->query('PRAGMA index_list(' . $table . ')');$/;"	v
indexname	lib/Cake/Model/Datasource/Database/Sqlite.php	/^			$indexname = $this->name($t . '_' . $name);$/;"	v
isPrimary	lib/Cake/Model/Datasource/Database/Sqlite.php	/^		$isPrimary = (isset($column['key']) && $column['key'] === 'primary');$/;"	v
j	lib/Cake/Model/Datasource/Database/Sqlite.php	/^		$j = 0;$/;"	v
join	lib/Cake/Model/Datasource/Database/Sqlite.php	/^		$join = array();$/;"	v
key	lib/Cake/Model/Datasource/Database/Sqlite.php	/^				$key = array_pop($info);$/;"	v
keyInfo	lib/Cake/Model/Datasource/Database/Sqlite.php	/^				$keyInfo = $this->query('PRAGMA index_info("' . $key['name'] . '")');$/;"	v
last	lib/Cake/Model/Datasource/Database/Sqlite.php	/^			$last = strripos($querystring, 'FROM');$/;"	v
limit	lib/Cake/Model/Datasource/Database/Sqlite.php	/^	public function limit($limit, $offset = null) {$/;"	f
listSources	lib/Cake/Model/Datasource/Database/Sqlite.php	/^	public function listSources($data = null) {$/;"	f
map	lib/Cake/Model/Datasource/Database/Sqlite.php	/^		$this->map = array();$/;"	v
metaData	lib/Cake/Model/Datasource/Database/Sqlite.php	/^				$metaData = (array)$results->getColumnMeta($j);$/;"	v
metaType	lib/Cake/Model/Datasource/Database/Sqlite.php	/^					$metaType = trim($metaData['sqlite:decl_type']);$/;"	v
metaType	lib/Cake/Model/Datasource/Database/Sqlite.php	/^			$metaType = false;$/;"	v
name	lib/Cake/Model/Datasource/Database/Sqlite.php	/^		$name = $type = null;$/;"	v
nestedTransactionSupported	lib/Cake/Model/Datasource/Database/Sqlite.php	/^	public function nestedTransactionSupported() {$/;"	f
numFields	lib/Cake/Model/Datasource/Database/Sqlite.php	/^		$numFields = $results->columnCount();$/;"	v
out	lib/Cake/Model/Datasource/Database/Sqlite.php	/^			$out = 'CREATE ';$/;"	v
out	lib/Cake/Model/Datasource/Database/Sqlite.php	/^		$out = parent::buildColumn($column);$/;"	v
parts	lib/Cake/Model/Datasource/Database/Sqlite.php	/^				$parts = explode('.', $columnName);$/;"	v
querystring	lib/Cake/Model/Datasource/Database/Sqlite.php	/^		$querystring = $results->queryString;$/;"	v
renderStatement	lib/Cake/Model/Datasource/Database/Sqlite.php	/^	public function renderStatement($type, $data) {$/;"	f
replacement	lib/Cake/Model/Datasource/Database/Sqlite.php	/^				$replacement = 'NOT NULL ' . $replacement;$/;"	v
replacement	lib/Cake/Model/Datasource/Database/Sqlite.php	/^			$replacement = 'PRIMARY KEY';$/;"	v
result	lib/Cake/Model/Datasource/Database/Sqlite.php	/^		$result = $this->_execute($/;"	v
result	lib/Cake/Model/Datasource/Database/Sqlite.php	/^		$result = $this->fetchAll("SELECT name FROM sqlite_master WHERE type='table' ORDER BY name;", false);$/;"	v
resultRow	lib/Cake/Model/Datasource/Database/Sqlite.php	/^			$resultRow = array();$/;"	v
resultSet	lib/Cake/Model/Datasource/Database/Sqlite.php	/^	public function resultSet($results) {$/;"	f
results	lib/Cake/Model/Datasource/Database/Sqlite.php	/^		$this->results = $results;$/;"	v
rt	lib/Cake/Model/Datasource/Database/Sqlite.php	/^			$rt = sprintf(' LIMIT %u', $limit);$/;"	v
selectpart	lib/Cake/Model/Datasource/Database/Sqlite.php	/^				$selectpart = substr($querystring, 7, $last - 8);$/;"	v
selects	lib/Cake/Model/Datasource/Database/Sqlite.php	/^				$selects = String::tokenize($selectpart, ',', '(', ')');$/;"	v
selects	lib/Cake/Model/Datasource/Database/Sqlite.php	/^			$selects = array('cid', 'name', 'type', 'notnull', 'dflt_value', 'pk');$/;"	v
selects	lib/Cake/Model/Datasource/Database/Sqlite.php	/^			$selects = array('seq', 'name', 'unique');$/;"	v
selects	lib/Cake/Model/Datasource/Database/Sqlite.php	/^			$selects = array('seqno', 'cid', 'name');$/;"	v
setEncoding	lib/Cake/Model/Datasource/Database/Sqlite.php	/^	public function setEncoding($enc) {$/;"	f
standard	lib/Cake/Model/Datasource/Database/Sqlite.php	/^		$standard = array($/;"	v
startQuote	lib/Cake/Model/Datasource/Database/Sqlite.php	/^	public $startQuote = '"';$/;"	v
t	lib/Cake/Model/Datasource/Database/Sqlite.php	/^			$t = trim($table, '"');$/;"	v
table	lib/Cake/Model/Datasource/Database/Sqlite.php	/^			$table = $this->name($table);$/;"	v
table	lib/Cake/Model/Datasource/Database/Sqlite.php	/^		$table = $this->fullTableName($model, false, false);$/;"	v
table	lib/Cake/Model/Datasource/Database/Sqlite.php	/^		$table = str_replace('"', '', $table);$/;"	v
tables	lib/Cake/Model/Datasource/Database/Sqlite.php	/^		$tables = array();$/;"	v
truncate	lib/Cake/Model/Datasource/Database/Sqlite.php	/^	public function truncate($table) {$/;"	f
update	lib/Cake/Model/Datasource/Database/Sqlite.php	/^	public function update(Model $model, $fields = array(), $values = null, $conditions = null) {$/;"	f
AssociatedModel	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^							$AssociatedModel = $model->{$build[0]};$/;"	v
AssociatedModel	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^							$AssociatedModel = $model;$/;"	v
Sqlserver	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^class Sqlserver extends DboSource {$/;"	c
_baseConfig	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^	protected $_baseConfig = array($/;"	v
_connection	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^			$this->_connection = new PDO($/;"	v
_dropTable	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^	protected function _dropTable($table) {$/;"	f
_execute	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^	protected function _execute($sql, $params = array(), $prepareOptions = array()) {$/;"	f
_fieldMappings	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$this->_fieldMappings = array();$/;"	v
_fieldMappings	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^	protected $_fieldMappings = array();$/;"	v
_fields	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^						$_fields = $this->fields($AssociatedModel, $AssociatedModel->alias, array_keys($AssociatedModel->schema()));$/;"	v
_getPrimaryKey	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^	protected function _getPrimaryKey($model) {$/;"	f
_lastAffected	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^			$this->_lastAffected = $this->_connection->exec($sql);$/;"	v
_lastAffected	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$this->_lastAffected = false;$/;"	v
_lastAffected	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^	protected $_lastAffected = false;$/;"	v
_results	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^				$this->_results = null;$/;"	v
affected	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$affected = parent::lastAffected();$/;"	v
alias	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^						$alias = $build[0] . '__' . $build[1];$/;"	v
alias	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^			$alias = $model->alias;$/;"	v
build	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^							$build = explode('.', $fields[$i]);$/;"	v
build	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^						$build = explode('.', $fields[$i]);$/;"	v
buildColumn	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^	public function buildColumn($column) {$/;"	f
buildIndex	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^	public function buildIndex($indexes, $table = null) {$/;"	f
cache	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$cache = parent::describe($fulltable);$/;"	v
cache	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$cache = parent::listSources();$/;"	v
col	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^			$col = $real->Type;$/;"	v
col	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$col = $real;$/;"	v
cols	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$cols = $this->_execute($/;"	v
column	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^			$column = $results->getColumnMeta($index);$/;"	v
column	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^			$column = $this->introspectType($data);$/;"	v
column	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^	public function column($real) {$/;"	f
columns	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^	public $columns = array($/;"	v
config	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$config = $this->config;$/;"	v
connect	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^	public function connect() {$/;"	f
connected	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^			$this->connected = true;$/;"	v
connected	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$this->connected = false;$/;"	v
count	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$count = count($fields);$/;"	v
create	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^	public function create(Model $model, $fields = null, $values = null) {$/;"	f
describe	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^	public function describe($model) {$/;"	f
description	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^	public $description = "SQL Server DBO Driver";$/;"	v
enabled	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^	public function enabled() {$/;"	f
endQuote	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^	public $endQuote = "]";$/;"	v
error	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^				$error = $this->_connection->errorInfo();$/;"	v
error	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^				$this->error = $error[2];$/;"	v
fetchResult	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^	public function fetchResult() {$/;"	f
field	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^			$field = $column->Field;$/;"	v
fieldAlias	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^						$fieldAlias = $this->name($alias . '__' . $fields[$i]);$/;"	v
fieldAlias	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^						$fieldAlias = $this->name($alias);$/;"	v
fieldName	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^						$fieldName = "CONVERT(VARCHAR(20), {$fieldName}, 20)";$/;"	v
fieldName	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^						$fieldName = $this->name($alias . '.' . $fields[$i]);$/;"	v
fieldName	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^						$fieldName = $this->name($name);$/;"	v
fields	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^					$fields = substr($fields, 9);$/;"	v
fields	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^				$fields = trim($fields);$/;"	v
fields	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^			$fields = array_combine($fields, $values);$/;"	v
fields	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$fields = array();$/;"	v
fields	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$fields = parent::fields($model, $alias, $fields, false);$/;"	v
fields	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^	public function fields(Model $model, $alias = null, $fields = array(), $quote = true) {$/;"	f
flags	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$flags = $config['flags'] + array($/;"	v
fulltable	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$fulltable = $this->fullTableName($model, false, true);$/;"	v
getSchemaName	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^	public function getSchemaName() {$/;"	f
hasPrimaryKey	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$hasPrimaryKey = $primaryKey && ($/;"	v
index	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$index = 0;$/;"	v
insertMulti	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^	public function insertMulti($table, $fields, $values) {$/;"	f
join	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$join = array();$/;"	v
lastAffected	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^	public function lastAffected($source = null) {$/;"	f
length	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^	public function length($length) {$/;"	f
limit	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^					$limit = 'DISTINCT ' . trim($limit);$/;"	v
limit	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^					$limit = 'TOP ' . intval($limitOffset[2]);$/;"	v
limit	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^			$limit = $real->Length;$/;"	v
limit	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$limit = null;$/;"	v
limit	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^	public function limit($limit, $offset = null) {$/;"	f
listSources	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^	public function listSources($data = null) {$/;"	f
map	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^					$map = array(0, $name);$/;"	v
map	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^					$map = array(0, $this->_fieldMappings[$name]);$/;"	v
map	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^					$map = explode('.', $this->_fieldMappings[$name]);$/;"	v
map	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^				$map = array(0, $name);$/;"	v
map	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$this->map = array();$/;"	v
name	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^						$name = $build[0] . '.' . $build[1];$/;"	v
name	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^			$name = $column['name'];$/;"	v
numFields	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$numFields = $results->columnCount();$/;"	v
offset	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^					$offset = intval($limitOffset[2] * $page);$/;"	v
order	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^					$order = 'ORDER BY (SELECT NULL)';$/;"	v
out	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^				$out = "ALTER TABLE {$table} ADD CONSTRAINT {$name} UNIQUE";$/;"	v
page	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^					$page = intval($limitOffset[1] \/ $limitOffset[2]);$/;"	v
prepend	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^					$prepend = 'DISTINCT ';$/;"	v
prepend	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^				$prepend = '';$/;"	v
primaryKey	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$primaryKey = $this->_getPrimaryKey($model);$/;"	v
primaryKey	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$primaryKey = $this->_getPrimaryKey($table);$/;"	v
read	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^	public function read(Model $model, $queryData = array(), $recursive = null) {$/;"	f
renderStatement	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^	public function renderStatement($type, $data) {$/;"	f
result	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^						$result = array_merge($result, $_fields);$/;"	v
result	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^				$result = str_replace('DEFAULT NULL', "DEFAULT ''", $result);$/;"	v
result	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^				$result = str_replace('DEFAULT NULL', 'NULL', $result);$/;"	v
result	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^			$result = array();$/;"	v
result	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^			$result = str_replace("DEFAULT N'", "DEFAULT '", $result);$/;"	v
result	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$result = $this->_execute("SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES");$/;"	v
result	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$result = parent::buildColumn($column);$/;"	v
result	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$result = parent::create($model, array_keys($fields), array_values($fields));$/;"	v
result	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$result = preg_replace('\/(bigint|int|integer)\\([0-9]+\\)\/i', '$1', $result);$/;"	v
result	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$result = preg_replace('\/(bit)\\([0-9]+\\)\/i', '$1', $result);$/;"	v
resultRow	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^			$resultRow = array();$/;"	v
resultSet	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^	public function resultSet($results) {$/;"	f
results	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$results = parent::read($model, $queryData, $recursive);$/;"	v
rowCounter	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^					$rowCounter = self::ROW_COUNTER;$/;"	v
rt	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^				$rt = ' TOP';$/;"	v
rt	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^				$rt = sprintf(' OFFSET %u ROWS FETCH FIRST %u ROWS ONLY', $offset, $limit);$/;"	v
rt	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^			$rt = '';$/;"	v
schema	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$schema = $this->describe($model);$/;"	v
schema	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$schema = is_object($model) ? $model->schemaName : false;$/;"	v
sql	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^					$sql = "SELECT {$limit} * FROM ($/;"	v
sql	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$sql = trim($sql);$/;"	v
startQuote	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^	public $startQuote = "[";$/;"	v
table	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$table = $this->fullTableName($model, false, false);$/;"	v
tables	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^		$tables = array();$/;"	v
update	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^	public function update(Model $model, $fields = array(), $values = null, $conditions = null) {$/;"	f
value	lib/Cake/Model/Datasource/Database/Sqlserver.php	/^	public function value($data, $column = null) {$/;"	f
DboSource	lib/Cake/Model/Datasource/DboSource.php	/^class DboSource extends DataSource {$/;"	c
DeepModel	lib/Cake/Model/Datasource/DboSource.php	/^							$DeepModel = $LinkModel->{$assoc1};$/;"	v
DeepModel	lib/Cake/Model/Datasource/DboSource.php	/^						$DeepModel = $LinkModel->{$assoc1};$/;"	v
LinkModel	lib/Cake/Model/Datasource/DboSource.php	/^					$LinkModel = $Model->{$assoc};$/;"	v
LinkModel	lib/Cake/Model/Datasource/DboSource.php	/^				$LinkModel = $Model->{$assoc};$/;"	v
LinkModel	lib/Cake/Model/Datasource/DboSource.php	/^			$LinkModel = $Model->{$assoc};$/;"	v
LinkedModel	lib/Cake/Model/Datasource/DboSource.php	/^			$LinkedModel = $Model->{$className};$/;"	v
Model	lib/Cake/Model/Datasource/DboSource.php	/^				$Model = ClassRegistry::getObject($alias);$/;"	v
View	lib/Cake/Model/Datasource/DboSource.php	/^			$View = new View($controller, false);$/;"	v
__construct	lib/Cake/Model/Datasource/DboSource.php	/^	public function __construct($config = null, $autoConnect = true) {$/;"	f
__destruct	lib/Cake/Model/Datasource/DboSource.php	/^	public function __destruct() {$/;"	f
_beginNested	lib/Cake/Model/Datasource/DboSource.php	/^	protected function _beginNested() {$/;"	f
_buildFieldParameters	lib/Cake/Model/Datasource/DboSource.php	/^	protected function _buildFieldParameters($columnString, $columnData, $position) {$/;"	f
_commitNested	lib/Cake/Model/Datasource/DboSource.php	/^	protected function _commitNested() {$/;"	f
_connection	lib/Cake/Model/Datasource/DboSource.php	/^	protected $_connection = null;$/;"	v
_constructVirtualFields	lib/Cake/Model/Datasource/DboSource.php	/^	protected function _constructVirtualFields(Model $Model, $alias, $fields) {$/;"	f
_dropTable	lib/Cake/Model/Datasource/DboSource.php	/^	protected function _dropTable($table) {$/;"	f
_execute	lib/Cake/Model/Datasource/DboSource.php	/^	protected function _execute($sql, $params = array(), $prepareOptions = array()) {$/;"	f
_fetchHasAndBelongsToMany	lib/Cake/Model/Datasource/DboSource.php	/^	protected function _fetchHasAndBelongsToMany(Model $Model, $query, $ids, $association) {$/;"	f
_fetchHasMany	lib/Cake/Model/Datasource/DboSource.php	/^	protected function _fetchHasMany(Model $Model, $query, $ids) {$/;"	f
_filterResults	lib/Cake/Model/Datasource/DboSource.php	/^	protected function _filterResults(&$resultSet, Model $Model, $filtered = array()) {$/;"	f
_getJoins	lib/Cake/Model/Datasource/DboSource.php	/^	protected function _getJoins(Model $Model) {$/;"	f
_matchRecords	lib/Cake/Model/Datasource/DboSource.php	/^	protected function _matchRecords(Model $Model, $conditions = null) {$/;"	f
_mergeAssociation	lib/Cake/Model/Datasource/DboSource.php	/^	protected function _mergeAssociation(&$data, &$merge, $association, $type, $selfJoin = false) {$/;"	f
_mergeConditions	lib/Cake/Model/Datasource/DboSource.php	/^	protected function _mergeConditions($query, $assoc) {$/;"	f
_mergeHasMany	lib/Cake/Model/Datasource/DboSource.php	/^	protected function _mergeHasMany(&$resultSet, $assocResultSet, $association, Model $Model) {$/;"	f
_methodCacheChange	lib/Cake/Model/Datasource/DboSource.php	/^		$this->_methodCacheChange = true;$/;"	v
_methodCacheChange	lib/Cake/Model/Datasource/DboSource.php	/^	protected $_methodCacheChange = false;$/;"	v
_parseKey	lib/Cake/Model/Datasource/DboSource.php	/^	protected function _parseKey($key, $value, Model $Model = null) {$/;"	f
_prepareUpdateFields	lib/Cake/Model/Datasource/DboSource.php	/^	protected function _prepareUpdateFields(Model $Model, $fields, $quoteValues = true, $alias = false) {$/;"	f
_queriesCnt	lib/Cake/Model/Datasource/DboSource.php	/^	protected $_queriesCnt = 0;$/;"	v
_queriesLog	lib/Cake/Model/Datasource/DboSource.php	/^			$this->_queriesLog = array();$/;"	v
_queriesLog	lib/Cake/Model/Datasource/DboSource.php	/^	protected $_queriesLog = array();$/;"	v
_queriesLogMax	lib/Cake/Model/Datasource/DboSource.php	/^	protected $_queriesLogMax = 200;$/;"	v
_queriesTime	lib/Cake/Model/Datasource/DboSource.php	/^	protected $_queriesTime = null;$/;"	v
_queryCache	lib/Cake/Model/Datasource/DboSource.php	/^	protected $_queryCache = array();$/;"	v
_queryDefaults	lib/Cake/Model/Datasource/DboSource.php	/^	protected $_queryDefaults = array($/;"	v
_quoteFields	lib/Cake/Model/Datasource/DboSource.php	/^	protected function _quoteFields($conditions) {$/;"	f
_quoteMatchedField	lib/Cake/Model/Datasource/DboSource.php	/^	protected function _quoteMatchedField($match) {$/;"	f
_result	lib/Cake/Model/Datasource/DboSource.php	/^		$this->_result = $this->_execute($sql, $params);$/;"	v
_result	lib/Cake/Model/Datasource/DboSource.php	/^	protected $_result = null;$/;"	v
_results	lib/Cake/Model/Datasource/DboSource.php	/^				$this->_results = $query;$/;"	v
_rollbackNested	lib/Cake/Model/Datasource/DboSource.php	/^	protected function _rollbackNested() {$/;"	f
_scrubQueryData	lib/Cake/Model/Datasource/DboSource.php	/^	protected function _scrubQueryData($data) {$/;"	f
_sources	lib/Cake/Model/Datasource/DboSource.php	/^		$this->_sources = null;$/;"	v
_sqlOps	lib/Cake/Model/Datasource/DboSource.php	/^	protected $_sqlOps = array('like', 'ilike', 'or', 'not', 'in', 'between', 'regexp', 'similar to');$/;"	v
_transactionNesting	lib/Cake/Model/Datasource/DboSource.php	/^		$this->_transactionNesting = 0;$/;"	v
_transactionNesting	lib/Cake/Model/Datasource/DboSource.php	/^	protected $_transactionNesting = 0;$/;"	v
_transactionStarted	lib/Cake/Model/Datasource/DboSource.php	/^			$this->_transactionStarted = false;$/;"	v
_writeQueryCache	lib/Cake/Model/Datasource/DboSource.php	/^	protected function _writeQueryCache($sql, $data, $params = array()) {$/;"	f
affected	lib/Cake/Model/Datasource/DboSource.php	/^	public $affected = null;$/;"	v
alias	lib/Cake/Model/Datasource/DboSource.php	/^			$alias = $Model->alias;$/;"	v
alias	lib/Cake/Model/Datasource/DboSource.php	/^			$alias = $this->fullTableName($Model, false);$/;"	v
alias	lib/Cake/Model/Datasource/DboSource.php	/^		$alias = $Model->alias;$/;"	v
alias	lib/Cake/Model/Datasource/DboSource.php	/^		$alias = $joins = null;$/;"	v
alias	lib/Cake/Model/Datasource/DboSource.php	/^		$alias = $this->alias . $this->name($Model->alias);$/;"	v
alias	lib/Cake/Model/Datasource/DboSource.php	/^	public $alias = 'AS ';$/;"	v
aliases	lib/Cake/Model/Datasource/DboSource.php	/^					$aliases = "{$this->alias}{$alias} {$joins} ";$/;"	v
aliases	lib/Cake/Model/Datasource/DboSource.php	/^		$aliases = null;$/;"	v
all	lib/Cake/Model/Datasource/DboSource.php	/^				$all = false;$/;"	v
all	lib/Cake/Model/Datasource/DboSource.php	/^				$all = true;$/;"	v
allFields	lib/Cake/Model/Datasource/DboSource.php	/^		$allFields = $allFields || in_array('*', $fields) || in_array($Model->alias . '.*', $fields);$/;"	v
allFields	lib/Cake/Model/Datasource/DboSource.php	/^		$allFields = empty($fields);$/;"	v
alterSchema	lib/Cake/Model/Datasource/DboSource.php	/^	public function alterSchema($compare, $table = null) {$/;"	f
arg	lib/Cake/Model/Datasource/DboSource.php	/^					$arg = $this->_quoteFields($Model->getVirtualField($params[0]));$/;"	v
arg	lib/Cake/Model/Datasource/DboSource.php	/^					$arg = $this->name($params[0]);$/;"	v
args	lib/Cake/Model/Datasource/DboSource.php	/^		$args = func_get_args();$/;"	v
array	lib/Cake/Model/Datasource/DboSource.php	/^		$array = array('callbacks' => $queryData['callbacks']);$/;"	v
assocData	lib/Cake/Model/Datasource/DboSource.php	/^			$assocData = $Model->getAssociated($assoc);$/;"	v
assocData	lib/Cake/Model/Datasource/DboSource.php	/^		$assocData = $this->_scrubQueryData($assocData);$/;"	v
assocFields	lib/Cake/Model/Datasource/DboSource.php	/^			$assocFields = $this->fields($Model, null, "{$Model->alias}.{$Model->primaryKey}");$/;"	v
assocIds	lib/Cake/Model/Datasource/DboSource.php	/^			$assocIds = array();$/;"	v
assocIds	lib/Cake/Model/Datasource/DboSource.php	/^			$assocIds = array_filter($assocIds);$/;"	v
assocResultSet	lib/Cake/Model/Datasource/DboSource.php	/^						$assocResultSet = $this->fetchAll($query, $Model->cacheQueries);$/;"	v
assocResultSet	lib/Cake/Model/Datasource/DboSource.php	/^				$assocResultSet = $this->_fetchHasAndBelongsToMany($Model, $queryTemplate, $assocIds, $association);$/;"	v
assocResultSet	lib/Cake/Model/Datasource/DboSource.php	/^				$assocResultSet = $this->_fetchHasMany($Model, $queryTemplate, $assocIds);$/;"	v
assocResultSet	lib/Cake/Model/Datasource/DboSource.php	/^				$assocResultSet = array();$/;"	v
assocResultSet	lib/Cake/Model/Datasource/DboSource.php	/^			$assocResultSet = array();$/;"	v
association	lib/Cake/Model/Datasource/DboSource.php	/^			$association = Inflector::pluralize($association);$/;"	v
associations	lib/Cake/Model/Datasource/DboSource.php	/^			$associations = $Model->associations();$/;"	v
associations	lib/Cake/Model/Datasource/DboSource.php	/^			$associations = array();$/;"	v
base	lib/Cake/Model/Datasource/DboSource.php	/^			$base = array_fill_keys(array('conditions', 'fields', 'joins', 'order', 'limit', 'offset', 'group'), array());$/;"	v
base	lib/Cake/Model/Datasource/DboSource.php	/^		static $base = null;$/;"	v
begin	lib/Cake/Model/Datasource/DboSource.php	/^	public function begin() {$/;"	f
bool	lib/Cake/Model/Datasource/DboSource.php	/^		$bool = array('and', 'or', 'not', 'and not', 'or not', 'xor', '||', '&&');$/;"	v
boolean	lib/Cake/Model/Datasource/DboSource.php	/^	public function boolean($data, $quote = false) {$/;"	f
bound	lib/Cake/Model/Datasource/DboSource.php	/^		$bound = (strpos($key, '?') !== false || (is_array($value) && strpos($key, ':') !== false));$/;"	v
build	lib/Cake/Model/Datasource/DboSource.php	/^							$build = explode('.', $fields[$i]);$/;"	v
buildAssociationQuery	lib/Cake/Model/Datasource/DboSource.php	/^	public function buildAssociationQuery(Model $Model, $queryData) {$/;"	f
buildColumn	lib/Cake/Model/Datasource/DboSource.php	/^	public function buildColumn($column) {$/;"	f
buildIndex	lib/Cake/Model/Datasource/DboSource.php	/^	public function buildIndex($indexes, $table = null) {$/;"	f
buildJoinStatement	lib/Cake/Model/Datasource/DboSource.php	/^	public function buildJoinStatement($join) {$/;"	f
buildStatement	lib/Cake/Model/Datasource/DboSource.php	/^	public function buildStatement($query, Model $Model) {$/;"	f
buildTableParameters	lib/Cake/Model/Datasource/DboSource.php	/^	public function buildTableParameters($parameters, $table = null) {$/;"	f
c	lib/Cake/Model/Datasource/DboSource.php	/^			$c = 0;$/;"	v
cache	lib/Cake/Model/Datasource/DboSource.php	/^				$cache = $args[2];$/;"	v
cache	lib/Cake/Model/Datasource/DboSource.php	/^				$cache = true;$/;"	v
cache	lib/Cake/Model/Datasource/DboSource.php	/^		$cache = $options['cache'];$/;"	v
cacheKey	lib/Cake/Model/Datasource/DboSource.php	/^		$cacheKey = array($/;"	v
cacheKey	lib/Cake/Model/Datasource/DboSource.php	/^		$cacheKey = md5($this->startQuote . $data . $this->endQuote);$/;"	v
cacheKey	lib/Cake/Model/Datasource/DboSource.php	/^		$cacheKey = md5(serialize($cacheKey));$/;"	v
cacheMethod	lib/Cake/Model/Datasource/DboSource.php	/^	public function cacheMethod($method, $key, $value = null) {$/;"	f
cacheMethods	lib/Cake/Model/Datasource/DboSource.php	/^	public $cacheMethods = true;$/;"	v
calculate	lib/Cake/Model/Datasource/DboSource.php	/^	public function calculate(Model $Model, $func, $params = array()) {$/;"	f
clause	lib/Cake/Model/Datasource/DboSource.php	/^			$clause = ' WHERE ';$/;"	v
clause	lib/Cake/Model/Datasource/DboSource.php	/^			$clause = '';$/;"	v
clause	lib/Cake/Model/Datasource/DboSource.php	/^		$clause = $out = '';$/;"	v
clauses	lib/Cake/Model/Datasource/DboSource.php	/^		$clauses = '\/^WHERE\\\\x20|^GROUP\\\\x20BY\\\\x20|^HAVING\\\\x20|^ORDER\\\\x20BY\\\\x20\/i';$/;"	v
close	lib/Cake/Model/Datasource/DboSource.php	/^	public function close() {$/;"	f
col	lib/Cake/Model/Datasource/DboSource.php	/^						$col = array('type' => $col);$/;"	v
col	lib/Cake/Model/Datasource/DboSource.php	/^					$col = array('PRIMARY' => array('column' => $primary, 'unique' => 1));$/;"	v
col	lib/Cake/Model/Datasource/DboSource.php	/^			$col = str_replace(array(')', 'unsigned'), '', $real);$/;"	v
cols	lib/Cake/Model/Datasource/DboSource.php	/^				$cols = $indexes = $tableParameters = array();$/;"	v
column	lib/Cake/Model/Datasource/DboSource.php	/^			$column = $this->introspectType($data);$/;"	v
columnMap	lib/Cake/Model/Datasource/DboSource.php	/^		$columnMap = array();$/;"	v
columnType	lib/Cake/Model/Datasource/DboSource.php	/^									$columnType = $Model->getColumnType($key);$/;"	v
columns	lib/Cake/Model/Datasource/DboSource.php	/^				$columns = $cols;$/;"	v
combined	lib/Cake/Model/Datasource/DboSource.php	/^			$combined = $fields;$/;"	v
combined	lib/Cake/Model/Datasource/DboSource.php	/^			$combined = array_combine($fields, $values);$/;"	v
commit	lib/Cake/Model/Datasource/DboSource.php	/^	public function commit() {$/;"	f
conditionKeysToString	lib/Cake/Model/Datasource/DboSource.php	/^	public function conditionKeysToString($conditions, $quoteValues = true, Model $Model = null) {$/;"	f
conditions	lib/Cake/Model/Datasource/DboSource.php	/^				$conditions = $this->_mergeConditions($/;"	v
conditions	lib/Cake/Model/Datasource/DboSource.php	/^				$conditions = array('OR' => $conditions);$/;"	v
conditions	lib/Cake/Model/Datasource/DboSource.php	/^			$conditions = $this->conditions($this->defaultConditions($Model, $conditions, false), true, true, $Model);$/;"	v
conditions	lib/Cake/Model/Datasource/DboSource.php	/^			$conditions = $this->conditions(array($/;"	v
conditions	lib/Cake/Model/Datasource/DboSource.php	/^			$conditions = $this->conditions(true);$/;"	v
conditions	lib/Cake/Model/Datasource/DboSource.php	/^			$conditions = array();$/;"	v
conditions	lib/Cake/Model/Datasource/DboSource.php	/^		$conditions = $this->_matchRecords($Model, $conditions);$/;"	v
conditions	lib/Cake/Model/Datasource/DboSource.php	/^		$conditions = $this->_quoteFields($conditions);$/;"	v
conditions	lib/Cake/Model/Datasource/DboSource.php	/^		$conditions = preg_replace_callback($/;"	v
conditions	lib/Cake/Model/Datasource/DboSource.php	/^		$conditions = str_replace(array($start, $end), '', $conditions);$/;"	v
conditions	lib/Cake/Model/Datasource/DboSource.php	/^	public function conditions($conditions, $quoteValues = true, $where = true, Model $Model = null) {$/;"	f
configKeyName	lib/Cake/Model/Datasource/DboSource.php	/^	public $configKeyName = null;$/;"	v
connected	lib/Cake/Model/Datasource/DboSource.php	/^		$this->connected = false;$/;"	v
containsInt	lib/Cake/Model/Datasource/DboSource.php	/^				$containsInt = true;$/;"	v
containsInt	lib/Cake/Model/Datasource/DboSource.php	/^		$containsInt = $containsString = false;$/;"	v
containsString	lib/Cake/Model/Datasource/DboSource.php	/^			$containsString = true;$/;"	v
controller	lib/Cake/Model/Datasource/DboSource.php	/^			$controller = null;$/;"	v
count	lib/Cake/Model/Datasource/DboSource.php	/^						$count = count($value);$/;"	v
count	lib/Cake/Model/Datasource/DboSource.php	/^			$count = count($query['joins']);$/;"	v
count	lib/Cake/Model/Datasource/DboSource.php	/^		$count = count($fields);$/;"	v
create	lib/Cake/Model/Datasource/DboSource.php	/^	public function create(Model $Model, $fields = null, $values = null) {$/;"	f
createSchema	lib/Cake/Model/Datasource/DboSource.php	/^	public function createSchema($schema, $tableName = null) {$/;"	f
current	lib/Cake/Model/Datasource/DboSource.php	/^		$current = reset($resultSet);$/;"	v
currentTableDetails	lib/Cake/Model/Datasource/DboSource.php	/^			$currentTableDetails = $this->listDetailedSources($name);$/;"	v
data	lib/Cake/Model/Datasource/DboSource.php	/^							$data = $ret[0];$/;"	v
data	lib/Cake/Model/Datasource/DboSource.php	/^							$data = $this->_parseKey($key, $value, $Model);$/;"	v
data	lib/Cake/Model/Datasource/DboSource.php	/^							$data = $this->_quoteFields($key) . ' = (';$/;"	v
data	lib/Cake/Model/Datasource/DboSource.php	/^							$data = '(' . implode(') AND (', $ret) . ')';$/;"	v
data	lib/Cake/Model/Datasource/DboSource.php	/^					$data = $this->_parseKey(trim($key), $value, $Model);$/;"	v
data	lib/Cake/Model/Datasource/DboSource.php	/^					$data = $this->_quoteFields($value);$/;"	v
data	lib/Cake/Model/Datasource/DboSource.php	/^					$data = array_merge($data[$association], $data);$/;"	v
data	lib/Cake/Model/Datasource/DboSource.php	/^					$data = null;$/;"	v
data	lib/Cake/Model/Datasource/DboSource.php	/^				$data = $LinkedModel->afterFind(array(array($className => $result[$className])), false);$/;"	v
data	lib/Cake/Model/Datasource/DboSource.php	/^			$data = $this->conditionKeysToString($/;"	v
data	lib/Cake/Model/Datasource/DboSource.php	/^		$data = $columnType = null;$/;"	v
data	lib/Cake/Model/Datasource/DboSource.php	/^		$data = $this->fetchRow($sql);$/;"	v
data	lib/Cake/Model/Datasource/DboSource.php	/^		$data = array_merge(array($/;"	v
data	lib/Cake/Model/Datasource/DboSource.php	/^		$data = trim($data);$/;"	v
dataAssociation	lib/Cake/Model/Datasource/DboSource.php	/^							$dataAssociation = array_merge($merge[0][$association], $diff);$/;"	v
dataAssociation	lib/Cake/Model/Datasource/DboSource.php	/^						$dataAssociation = $merge[0][$association];$/;"	v
dataAssociation	lib/Cake/Model/Datasource/DboSource.php	/^						$dataAssociation = array_merge($dataAssociation, array($association => array()));$/;"	v
dataAssociation	lib/Cake/Model/Datasource/DboSource.php	/^					$dataAssociation = array();$/;"	v
dataAssociation	lib/Cake/Model/Datasource/DboSource.php	/^				$dataAssociation = $merge[$association][0];$/;"	v
dataAssociation	lib/Cake/Model/Datasource/DboSource.php	/^		$dataAssociation =& $data[$association];$/;"	v
dataKeys	lib/Cake/Model/Datasource/DboSource.php	/^						$dataKeys = array_keys($data);$/;"	v
db	lib/Cake/Model/Datasource/DboSource.php	/^								$db = $LinkModel->useDbConfig === $DeepModel->useDbConfig ? $this : $DeepModel->getDataSource();$/;"	v
db	lib/Cake/Model/Datasource/DboSource.php	/^						$db = $LinkModel->useDbConfig === $DeepModel->useDbConfig ? $this : $DeepModel->getDataSource();$/;"	v
db	lib/Cake/Model/Datasource/DboSource.php	/^						$db = $Model->useDbConfig === $LinkModel->useDbConfig ? $this : $LinkModel->getDataSource();$/;"	v
db	lib/Cake/Model/Datasource/DboSource.php	/^						$db = $this;$/;"	v
defaultConditions	lib/Cake/Model/Datasource/DboSource.php	/^	public function defaultConditions(Model $Model, $conditions, $useAlias = true) {$/;"	f
delete	lib/Cake/Model/Datasource/DboSource.php	/^	public function delete(Model $Model, $conditions = null) {$/;"	f
description	lib/Cake/Model/Datasource/DboSource.php	/^	public $description = "Database Data Source";$/;"	v
diff	lib/Cake/Model/Datasource/DboSource.php	/^							$diff = Hash::diff($dataAssocTmp, $mergeAssocTmp);$/;"	v
dir	lib/Cake/Model/Datasource/DboSource.php	/^				$dir = $_dir[0];$/;"	v
dir	lib/Cake/Model/Datasource/DboSource.php	/^				$dir = $direction;$/;"	v
disconnect	lib/Cake/Model/Datasource/DboSource.php	/^	public function disconnect() {$/;"	f
dot	lib/Cake/Model/Datasource/DboSource.php	/^					$dot = strpos($fields[$i], '.');$/;"	v
dropSchema	lib/Cake/Model/Datasource/DboSource.php	/^	public function dropSchema(CakeSchema $schema, $table = null) {$/;"	f
end	lib/Cake/Model/Datasource/DboSource.php	/^			$end = preg_quote($this->endQuote);$/;"	v
endQuote	lib/Cake/Model/Datasource/DboSource.php	/^	public $endQuote = null;$/;"	v
error	lib/Cake/Model/Datasource/DboSource.php	/^			$error = $query->errorInfo();$/;"	v
error	lib/Cake/Model/Datasource/DboSource.php	/^			$error = $this->_connection->errorInfo();$/;"	v
execute	lib/Cake/Model/Datasource/DboSource.php	/^	public function execute($sql, $options = array(), $params = array()) {$/;"	f
exists	lib/Cake/Model/Datasource/DboSource.php	/^		$exists = $Model->exists();$/;"	v
expression	lib/Cake/Model/Datasource/DboSource.php	/^			$expression = $this->_quoteFields($Model->getVirtualField($field));$/;"	v
expression	lib/Cake/Model/Datasource/DboSource.php	/^	public function expression($expression) {$/;"	f
external	lib/Cake/Model/Datasource/DboSource.php	/^				$external = isset($assocData['external']);$/;"	v
fetchAll	lib/Cake/Model/Datasource/DboSource.php	/^	public function fetchAll($sql, $params = array(), $options = array()) {$/;"	f
fetchAssociated	lib/Cake/Model/Datasource/DboSource.php	/^	public function fetchAssociated(Model $Model, $query, $ids) {$/;"	f
fetchResult	lib/Cake/Model/Datasource/DboSource.php	/^	public function fetchResult() {$/;"	f
fetchRow	lib/Cake/Model/Datasource/DboSource.php	/^	public function fetchRow($sql = null) {$/;"	f
fetchVirtualField	lib/Cake/Model/Datasource/DboSource.php	/^	public function fetchVirtualField(&$result) {$/;"	f
field	lib/Cake/Model/Datasource/DboSource.php	/^					$field = ltrim($field, $this->startQuote);$/;"	v
field	lib/Cake/Model/Datasource/DboSource.php	/^					$field = rtrim($field, $this->endQuote);$/;"	v
field	lib/Cake/Model/Datasource/DboSource.php	/^				$field = Inflector::underscore(substr($args[0], 6));$/;"	v
field	lib/Cake/Model/Datasource/DboSource.php	/^				$field = Inflector::underscore(substr($args[0], 9));$/;"	v
field	lib/Cake/Model/Datasource/DboSource.php	/^				$field = explode('_and_', $field);$/;"	v
field	lib/Cake/Model/Datasource/DboSource.php	/^				$field = explode('_or_', $field);$/;"	v
field	lib/Cake/Model/Datasource/DboSource.php	/^	public function field($name, $sql) {$/;"	f
fieldParameters	lib/Cake/Model/Datasource/DboSource.php	/^	public $fieldParameters = array();$/;"	v
fields	lib/Cake/Model/Datasource/DboSource.php	/^						$fields = $this->fields($LinkModel, $association, $assocData['fields']);$/;"	v
fields	lib/Cake/Model/Datasource/DboSource.php	/^					$fields = array();$/;"	v
fields	lib/Cake/Model/Datasource/DboSource.php	/^				$fields = $params[1 + $off];$/;"	v
fields	lib/Cake/Model/Datasource/DboSource.php	/^				$fields = array_diff($fields, array($field));$/;"	v
fields	lib/Cake/Model/Datasource/DboSource.php	/^				$fields = array_merge($fields, $this->_constructVirtualFields($Model, $alias, $virtual));$/;"	v
fields	lib/Cake/Model/Datasource/DboSource.php	/^			$fields = String::tokenize($fields);$/;"	v
fields	lib/Cake/Model/Datasource/DboSource.php	/^			$fields = array($fields);$/;"	v
fields	lib/Cake/Model/Datasource/DboSource.php	/^			$fields = array_keys($Model->data);$/;"	v
fields	lib/Cake/Model/Datasource/DboSource.php	/^			$fields = array_keys($Model->schema());$/;"	v
fields	lib/Cake/Model/Datasource/DboSource.php	/^			$fields = array_merge($fields, $this->_constructVirtualFields($Model, $alias, $virtual));$/;"	v
fields	lib/Cake/Model/Datasource/DboSource.php	/^			$fields = array_values($fields);$/;"	v
fields	lib/Cake/Model/Datasource/DboSource.php	/^		$fields = array_values(array_filter($fields));$/;"	v
fields	lib/Cake/Model/Datasource/DboSource.php	/^		$fields = implode(', ', $fields);$/;"	v
fields	lib/Cake/Model/Datasource/DboSource.php	/^		$fields = implode(', ', $this->_prepareUpdateFields($Model, $combined, empty($conditions)));$/;"	v
fields	lib/Cake/Model/Datasource/DboSource.php	/^		$fields = implode(', ', array_map(array(&$this, 'name'), $fields));$/;"	v
fields	lib/Cake/Model/Datasource/DboSource.php	/^		$fields = null;$/;"	v
fields	lib/Cake/Model/Datasource/DboSource.php	/^	public function fields(Model $Model, $alias = null, $fields = array(), $quote = true) {$/;"	f
filtered	lib/Cake/Model/Datasource/DboSource.php	/^			$filtered = $this->_filterResults($resultSet, $Model);$/;"	v
filtered	lib/Cake/Model/Datasource/DboSource.php	/^		$filtered = array();$/;"	v
filtering	lib/Cake/Model/Datasource/DboSource.php	/^		$filtering = array();$/;"	v
first	lib/Cake/Model/Datasource/DboSource.php	/^				$first = $this->fetchRow();$/;"	v
flushMethodCache	lib/Cake/Model/Datasource/DboSource.php	/^	public function flushMethodCache() {$/;"	f
foreignKey	lib/Cake/Model/Datasource/DboSource.php	/^			$foreignKey = $habtmAssocData['foreignKey'];$/;"	v
foreignKey	lib/Cake/Model/Datasource/DboSource.php	/^		$foreignKey = $Model->hasMany[$association]['foreignKey'];$/;"	v
fullDebug	lib/Cake/Model/Datasource/DboSource.php	/^		$this->fullDebug = Configure::read('debug') > 1;$/;"	v
fullDebug	lib/Cake/Model/Datasource/DboSource.php	/^	public $fullDebug = false;$/;"	v
fullTableName	lib/Cake/Model/Datasource/DboSource.php	/^	public function fullTableName($model, $quote = true, $schema = true) {$/;"	f
generateAssociationQuery	lib/Cake/Model/Datasource/DboSource.php	/^	public function generateAssociationQuery(Model $Model, $LinkModel, $type, $association, $assocData, &$queryData, $external) {$/;"	f
getConnection	lib/Cake/Model/Datasource/DboSource.php	/^	public function getConnection() {$/;"	f
getConstraint	lib/Cake/Model/Datasource/DboSource.php	/^	public function getConstraint($type, Model $Model, Model $LinkModel, $association, $assocData, $association2 = null) {$/;"	f
getLog	lib/Cake/Model/Datasource/DboSource.php	/^	public function getLog($sorted = false, $clear = true) {$/;"	f
getQueryCache	lib/Cake/Model/Datasource/DboSource.php	/^	public function getQueryCache($sql, $params = array()) {$/;"	f
getVersion	lib/Cake/Model/Datasource/DboSource.php	/^	public function getVersion() {$/;"	f
group	lib/Cake/Model/Datasource/DboSource.php	/^	public function group($fields, Model $Model = null) {$/;"	f
habtmAssocData	lib/Cake/Model/Datasource/DboSource.php	/^			$habtmAssocData = $Model->hasAndBelongsToMany[$association];$/;"	v
habtmFieldsCount	lib/Cake/Model/Datasource/DboSource.php	/^			$habtmFieldsCount = count($habtmFields);$/;"	v
hasAny	lib/Cake/Model/Datasource/DboSource.php	/^	public function hasAny(Model $Model, $sql) {$/;"	f
hasResult	lib/Cake/Model/Datasource/DboSource.php	/^	public function hasResult() {$/;"	f
holder	lib/Cake/Model/Datasource/DboSource.php	/^		$holder = implode(',', array_fill(0, count($fields), '?'));$/;"	v
i	lib/Cake/Model/Datasource/DboSource.php	/^			$i = 1;$/;"	v
id	lib/Cake/Model/Datasource/DboSource.php	/^				$id = $this->lastInsertId($this->fullTableName($Model, false, false), $Model->primaryKey);$/;"	v
id	lib/Cake/Model/Datasource/DboSource.php	/^				$id = $values[$i];$/;"	v
id	lib/Cake/Model/Datasource/DboSource.php	/^		$id = $Model->escapeField();$/;"	v
id	lib/Cake/Model/Datasource/DboSource.php	/^		$id = null;$/;"	v
idList	lib/Cake/Model/Datasource/DboSource.php	/^			$idList = $Model->find('all', array($/;"	v
identifier	lib/Cake/Model/Datasource/DboSource.php	/^	public function identifier($identifier) {$/;"	f
ids	lib/Cake/Model/Datasource/DboSource.php	/^		$ids = array_unique($ids);$/;"	v
index	lib/Cake/Model/Datasource/DboSource.php	/^	public $index = array('PRI' => 'primary', 'MUL' => 'index', 'UNI' => 'unique');$/;"	v
index	lib/Cake/Model/Datasource/DboSource.php	/^	public function index($model) {$/;"	f
indexes	lib/Cake/Model/Datasource/DboSource.php	/^						$indexes = array_merge($indexes, $this->buildIndex($col, $table));$/;"	v
indexes	lib/Cake/Model/Datasource/DboSource.php	/^					$indexes = array_merge($indexes, $this->buildIndex($col, $table));$/;"	v
insert	lib/Cake/Model/Datasource/DboSource.php	/^						$insert = $row[$association];$/;"	v
insert	lib/Cake/Model/Datasource/DboSource.php	/^						$insert = array_merge($row[$association], $row);$/;"	v
insert	lib/Cake/Model/Datasource/DboSource.php	/^					$insert = array();$/;"	v
insertMulti	lib/Cake/Model/Datasource/DboSource.php	/^	public function insertMulti($table, $fields, $values) {$/;"	f
introspectType	lib/Cake/Model/Datasource/DboSource.php	/^	public function introspectType($value) {$/;"	f
isAllFloat	lib/Cake/Model/Datasource/DboSource.php	/^				$isAllFloat = false;$/;"	v
isAllFloat	lib/Cake/Model/Datasource/DboSource.php	/^		$isAllFloat = $isAllInt = true;$/;"	v
isAllInt	lib/Cake/Model/Datasource/DboSource.php	/^				$isAllInt = false;$/;"	v
isConnected	lib/Cake/Model/Datasource/DboSource.php	/^	public function isConnected() {$/;"	f
isFloat	lib/Cake/Model/Datasource/DboSource.php	/^		$isFloat = in_array($type, array('dec', 'decimal', 'float', 'numeric', 'double'));$/;"	v
isKey	lib/Cake/Model/Datasource/DboSource.php	/^			$isKey = ($/;"	v
isPrimary	lib/Cake/Model/Datasource/DboSource.php	/^						$isPrimary = false;$/;"	v
isPrimary	lib/Cake/Model/Datasource/DboSource.php	/^					$isPrimary = isset($col['key']) && $col['key'] === 'primary';$/;"	v
items	lib/Cake/Model/Datasource/DboSource.php	/^			$items = explode('.', $data);$/;"	v
join	lib/Cake/Model/Datasource/DboSource.php	/^					$join = ' ' . strtoupper($key) . ' ';$/;"	v
join	lib/Cake/Model/Datasource/DboSource.php	/^					$join = array($/;"	v
join	lib/Cake/Model/Datasource/DboSource.php	/^			$join = ' AND ';$/;"	v
join	lib/Cake/Model/Datasource/DboSource.php	/^		$join = array();$/;"	v
joinAlias	lib/Cake/Model/Datasource/DboSource.php	/^					$joinAlias = $joinTbl;$/;"	v
joinAlias	lib/Cake/Model/Datasource/DboSource.php	/^					$joinAlias = $this->fullTableName($assocData['joinTable']);$/;"	v
joinAssoc	lib/Cake/Model/Datasource/DboSource.php	/^						$joinAssoc = $joinAlias = $joinTbl->alias;$/;"	v
joinAssoc	lib/Cake/Model/Datasource/DboSource.php	/^				$joinAssoc = null;$/;"	v
joinFields	lib/Cake/Model/Datasource/DboSource.php	/^						$joinFields = $this->fields($joinTbl, $joinAlias, $joinFields);$/;"	v
joinFields	lib/Cake/Model/Datasource/DboSource.php	/^						$joinFields = array();$/;"	v
joinFields	lib/Cake/Model/Datasource/DboSource.php	/^				$joinFields = array();$/;"	v
joinKeys	lib/Cake/Model/Datasource/DboSource.php	/^					$joinKeys = array($assocData['foreignKey'], $assocData['associationForeignKey']);$/;"	v
joinKeys	lib/Cake/Model/Datasource/DboSource.php	/^			$joinKeys = array($foreignKey, $habtmAssocData['associationForeignKey']);$/;"	v
joinTbl	lib/Cake/Model/Datasource/DboSource.php	/^					$joinTbl = $Model->{$with};$/;"	v
joinTbl	lib/Cake/Model/Datasource/DboSource.php	/^					$joinTbl = $assocData['joinTable'];$/;"	v
joined	lib/Cake/Model/Datasource/DboSource.php	/^			$joined = $stack['_joined'];$/;"	v
joined	lib/Cake/Model/Datasource/DboSource.php	/^			$joined = array();$/;"	v
joinedData	lib/Cake/Model/Datasource/DboSource.php	/^					$joinedData = Hash::filter($row[$LinkModel->alias]);$/;"	v
joins	lib/Cake/Model/Datasource/DboSource.php	/^		$joins = array_merge($Model->getAssociated('hasOne'), $Model->getAssociated('belongsTo'));$/;"	v
key	lib/Cake/Model/Datasource/DboSource.php	/^						$key = 'AND ' . trim($key);$/;"	v
key	lib/Cake/Model/Datasource/DboSource.php	/^					$key = $join;$/;"	v
key	lib/Cake/Model/Datasource/DboSource.php	/^					$key = '(' . $this->_quoteFields($Model->getVirtualField($key)) . ')';$/;"	v
key	lib/Cake/Model/Datasource/DboSource.php	/^					$key = '(' . $this->_quoteFields($Model->{$alias}->getVirtualField($key)) . ')';$/;"	v
key	lib/Cake/Model/Datasource/DboSource.php	/^				$key = $dir;$/;"	v
key	lib/Cake/Model/Datasource/DboSource.php	/^				$key = $key . ' ' . $operator;$/;"	v
key	lib/Cake/Model/Datasource/DboSource.php	/^				$key = $this->_quoteFields($Model->getVirtualField($key));$/;"	v
key	lib/Cake/Model/Datasource/DboSource.php	/^				$key = $this->name($key);$/;"	v
key	lib/Cake/Model/Datasource/DboSource.php	/^				$key = array_map('trim', explode(',', $key));$/;"	v
key	lib/Cake/Model/Datasource/DboSource.php	/^				$key = array_reverse($key, true);$/;"	v
key	lib/Cake/Model/Datasource/DboSource.php	/^				$key = preg_replace('\/\\\\x20(ASC|DESC).*\/i', '', $key);$/;"	v
key	lib/Cake/Model/Datasource/DboSource.php	/^				$key = preg_replace_callback('\/([a-zA-Z0-9_-]{1,})\\\\.([a-zA-Z0-9_-]{1,})\/', array(&$this, '_quoteMatchedField'), $key);$/;"	v
key	lib/Cake/Model/Datasource/DboSource.php	/^				$key = substr($key, 0, $split);$/;"	v
key	lib/Cake/Model/Datasource/DboSource.php	/^			$key = $isKey ? $this->_quoteFields($key) : $this->name($key);$/;"	v
key	lib/Cake/Model/Datasource/DboSource.php	/^			$key = trim($key);$/;"	v
keys	lib/Cake/Model/Datasource/DboSource.php	/^						$keys = array($k => $v) + $keys;$/;"	v
keys	lib/Cake/Model/Datasource/DboSource.php	/^					$keys = array_keys($value);$/;"	v
keys	lib/Cake/Model/Datasource/DboSource.php	/^			$keys = array($keys);$/;"	v
keys	lib/Cake/Model/Datasource/DboSource.php	/^		$keys = array_diff(array_keys($current), $filtered, array($Model->alias));$/;"	v
keys	lib/Cake/Model/Datasource/DboSource.php	/^		$keys = array_filter($keys);$/;"	v
lastAffected	lib/Cake/Model/Datasource/DboSource.php	/^	public function lastAffected($source = null) {$/;"	f
lastError	lib/Cake/Model/Datasource/DboSource.php	/^	public function lastError(PDOStatement $query = null) {$/;"	f
lastInsertId	lib/Cake/Model/Datasource/DboSource.php	/^	public function lastInsertId($source = null) {$/;"	f
lastNumRows	lib/Cake/Model/Datasource/DboSource.php	/^	public function lastNumRows($source = null) {$/;"	f
length	lib/Cake/Model/Datasource/DboSource.php	/^					$length = $tmpLength;$/;"	v
length	lib/Cake/Model/Datasource/DboSource.php	/^			$length = $column['length'];$/;"	v
length	lib/Cake/Model/Datasource/DboSource.php	/^			$length = $column['limit'];$/;"	v
length	lib/Cake/Model/Datasource/DboSource.php	/^			$length = $real['length'];$/;"	v
length	lib/Cake/Model/Datasource/DboSource.php	/^			$length = $real['limit'];$/;"	v
length	lib/Cake/Model/Datasource/DboSource.php	/^			$length = 0;$/;"	v
length	lib/Cake/Model/Datasource/DboSource.php	/^		$length = $length[0];$/;"	v
length	lib/Cake/Model/Datasource/DboSource.php	/^	public function length($real) {$/;"	f
limit	lib/Cake/Model/Datasource/DboSource.php	/^					$limit = $params[3 + $off];$/;"	v
limit	lib/Cake/Model/Datasource/DboSource.php	/^			$limit = null;$/;"	v
limit	lib/Cake/Model/Datasource/DboSource.php	/^		$limit = null;$/;"	v
limit	lib/Cake/Model/Datasource/DboSource.php	/^	public function limit($limit, $offset = null) {$/;"	f
linkedModels	lib/Cake/Model/Datasource/DboSource.php	/^		$linkedModels = array();$/;"	v
log	lib/Cake/Model/Datasource/DboSource.php	/^			$log = $this->_queriesLog;$/;"	v
log	lib/Cake/Model/Datasource/DboSource.php	/^			$log = sortByKey($this->_queriesLog, 'took', 'desc', SORT_NUMERIC);$/;"	v
log	lib/Cake/Model/Datasource/DboSource.php	/^		$log = $this->getLog($sorted, false);$/;"	v
logQuery	lib/Cake/Model/Datasource/DboSource.php	/^	public function logQuery($sql, $params = array()) {$/;"	f
merge	lib/Cake/Model/Datasource/DboSource.php	/^					$merge = array();$/;"	v
mergeKeys	lib/Cake/Model/Datasource/DboSource.php	/^						$mergeKeys = array_keys($merge[0]);$/;"	v
merged	lib/Cake/Model/Datasource/DboSource.php	/^			$merged = array();$/;"	v
methodCache	lib/Cake/Model/Datasource/DboSource.php	/^	public static $methodCache = array();$/;"	v
modelAlias	lib/Cake/Model/Datasource/DboSource.php	/^						$modelAlias = $Model->alias;$/;"	v
modelAlias	lib/Cake/Model/Datasource/DboSource.php	/^		$modelAlias = $Model->alias;$/;"	v
modelRecursive	lib/Cake/Model/Datasource/DboSource.php	/^			$modelRecursive = $Model->recursive;$/;"	v
name	lib/Cake/Model/Datasource/DboSource.php	/^				$name = $this->startQuote . $name . $this->endQuote;$/;"	v
name	lib/Cake/Model/Datasource/DboSource.php	/^				$name = null;$/;"	v
name	lib/Cake/Model/Datasource/DboSource.php	/^		$name = $type = null;$/;"	v
name	lib/Cake/Model/Datasource/DboSource.php	/^	public function name($data) {$/;"	f
nestedTransactionSupported	lib/Cake/Model/Datasource/DboSource.php	/^	public function nestedTransactionSupported() {$/;"	f
noAssocFields	lib/Cake/Model/Datasource/DboSource.php	/^			$noAssocFields = false;$/;"	v
noAssocFields	lib/Cake/Model/Datasource/DboSource.php	/^			$noAssocFields = true;$/;"	v
noJoin	lib/Cake/Model/Datasource/DboSource.php	/^					$noJoin = false;$/;"	v
noJoin	lib/Cake/Model/Datasource/DboSource.php	/^			$noJoin = true;$/;"	v
not	lib/Cake/Model/Datasource/DboSource.php	/^					$not = 'NOT ';$/;"	v
not	lib/Cake/Model/Datasource/DboSource.php	/^			$not = null;$/;"	v
null	lib/Cake/Model/Datasource/DboSource.php	/^		$null = $value === null || (is_array($value) && empty($value));$/;"	v
numRows	lib/Cake/Model/Datasource/DboSource.php	/^			$this->numRows = $this->affected = $this->lastAffected();$/;"	v
numRows	lib/Cake/Model/Datasource/DboSource.php	/^	public $numRows = null;$/;"	v
obj	lib/Cake/Model/Datasource/DboSource.php	/^		$obj = new stdClass();$/;"	v
off	lib/Cake/Model/Datasource/DboSource.php	/^			$off = count($field) - 1;$/;"	v
offset	lib/Cake/Model/Datasource/DboSource.php	/^		$offset = $offset[0];$/;"	v
operator	lib/Cake/Model/Datasource/DboSource.php	/^					$operator = 'IN';$/;"	v
operator	lib/Cake/Model/Datasource/DboSource.php	/^					$operator = 'IS NOT';$/;"	v
operator	lib/Cake/Model/Datasource/DboSource.php	/^					$operator = 'IS';$/;"	v
operator	lib/Cake/Model/Datasource/DboSource.php	/^					$operator = 'NOT IN';$/;"	v
operator	lib/Cake/Model/Datasource/DboSource.php	/^				$operator = substr($key, $split);$/;"	v
operator	lib/Cake/Model/Datasource/DboSource.php	/^			$operator = '=';$/;"	v
operator	lib/Cake/Model/Datasource/DboSource.php	/^		$operator = trim($operator);$/;"	v
operatorMatch	lib/Cake/Model/Datasource/DboSource.php	/^		$operatorMatch = '\/^(((' . implode(')|(', $this->_sqlOps);$/;"	v
options	lib/Cake/Model/Datasource/DboSource.php	/^			$options = array('modelName' => $options);$/;"	v
or	lib/Cake/Model/Datasource/DboSource.php	/^			$or = (strpos($field, '_or_') !== false);$/;"	v
order	lib/Cake/Model/Datasource/DboSource.php	/^				$order = $params[2 + $off];$/;"	v
order	lib/Cake/Model/Datasource/DboSource.php	/^		$order = null;$/;"	v
order	lib/Cake/Model/Datasource/DboSource.php	/^	public function order($keys, $direction = 'ASC', Model $Model = null) {$/;"	f
original	lib/Cake/Model/Datasource/DboSource.php	/^		$original = $conditions;$/;"	v
originalField	lib/Cake/Model/Datasource/DboSource.php	/^				$originalField = $field;$/;"	v
originalJoins	lib/Cake/Model/Datasource/DboSource.php	/^		$originalJoins = $queryData['joins'];$/;"	v
out	lib/Cake/Model/Datasource/DboSource.php	/^			$out = $this->conditionKeysToString($conditions, $quoteValues, $Model);$/;"	v
out	lib/Cake/Model/Datasource/DboSource.php	/^			$out = '';$/;"	v
out	lib/Cake/Model/Datasource/DboSource.php	/^			$out = array();$/;"	v
out	lib/Cake/Model/Datasource/DboSource.php	/^			$out = str_replace(array("'CURRENT_TIMESTAMP'", "'current_timestamp'"), 'CURRENT_TIMESTAMP', $out);$/;"	v
out	lib/Cake/Model/Datasource/DboSource.php	/^		$out = $this->_buildFieldParameters($out, $column, 'beforeDefault');$/;"	v
out	lib/Cake/Model/Datasource/DboSource.php	/^		$out = $this->fetchRow("SELECT COUNT({$id}) {$this->alias}count FROM {$table} {$alias}{$where}");$/;"	v
out	lib/Cake/Model/Datasource/DboSource.php	/^		$out = $this->name($name) . ' ' . $real['name'];$/;"	v
out	lib/Cake/Model/Datasource/DboSource.php	/^		$out = '';$/;"	v
out	lib/Cake/Model/Datasource/DboSource.php	/^		$out = array();$/;"	v
page	lib/Cake/Model/Datasource/DboSource.php	/^					$page = $params[4 + $off];$/;"	v
page	lib/Cake/Model/Datasource/DboSource.php	/^		$page = null;$/;"	v
parameters	lib/Cake/Model/Datasource/DboSource.php	/^		$parameters = array();$/;"	v
params	lib/Cake/Model/Datasource/DboSource.php	/^			$params = $args[1];$/;"	v
params	lib/Cake/Model/Datasource/DboSource.php	/^			$params = array();$/;"	v
params	lib/Cake/Model/Datasource/DboSource.php	/^		$params = (array)$params;$/;"	v
passedFields	lib/Cake/Model/Datasource/DboSource.php	/^			$passedFields = $queryData['fields'];$/;"	v
pdoMap	lib/Cake/Model/Datasource/DboSource.php	/^		$pdoMap = array($/;"	v
prefix	lib/Cake/Model/Datasource/DboSource.php	/^						$prefix = !($/;"	v
prepareFields	lib/Cake/Model/Datasource/DboSource.php	/^	public function prepareFields(Model $Model, $queryData) {$/;"	f
prepend	lib/Cake/Model/Datasource/DboSource.php	/^						$prepend = 'DISTINCT ';$/;"	v
prepend	lib/Cake/Model/Datasource/DboSource.php	/^					$prepend = '';$/;"	v
primary	lib/Cake/Model/Datasource/DboSource.php	/^						$primary = $name;$/;"	v
primary	lib/Cake/Model/Datasource/DboSource.php	/^				$primary = null;$/;"	v
primaryCount	lib/Cake/Model/Datasource/DboSource.php	/^				$primaryCount = 0;$/;"	v
primaryKey	lib/Cake/Model/Datasource/DboSource.php	/^		$primaryKey = $Model->primaryKey;$/;"	v
query	lib/Cake/Model/Datasource/DboSource.php	/^					$query = $this->insertQueryData($queryTemplate, $row, $association, $Model, $stack);$/;"	v
query	lib/Cake/Model/Datasource/DboSource.php	/^					$query = array_merge($assocData, array($/;"	v
query	lib/Cake/Model/Datasource/DboSource.php	/^				$query = array($/;"	v
query	lib/Cake/Model/Datasource/DboSource.php	/^				$query = array_merge($query, $assoc);$/;"	v
query	lib/Cake/Model/Datasource/DboSource.php	/^			$query = $this->_connection->prepare($sql, $prepareOptions);$/;"	v
query	lib/Cake/Model/Datasource/DboSource.php	/^			$query = array($query);$/;"	v
query	lib/Cake/Model/Datasource/DboSource.php	/^			$query = str_replace('= (', 'IN (', $query);$/;"	v
query	lib/Cake/Model/Datasource/DboSource.php	/^			$query = str_replace('{$__cakeID__$}', $ids[0], $query);$/;"	v
query	lib/Cake/Model/Datasource/DboSource.php	/^			$query = str_replace('{$__cakeID__$}', '(' . implode(', ', $ids) . ')', $query);$/;"	v
query	lib/Cake/Model/Datasource/DboSource.php	/^		$query = $this->buildAssociationQuery($Model, $queryData);$/;"	v
query	lib/Cake/Model/Datasource/DboSource.php	/^		$query = 'RELEASE SAVEPOINT LEVEL' . $this->_transactionNesting--;$/;"	v
query	lib/Cake/Model/Datasource/DboSource.php	/^		$query = 'ROLLBACK TO SAVEPOINT LEVEL' . $this->_transactionNesting--;$/;"	v
query	lib/Cake/Model/Datasource/DboSource.php	/^		$query = 'SAVEPOINT LEVEL' . ++$this->_transactionNesting;$/;"	v
query	lib/Cake/Model/Datasource/DboSource.php	/^		$query = array($/;"	v
query	lib/Cake/Model/Datasource/DboSource.php	/^		$query = array_merge($this->_queryDefaults, $query);$/;"	v
query	lib/Cake/Model/Datasource/DboSource.php	/^		$query = compact('table', 'alias', 'joins', 'fields', 'conditions');$/;"	v
query	lib/Cake/Model/Datasource/DboSource.php	/^		$query = str_replace(' WHERE 1 = 1', '', $query);$/;"	v
query	lib/Cake/Model/Datasource/DboSource.php	/^		$query = str_replace('{$__cakeID__$}', implode(', ', $ids), $query);$/;"	v
query	lib/Cake/Model/Datasource/DboSource.php	/^	public function query() {$/;"	f
queryAssociation	lib/Cake/Model/Datasource/DboSource.php	/^	public function queryAssociation(Model $Model, Model $LinkModel, $type, $association, $assocData, &$queryData, $external, &$resultSet, $recursive, $stack) {$/;"	f
queryData	lib/Cake/Model/Datasource/DboSource.php	/^		$queryData = $this->_scrubQueryData($queryData);$/;"	v
queryTemplate	lib/Cake/Model/Datasource/DboSource.php	/^		$queryTemplate = $this->generateAssociationQuery($Model, $LinkModel, $type, $association, $assocData, $queryData, $external);$/;"	v
quoted	lib/Cake/Model/Datasource/DboSource.php	/^				$quoted = $Model->escapeField($field);$/;"	v
quoted	lib/Cake/Model/Datasource/DboSource.php	/^				$quoted = $this->name($field);$/;"	v
quoted	lib/Cake/Model/Datasource/DboSource.php	/^				$quoted = $this->name(str_replace($quotedAlias . '.', '', str_replace($/;"	v
quotedAlias	lib/Cake/Model/Datasource/DboSource.php	/^		$quotedAlias = $this->startQuote . $Model->alias . $this->endQuote;$/;"	v
rawQuery	lib/Cake/Model/Datasource/DboSource.php	/^	public function rawQuery($sql, $params = array()) {$/;"	f
read	lib/Cake/Model/Datasource/DboSource.php	/^	public function read(Model $Model, $queryData = array(), $recursive = null) {$/;"	f
readTableParameters	lib/Cake/Model/Datasource/DboSource.php	/^	public function readTableParameters($name) {$/;"	f
real	lib/Cake/Model/Datasource/DboSource.php	/^		$real = $this->columns[$type];$/;"	v
reconnect	lib/Cake/Model/Datasource/DboSource.php	/^	public function reconnect($config = array()) {$/;"	f
recursive	lib/Cake/Model/Datasource/DboSource.php	/^					$recursive = $params[5 + $off];$/;"	v
recursive	lib/Cake/Model/Datasource/DboSource.php	/^				$recursive = $params[3 + $off];$/;"	v
recursive	lib/Cake/Model/Datasource/DboSource.php	/^			$recursive = $queryData['recursive'];$/;"	v
recursive	lib/Cake/Model/Datasource/DboSource.php	/^		$recursive = null;$/;"	v
renderJoinStatement	lib/Cake/Model/Datasource/DboSource.php	/^	public function renderJoinStatement($data) {$/;"	f
renderStatement	lib/Cake/Model/Datasource/DboSource.php	/^	public function renderStatement($type, $data) {$/;"	f
resetSequence	lib/Cake/Model/Datasource/DboSource.php	/^	public function resetSequence($table, $column) {$/;"	f
resolveKey	lib/Cake/Model/Datasource/DboSource.php	/^	public function resolveKey(Model $Model, $key, $assoc = null) {$/;"	f
result	lib/Cake/Model/Datasource/DboSource.php	/^				$result = array_map(array($this, '_execute'), $statements);$/;"	v
result	lib/Cake/Model/Datasource/DboSource.php	/^			$result = Hash::mergeDiff($result, array($association => $merged));$/;"	v
result	lib/Cake/Model/Datasource/DboSource.php	/^		$result = $this->execute($sql, array(), $params);$/;"	v
result	lib/Cake/Model/Datasource/DboSource.php	/^		$result = array();$/;"	v
resultPrimaryKey	lib/Cake/Model/Datasource/DboSource.php	/^			$resultPrimaryKey = $result[$modelAlias][$primaryKey];$/;"	v
resultRow	lib/Cake/Model/Datasource/DboSource.php	/^			$resultRow = $this->fetchResult();$/;"	v
resultSet	lib/Cake/Model/Datasource/DboSource.php	/^		$resultSet = $this->fetchAll($query, $Model->cacheQueries);$/;"	v
ret	lib/Cake/Model/Datasource/DboSource.php	/^						$ret = $this->conditionKeysToString($value, $quoteValues, $Model);$/;"	v
rollback	lib/Cake/Model/Datasource/DboSource.php	/^	public function rollback() {$/;"	f
rt	lib/Cake/Model/Datasource/DboSource.php	/^			$rt = ' LIMIT';$/;"	v
schemaName	lib/Cake/Model/Datasource/DboSource.php	/^			$schemaName = $model->schemaName;$/;"	v
schemaName	lib/Cake/Model/Datasource/DboSource.php	/^			$schemaName = $this->getSchemaName();$/;"	v
selfJoin	lib/Cake/Model/Datasource/DboSource.php	/^		$selfJoin = ($Model->name === $LinkModel->name);$/;"	v
serialized	lib/Cake/Model/Datasource/DboSource.php	/^			$serialized = serialize($params);$/;"	v
showLog	lib/Cake/Model/Datasource/DboSource.php	/^	public function showLog($sorted = false) {$/;"	f
split	lib/Cake/Model/Datasource/DboSource.php	/^				$split = strrpos($key, ' ');$/;"	v
sql	lib/Cake/Model/Datasource/DboSource.php	/^		$sql = "INSERT INTO {$table} ({$fields}) VALUES ({$holder})";$/;"	v
sql	lib/Cake/Model/Datasource/DboSource.php	/^		$sql = $this->conditions($sql);$/;"	v
sql	lib/Cake/Model/Datasource/DboSource.php	/^		$sql = trim($sql);$/;"	v
stack	lib/Cake/Model/Datasource/DboSource.php	/^						$stack = array($assoc);$/;"	v
start	lib/Cake/Model/Datasource/DboSource.php	/^			$start = preg_quote($this->startQuote);$/;"	v
start	lib/Cake/Model/Datasource/DboSource.php	/^		$start = $end = null;$/;"	v
startQuote	lib/Cake/Model/Datasource/DboSource.php	/^	public $startQuote = null;$/;"	v
statement	lib/Cake/Model/Datasource/DboSource.php	/^		$statement = $this->_connection->prepare($sql);$/;"	v
statements	lib/Cake/Model/Datasource/DboSource.php	/^			$statements = array_filter(explode(';', $sql));$/;"	v
t	lib/Cake/Model/Datasource/DboSource.php	/^		$t = microtime(true);$/;"	v
table	lib/Cake/Model/Datasource/DboSource.php	/^				$table = $this->fullTableName($curTable);$/;"	v
table	lib/Cake/Model/Datasource/DboSource.php	/^			$table = $model->tablePrefix . $model->table;$/;"	v
table	lib/Cake/Model/Datasource/DboSource.php	/^			$table = $this->config['prefix'] . strval($model);$/;"	v
table	lib/Cake/Model/Datasource/DboSource.php	/^			$table = strval($model);$/;"	v
table	lib/Cake/Model/Datasource/DboSource.php	/^		$table = $this->fullTableName($Model);$/;"	v
table	lib/Cake/Model/Datasource/DboSource.php	/^		$table = $this->fullTableName($table);$/;"	v
tableParameters	lib/Cake/Model/Datasource/DboSource.php	/^						$tableParameters = array_merge($tableParameters, $this->buildTableParameters($col, $table));$/;"	v
tableParameters	lib/Cake/Model/Datasource/DboSource.php	/^	public $tableParameters = array();$/;"	v
tmpLength	lib/Cake/Model/Datasource/DboSource.php	/^				$tmpLength = strlen($enumValue);$/;"	v
tmpStack	lib/Cake/Model/Datasource/DboSource.php	/^								$tmpStack = $stack;$/;"	v
tmpStack	lib/Cake/Model/Datasource/DboSource.php	/^						$tmpStack = $stack;$/;"	v
took	lib/Cake/Model/Datasource/DboSource.php	/^			$this->took = round((microtime(true) - $t) * 1000, 0);$/;"	v
took	lib/Cake/Model/Datasource/DboSource.php	/^		$this->took = $this->numRows = false;$/;"	v
took	lib/Cake/Model/Datasource/DboSource.php	/^	public $took = null;$/;"	v
truncate	lib/Cake/Model/Datasource/DboSource.php	/^	public function truncate($table) {$/;"	f
type	lib/Cake/Model/Datasource/DboSource.php	/^			$type = $Model->getColumnType($key);$/;"	v
type	lib/Cake/Model/Datasource/DboSource.php	/^			$type = $this->introspectType($val);$/;"	v
type	lib/Cake/Model/Datasource/DboSource.php	/^		$type = $type[0];$/;"	v
type	lib/Cake/Model/Datasource/DboSource.php	/^		$type = null;$/;"	v
type1	lib/Cake/Model/Datasource/DboSource.php	/^								$type1 === 'belongsTo' ||$/;"	v
typeArr	lib/Cake/Model/Datasource/DboSource.php	/^		$typeArr = $type;$/;"	v
types	lib/Cake/Model/Datasource/DboSource.php	/^		$types = array($/;"	v
update	lib/Cake/Model/Datasource/DboSource.php	/^			$update = $quoted . ' = ';$/;"	v
update	lib/Cake/Model/Datasource/DboSource.php	/^	public function update(Model $Model, $fields = array(), $values = null, $conditions = null) {$/;"	f
updates	lib/Cake/Model/Datasource/DboSource.php	/^		$updates = array();$/;"	v
useNestedTransactions	lib/Cake/Model/Datasource/DboSource.php	/^	public $useNestedTransactions = false;$/;"	v
val	lib/Cake/Model/Datasource/DboSource.php	/^					$val = $this->value($val);$/;"	v
val	lib/Cake/Model/Datasource/DboSource.php	/^				$val = $columnData[$paramName];$/;"	v
valElement	lib/Cake/Model/Datasource/DboSource.php	/^			$valElement = trim($valElement);$/;"	v
value	lib/Cake/Model/Datasource/DboSource.php	/^					$value = $this->value($value);$/;"	v
value	lib/Cake/Model/Datasource/DboSource.php	/^				$value = $this->conditionKeysToString($value, $quoteValues, $Model);$/;"	v
value	lib/Cake/Model/Datasource/DboSource.php	/^			$value = "({$value})";$/;"	v
value	lib/Cake/Model/Datasource/DboSource.php	/^			$value = implode(', ', $value);$/;"	v
value	lib/Cake/Model/Datasource/DboSource.php	/^		$value = $this->value($value, $type);$/;"	v
value	lib/Cake/Model/Datasource/DboSource.php	/^	public function value($data, $column = null) {$/;"	f
valueInsert	lib/Cake/Model/Datasource/DboSource.php	/^				$valueInsert = ($/;"	v
values	lib/Cake/Model/Datasource/DboSource.php	/^			$values = array_values($Model->data);$/;"	v
virtual	lib/Cake/Model/Datasource/DboSource.php	/^				$virtual = true;$/;"	v
virtual	lib/Cake/Model/Datasource/DboSource.php	/^			$virtual = ($allFields) ? $virtualKeys : array_intersect($virtualKeys, $fields);$/;"	v
virtual	lib/Cake/Model/Datasource/DboSource.php	/^		$virtual = array();$/;"	v
virtual	lib/Cake/Model/Datasource/DboSource.php	/^		$virtual = false;$/;"	v
virtualField	lib/Cake/Model/Datasource/DboSource.php	/^			$virtualField = $this->name($alias . $this->virtualFieldSeparator . $field);$/;"	v
virtualFieldSeparator	lib/Cake/Model/Datasource/DboSource.php	/^	public $virtualFieldSeparator = '__';$/;"	v
virtualFields	lib/Cake/Model/Datasource/DboSource.php	/^		$virtualFields = $Model->getVirtualField();$/;"	v
virtualKeys	lib/Cake/Model/Datasource/DboSource.php	/^			$virtualKeys = array_keys($virtualFields);$/;"	v
where	lib/Cake/Model/Datasource/DboSource.php	/^		$where = $sql ? "{$sql}" : ' WHERE 1 = 1';$/;"	v
CacheSession	lib/Cake/Model/Datasource/Session/CacheSession.php	/^class CacheSession implements CakeSessionHandlerInterface {$/;"	c
close	lib/Cake/Model/Datasource/Session/CacheSession.php	/^	public function close() {$/;"	f
destroy	lib/Cake/Model/Datasource/Session/CacheSession.php	/^	public function destroy($id) {$/;"	f
gc	lib/Cake/Model/Datasource/Session/CacheSession.php	/^	public function gc($expires = null) {$/;"	f
open	lib/Cake/Model/Datasource/Session/CacheSession.php	/^	public function open() {$/;"	f
read	lib/Cake/Model/Datasource/Session/CacheSession.php	/^	public function read($id) {$/;"	f
write	lib/Cake/Model/Datasource/Session/CacheSession.php	/^	public function write($id, $data) {$/;"	f
CakeSessionHandlerInterface	lib/Cake/Model/Datasource/Session/CakeSessionHandlerInterface.php	/^interface CakeSessionHandlerInterface {$/;"	i
close	lib/Cake/Model/Datasource/Session/CakeSessionHandlerInterface.php	/^	public function close();$/;"	f
destroy	lib/Cake/Model/Datasource/Session/CakeSessionHandlerInterface.php	/^	public function destroy($id);$/;"	f
gc	lib/Cake/Model/Datasource/Session/CakeSessionHandlerInterface.php	/^	public function gc($expires = null);$/;"	f
open	lib/Cake/Model/Datasource/Session/CakeSessionHandlerInterface.php	/^	public function open();$/;"	f
read	lib/Cake/Model/Datasource/Session/CakeSessionHandlerInterface.php	/^	public function read($id);$/;"	f
write	lib/Cake/Model/Datasource/Session/CakeSessionHandlerInterface.php	/^	public function write($id, $data);$/;"	f
DatabaseSession	lib/Cake/Model/Datasource/Session/DatabaseSession.php	/^class DatabaseSession implements CakeSessionHandlerInterface {$/;"	c
__construct	lib/Cake/Model/Datasource/Session/DatabaseSession.php	/^	public function __construct() {$/;"	f
_model	lib/Cake/Model/Datasource/Session/DatabaseSession.php	/^		$this->_model = ClassRegistry::init($settings);$/;"	v
_model	lib/Cake/Model/Datasource/Session/DatabaseSession.php	/^	protected $_model;$/;"	v
_timeout	lib/Cake/Model/Datasource/Session/DatabaseSession.php	/^		$this->_timeout = Configure::read('Session.timeout') * 60;$/;"	v
_timeout	lib/Cake/Model/Datasource/Session/DatabaseSession.php	/^	protected $_timeout;$/;"	v
close	lib/Cake/Model/Datasource/Session/DatabaseSession.php	/^	public function close() {$/;"	f
destroy	lib/Cake/Model/Datasource/Session/DatabaseSession.php	/^	public function destroy($id) {$/;"	f
expires	lib/Cake/Model/Datasource/Session/DatabaseSession.php	/^			$expires = time() - $expires;$/;"	v
expires	lib/Cake/Model/Datasource/Session/DatabaseSession.php	/^			$expires = time();$/;"	v
expires	lib/Cake/Model/Datasource/Session/DatabaseSession.php	/^		$expires = time() + $this->_timeout;$/;"	v
gc	lib/Cake/Model/Datasource/Session/DatabaseSession.php	/^	public function gc($expires = null) {$/;"	f
modelName	lib/Cake/Model/Datasource/Session/DatabaseSession.php	/^		$modelName = Configure::read('Session.handler.model');$/;"	v
open	lib/Cake/Model/Datasource/Session/DatabaseSession.php	/^	public function open() {$/;"	f
read	lib/Cake/Model/Datasource/Session/DatabaseSession.php	/^	public function read($id) {$/;"	f
record	lib/Cake/Model/Datasource/Session/DatabaseSession.php	/^		$record = compact('id', 'data', 'expires');$/;"	v
row	lib/Cake/Model/Datasource/Session/DatabaseSession.php	/^		$row = $this->_model->find('first', array($/;"	v
settings	lib/Cake/Model/Datasource/Session/DatabaseSession.php	/^			$settings = array($/;"	v
write	lib/Cake/Model/Datasource/Session/DatabaseSession.php	/^	public function write($id, $data) {$/;"	f
I18nModel	lib/Cake/Model/I18nModel.php	/^class I18nModel extends AppModel {$/;"	c
displayField	lib/Cake/Model/I18nModel.php	/^	public $displayField = 'field';$/;"	v
name	lib/Cake/Model/I18nModel.php	/^	public $name = 'I18nModel';$/;"	v
useTable	lib/Cake/Model/I18nModel.php	/^	public $useTable = 'i18n';$/;"	v
Behaviors	lib/Cake/Model/Model.php	/^		$this->Behaviors = new BehaviorCollection();$/;"	v
Behaviors	lib/Cake/Model/Model.php	/^	public $Behaviors = null;$/;"	v
Model	lib/Cake/Model/Model.php	/^			$Model = $this->{$association};$/;"	v
Model	lib/Cake/Model/Model.php	/^			$Model = $this->{$assoc};$/;"	v
Model	lib/Cake/Model/Model.php	/^			$Model = $this->{$joinModel};$/;"	v
Model	lib/Cake/Model/Model.php	/^			$Model = $this->{$join};$/;"	v
Model	lib/Cake/Model/Model.php	/^			$Model = $this->{$parent};$/;"	v
Model	lib/Cake/Model/Model.php	/^class Model extends Object implements CakeEventListener {$/;"	c
__backAssociation	lib/Cake/Model/Model.php	/^			$this->__backAssociation = $savedAssociations;$/;"	v
__backAssociation	lib/Cake/Model/Model.php	/^			$this->__backAssociation = array();$/;"	v
__backAssociation	lib/Cake/Model/Model.php	/^		$this->__backAssociation = array();$/;"	v
__backAssociation	lib/Cake/Model/Model.php	/^	public $__backAssociation = array();$/;"	v
__backContainableAssociation	lib/Cake/Model/Model.php	/^	public $__backContainableAssociation = array();$/;"	v
__backInnerAssociation	lib/Cake/Model/Model.php	/^	public $__backInnerAssociation = array();$/;"	v
__backOriginalAssociation	lib/Cake/Model/Model.php	/^	public $__backOriginalAssociation = array();$/;"	v
__call	lib/Cake/Model/Model.php	/^	public function __call($method, $params) {$/;"	f
__construct	lib/Cake/Model/Model.php	/^	public function __construct($id = false, $table = null, $ds = null) {$/;"	f
__get	lib/Cake/Model/Model.php	/^	public function __get($name) {$/;"	f
__isset	lib/Cake/Model/Model.php	/^	public function __isset($name) {$/;"	f
_addToWhiteList	lib/Cake/Model/Model.php	/^	protected function _addToWhiteList($key, $options) {$/;"	f
_associationKeys	lib/Cake/Model/Model.php	/^	protected $_associationKeys = array($/;"	v
_associations	lib/Cake/Model/Model.php	/^	protected $_associations = array('belongsTo', 'hasOne', 'hasMany', 'hasAndBelongsToMany');$/;"	v
_clearCache	lib/Cake/Model/Model.php	/^	protected function _clearCache($type = null) {$/;"	f
_collectForeignKeys	lib/Cake/Model/Model.php	/^	protected function _collectForeignKeys($type = 'belongsTo') {$/;"	f
_constructLinkedModel	lib/Cake/Model/Model.php	/^	protected function _constructLinkedModel($assoc, $className = null, $plugin = null) {$/;"	f
_createLinks	lib/Cake/Model/Model.php	/^	protected function _createLinks() {$/;"	f
_deleteDependent	lib/Cake/Model/Model.php	/^	protected function _deleteDependent($id, $cascade) {$/;"	f
_deleteLinks	lib/Cake/Model/Model.php	/^	protected function _deleteLinks($id) {$/;"	f
_eventManager	lib/Cake/Model/Model.php	/^			$this->_eventManager = new CakeEventManager();$/;"	v
_eventManager	lib/Cake/Model/Model.php	/^	protected $_eventManager = null;$/;"	v
_filterResults	lib/Cake/Model/Model.php	/^	protected function _filterResults($results, $primary = true) {$/;"	f
_findAll	lib/Cake/Model/Model.php	/^	protected function _findAll($state, $query, $results = array()) {$/;"	f
_findCount	lib/Cake/Model/Model.php	/^	protected function _findCount($state, $query, $results = array()) {$/;"	f
_findFirst	lib/Cake/Model/Model.php	/^	protected function _findFirst($state, $query, $results = array()) {$/;"	f
_findList	lib/Cake/Model/Model.php	/^	protected function _findList($state, $query, $results = array()) {$/;"	f
_findNeighbors	lib/Cake/Model/Model.php	/^	protected function _findNeighbors($state, $query, $results = array()) {$/;"	f
_findThreaded	lib/Cake/Model/Model.php	/^	protected function _findThreaded($state, $query, $results = array()) {$/;"	f
_generateAssociation	lib/Cake/Model/Model.php	/^	protected function _generateAssociation($type, $assocKey) {$/;"	f
_id	lib/Cake/Model/Model.php	/^			$_id = $this->id;$/;"	v
_insertID	lib/Cake/Model/Model.php	/^		$this->_insertID = $id;$/;"	v
_insertID	lib/Cake/Model/Model.php	/^	protected $_insertID = null;$/;"	v
_isUUIDField	lib/Cake/Model/Model.php	/^	protected function _isUUIDField($field) {$/;"	f
_normalizeXmlData	lib/Cake/Model/Model.php	/^	protected function _normalizeXmlData(array $xml) {$/;"	f
_prepareUpdateFields	lib/Cake/Model/Model.php	/^	protected function _prepareUpdateFields($data) {$/;"	f
_readDataSource	lib/Cake/Model/Model.php	/^	protected function _readDataSource($type, $query) {$/;"	f
_return	lib/Cake/Model/Model.php	/^					$_return = $Model->saveMany($values, array('atomic' => false) + $options);$/;"	v
_saveMulti	lib/Cake/Model/Model.php	/^	protected function _saveMulti($joined, $id, $db) {$/;"	f
_schema	lib/Cake/Model/Model.php	/^				$this->_schema = $db->describe($this);$/;"	v
_schema	lib/Cake/Model/Model.php	/^				$this->_schema = null;$/;"	v
_schema	lib/Cake/Model/Model.php	/^	protected $_schema = null;$/;"	v
_setAliasData	lib/Cake/Model/Model.php	/^	protected function _setAliasData($data) {$/;"	f
_sourceConfigured	lib/Cake/Model/Model.php	/^			$this->_sourceConfigured = true;$/;"	v
_sourceConfigured	lib/Cake/Model/Model.php	/^	protected $_sourceConfigured = false;$/;"	v
_validator	lib/Cake/Model/Model.php	/^			$this->_validator = $instance;$/;"	v
_validator	lib/Cake/Model/Model.php	/^			$this->_validator = new ModelValidator($this);$/;"	v
_validator	lib/Cake/Model/Model.php	/^	protected $_validator = null;$/;"	v
_whitelist	lib/Cake/Model/Model.php	/^		$_whitelist = $this->whitelist;$/;"	v
actsAs	lib/Cake/Model/Model.php	/^	public $actsAs = null;$/;"	v
afterDelete	lib/Cake/Model/Model.php	/^	public function afterDelete() {$/;"	f
afterFind	lib/Cake/Model/Model.php	/^	public function afterFind($results, $primary = false) {$/;"	f
afterSave	lib/Cake/Model/Model.php	/^	public function afterSave($created, $options = array()) {$/;"	f
afterValidate	lib/Cake/Model/Model.php	/^	public function afterValidate() {$/;"	f
alias	lib/Cake/Model/Model.php	/^			$alias = $this->alias;$/;"	v
alias	lib/Cake/Model/Model.php	/^			$this->alias = (isset($alias) ? $alias : $this->name);$/;"	v
alias	lib/Cake/Model/Model.php	/^	public $alias = null;$/;"	v
assoc	lib/Cake/Model/Model.php	/^						$assoc = $value;$/;"	v
assoc	lib/Cake/Model/Model.php	/^					$assoc = array_merge($assoc, array($/;"	v
assoc	lib/Cake/Model/Model.php	/^		$assoc = array($/;"	v
assoc	lib/Cake/Model/Model.php	/^		$assoc = array_merge($/;"	v
assoc	lib/Cake/Model/Model.php	/^		$assoc =& $this->{$type}[$assocKey];$/;"	v
assocKey	lib/Cake/Model/Model.php	/^						$assocKey = $k;$/;"	v
assocName	lib/Cake/Model/Model.php	/^					$assocName = $value;$/;"	v
assocName	lib/Cake/Model/Model.php	/^				$assocName = $key;$/;"	v
associated	lib/Cake/Model/Model.php	/^			$associated = array();$/;"	v
association	lib/Cake/Model/Model.php	/^				$association = explode(',', $association);$/;"	v
association	lib/Cake/Model/Model.php	/^			$association =& $this->{$type};$/;"	v
associationForeignKey	lib/Cake/Model/Model.php	/^				$associationForeignKey = $Model->alias . '.' . $habtm['associationForeignKey'];$/;"	v
associations	lib/Cake/Model/Model.php	/^		$associations = $this->getAssociated();$/;"	v
associations	lib/Cake/Model/Model.php	/^	public function associations() {$/;"	f
beforeDelete	lib/Cake/Model/Model.php	/^	public function beforeDelete($cascade = true) {$/;"	f
beforeFind	lib/Cake/Model/Model.php	/^	public function beforeFind($query) {$/;"	f
beforeSave	lib/Cake/Model/Model.php	/^	public function beforeSave($options = array()) {$/;"	f
beforeValidate	lib/Cake/Model/Model.php	/^	public function beforeValidate($options = array()) {$/;"	f
belongsTo	lib/Cake/Model/Model.php	/^	public $belongsTo = array();$/;"	v
bindModel	lib/Cake/Model/Model.php	/^	public function bindModel($params, $reset = true) {$/;"	f
buildQuery	lib/Cake/Model/Model.php	/^	public function buildQuery($type = 'first', $query = array()) {$/;"	f
cache	lib/Cake/Model/Model.php	/^			$cache = $this->_prepareUpdateFields(array_combine($fields, $values));$/;"	v
cacheQueries	lib/Cake/Model/Model.php	/^	public $cacheQueries = false;$/;"	v
cacheSources	lib/Cake/Model/Model.php	/^	public $cacheSources = true;$/;"	v
class	lib/Cake/Model/Model.php	/^		$class = $assocKey;$/;"	v
className	lib/Cake/Model/Model.php	/^							$className = $name;$/;"	v
className	lib/Cake/Model/Model.php	/^							$className = $relation['with'];$/;"	v
className	lib/Cake/Model/Model.php	/^					$className = trim($className);$/;"	v
className	lib/Cake/Model/Model.php	/^				$className = empty($this->__backAssociation[$type][$name]['className']) ?$/;"	v
className	lib/Cake/Model/Model.php	/^				$className = empty($this->{$type}[$name]['className']) ? $name : $this->{$type}[$name]['className'];$/;"	v
className	lib/Cake/Model/Model.php	/^			$className = $assoc;$/;"	v
className	lib/Cake/Model/Model.php	/^		$className = false;$/;"	v
clear	lib/Cake/Model/Model.php	/^	public function clear() {$/;"	f
colType	lib/Cake/Model/Model.php	/^			$colType = array_merge($default, $db->columns[$this->getColumnType($updateCol)]);$/;"	v
cols	lib/Cake/Model/Model.php	/^		$cols = $this->schema();$/;"	v
cols	lib/Cake/Model/Model.php	/^		$cols = array();$/;"	v
column	lib/Cake/Model/Model.php	/^		$column = str_replace(array($startQuote, $endQuote), '', $column);$/;"	v
columns	lib/Cake/Model/Model.php	/^		$columns = $this->schema();$/;"	v
conditions	lib/Cake/Model/Model.php	/^					$conditions = (array)$conditions;$/;"	v
conditions	lib/Cake/Model/Model.php	/^					$conditions = array();$/;"	v
conditions	lib/Cake/Model/Model.php	/^					$conditions = array_merge($conditions, (array)$conditions);$/;"	v
conditions	lib/Cake/Model/Model.php	/^					$conditions = array_merge($conditions, (array)$habtm['conditions']);$/;"	v
conditions	lib/Cake/Model/Model.php	/^					$conditions = array_merge((array)$data['conditions'], $conditions);$/;"	v
conditions	lib/Cake/Model/Model.php	/^				$conditions = array($/;"	v
conditions	lib/Cake/Model/Model.php	/^				$conditions = array($Model->escapeField($data['foreignKey']) => $id);$/;"	v
conditions	lib/Cake/Model/Model.php	/^				$conditions = array($this->escapeField(null, $this->name) => $id);$/;"	v
conditions	lib/Cake/Model/Model.php	/^			$conditions = (array)$conditions;$/;"	v
conditions	lib/Cake/Model/Model.php	/^			$conditions = array($this->alias . '.' . $this->primaryKey => $this->id);$/;"	v
count	lib/Cake/Model/Model.php	/^					$count = intval($this->find('count', compact('conditions', 'recursive')));$/;"	v
count	lib/Cake/Model/Model.php	/^				$count = intval($this->find('count', compact('conditions', 'recursive')));$/;"	v
count	lib/Cake/Model/Model.php	/^		$count = count($fields);$/;"	v
create	lib/Cake/Model/Model.php	/^	public function create($data = array(), $filterKey = false) {$/;"	f
created	lib/Cake/Model/Model.php	/^					$created = true;$/;"	v
created	lib/Cake/Model/Model.php	/^		$created = false;$/;"	v
data	lib/Cake/Model/Model.php	/^						$data = $class;$/;"	v
data	lib/Cake/Model/Model.php	/^						$data = $tables[0] . '_' . $tables[1];$/;"	v
data	lib/Cake/Model/Model.php	/^						$data = '';$/;"	v
data	lib/Cake/Model/Model.php	/^						$data = (($type === 'belongsTo') ? Inflector::underscore($assocKey) : Inflector::singularize($this->table)) . '_id';$/;"	v
data	lib/Cake/Model/Model.php	/^						$data = Inflector::camelize(Inflector::singularize($assoc['joinTable']));$/;"	v
data	lib/Cake/Model/Model.php	/^						$data = Inflector::singularize($this->{$class}->table) . '_id';$/;"	v
data	lib/Cake/Model/Model.php	/^						$data = true;$/;"	v
data	lib/Cake/Model/Model.php	/^					$data = array_merge(array($key => $Model->id), $data, array($key => $Model->id));$/;"	v
data	lib/Cake/Model/Model.php	/^				$data = $this->_setAliasData($one);$/;"	v
data	lib/Cake/Model/Model.php	/^				$data = '';$/;"	v
data	lib/Cake/Model/Model.php	/^			$data = $one;$/;"	v
data	lib/Cake/Model/Model.php	/^			$data = $this->data;$/;"	v
data	lib/Cake/Model/Model.php	/^			$data = array($this->alias => array($one => $two));$/;"	v
data	lib/Cake/Model/Model.php	/^			$this->data = $this->find('first', array($/;"	v
data	lib/Cake/Model/Model.php	/^			$this->data = false;$/;"	v
data	lib/Cake/Model/Model.php	/^		$data = $this->find('first', compact('conditions', 'fields', 'order', 'recursive'));$/;"	v
data	lib/Cake/Model/Model.php	/^		$this->data = array();$/;"	v
data	lib/Cake/Model/Model.php	/^	public $data = array();$/;"	v
date	lib/Cake/Model/Model.php	/^		$date = array();$/;"	v
dateFields	lib/Cake/Model/Model.php	/^		$dateFields = array('Y' => 'year', 'm' => 'month', 'd' => 'day', 'H' => 'hour', 'i' => 'min', 's' => 'sec');$/;"	v
dateFields	lib/Cake/Model/Model.php	/^		$dateFields = array('modified', 'updated');$/;"	v
db	lib/Cake/Model/Model.php	/^			$db = $this->getDataSource();$/;"	v
db	lib/Cake/Model/Model.php	/^		$db = $this->getDataSource();$/;"	v
db	lib/Cake/Model/Model.php	/^		$db = ConnectionManager::getDataSource($this->useDbConfig);$/;"	v
dbMulti	lib/Cake/Model/Model.php	/^				$dbMulti = $db;$/;"	v
dbMulti	lib/Cake/Model/Model.php	/^				$dbMulti = $this->{$withModel}->getDataSource();$/;"	v
deconstruct	lib/Cake/Model/Model.php	/^	public function deconstruct($field, $data) {$/;"	f
default	lib/Cake/Model/Model.php	/^			$default = array('formatter' => 'date');$/;"	v
defaults	lib/Cake/Model/Model.php	/^		$defaults = array($/;"	v
defaults	lib/Cake/Model/Model.php	/^		$defaults = array();$/;"	v
delete	lib/Cake/Model/Model.php	/^	public function delete($id = null, $cascade = true) {$/;"	f
deleteAll	lib/Cake/Model/Model.php	/^	public function deleteAll($conditions, $cascade = true, $callbacks = false) {$/;"	f
displayField	lib/Cake/Model/Model.php	/^	public $displayField = null;$/;"	v
dynamic	lib/Cake/Model/Model.php	/^						$dynamic = !empty($relation['dynamicWith']);$/;"	v
dynamicWith	lib/Cake/Model/Model.php	/^						$dynamicWith = true;$/;"	v
dynamicWith	lib/Cake/Model/Model.php	/^		$dynamicWith = false;$/;"	v
endQuote	lib/Cake/Model/Model.php	/^		$endQuote = isset($db->endQuote) ? $db->endQuote : null;$/;"	v
escapeField	lib/Cake/Model/Model.php	/^	public function escapeField($field = null, $alias = null) {$/;"	f
event	lib/Cake/Model/Model.php	/^				$event = new CakeEvent('Model.afterSave', $this, array($created, $options));$/;"	v
event	lib/Cake/Model/Model.php	/^			$event = new CakeEvent('Model.beforeFind', $this, array($query));$/;"	v
event	lib/Cake/Model/Model.php	/^			$event = new CakeEvent('Model.beforeSave', $this, array($options));$/;"	v
event	lib/Cake/Model/Model.php	/^		$event = new CakeEvent('Model.afterFind', $this, array($results, $primary));$/;"	v
event	lib/Cake/Model/Model.php	/^		$event = new CakeEvent('Model.beforeDelete', $this, array($cascade));$/;"	v
exists	lib/Cake/Model/Model.php	/^		$exists = $this->exists();$/;"	v
exists	lib/Cake/Model/Model.php	/^	public function exists($id = null) {$/;"	f
field	lib/Cake/Model/Model.php	/^					$field = $this->alias . '.' . $field;$/;"	v
field	lib/Cake/Model/Model.php	/^					$field = Inflector::underscore($this->alias) . '_count';$/;"	v
field	lib/Cake/Model/Model.php	/^				$field = $this->alias . '.' . $this->primaryKey;$/;"	v
field	lib/Cake/Model/Model.php	/^				$field = $value;$/;"	v
field	lib/Cake/Model/Model.php	/^			$field = $this->primaryKey;$/;"	v
field	lib/Cake/Model/Model.php	/^		$field = $this->schema($field);$/;"	v
field	lib/Cake/Model/Model.php	/^	public function field($name, $conditions = null, $order = null) {$/;"	f
fieldValue	lib/Cake/Model/Model.php	/^					$fieldValue = $this->deconstruct($fieldName, $fieldValue);$/;"	v
fields	lib/Cake/Model/Model.php	/^			$fields = array($/;"	v
fields	lib/Cake/Model/Model.php	/^			$fields = array('or' => $fields);$/;"	v
fields	lib/Cake/Model/Model.php	/^			$fields = array_keys($this->data[$this->alias]);$/;"	v
fields	lib/Cake/Model/Model.php	/^			$fields = func_get_args();$/;"	v
fields	lib/Cake/Model/Model.php	/^		$fields = $name;$/;"	v
fields	lib/Cake/Model/Model.php	/^		$fields = $values = array();$/;"	v
fields	lib/Cake/Model/Model.php	/^		$fields = array();$/;"	v
find	lib/Cake/Model/Model.php	/^	public function find($type = 'first', $query = array()) {$/;"	f
findMethods	lib/Cake/Model/Model.php	/^	public $findMethods = array($/;"	v
findQueryType	lib/Cake/Model/Model.php	/^		$this->findQueryType = $type;$/;"	v
findQueryType	lib/Cake/Model/Model.php	/^		$this->findQueryType = null;$/;"	v
findQueryType	lib/Cake/Model/Model.php	/^	public $findQueryType = null;$/;"	v
fkQuoted	lib/Cake/Model/Model.php	/^			$fkQuoted = $this->escapeField($assoc['foreignKey']);$/;"	v
foreignKey	lib/Cake/Model/Model.php	/^			$foreignKey = $assoc['foreignKey'];$/;"	v
foreignKeys	lib/Cake/Model/Model.php	/^		$foreignKeys = array();$/;"	v
format	lib/Cake/Model/Model.php	/^			$format = $this->getDataSource()->columns[$type]['format'];$/;"	v
getAffectedRows	lib/Cake/Model/Model.php	/^	public function getAffectedRows() {$/;"	f
getAssociated	lib/Cake/Model/Model.php	/^	public function getAssociated($type = null) {$/;"	f
getColumnType	lib/Cake/Model/Model.php	/^	public function getColumnType($column) {$/;"	f
getColumnTypes	lib/Cake/Model/Model.php	/^	public function getColumnTypes() {$/;"	f
getDataSource	lib/Cake/Model/Model.php	/^	public function getDataSource() {$/;"	f
getEventManager	lib/Cake/Model/Model.php	/^	public function getEventManager() {$/;"	f
getID	lib/Cake/Model/Model.php	/^	public function getID($list = 0) {$/;"	f
getInsertID	lib/Cake/Model/Model.php	/^	public function getInsertID() {$/;"	f
getLastInsertID	lib/Cake/Model/Model.php	/^	public function getLastInsertID() {$/;"	f
getNumRows	lib/Cake/Model/Model.php	/^	public function getNumRows() {$/;"	f
getVirtualField	lib/Cake/Model/Model.php	/^	public function getVirtualField($field = null) {$/;"	f
habtm	lib/Cake/Model/Model.php	/^			$habtm = $this->hasAndBelongsToMany[$assoc];$/;"	v
hasAndBelongsToMany	lib/Cake/Model/Model.php	/^	public $hasAndBelongsToMany = array();$/;"	v
hasAny	lib/Cake/Model/Model.php	/^	public function hasAny($conditions = null) {$/;"	f
hasField	lib/Cake/Model/Model.php	/^	public function hasField($name, $checkVirtual = false) {$/;"	f
hasMany	lib/Cake/Model/Model.php	/^	public $hasMany = array();$/;"	v
hasMethod	lib/Cake/Model/Model.php	/^	public function hasMethod($method) {$/;"	f
hasOne	lib/Cake/Model/Model.php	/^	public $hasOne = array();$/;"	v
id	lib/Cake/Model/Model.php	/^					$this->id = $fieldValue;$/;"	v
id	lib/Cake/Model/Model.php	/^			$id = $this->getID();$/;"	v
id	lib/Cake/Model/Model.php	/^			$id = $this->id[0];$/;"	v
id	lib/Cake/Model/Model.php	/^			$this->id = $_id;$/;"	v
id	lib/Cake/Model/Model.php	/^			$this->id = $id;$/;"	v
id	lib/Cake/Model/Model.php	/^			$this->id = false;$/;"	v
id	lib/Cake/Model/Model.php	/^		$id = $this->id;$/;"	v
id	lib/Cake/Model/Model.php	/^		$this->id = $id;$/;"	v
id	lib/Cake/Model/Model.php	/^		$this->id = $this->getID();$/;"	v
id	lib/Cake/Model/Model.php	/^		$this->id = false;$/;"	v
id	lib/Cake/Model/Model.php	/^	public $id = false;$/;"	v
idField	lib/Cake/Model/Model.php	/^			$idField = $db->name($Model->primaryKey);$/;"	v
ids	lib/Cake/Model/Model.php	/^		$ids = $this->find('all', array_merge(array($/;"	v
ids	lib/Cake/Model/Model.php	/^		$ids = Hash::extract($ids, "{n}.{$this->alias}.{$this->primaryKey}");$/;"	v
implementedEvents	lib/Cake/Model/Model.php	/^	public function implementedEvents() {$/;"	f
included	lib/Cake/Model/Model.php	/^		$included = array_intersect($foreignKeys, array_keys($data));$/;"	v
invalidFields	lib/Cake/Model/Model.php	/^	public function invalidFields($options = array()) {$/;"	f
invalidate	lib/Cake/Model/Model.php	/^	public function invalidate($field, $value = true) {$/;"	f
isEmpty	lib/Cake/Model/Model.php	/^			$isEmpty = empty($values) || (isset($values[$association]) && empty($values[$association]));$/;"	v
isForeignKey	lib/Cake/Model/Model.php	/^	public function isForeignKey($field) {$/;"	f
isUUID	lib/Cake/Model/Model.php	/^			$isUUID = !empty($Model->primaryKey) && $Model->_isUUIDField($Model->primaryKey);$/;"	v
isUnique	lib/Cake/Model/Model.php	/^	public function isUnique($fields, $or = true) {$/;"	f
isVirtualField	lib/Cake/Model/Model.php	/^	public function isVirtualField($field) {$/;"	f
j	lib/Cake/Model/Model.php	/^						$j = array_search($this->primaryKey, $fields);$/;"	v
joinModel	lib/Cake/Model/Model.php	/^	public function joinModel($assoc, $keys = array()) {$/;"	f
keepExisting	lib/Cake/Model/Model.php	/^			$keepExisting = $habtm['unique'] === 'keepExisting';$/;"	v
key	lib/Cake/Model/Model.php	/^				$key = $this->belongsTo[$association]['foreignKey'];$/;"	v
key	lib/Cake/Model/Model.php	/^			$key = $this->{$type}[$association]['foreignKey'];$/;"	v
keyPresentAndEmpty	lib/Cake/Model/Model.php	/^			$keyPresentAndEmpty = ($/;"	v
keys	lib/Cake/Model/Model.php	/^				$keys = $this->find('first', array($/;"	v
keys	lib/Cake/Model/Model.php	/^			$keys = $this->data[$this->alias];$/;"	v
links	lib/Cake/Model/Model.php	/^				$links = $Model->find('all', array($/;"	v
list	lib/Cake/Model/Model.php	/^					$list = array("{n}.{$this->alias}.{$this->primaryKey}", '{n}.' . $query['fields'][0], null);$/;"	v
list	lib/Cake/Model/Model.php	/^					$list = array('{n}.' . $query['fields'][0], '{n}.' . $query['fields'][1], '{n}.' . $query['fields'][2]);$/;"	v
list	lib/Cake/Model/Model.php	/^					$list = array('{n}.' . $query['fields'][0], '{n}.' . $query['fields'][1], null);$/;"	v
list	lib/Cake/Model/Model.php	/^				$list = array("{n}.{$this->alias}.{$this->primaryKey}", "{n}.{$this->alias}.{$this->displayField}", null);$/;"	v
merge	lib/Cake/Model/Model.php	/^			$merge = array('actsAs', 'findMethods');$/;"	v
model	lib/Cake/Model/Model.php	/^			$model = array('class' => $plugin . $className, 'alias' => $assoc);$/;"	v
model	lib/Cake/Model/Model.php	/^		$model = null;$/;"	v
models	lib/Cake/Model/Model.php	/^					$models = array_keys($this->{$assoc});$/;"	v
models	lib/Cake/Model/Model.php	/^			$models = Hash::normalize((array)$models, false);$/;"	v
models	lib/Cake/Model/Model.php	/^		$models = array_keys($this->getAssociated());$/;"	v
name	lib/Cake/Model/Model.php	/^			$name = explode('.', $name);$/;"	v
name	lib/Cake/Model/Model.php	/^			$this->name = (isset($name) ? $name : get_class($this));$/;"	v
name	lib/Cake/Model/Model.php	/^	public $name = null;$/;"	v
neighbors	lib/Cake/Model/Model.php	/^		$neighbors = $this->find('all', $query);$/;"	v
newData	lib/Cake/Model/Model.php	/^			$newData = $newValues = $newJoins = array();$/;"	v
newValues	lib/Cake/Model/Model.php	/^					$newValues = array_values($newValues);$/;"	v
now	lib/Cake/Model/Model.php	/^		$now = time();$/;"	v
old	lib/Cake/Model/Model.php	/^		$old = $this->find('first', array($/;"	v
oldConfig	lib/Cake/Model/Model.php	/^		$oldConfig = $this->useDbConfig;$/;"	v
oldDb	lib/Cake/Model/Model.php	/^			$oldDb = ConnectionManager::getDataSource($oldConfig);$/;"	v
oldJoin	lib/Cake/Model/Model.php	/^						$oldJoin = $link[$join][$habtm['associationForeignKey']];$/;"	v
oldLinks	lib/Cake/Model/Model.php	/^				$oldLinks = Hash::extract($links, "{n}.{$associationForeignKey}");$/;"	v
onError	lib/Cake/Model/Model.php	/^	public function onError() {$/;"	f
one	lib/Cake/Model/Model.php	/^				$one = $this->_normalizeXmlData(Xml::toArray($one));$/;"	v
one	lib/Cake/Model/Model.php	/^				$one = Set::reverse($one);$/;"	v
options	lib/Cake/Model/Model.php	/^						$options = $Model->_addToWhiteList($key, $options);$/;"	v
options	lib/Cake/Model/Model.php	/^					$options = $Model->_addToWhiteList($key, $options);$/;"	v
options	lib/Cake/Model/Model.php	/^				$options = $this->_addToWhiteList($key, $options);$/;"	v
options	lib/Cake/Model/Model.php	/^			$options = $validate + $defaults;$/;"	v
options	lib/Cake/Model/Model.php	/^			$options = $validate + array('validate' => false, 'fieldList' => array($name));$/;"	v
options	lib/Cake/Model/Model.php	/^			$options = compact('validate', 'fieldList') + $defaults;$/;"	v
options	lib/Cake/Model/Model.php	/^		$options = array('validate' => $validate, 'fieldList' => array($name));$/;"	v
or	lib/Cake/Model/Model.php	/^				$or = $fields[count($fields) - 1];$/;"	v
order	lib/Cake/Model/Model.php	/^	public $order = null;$/;"	v
params	lib/Cake/Model/Model.php	/^		$params = func_get_args();$/;"	v
parent	lib/Cake/Model/Model.php	/^			$parent = $query['parent'];$/;"	v
parent	lib/Cake/Model/Model.php	/^		$parent = 'parent_id';$/;"	v
parentClass	lib/Cake/Model/Model.php	/^			$parentClass = get_parent_class($this);$/;"	v
plugin	lib/Cake/Model/Model.php	/^					$plugin = null;$/;"	v
plugin	lib/Cake/Model/Model.php	/^			$this->plugin = (isset($plugin) ? $plugin : $this->plugin);$/;"	v
plugin	lib/Cake/Model/Model.php	/^	public $plugin = null;$/;"	v
pluralized	lib/Cake/Model/Model.php	/^		$pluralized = Inflector::pluralize($this->alias);$/;"	v
pluralizedAssociation	lib/Cake/Model/Model.php	/^				$pluralizedAssociation = Inflector::pluralize($className['className']);$/;"	v
prevVal	lib/Cake/Model/Model.php	/^			$prevVal = Hash::get($results[0], $field);$/;"	v
primaryAdded	lib/Cake/Model/Model.php	/^				$primaryAdded = true;$/;"	v
primaryAdded	lib/Cake/Model/Model.php	/^			$primaryAdded = false;$/;"	v
primaryKey	lib/Cake/Model/Model.php	/^			$this->primaryKey = 'id';$/;"	v
primaryKey	lib/Cake/Model/Model.php	/^	public $primaryKey = null;$/;"	v
query	lib/Cake/Model/Model.php	/^				$query = $this->{'_find' . ucfirst($query['type'])}('before', $query);$/;"	v
query	lib/Cake/Model/Model.php	/^			$query = $event->result === true ? $event->data[0] : $event->result;$/;"	v
query	lib/Cake/Model/Model.php	/^			$query = $this->{'_find' . ucfirst($type)}('before', $query);$/;"	v
query	lib/Cake/Model/Model.php	/^		$query = $this->buildQuery($type, $query);$/;"	v
query	lib/Cake/Model/Model.php	/^		$query = array_merge($/;"	v
query	lib/Cake/Model/Model.php	/^	public function query($sql) {$/;"	f
read	lib/Cake/Model/Model.php	/^	public function read($fields = null, $id = null) {$/;"	f
records	lib/Cake/Model/Model.php	/^				$records = $Model->find('all', array($/;"	v
records	lib/Cake/Model/Model.php	/^			$records = $Model->find('all', array($/;"	v
recursive	lib/Cake/Model/Model.php	/^				$recursive = (empty($conditions) ? -1 : 0);$/;"	v
recursive	lib/Cake/Model/Model.php	/^			$recursive = -1;$/;"	v
recursive	lib/Cake/Model/Model.php	/^		$recursive = $this->recursive;$/;"	v
recursive	lib/Cake/Model/Model.php	/^	public $recursive = 1;$/;"	v
resetAssociations	lib/Cake/Model/Model.php	/^	public function resetAssociations() {$/;"	f
restore	lib/Cake/Model/Model.php	/^			$restore = $db->cacheSources;$/;"	v
result	lib/Cake/Model/Model.php	/^				$result = $result && $this->delete($id, $cascade);$/;"	v
result	lib/Cake/Model/Model.php	/^			$result = $this->save($data, $options);$/;"	v
result	lib/Cake/Model/Model.php	/^			$result = true;$/;"	v
result	lib/Cake/Model/Model.php	/^		$result = $this->Behaviors->dispatchMethod($this, $method, $params);$/;"	v
result	lib/Cake/Model/Model.php	/^		$result = array();$/;"	v
results	lib/Cake/Model/Model.php	/^			$results = $this->_filterResults($results);$/;"	v
results	lib/Cake/Model/Model.php	/^		$results = $this->getDataSource()->read($this, $query);$/;"	v
return	lib/Cake/Model/Model.php	/^		$return = array();$/;"	v
save	lib/Cake/Model/Model.php	/^	public function save($data = null, $validate = true, $fieldList = array()) {$/;"	f
saveAll	lib/Cake/Model/Model.php	/^	public function saveAll($data = array(), $options = array()) {$/;"	f
saveAssociated	lib/Cake/Model/Model.php	/^	public function saveAssociated($data = null, $options = array()) {$/;"	f
saveField	lib/Cake/Model/Model.php	/^	public function saveField($name, $value, $validate = false) {$/;"	f
saveMany	lib/Cake/Model/Model.php	/^	public function saveMany($data = null, $options = array()) {$/;"	f
saved	lib/Cake/Model/Model.php	/^							$saved = $Model->save($values, $options);$/;"	v
saved	lib/Cake/Model/Model.php	/^							$saved = $Model->saveAssociated($values, array('atomic' => false) + $options);$/;"	v
saved	lib/Cake/Model/Model.php	/^					$saved = $Model->save($values, array('atomic' => false) + $options);$/;"	v
saved	lib/Cake/Model/Model.php	/^					$saved = $Model->saveAssociated($values, array('atomic' => false) + $options);$/;"	v
saved	lib/Cake/Model/Model.php	/^					$saved = $this->save($record, $options);$/;"	v
saved	lib/Cake/Model/Model.php	/^					$saved = $this->saveAssociated($record, array_merge($options, array('atomic' => false)));$/;"	v
saved	lib/Cake/Model/Model.php	/^					$saved = false;$/;"	v
saved	lib/Cake/Model/Model.php	/^			$saved = false;$/;"	v
savedAssociations	lib/Cake/Model/Model.php	/^			$savedAssociations = $this->__backAssociation;$/;"	v
schema	lib/Cake/Model/Model.php	/^			$schema = (array)$this->schema();$/;"	v
schema	lib/Cake/Model/Model.php	/^		$schema = array_keys((array)$this->schema());$/;"	v
schema	lib/Cake/Model/Model.php	/^	public function schema($field = false) {$/;"	f
schemaName	lib/Cake/Model/Model.php	/^		$this->schemaName = (empty($this->schemaName) ? $db->getSchemaName() : $this->schemaName);$/;"	v
schemaName	lib/Cake/Model/Model.php	/^	public $schemaName = null;$/;"	v
set	lib/Cake/Model/Model.php	/^	public function set($one, $two = null) {$/;"	f
setDataSource	lib/Cake/Model/Model.php	/^	public function setDataSource($dataSource = null) {$/;"	f
setInsertID	lib/Cake/Model/Model.php	/^	public function setInsertID($id) {$/;"	f
setSource	lib/Cake/Model/Model.php	/^	public function setSource($tableName) {$/;"	f
sources	lib/Cake/Model/Model.php	/^			$sources = $db->listSources();$/;"	v
startQuote	lib/Cake/Model/Model.php	/^		$startQuote = isset($db->startQuote) ? $db->startQuote : null;$/;"	v
success	lib/Cake/Model/Model.php	/^					$success = false;$/;"	v
success	lib/Cake/Model/Model.php	/^				$success = $this->data;$/;"	v
success	lib/Cake/Model/Model.php	/^				$success = (bool)$db->update($this, $fields, $values);$/;"	v
success	lib/Cake/Model/Model.php	/^			$success = false;$/;"	v
success	lib/Cake/Model/Model.php	/^		$success = true;$/;"	v
table	lib/Cake/Model/Model.php	/^			$this->table = $this->useTable;$/;"	v
table	lib/Cake/Model/Model.php	/^			$this->table = Inflector::tableize($this->name);$/;"	v
table	lib/Cake/Model/Model.php	/^		$this->table = $this->useTable = $tableName;$/;"	v
table	lib/Cake/Model/Model.php	/^	public $table = false;$/;"	v
tablePrefix	lib/Cake/Model/Model.php	/^				$this->tablePrefix = $db->config['prefix'];$/;"	v
tablePrefix	lib/Cake/Model/Model.php	/^			$this->tablePrefix = $db->config['prefix'];$/;"	v
tablePrefix	lib/Cake/Model/Model.php	/^	public $tablePrefix = null;$/;"	v
tableToModel	lib/Cake/Model/Model.php	/^	public $tableToModel = array();$/;"	v
tables	lib/Cake/Model/Model.php	/^						$tables = array($this->table, $this->{$class}->table);$/;"	v
time	lib/Cake/Model/Model.php	/^				$time = call_user_func($colType['formatter'], $colType['format']);$/;"	v
time	lib/Cake/Model/Model.php	/^			$time = $now;$/;"	v
timeFields	lib/Cake/Model/Model.php	/^		$timeFields = array('H' => 'hour', 'i' => 'min', 's' => 'sec');$/;"	v
transactionBegun	lib/Cake/Model/Model.php	/^			$transactionBegun = $db->begin();$/;"	v
type	lib/Cake/Model/Model.php	/^			$type = $associations[$association];$/;"	v
type	lib/Cake/Model/Model.php	/^		$type = $this->getColumnType($field);$/;"	v
unbindModel	lib/Cake/Model/Model.php	/^	public function unbindModel($params, $reset = true) {$/;"	f
updateAll	lib/Cake/Model/Model.php	/^	public function updateAll($fields, $conditions = true) {$/;"	f
updateCounterCache	lib/Cake/Model/Model.php	/^	public function updateCounterCache($keys = array(), $created = false) {$/;"	f
useDbConfig	lib/Cake/Model/Model.php	/^			$this->useDbConfig = $dataSource;$/;"	v
useDbConfig	lib/Cake/Model/Model.php	/^			$this->useDbConfig = $ds;$/;"	v
useDbConfig	lib/Cake/Model/Model.php	/^	public $useDbConfig = 'default';$/;"	v
useNewDate	lib/Cake/Model/Model.php	/^		$useNewDate = (isset($data['year']) || isset($data['month']) ||$/;"	v
useTable	lib/Cake/Model/Model.php	/^				$this->useTable = Inflector::tableize($this->name);$/;"	v
useTable	lib/Cake/Model/Model.php	/^			$this->useTable = $table;$/;"	v
useTable	lib/Cake/Model/Model.php	/^			$this->useTable = false;$/;"	v
useTable	lib/Cake/Model/Model.php	/^	public $useTable = null;$/;"	v
v	lib/Cake/Model/Model.php	/^					$v = $v[$n];$/;"	v
validate	lib/Cake/Model/Model.php	/^	public $validate = array();$/;"	v
validateAssociated	lib/Cake/Model/Model.php	/^	public function validateAssociated(&$data, $options = array()) {$/;"	f
validateMany	lib/Cake/Model/Model.php	/^	public function validateMany(&$data, $options = array()) {$/;"	f
validates	lib/Cake/Model/Model.php	/^						$validates = false;$/;"	v
validates	lib/Cake/Model/Model.php	/^					$validates = $Model->create(null) !== null;$/;"	v
validates	lib/Cake/Model/Model.php	/^					$validates = ($validates && ($saved === true || (is_array($saved) && !in_array(false, $saved, true))));$/;"	v
validates	lib/Cake/Model/Model.php	/^				$validates = ($saved === true || (is_array($saved) && !in_array(false, $saved, true)));$/;"	v
validates	lib/Cake/Model/Model.php	/^			$validates = $Model->create(null) !== null;$/;"	v
validates	lib/Cake/Model/Model.php	/^			$validates = $this->create(null) !== null;$/;"	v
validates	lib/Cake/Model/Model.php	/^			$validates = $this->validateAssociated($data, $options);$/;"	v
validates	lib/Cake/Model/Model.php	/^			$validates = $this->validateMany($data, $options);$/;"	v
validates	lib/Cake/Model/Model.php	/^			$validates = ($validates && ($saved === true || (is_array($saved) && !in_array(false, $saved, true))));$/;"	v
validates	lib/Cake/Model/Model.php	/^			$validates = false;$/;"	v
validates	lib/Cake/Model/Model.php	/^		$validates = true;$/;"	v
validates	lib/Cake/Model/Model.php	/^	public function validates($options = array()) {$/;"	f
validationDomain	lib/Cake/Model/Model.php	/^	public $validationDomain = null;$/;"	v
validationErrors	lib/Cake/Model/Model.php	/^			$this->validationErrors = $validationErrors[$this->alias];$/;"	v
validationErrors	lib/Cake/Model/Model.php	/^			$this->validationErrors = array();$/;"	v
validationErrors	lib/Cake/Model/Model.php	/^			$this->validationErrors = array_merge($this->validationErrors, $validationErrors);$/;"	v
validationErrors	lib/Cake/Model/Model.php	/^		$this->validationErrors = $validationErrors = array();$/;"	v
validationErrors	lib/Cake/Model/Model.php	/^		$this->validationErrors = $validationErrors;$/;"	v
validationErrors	lib/Cake/Model/Model.php	/^		$this->validationErrors = array();$/;"	v
validationErrors	lib/Cake/Model/Model.php	/^	public $validationErrors = array();$/;"	v
validator	lib/Cake/Model/Model.php	/^	public function validator(ModelValidator $instance = null) {$/;"	f
value	lib/Cake/Model/Model.php	/^						$value = array();$/;"	v
value	lib/Cake/Model/Model.php	/^					$value = $this->data[$this->alias][$field];$/;"	v
value	lib/Cake/Model/Model.php	/^					$value = array();$/;"	v
value	lib/Cake/Model/Model.php	/^				$value = $this->id;$/;"	v
value	lib/Cake/Model/Model.php	/^				$value = null;$/;"	v
values	lib/Cake/Model/Model.php	/^						$values = array_merge(array($key => $this->id), $values, array($key => $this->id));$/;"	v
values	lib/Cake/Model/Model.php	/^					$values = array($id, $row);$/;"	v
virtualFields	lib/Cake/Model/Model.php	/^	public $virtualFields = array();$/;"	v
whitelist	lib/Cake/Model/Model.php	/^				$this->whitelist = $_whitelist;$/;"	v
whitelist	lib/Cake/Model/Model.php	/^				$this->whitelist = $options['fieldList'];$/;"	v
whitelist	lib/Cake/Model/Model.php	/^				$this->whitelist = $options['fieldList'][$this->alias];$/;"	v
whitelist	lib/Cake/Model/Model.php	/^			$this->whitelist = $_whitelist;$/;"	v
whitelist	lib/Cake/Model/Model.php	/^			$this->whitelist = array();$/;"	v
whitelist	lib/Cake/Model/Model.php	/^		$this->whitelist = $_whitelist;$/;"	v
whitelist	lib/Cake/Model/Model.php	/^	public $whitelist = array();$/;"	v
with	lib/Cake/Model/Model.php	/^			$with = key($assoc);$/;"	v
withModel	lib/Cake/Model/Model.php	/^				$withModel = is_array($habtm['with']) ? key($habtm['with']) : $habtm['with'];$/;"	v
ModelBehavior	lib/Cake/Model/ModelBehavior.php	/^class ModelBehavior extends Object {$/;"	c
_addToWhitelist	lib/Cake/Model/ModelBehavior.php	/^	protected function _addToWhitelist(Model $model, $field) {$/;"	f
afterDelete	lib/Cake/Model/ModelBehavior.php	/^	public function afterDelete(Model $model) {$/;"	f
afterFind	lib/Cake/Model/ModelBehavior.php	/^	public function afterFind(Model $model, $results, $primary = false) {$/;"	f
afterSave	lib/Cake/Model/ModelBehavior.php	/^	public function afterSave(Model $model, $created, $options = array()) {$/;"	f
afterValidate	lib/Cake/Model/ModelBehavior.php	/^	public function afterValidate(Model $model) {$/;"	f
beforeDelete	lib/Cake/Model/ModelBehavior.php	/^	public function beforeDelete(Model $model, $cascade = true) {$/;"	f
beforeFind	lib/Cake/Model/ModelBehavior.php	/^	public function beforeFind(Model $model, $query) {$/;"	f
beforeSave	lib/Cake/Model/ModelBehavior.php	/^	public function beforeSave(Model $model, $options = array()) {$/;"	f
beforeValidate	lib/Cake/Model/ModelBehavior.php	/^	public function beforeValidate(Model $model, $options = array()) {$/;"	f
cleanup	lib/Cake/Model/ModelBehavior.php	/^	public function cleanup(Model $model) {$/;"	f
mapMethods	lib/Cake/Model/ModelBehavior.php	/^	public $mapMethods = array();$/;"	v
onError	lib/Cake/Model/ModelBehavior.php	/^	public function onError(Model $model, $error) {$/;"	f
settings	lib/Cake/Model/ModelBehavior.php	/^	public $settings = array();$/;"	v
setup	lib/Cake/Model/ModelBehavior.php	/^	public function setup(Model $model, $config = array()) {$/;"	f
ModelValidator	lib/Cake/Model/ModelValidator.php	/^class ModelValidator implements ArrayAccess, IteratorAggregate, Countable {$/;"	c
__construct	lib/Cake/Model/ModelValidator.php	/^	public function __construct(Model $Model) {$/;"	f
_behaviors	lib/Cake/Model/ModelValidator.php	/^		$this->_behaviors = $behaviors;$/;"	v
_behaviors	lib/Cake/Model/ModelValidator.php	/^	protected $_behaviors = array();$/;"	v
_fields	lib/Cake/Model/ModelValidator.php	/^			$this->_fields = array();$/;"	v
_fields	lib/Cake/Model/ModelValidator.php	/^		$this->_fields = array();$/;"	v
_fields	lib/Cake/Model/ModelValidator.php	/^	protected $_fields = array();$/;"	v
_methods	lib/Cake/Model/ModelValidator.php	/^	protected $_methods = array();$/;"	v
_model	lib/Cake/Model/ModelValidator.php	/^		$this->_model = $Model;$/;"	v
_model	lib/Cake/Model/ModelValidator.php	/^	protected $_model = array();$/;"	v
_modelMethods	lib/Cake/Model/ModelValidator.php	/^	protected $_modelMethods = array();$/;"	v
_parseRules	lib/Cake/Model/ModelValidator.php	/^	protected function _parseRules() {$/;"	f
_triggerBeforeValidate	lib/Cake/Model/ModelValidator.php	/^	protected function _triggerBeforeValidate($options = array()) {$/;"	f
_validate	lib/Cake/Model/ModelValidator.php	/^			$this->_validate = array();$/;"	v
_validate	lib/Cake/Model/ModelValidator.php	/^		$this->_validate = $this->_model->validate;$/;"	v
_validate	lib/Cake/Model/ModelValidator.php	/^	protected $_validate = array();$/;"	v
_validateWithModels	lib/Cake/Model/ModelValidator.php	/^	protected function _validateWithModels($options) {$/;"	f
_validationList	lib/Cake/Model/ModelValidator.php	/^	protected function _validationList($fieldList = array()) {$/;"	f
add	lib/Cake/Model/ModelValidator.php	/^	public function add($field, $name, $rule = null) {$/;"	f
associations	lib/Cake/Model/ModelValidator.php	/^		$associations = $model->getAssociated();$/;"	v
behaviors	lib/Cake/Model/ModelValidator.php	/^		$behaviors = $this->_model->Behaviors->enabled();$/;"	v
count	lib/Cake/Model/ModelValidator.php	/^	public function count() {$/;"	f
data	lib/Cake/Model/ModelValidator.php	/^			$data = $model->data[$assoc];$/;"	v
data	lib/Cake/Model/ModelValidator.php	/^			$data = isset($model->data[$model->alias]) ? $model->data[$model->alias] : array();$/;"	v
data	lib/Cake/Model/ModelValidator.php	/^		$data = $model->data;$/;"	v
errors	lib/Cake/Model/ModelValidator.php	/^			$errors = $field->validate($data, $exists);$/;"	v
errors	lib/Cake/Model/ModelValidator.php	/^			$errors = $this->_validateWithModels($options);$/;"	v
errors	lib/Cake/Model/ModelValidator.php	/^		$errors = $this->errors($options);$/;"	v
errors	lib/Cake/Model/ModelValidator.php	/^	public function errors($options = array()) {$/;"	f
event	lib/Cake/Model/ModelValidator.php	/^		$event = new CakeEvent('Model.beforeValidate', $model, array($options));$/;"	v
exists	lib/Cake/Model/ModelValidator.php	/^		$exists = $model->exists();$/;"	v
fieldList	lib/Cake/Model/ModelValidator.php	/^				$fieldList = $options['fieldList'];$/;"	v
fieldList	lib/Cake/Model/ModelValidator.php	/^				$fieldList = $options['fieldList'][$model->alias];$/;"	v
fieldList	lib/Cake/Model/ModelValidator.php	/^		$fieldList = $model->whitelist;$/;"	v
fields	lib/Cake/Model/ModelValidator.php	/^		$fields = $this->_validationList($fieldList);$/;"	v
getField	lib/Cake/Model/ModelValidator.php	/^	public function getField($name = null) {$/;"	f
getIterator	lib/Cake/Model/ModelValidator.php	/^	public function getIterator() {$/;"	f
getMethods	lib/Cake/Model/ModelValidator.php	/^	public function getMethods() {$/;"	f
getModel	lib/Cake/Model/ModelValidator.php	/^	public function getModel() {$/;"	f
invalidate	lib/Cake/Model/ModelValidator.php	/^	public function invalidate($field, $message = true) {$/;"	f
methods	lib/Cake/Model/ModelValidator.php	/^			$methods = $this->getMethods();$/;"	v
methods	lib/Cake/Model/ModelValidator.php	/^		$methods = $this->_modelMethods;$/;"	v
methods	lib/Cake/Model/ModelValidator.php	/^		$methods = $this->getMethods();$/;"	v
model	lib/Cake/Model/ModelValidator.php	/^		$model = $this->getModel();$/;"	v
newData	lib/Cake/Model/ModelValidator.php	/^			$newData = array();$/;"	v
offsetExists	lib/Cake/Model/ModelValidator.php	/^	public function offsetExists($field) {$/;"	f
offsetGet	lib/Cake/Model/ModelValidator.php	/^	public function offsetGet($field) {$/;"	f
offsetSet	lib/Cake/Model/ModelValidator.php	/^	public function offsetSet($field, $rules) {$/;"	f
offsetUnset	lib/Cake/Model/ModelValidator.php	/^	public function offsetUnset($field) {$/;"	f
recordData	lib/Cake/Model/ModelValidator.php	/^			$recordData = $data[$model->alias];$/;"	v
remove	lib/Cake/Model/ModelValidator.php	/^	public function remove($field, $rule = null) {$/;"	f
rule	lib/Cake/Model/ModelValidator.php	/^			$rule = (is_string($name)) ? array($name => $rule) : $name;$/;"	v
rules	lib/Cake/Model/ModelValidator.php	/^			$rules = new CakeValidationSet($field, $rules);$/;"	v
setValidationDomain	lib/Cake/Model/ModelValidator.php	/^	public function setValidationDomain($validationDomain = null) {$/;"	f
valid	lib/Cake/Model/ModelValidator.php	/^				$valid = ($valid && $model->{$join}->validator()->validates($options));$/;"	v
valid	lib/Cake/Model/ModelValidator.php	/^		$valid = true;$/;"	v
validateAssociated	lib/Cake/Model/ModelValidator.php	/^	public function validateAssociated(&$data, $options = array()) {$/;"	f
validateList	lib/Cake/Model/ModelValidator.php	/^		$validateList = array();$/;"	v
validateMany	lib/Cake/Model/ModelValidator.php	/^	public function validateMany(&$data, $options = array()) {$/;"	f
validates	lib/Cake/Model/ModelValidator.php	/^						$validates = !in_array(false, Hash::flatten($validates), true);$/;"	v
validates	lib/Cake/Model/ModelValidator.php	/^						$validates = $model->{$association}->set($values) && $model->{$association}->validates($options);$/;"	v
validates	lib/Cake/Model/ModelValidator.php	/^						$validates = $model->{$association}->validateAssociated($values, $options);$/;"	v
validates	lib/Cake/Model/ModelValidator.php	/^					$validates = $model->{$association}->validateMany($values, $options);$/;"	v
validates	lib/Cake/Model/ModelValidator.php	/^				$validates = $model->set($record) && $model->validates($options);$/;"	v
validates	lib/Cake/Model/ModelValidator.php	/^				$validates = $model->validateAssociated($record, $options);$/;"	v
validates	lib/Cake/Model/ModelValidator.php	/^				$validates = false;$/;"	v
validates	lib/Cake/Model/ModelValidator.php	/^				$validates = true;$/;"	v
validates	lib/Cake/Model/ModelValidator.php	/^			$validates = true;$/;"	v
validates	lib/Cake/Model/ModelValidator.php	/^	public function validates($options = array()) {$/;"	f
validationDomain	lib/Cake/Model/ModelValidator.php	/^			$validationDomain = 'default';$/;"	v
validationErrors	lib/Cake/Model/ModelValidator.php	/^		$this->validationErrors = array();$/;"	v
Permission	lib/Cake/Model/Permission.php	/^class Permission extends AppModel {$/;"	c
__construct	lib/Cake/Model/Permission.php	/^	public function __construct() {$/;"	f
aco	lib/Cake/Model/Permission.php	/^		$aco = Hash::extract($obj, 'Aco.0.' . $this->Aco->alias . '.id');$/;"	v
aco	lib/Cake/Model/Permission.php	/^		$aco = current($aco);$/;"	v
acoIDs	lib/Cake/Model/Permission.php	/^		$acoIDs = Hash::extract($acoPath, '{n}.' . $this->Aco->alias . '.id');$/;"	v
acoPath	lib/Cake/Model/Permission.php	/^		$acoPath = $this->Aco->node($aco);$/;"	v
action	lib/Cake/Model/Permission.php	/^					$action = '_' . $action;$/;"	v
actions	lib/Cake/Model/Permission.php	/^				$actions = array('_' . $actions);$/;"	v
actsAs	lib/Cake/Model/Permission.php	/^	public $actsAs = null;$/;"	v
allow	lib/Cake/Model/Permission.php	/^	public function allow($aro, $aco, $actions = '*', $value = 1) {$/;"	f
aro	lib/Cake/Model/Permission.php	/^		$aro = Hash::extract($obj, 'Aro.0.' . $this->Aro->alias . '.id');$/;"	v
aro	lib/Cake/Model/Permission.php	/^		$aro = current($aro);$/;"	v
aroPath	lib/Cake/Model/Permission.php	/^		$aroPath = $this->Aro->node($aro);$/;"	v
belongsTo	lib/Cake/Model/Permission.php	/^	public $belongsTo = array('Aro', 'Aco');$/;"	v
cacheQueries	lib/Cake/Model/Permission.php	/^	public $cacheQueries = false;$/;"	v
check	lib/Cake/Model/Permission.php	/^	public function check($aro, $aco, $action = '*') {$/;"	f
config	lib/Cake/Model/Permission.php	/^		$config = Configure::read('Acl.database');$/;"	v
count	lib/Cake/Model/Permission.php	/^		$count = count($aroPath);$/;"	v
getAclLink	lib/Cake/Model/Permission.php	/^	public function getAclLink($aro, $aco) {$/;"	f
getAcoKeys	lib/Cake/Model/Permission.php	/^	public function getAcoKeys($keys) {$/;"	f
id	lib/Cake/Model/Permission.php	/^			$this->id = null;$/;"	v
inherited	lib/Cake/Model/Permission.php	/^		$inherited = array();$/;"	v
keys	lib/Cake/Model/Permission.php	/^		$keys = array_keys($keys);$/;"	v
newKeys	lib/Cake/Model/Permission.php	/^		$newKeys = array();$/;"	v
obj	lib/Cake/Model/Permission.php	/^		$obj = array();$/;"	v
permAlias	lib/Cake/Model/Permission.php	/^			$permAlias = $this->alias;$/;"	v
permKeys	lib/Cake/Model/Permission.php	/^		$permKeys = $this->getAcoKeys($this->schema());$/;"	v
perms	lib/Cake/Model/Permission.php	/^			$perms = $this->find('all', array($/;"	v
perms	lib/Cake/Model/Permission.php	/^			$perms = Hash::extract($perms, '{n}.' . $this->alias);$/;"	v
perms	lib/Cake/Model/Permission.php	/^		$perms = $this->getAclLink($aro, $aco);$/;"	v
save	lib/Cake/Model/Permission.php	/^			$save = $perms[0][$this->alias];$/;"	v
save	lib/Cake/Model/Permission.php	/^			$save = array_combine($permKeys, array_pad(array(), count($permKeys), $value));$/;"	v
save	lib/Cake/Model/Permission.php	/^		$save = array();$/;"	v
useDbConfig	lib/Cake/Model/Permission.php	/^			$this->useDbConfig = $config;$/;"	v
useTable	lib/Cake/Model/Permission.php	/^	public $useTable = 'aros_acos';$/;"	v
CakeValidationRule	lib/Cake/Model/Validator/CakeValidationRule.php	/^class CakeValidationRule {$/;"	c
__construct	lib/Cake/Model/Validator/CakeValidationRule.php	/^	public function __construct($validator = array()) {$/;"	f
_addValidatorProps	lib/Cake/Model/Validator/CakeValidationRule.php	/^	protected function _addValidatorProps($validator = array()) {$/;"	f
_getPropertiesArray	lib/Cake/Model/Validator/CakeValidationRule.php	/^	protected function _getPropertiesArray() {$/;"	f
_parseRule	lib/Cake/Model/Validator/CakeValidationRule.php	/^	protected function _parseRule($field, &$data) {$/;"	f
_passedOptions	lib/Cake/Model/Validator/CakeValidationRule.php	/^	protected $_passedOptions = array();$/;"	v
_recordExists	lib/Cake/Model/Validator/CakeValidationRule.php	/^		$this->_recordExists = false;$/;"	v
_recordExists	lib/Cake/Model/Validator/CakeValidationRule.php	/^	protected $_recordExists = false;$/;"	v
_rule	lib/Cake/Model/Validator/CakeValidationRule.php	/^			$this->_rule = $this->rule;$/;"	v
_rule	lib/Cake/Model/Validator/CakeValidationRule.php	/^			$this->_rule = $this->rule[0];$/;"	v
_rule	lib/Cake/Model/Validator/CakeValidationRule.php	/^	protected $_rule = null;$/;"	v
_ruleParams	lib/Cake/Model/Validator/CakeValidationRule.php	/^			$this->_ruleParams = array($data[$field]);$/;"	v
_ruleParams	lib/Cake/Model/Validator/CakeValidationRule.php	/^			$this->_ruleParams = array_merge(array($data[$field]), array_values(array_slice($this->rule, 1)));$/;"	v
_ruleParams	lib/Cake/Model/Validator/CakeValidationRule.php	/^	protected $_ruleParams = array();$/;"	v
_valid	lib/Cake/Model/Validator/CakeValidationRule.php	/^			$this->_valid = call_user_func_array($methods[$rule], $this->_ruleParams);$/;"	v
_valid	lib/Cake/Model/Validator/CakeValidationRule.php	/^			$this->_valid = call_user_func_array(array('Validation', $this->_rule), $this->_ruleParams);$/;"	v
_valid	lib/Cake/Model/Validator/CakeValidationRule.php	/^			$this->_valid = preg_match($this->_rule, $data[$field]);$/;"	v
_valid	lib/Cake/Model/Validator/CakeValidationRule.php	/^		$this->_valid = true;$/;"	v
_valid	lib/Cake/Model/Validator/CakeValidationRule.php	/^	protected $_valid = true;$/;"	v
allowEmpty	lib/Cake/Model/Validator/CakeValidationRule.php	/^	public $allowEmpty = null;$/;"	v
checkEmpty	lib/Cake/Model/Validator/CakeValidationRule.php	/^	public function checkEmpty($field, &$data) {$/;"	f
checkRequired	lib/Cake/Model/Validator/CakeValidationRule.php	/^	public function checkRequired($field, &$data) {$/;"	f
getOptions	lib/Cake/Model/Validator/CakeValidationRule.php	/^	public function getOptions($key) {$/;"	f
getValidationResult	lib/Cake/Model/Validator/CakeValidationRule.php	/^	public function getValidationResult() {$/;"	f
isEmptyAllowed	lib/Cake/Model/Validator/CakeValidationRule.php	/^	public function isEmptyAllowed() {$/;"	f
isLast	lib/Cake/Model/Validator/CakeValidationRule.php	/^	public function isLast() {$/;"	f
isRequired	lib/Cake/Model/Validator/CakeValidationRule.php	/^	public function isRequired() {$/;"	f
isUpdate	lib/Cake/Model/Validator/CakeValidationRule.php	/^	public function isUpdate($exists = null) {$/;"	f
isValid	lib/Cake/Model/Validator/CakeValidationRule.php	/^	public function isValid() {$/;"	f
last	lib/Cake/Model/Validator/CakeValidationRule.php	/^	public $last = true;$/;"	v
message	lib/Cake/Model/Validator/CakeValidationRule.php	/^	public $message = null;$/;"	v
on	lib/Cake/Model/Validator/CakeValidationRule.php	/^	public $on = null;$/;"	v
process	lib/Cake/Model/Validator/CakeValidationRule.php	/^	public function process($field, &$data, &$methods) {$/;"	f
required	lib/Cake/Model/Validator/CakeValidationRule.php	/^	public $required = null;$/;"	v
reset	lib/Cake/Model/Validator/CakeValidationRule.php	/^	public function reset() {$/;"	f
rule	lib/Cake/Model/Validator/CakeValidationRule.php	/^		$rule = $this->rule;$/;"	v
rule	lib/Cake/Model/Validator/CakeValidationRule.php	/^		$rule = strtolower($this->_rule);$/;"	v
rule	lib/Cake/Model/Validator/CakeValidationRule.php	/^	public $rule = 'blank';$/;"	v
skip	lib/Cake/Model/Validator/CakeValidationRule.php	/^	public function skip() {$/;"	f
validator	lib/Cake/Model/Validator/CakeValidationRule.php	/^			$validator = array('rule' => $validator);$/;"	v
validator	lib/Cake/Model/Validator/CakeValidationRule.php	/^		$validator = $this->_getPropertiesArray();$/;"	v
CakeValidationSet	lib/Cake/Model/Validator/CakeValidationSet.php	/^class CakeValidationSet implements ArrayAccess, IteratorAggregate, Countable {$/;"	c
__construct	lib/Cake/Model/Validator/CakeValidationSet.php	/^	public function __construct($fieldName, $ruleSet) {$/;"	f
_methods	lib/Cake/Model/Validator/CakeValidationSet.php	/^		$this->_methods =& $methods;$/;"	v
_methods	lib/Cake/Model/Validator/CakeValidationSet.php	/^	protected $_methods = array();$/;"	v
_processValidationResponse	lib/Cake/Model/Validator/CakeValidationSet.php	/^	protected function _processValidationResponse($name, $rule) {$/;"	f
_rules	lib/Cake/Model/Validator/CakeValidationSet.php	/^			$this->_rules = array();$/;"	v
_rules	lib/Cake/Model/Validator/CakeValidationSet.php	/^	protected $_rules = array();$/;"	v
_translateArgs	lib/Cake/Model/Validator/CakeValidationSet.php	/^	protected function _translateArgs($args) {$/;"	f
_validationDomain	lib/Cake/Model/Validator/CakeValidationSet.php	/^		$this->_validationDomain = $validationDomain;$/;"	v
_validationDomain	lib/Cake/Model/Validator/CakeValidationSet.php	/^	protected $_validationDomain = null;$/;"	v
args	lib/Cake/Model/Validator/CakeValidationSet.php	/^				$args = $this->_translateArgs($args);$/;"	v
args	lib/Cake/Model/Validator/CakeValidationSet.php	/^				$args = array_slice($message, 1);$/;"	v
args	lib/Cake/Model/Validator/CakeValidationSet.php	/^				$args = array_slice($rule->rule, 1);$/;"	v
args	lib/Cake/Model/Validator/CakeValidationSet.php	/^			$args = $this->_translateArgs($args);$/;"	v
args	lib/Cake/Model/Validator/CakeValidationSet.php	/^			$args = null;$/;"	v
checkRequired	lib/Cake/Model/Validator/CakeValidationSet.php	/^			$checkRequired = $rule->checkRequired($this->field, $data);$/;"	v
count	lib/Cake/Model/Validator/CakeValidationSet.php	/^	public function count() {$/;"	f
errors	lib/Cake/Model/Validator/CakeValidationSet.php	/^		$errors = array();$/;"	v
field	lib/Cake/Model/Validator/CakeValidationSet.php	/^		$this->field = $fieldName;$/;"	v
field	lib/Cake/Model/Validator/CakeValidationSet.php	/^	public $field = null;$/;"	v
getIterator	lib/Cake/Model/Validator/CakeValidationSet.php	/^	public function getIterator() {$/;"	f
getRule	lib/Cake/Model/Validator/CakeValidationSet.php	/^	public function getRule($name) {$/;"	f
getRules	lib/Cake/Model/Validator/CakeValidationSet.php	/^	public function getRules() {$/;"	f
isStopped	lib/Cake/Model/Validator/CakeValidationSet.php	/^	public $isStopped = false;$/;"	v
message	lib/Cake/Model/Validator/CakeValidationSet.php	/^				$message = __d($this->_validationDomain, $name);$/;"	v
message	lib/Cake/Model/Validator/CakeValidationSet.php	/^				$message = __d($this->_validationDomain, $name, $args);$/;"	v
message	lib/Cake/Model/Validator/CakeValidationSet.php	/^			$message = __d($this->_validationDomain, $result, $args);$/;"	v
message	lib/Cake/Model/Validator/CakeValidationSet.php	/^			$message = __d('cake', 'This field cannot be left blank');$/;"	v
message	lib/Cake/Model/Validator/CakeValidationSet.php	/^		$message = $rule->getValidationResult();$/;"	v
message	lib/Cake/Model/Validator/CakeValidationSet.php	/^		$message = $rule->message;$/;"	v
offsetExists	lib/Cake/Model/Validator/CakeValidationSet.php	/^	public function offsetExists($index) {$/;"	f
offsetGet	lib/Cake/Model/Validator/CakeValidationSet.php	/^	public function offsetGet($index) {$/;"	f
offsetSet	lib/Cake/Model/Validator/CakeValidationSet.php	/^	public function offsetSet($index, $rule) {$/;"	f
offsetUnset	lib/Cake/Model/Validator/CakeValidationSet.php	/^	public function offsetUnset($index) {$/;"	f
removeRule	lib/Cake/Model/Validator/CakeValidationSet.php	/^	public function removeRule($name) {$/;"	f
reset	lib/Cake/Model/Validator/CakeValidationSet.php	/^	public function reset() {$/;"	f
result	lib/Cake/Model/Validator/CakeValidationSet.php	/^				$result = $message;$/;"	v
result	lib/Cake/Model/Validator/CakeValidationSet.php	/^				$result = $message[0];$/;"	v
rule	lib/Cake/Model/Validator/CakeValidationSet.php	/^			$rule = new CakeValidationRule($rule);$/;"	v
ruleSet	lib/Cake/Model/Validator/CakeValidationSet.php	/^			$ruleSet = array($ruleSet);$/;"	v
ruleSet	lib/Cake/Model/Validator/CakeValidationSet.php	/^		$this->ruleSet = $ruleSet;$/;"	v
ruleSet	lib/Cake/Model/Validator/CakeValidationSet.php	/^	public $ruleSet = array();$/;"	v
setMethods	lib/Cake/Model/Validator/CakeValidationSet.php	/^	public function setMethods(&$methods) {$/;"	f
setRule	lib/Cake/Model/Validator/CakeValidationSet.php	/^	public function setRule($name, $rule) {$/;"	f
setRules	lib/Cake/Model/Validator/CakeValidationSet.php	/^	public function setRules($rules = array(), $mergeVars = true) {$/;"	f
setValidationDomain	lib/Cake/Model/Validator/CakeValidationSet.php	/^	public function setValidationDomain($validationDomain) {$/;"	f
validate	lib/Cake/Model/Validator/CakeValidationSet.php	/^	public function validate($data, $isUpdate = false) {$/;"	f
CakeRequest	lib/Cake/Network/CakeRequest.php	/^class CakeRequest implements ArrayAccess {$/;"	c
__call	lib/Cake/Network/CakeRequest.php	/^	public function __call($name, $params) {$/;"	f
__construct	lib/Cake/Network/CakeRequest.php	/^	public function __construct($url = null, $parseEnvironment = true) {$/;"	f
__get	lib/Cake/Network/CakeRequest.php	/^	public function __get($name) {$/;"	f
__isset	lib/Cake/Network/CakeRequest.php	/^	public function __isset($name) {$/;"	f
_base	lib/Cake/Network/CakeRequest.php	/^	protected function _base() {$/;"	f
_detectors	lib/Cake/Network/CakeRequest.php	/^	protected $_detectors = array($/;"	v
_input	lib/Cake/Network/CakeRequest.php	/^			$this->_input = $content;$/;"	v
_input	lib/Cake/Network/CakeRequest.php	/^	protected $_input = '';$/;"	v
_parseAcceptWithQualifier	lib/Cake/Network/CakeRequest.php	/^	protected static function _parseAcceptWithQualifier($header) {$/;"	f
_processFileData	lib/Cake/Network/CakeRequest.php	/^	protected function _processFileData($path, $data, $field) {$/;"	f
_processFiles	lib/Cake/Network/CakeRequest.php	/^	protected function _processFiles() {$/;"	f
_processGet	lib/Cake/Network/CakeRequest.php	/^	protected function _processGet() {$/;"	f
_processPost	lib/Cake/Network/CakeRequest.php	/^	protected function _processPost() {$/;"	f
_readInput	lib/Cake/Network/CakeRequest.php	/^	protected function _readInput() {$/;"	f
_url	lib/Cake/Network/CakeRequest.php	/^	protected function _url() {$/;"	f
accept	lib/Cake/Network/CakeRequest.php	/^			$accept = array_merge($accept, $languages);$/;"	v
accept	lib/Cake/Network/CakeRequest.php	/^			$accept = array_merge($accept, $types);$/;"	v
accept	lib/Cake/Network/CakeRequest.php	/^		$accept = array();$/;"	v
acceptLanguage	lib/Cake/Network/CakeRequest.php	/^	public static function acceptLanguage($language = null) {$/;"	f
accepts	lib/Cake/Network/CakeRequest.php	/^	public function accepts($type = null) {$/;"	f
addDetector	lib/Cake/Network/CakeRequest.php	/^	public function addDetector($name, $options) {$/;"	f
addParams	lib/Cake/Network/CakeRequest.php	/^	public function addParams($params) {$/;"	f
addPaths	lib/Cake/Network/CakeRequest.php	/^	public function addPaths($paths) {$/;"	f
allowMethod	lib/Cake/Network/CakeRequest.php	/^	public function allowMethod($methods) {$/;"	f
allowed	lib/Cake/Network/CakeRequest.php	/^		$allowed = strtoupper(implode(', ', $methods));$/;"	v
args	lib/Cake/Network/CakeRequest.php	/^		$args = func_get_args();$/;"	v
base	lib/Cake/Network/CakeRequest.php	/^				$base = '';$/;"	v
base	lib/Cake/Network/CakeRequest.php	/^				$base = dirname($base);$/;"	v
base	lib/Cake/Network/CakeRequest.php	/^				$base = substr($base, 0, $indexPos) . '\/webroot';$/;"	v
base	lib/Cake/Network/CakeRequest.php	/^			$base = $this->base;$/;"	v
base	lib/Cake/Network/CakeRequest.php	/^			$base = '';$/;"	v
base	lib/Cake/Network/CakeRequest.php	/^			$base = dirname(env('PHP_SELF'));$/;"	v
base	lib/Cake/Network/CakeRequest.php	/^			$base = implode('\/', array_map('rawurlencode', explode('\/', $base)));$/;"	v
base	lib/Cake/Network/CakeRequest.php	/^		$base = $this->base;$/;"	v
base	lib/Cake/Network/CakeRequest.php	/^		$base = Configure::read('App.fullBaseUrl') . $this->webroot;$/;"	v
base	lib/Cake/Network/CakeRequest.php	/^		$base = dirname($baseUrl);$/;"	v
base	lib/Cake/Network/CakeRequest.php	/^	public $base = false;$/;"	v
callback	lib/Cake/Network/CakeRequest.php	/^			$callback = array_shift($args);$/;"	v
clientIp	lib/Cake/Network/CakeRequest.php	/^	public function clientIp($safe = true) {$/;"	f
config	lib/Cake/Network/CakeRequest.php	/^		$config = Configure::read('App');$/;"	v
content	lib/Cake/Network/CakeRequest.php	/^			$content = stream_get_contents($fh);$/;"	v
data	lib/Cake/Network/CakeRequest.php	/^				$data = $this->_readInput();$/;"	v
data	lib/Cake/Network/CakeRequest.php	/^				$this->data = $data;$/;"	v
data	lib/Cake/Network/CakeRequest.php	/^				$this->data = Hash::insert($this->data, $newPath, $fields);$/;"	v
data	lib/Cake/Network/CakeRequest.php	/^				$this->data = Hash::merge($this->data, $data);$/;"	v
data	lib/Cake/Network/CakeRequest.php	/^			$data = $this->data['data'];$/;"	v
data	lib/Cake/Network/CakeRequest.php	/^			$this->data = $_POST;$/;"	v
data	lib/Cake/Network/CakeRequest.php	/^			$this->data = Hash::insert($this->data, $name, $args[1]);$/;"	v
data	lib/Cake/Network/CakeRequest.php	/^			$this->data = stripslashes_deep($this->data);$/;"	v
data	lib/Cake/Network/CakeRequest.php	/^	public $data = array();$/;"	v
data	lib/Cake/Network/CakeRequest.php	/^	public function data($name) {$/;"	f
detect	lib/Cake/Network/CakeRequest.php	/^		$detect = $this->_detectors[$type];$/;"	v
dir	lib/Cake/Network/CakeRequest.php	/^		$dir = $webroot = null;$/;"	v
docRoot	lib/Cake/Network/CakeRequest.php	/^		$docRoot = env('DOCUMENT_ROOT');$/;"	v
docRootContainsWebroot	lib/Cake/Network/CakeRequest.php	/^		$docRootContainsWebroot = strpos($docRoot, $dir . DS . $webroot);$/;"	v
domain	lib/Cake/Network/CakeRequest.php	/^		$domain = array_slice($segments, -1 * ($tldLength + 1));$/;"	v
domain	lib/Cake/Network/CakeRequest.php	/^	public function domain($tldLength = 1) {$/;"	f
e	lib/Cake/Network/CakeRequest.php	/^		$e = new MethodNotAllowedException();$/;"	v
endsWithIndex	lib/Cake/Network/CakeRequest.php	/^		$endsWithIndex = '\/webroot\/index.php';$/;"	v
endsWithLength	lib/Cake/Network/CakeRequest.php	/^		$endsWithLength = strlen($endsWithIndex);$/;"	v
fh	lib/Cake/Network/CakeRequest.php	/^			$fh = fopen('php:\/\/input', 'r');$/;"	v
file	lib/Cake/Network/CakeRequest.php	/^		$file = '\/' . basename($baseUrl);$/;"	v
header	lib/Cake/Network/CakeRequest.php	/^		$header = explode(',', $header);$/;"	v
header	lib/Cake/Network/CakeRequest.php	/^	public static function header($name) {$/;"	f
here	lib/Cake/Network/CakeRequest.php	/^		$this->here = $this->base . '\/' . $this->url;$/;"	v
here	lib/Cake/Network/CakeRequest.php	/^	public $here = null;$/;"	v
here	lib/Cake/Network/CakeRequest.php	/^	public function here($base = true) {$/;"	f
host	lib/Cake/Network/CakeRequest.php	/^	public function host($trustProxy = false) {$/;"	f
indexPos	lib/Cake/Network/CakeRequest.php	/^			$indexPos = strpos($base, '\/webroot\/index.php');$/;"	v
input	lib/Cake/Network/CakeRequest.php	/^		$input = $this->_readInput();$/;"	v
input	lib/Cake/Network/CakeRequest.php	/^	public function input($callback = null) {$/;"	f
ipaddr	lib/Cake/Network/CakeRequest.php	/^				$ipaddr = env('HTTP_CLIENT_IP');$/;"	v
ipaddr	lib/Cake/Network/CakeRequest.php	/^				$ipaddr = env('REMOTE_ADDR');$/;"	v
ipaddr	lib/Cake/Network/CakeRequest.php	/^				$ipaddr = preg_replace('\/(?:,.*)\/', '', $tmpipaddr);$/;"	v
ipaddr	lib/Cake/Network/CakeRequest.php	/^			$ipaddr = preg_replace('\/(?:,.*)\/', '', env('HTTP_X_FORWARDED_FOR'));$/;"	v
is	lib/Cake/Network/CakeRequest.php	/^	public function is($type) {$/;"	f
isAll	lib/Cake/Network/CakeRequest.php	/^	public function isAll(array $types) {$/;"	f
isArray	lib/Cake/Network/CakeRequest.php	/^		$isArray = is_array($this->data);$/;"	v
key	lib/Cake/Network/CakeRequest.php	/^			$key = $detect['param'];$/;"	v
lang	lib/Cake/Network/CakeRequest.php	/^					$lang = str_replace('_', '-', $lang);$/;"	v
lang	lib/Cake/Network/CakeRequest.php	/^				$lang = strtolower($lang);$/;"	v
method	lib/Cake/Network/CakeRequest.php	/^	public function method() {$/;"	f
methods	lib/Cake/Network/CakeRequest.php	/^			$methods = func_get_args();$/;"	v
name	lib/Cake/Network/CakeRequest.php	/^		$name = 'HTTP_' . strtoupper(str_replace('-', '_', $name));$/;"	v
name	lib/Cake/Network/CakeRequest.php	/^		$name = strtolower($name);$/;"	v
newPath	lib/Cake/Network/CakeRequest.php	/^				$newPath = $path . '.' . $key;$/;"	v
newPath	lib/Cake/Network/CakeRequest.php	/^			$newPath = $key;$/;"	v
offsetExists	lib/Cake/Network/CakeRequest.php	/^	public function offsetExists($name) {$/;"	f
offsetGet	lib/Cake/Network/CakeRequest.php	/^	public function offsetGet($name) {$/;"	f
offsetSet	lib/Cake/Network/CakeRequest.php	/^	public function offsetSet($name, $value) {$/;"	f
offsetUnset	lib/Cake/Network/CakeRequest.php	/^	public function offsetUnset($name) {$/;"	f
onlyAllow	lib/Cake/Network/CakeRequest.php	/^	public function onlyAllow($methods) {$/;"	f
options	lib/Cake/Network/CakeRequest.php	/^			$options = Hash::merge($this->_detectors[$name], $options);$/;"	v
param	lib/Cake/Network/CakeRequest.php	/^	public function param($name) {$/;"	f
params	lib/Cake/Network/CakeRequest.php	/^				$params = explode(';', $value);$/;"	v
params	lib/Cake/Network/CakeRequest.php	/^		$this->params = array_merge($this->params, (array)$params);$/;"	v
params	lib/Cake/Network/CakeRequest.php	/^	public $params = array($/;"	v
parseAccept	lib/Cake/Network/CakeRequest.php	/^	public function parseAccept() {$/;"	f
pattern	lib/Cake/Network/CakeRequest.php	/^				$pattern = '\/' . implode('|', $detect['options']) . '\/i';$/;"	v
prefValue	lib/Cake/Network/CakeRequest.php	/^						$prefValue = substr($param, $qPos + 2);$/;"	v
prefValue	lib/Cake/Network/CakeRequest.php	/^			$prefValue = '1.0';$/;"	v
qPos	lib/Cake/Network/CakeRequest.php	/^					$qPos = strpos($param, 'q=');$/;"	v
qPosition	lib/Cake/Network/CakeRequest.php	/^			$qPosition = strpos($_SERVER['REQUEST_URI'], '?');$/;"	v
query	lib/Cake/Network/CakeRequest.php	/^			$query = $_GET;$/;"	v
query	lib/Cake/Network/CakeRequest.php	/^			$query = array_merge($this->params['url'], $query);$/;"	v
query	lib/Cake/Network/CakeRequest.php	/^			$query = stripslashes_deep($_GET);$/;"	v
query	lib/Cake/Network/CakeRequest.php	/^		$this->query = $query;$/;"	v
query	lib/Cake/Network/CakeRequest.php	/^	public $query = array();$/;"	v
query	lib/Cake/Network/CakeRequest.php	/^	public function query($name) {$/;"	f
raw	lib/Cake/Network/CakeRequest.php	/^		$raw = $this->parseAccept();$/;"	v
raw	lib/Cake/Network/CakeRequest.php	/^		$raw = self::_parseAcceptWithQualifier(self::header('Accept-Language'));$/;"	v
ref	lib/Cake/Network/CakeRequest.php	/^					$ref = '\/' . $ref;$/;"	v
ref	lib/Cake/Network/CakeRequest.php	/^				$ref = substr($ref, strlen($base));$/;"	v
ref	lib/Cake/Network/CakeRequest.php	/^		$ref = env('HTTP_REFERER');$/;"	v
referer	lib/Cake/Network/CakeRequest.php	/^	public function referer($local = false) {$/;"	f
result	lib/Cake/Network/CakeRequest.php	/^			$result = array_map(array($this, 'is'), $type);$/;"	v
result	lib/Cake/Network/CakeRequest.php	/^		$result = array_filter(array_map(array($this, 'is'), $types));$/;"	v
segments	lib/Cake/Network/CakeRequest.php	/^		$segments = explode('.', $this->host());$/;"	v
semiPos	lib/Cake/Network/CakeRequest.php	/^			$semiPos = strpos($value, ';');$/;"	v
subdomains	lib/Cake/Network/CakeRequest.php	/^	public function subdomains($tldLength = 1) {$/;"	f
tmpipaddr	lib/Cake/Network/CakeRequest.php	/^			$tmpipaddr = env('HTTP_CLIENTADDRESS');$/;"	v
type	lib/Cake/Network/CakeRequest.php	/^			$type = strtolower(substr($name, 2));$/;"	v
type	lib/Cake/Network/CakeRequest.php	/^		$type = strtolower($type);$/;"	v
unsetUrl	lib/Cake/Network/CakeRequest.php	/^		$unsetUrl = '\/' . str_replace('.', '_', urldecode($this->url));$/;"	v
uri	lib/Cake/Network/CakeRequest.php	/^				$uri = $_SERVER['REQUEST_URI'];$/;"	v
uri	lib/Cake/Network/CakeRequest.php	/^				$uri = substr($_SERVER['REQUEST_URI'], strlen(Configure::read('App.fullBaseUrl')));$/;"	v
uri	lib/Cake/Network/CakeRequest.php	/^			$uri = $_SERVER['HTTP_X_REWRITE_URL'];$/;"	v
uri	lib/Cake/Network/CakeRequest.php	/^			$uri = $_SERVER['REQUEST_URI'];$/;"	v
uri	lib/Cake/Network/CakeRequest.php	/^			$uri = $var[0];$/;"	v
uri	lib/Cake/Network/CakeRequest.php	/^			$uri = '\/';$/;"	v
uri	lib/Cake/Network/CakeRequest.php	/^			$uri = str_replace($_SERVER['SCRIPT_NAME'], '', $_SERVER['PHP_SELF']);$/;"	v
uri	lib/Cake/Network/CakeRequest.php	/^			$uri = substr($uri, strlen($base));$/;"	v
url	lib/Cake/Network/CakeRequest.php	/^			$url = $this->_url();$/;"	v
url	lib/Cake/Network/CakeRequest.php	/^			$url = preg_replace('\/^' . preg_quote($this->base, '\/') . '\/', '', $url, 1);$/;"	v
url	lib/Cake/Network/CakeRequest.php	/^			$url = substr($url, 1);$/;"	v
url	lib/Cake/Network/CakeRequest.php	/^		$this->url = $url;$/;"	v
url	lib/Cake/Network/CakeRequest.php	/^		$url = $this->here;$/;"	v
url	lib/Cake/Network/CakeRequest.php	/^	public $url;$/;"	v
value	lib/Cake/Network/CakeRequest.php	/^				$value = $detect['value'];$/;"	v
value	lib/Cake/Network/CakeRequest.php	/^				$value = trim($params[0]);$/;"	v
value	lib/Cake/Network/CakeRequest.php	/^			$value = trim($value);$/;"	v
webroot	lib/Cake/Network/CakeRequest.php	/^			$this->webroot = $base . '\/';$/;"	v
webroot	lib/Cake/Network/CakeRequest.php	/^		$this->webroot = $base . '\/';$/;"	v
webroot	lib/Cake/Network/CakeRequest.php	/^	public $webroot = '\/';$/;"	v
CakeResponse	lib/Cake/Network/CakeResponse.php	/^class CakeResponse {$/;"	c
__construct	lib/Cake/Network/CakeResponse.php	/^	public function __construct(array $options = array()) {$/;"	f
__toString	lib/Cake/Network/CakeResponse.php	/^	public function __toString() {$/;"	f
_body	lib/Cake/Network/CakeResponse.php	/^	protected $_body = null;$/;"	v
_cacheDirectives	lib/Cake/Network/CakeResponse.php	/^	protected $_cacheDirectives = array();$/;"	v
_charset	lib/Cake/Network/CakeResponse.php	/^	protected $_charset = 'UTF-8';$/;"	v
_clearBuffer	lib/Cake/Network/CakeResponse.php	/^	protected function _clearBuffer() {$/;"	f
_contentType	lib/Cake/Network/CakeResponse.php	/^	protected $_contentType = 'text\/html';$/;"	v
_cookies	lib/Cake/Network/CakeResponse.php	/^	protected $_cookies = array();$/;"	v
_file	lib/Cake/Network/CakeResponse.php	/^			$this->_file = $this->_fileRange = null;$/;"	v
_file	lib/Cake/Network/CakeResponse.php	/^		$this->_file = $file;$/;"	v
_file	lib/Cake/Network/CakeResponse.php	/^	protected $_file = null;$/;"	v
_fileRange	lib/Cake/Network/CakeResponse.php	/^		$this->_fileRange = array($start, $end);$/;"	v
_fileRange	lib/Cake/Network/CakeResponse.php	/^	protected $_fileRange = null;$/;"	v
_fileRange	lib/Cake/Network/CakeResponse.php	/^	protected function _fileRange($file, $httpRange) {$/;"	f
_flushBuffer	lib/Cake/Network/CakeResponse.php	/^	protected function _flushBuffer() {$/;"	f
_getUTCDate	lib/Cake/Network/CakeResponse.php	/^	protected function _getUTCDate($time = null) {$/;"	f
_headers	lib/Cake/Network/CakeResponse.php	/^	protected $_headers = array();$/;"	v
_isActive	lib/Cake/Network/CakeResponse.php	/^	protected function _isActive() {$/;"	f
_mimeTypes	lib/Cake/Network/CakeResponse.php	/^	protected $_mimeTypes = array($/;"	v
_normalizeCorsDomains	lib/Cake/Network/CakeResponse.php	/^	protected function _normalizeCorsDomains($domains, $requestIsSSL = false) {$/;"	f
_protocol	lib/Cake/Network/CakeResponse.php	/^			$this->_protocol = $protocol;$/;"	v
_protocol	lib/Cake/Network/CakeResponse.php	/^	protected $_protocol = 'HTTP\/1.1';$/;"	v
_sendContent	lib/Cake/Network/CakeResponse.php	/^	protected function _sendContent($content) {$/;"	f
_sendFile	lib/Cake/Network/CakeResponse.php	/^	protected function _sendFile($file, $range) {$/;"	f
_sendHeader	lib/Cake/Network/CakeResponse.php	/^	protected function _sendHeader($name, $value = null) {$/;"	f
_setCacheControl	lib/Cake/Network/CakeResponse.php	/^	protected function _setCacheControl() {$/;"	f
_setContent	lib/Cake/Network/CakeResponse.php	/^	protected function _setContent() {$/;"	f
_setContentLength	lib/Cake/Network/CakeResponse.php	/^	protected function _setContentLength() {$/;"	f
_setContentType	lib/Cake/Network/CakeResponse.php	/^	protected function _setContentType() {$/;"	f
_setCookies	lib/Cake/Network/CakeResponse.php	/^	protected function _setCookies() {$/;"	f
_status	lib/Cake/Network/CakeResponse.php	/^	protected $_status = 200;$/;"	v
_statusCodes	lib/Cake/Network/CakeResponse.php	/^			$this->_statusCodes = $code + $this->_statusCodes;$/;"	v
_statusCodes	lib/Cake/Network/CakeResponse.php	/^	protected $_statusCodes = array($/;"	v
agent	lib/Cake/Network/CakeResponse.php	/^			$agent = env('HTTP_USER_AGENT');$/;"	v
allowedDomains	lib/Cake/Network/CakeResponse.php	/^		$allowedDomains = $this->_normalizeCorsDomains((array)$allowedDomains, $request->is('ssl'));$/;"	v
body	lib/Cake/Network/CakeResponse.php	/^	public function body($content = null) {$/;"	f
bufferSize	lib/Cake/Network/CakeResponse.php	/^				$bufferSize = $end - $offset + 1;$/;"	v
bufferSize	lib/Cake/Network/CakeResponse.php	/^		$bufferSize = 8192;$/;"	v
cache	lib/Cake/Network/CakeResponse.php	/^	public function cache($since, $time = '+1 day') {$/;"	f
cacheVariances	lib/Cake/Network/CakeResponse.php	/^			$cacheVariances = (array)$cacheVariances;$/;"	v
charset	lib/Cake/Network/CakeResponse.php	/^			$charset = true;$/;"	v
charset	lib/Cake/Network/CakeResponse.php	/^		$charset = false;$/;"	v
charset	lib/Cake/Network/CakeResponse.php	/^	public function charset($charset = null) {$/;"	f
checkNotModified	lib/Cake/Network/CakeResponse.php	/^	public function checkNotModified(CakeRequest $request) {$/;"	f
checks	lib/Cake/Network/CakeResponse.php	/^		$checks = compact('etagMatches', 'timeMatches');$/;"	v
codeMessage	lib/Cake/Network/CakeResponse.php	/^		$codeMessage = $this->_statusCodes[$this->_status];$/;"	v
codes	lib/Cake/Network/CakeResponse.php	/^			$codes = array_keys($code);$/;"	v
compress	lib/Cake/Network/CakeResponse.php	/^		$compress = $this->outputCompressed();$/;"	v
compress	lib/Cake/Network/CakeResponse.php	/^	public function compress() {$/;"	f
compressionEnabled	lib/Cake/Network/CakeResponse.php	/^		$compressionEnabled = ini_get("zlib.output_compression") !== '1' &&$/;"	v
contentType	lib/Cake/Network/CakeResponse.php	/^				$contentType = 'application\/force-download';$/;"	v
contentType	lib/Cake/Network/CakeResponse.php	/^				$contentType = 'application\/octet-stream';$/;"	v
contentType	lib/Cake/Network/CakeResponse.php	/^			$contentType = $this->_mimeTypes[$contentType];$/;"	v
contentType	lib/Cake/Network/CakeResponse.php	/^			$contentType = is_array($contentType) ? current($contentType) : $contentType;$/;"	v
control	lib/Cake/Network/CakeResponse.php	/^		$control = '';$/;"	v
control	lib/Cake/Network/CakeResponse.php	/^		$control = rtrim($control, ', ');$/;"	v
cookie	lib/Cake/Network/CakeResponse.php	/^	public function cookie($options = null) {$/;"	f
cors	lib/Cake/Network/CakeResponse.php	/^	public function cors(CakeRequest $request, $allowedDomains, $allowedMethods = array(), $allowedHeaders = array()) {$/;"	f
date	lib/Cake/Network/CakeResponse.php	/^			$date = $this->_getUTCDate($time);$/;"	v
defaults	lib/Cake/Network/CakeResponse.php	/^		$defaults = array($/;"	v
disableCache	lib/Cake/Network/CakeResponse.php	/^	public function disableCache() {$/;"	f
download	lib/Cake/Network/CakeResponse.php	/^			$download = true;$/;"	v
download	lib/Cake/Network/CakeResponse.php	/^		$download = $options['download'];$/;"	v
download	lib/Cake/Network/CakeResponse.php	/^	public function download($filename) {$/;"	f
end	lib/Cake/Network/CakeResponse.php	/^			$end = $lastByte;$/;"	v
end	lib/Cake/Network/CakeResponse.php	/^		$end = $start = false;$/;"	v
etag	lib/Cake/Network/CakeResponse.php	/^	public function etag($tag = null, $weak = false) {$/;"	f
etagMatches	lib/Cake/Network/CakeResponse.php	/^			$etagMatches = in_array('*', $etags) || in_array($responseTag, $etags);$/;"	v
etags	lib/Cake/Network/CakeResponse.php	/^		$etags = preg_split('\/\\s*,\\s*\/', $request->header('If-None-Match'), null, PREG_SPLIT_NO_EMPTY);$/;"	v
expires	lib/Cake/Network/CakeResponse.php	/^	public function expires($time = null) {$/;"	f
extension	lib/Cake/Network/CakeResponse.php	/^		$extension = strtolower($file->ext());$/;"	v
file	lib/Cake/Network/CakeResponse.php	/^		$file = new File($path);$/;"	v
file	lib/Cake/Network/CakeResponse.php	/^	public function file($path, $options = array()) {$/;"	f
fileSize	lib/Cake/Network/CakeResponse.php	/^		$fileSize = $file->size();$/;"	v
getMimeType	lib/Cake/Network/CakeResponse.php	/^	public function getMimeType($alias) {$/;"	f
header	lib/Cake/Network/CakeResponse.php	/^	public function header($header = null, $value = null) {$/;"	f
headers	lib/Cake/Network/CakeResponse.php	/^			$headers = $this->header();$/;"	v
headers	lib/Cake/Network/CakeResponse.php	/^		$headers = is_array($header) ? $header : array($header => $value);$/;"	v
httpCodes	lib/Cake/Network/CakeResponse.php	/^	public function httpCodes($code = null) {$/;"	f
httpRange	lib/Cake/Network/CakeResponse.php	/^			$httpRange = env('HTTP_RANGE');$/;"	v
lastByte	lib/Cake/Network/CakeResponse.php	/^		$lastByte = $fileSize - 1;$/;"	v
length	lib/Cake/Network/CakeResponse.php	/^	public function length($bytes = null) {$/;"	f
location	lib/Cake/Network/CakeResponse.php	/^	public function location($url = null) {$/;"	f
mapType	lib/Cake/Network/CakeResponse.php	/^	public function mapType($ctype) {$/;"	f
maxAge	lib/Cake/Network/CakeResponse.php	/^	public function maxAge($seconds = null) {$/;"	f
min	lib/Cake/Network/CakeResponse.php	/^			$min = min($codes);$/;"	v
modified	lib/Cake/Network/CakeResponse.php	/^	public function modified($time = null) {$/;"	f
modifiedSince	lib/Cake/Network/CakeResponse.php	/^		$modifiedSince = $request->header('If-Modified-Since');$/;"	v
mustRevalidate	lib/Cake/Network/CakeResponse.php	/^	public function mustRevalidate($enable = null) {$/;"	f
name	lib/Cake/Network/CakeResponse.php	/^				$name = $file->name;$/;"	v
name	lib/Cake/Network/CakeResponse.php	/^				$name = $options['name'];$/;"	v
noCache	lib/Cake/Network/CakeResponse.php	/^			$noCache = array_key_exists('no-cache', $this->_cacheDirectives);$/;"	v
notModified	lib/Cake/Network/CakeResponse.php	/^		$notModified = !in_array(false, $checks, true);$/;"	v
notModified	lib/Cake/Network/CakeResponse.php	/^	public function notModified() {$/;"	f
offset	lib/Cake/Network/CakeResponse.php	/^			$offset = $file->offset();$/;"	v
offset	lib/Cake/Network/CakeResponse.php	/^			$offset = ob_get_level() ? ob_get_length() : 0;$/;"	v
origin	lib/Cake/Network/CakeResponse.php	/^		$origin = $request->header('Origin');$/;"	v
original	lib/Cake/Network/CakeResponse.php	/^			$original = $preg = $domain;$/;"	v
outputCompressed	lib/Cake/Network/CakeResponse.php	/^	public function outputCompressed() {$/;"	f
path	lib/Cake/Network/CakeResponse.php	/^			$path = APP . $path;$/;"	v
preg	lib/Cake/Network/CakeResponse.php	/^				$preg = ($requestIsSSL ? 'https:\/\/' : 'http:\/\/') . $domain;$/;"	v
preg	lib/Cake/Network/CakeResponse.php	/^			$preg = '@' . str_replace('*', '.*', $domain) . '@';$/;"	v
private	lib/Cake/Network/CakeResponse.php	/^			$private = array_key_exists('private', $this->_cacheDirectives);$/;"	v
protocol	lib/Cake/Network/CakeResponse.php	/^	public function protocol($protocol = null) {$/;"	f
public	lib/Cake/Network/CakeResponse.php	/^			$public = array_key_exists('public', $this->_cacheDirectives);$/;"	v
remove	lib/Cake/Network/CakeResponse.php	/^		$remove = array($/;"	v
result	lib/Cake/Network/CakeResponse.php	/^			$result = clone $time;$/;"	v
result	lib/Cake/Network/CakeResponse.php	/^			$result = new DateTime($time);$/;"	v
result	lib/Cake/Network/CakeResponse.php	/^			$result = new DateTime(date('Y-m-d H:i:s', $time));$/;"	v
result	lib/Cake/Network/CakeResponse.php	/^		$result = array();$/;"	v
send	lib/Cake/Network/CakeResponse.php	/^	public function send() {$/;"	f
sharable	lib/Cake/Network/CakeResponse.php	/^			$sharable = $public || ! ($private || $noCache);$/;"	v
sharable	lib/Cake/Network/CakeResponse.php	/^	public function sharable($public = null, $time = null) {$/;"	f
sharedMaxAge	lib/Cake/Network/CakeResponse.php	/^	public function sharedMaxAge($seconds = null) {$/;"	f
shouldSetLength	lib/Cake/Network/CakeResponse.php	/^		$shouldSetLength = !isset($this->_headers['Content-Length']) && !in_array($this->_status, range(301, 307));$/;"	v
start	lib/Cake/Network/CakeResponse.php	/^			$start = $fileSize - $end;$/;"	v
statusCode	lib/Cake/Network/CakeResponse.php	/^	public function statusCode($code = null) {$/;"	f
time	lib/Cake/Network/CakeResponse.php	/^			$time = strtotime($time);$/;"	v
timeMatches	lib/Cake/Network/CakeResponse.php	/^			$timeMatches = strtotime($this->modified()) === strtotime($modifiedSince);$/;"	v
type	lib/Cake/Network/CakeResponse.php	/^	public function type($contentType = null) {$/;"	f
vary	lib/Cake/Network/CakeResponse.php	/^	public function vary($cacheVariances = null) {$/;"	f
whitelist	lib/Cake/Network/CakeResponse.php	/^		$whitelist = array($/;"	v
CakeSocket	lib/Cake/Network/CakeSocket.php	/^class CakeSocket {$/;"	c
__construct	lib/Cake/Network/CakeSocket.php	/^	public function __construct($config = array()) {$/;"	f
__destruct	lib/Cake/Network/CakeSocket.php	/^	public function __destruct() {$/;"	f
_baseConfig	lib/Cake/Network/CakeSocket.php	/^	protected $_baseConfig = array($/;"	v
_connectionErrorHandler	lib/Cake/Network/CakeSocket.php	/^	protected function _connectionErrorHandler($code, $message) {$/;"	f
_connectionErrors	lib/Cake/Network/CakeSocket.php	/^	protected $_connectionErrors = array();$/;"	v
_encryptMethods	lib/Cake/Network/CakeSocket.php	/^	protected $_encryptMethods = array($/;"	v
address	lib/Cake/Network/CakeSocket.php	/^	public function address() {$/;"	f
addresses	lib/Cake/Network/CakeSocket.php	/^	public function addresses() {$/;"	f
buffer	lib/Cake/Network/CakeSocket.php	/^			$buffer = fread($this->connection, $length);$/;"	v
config	lib/Cake/Network/CakeSocket.php	/^		$this->config = array_merge($this->_baseConfig, $config);$/;"	v
config	lib/Cake/Network/CakeSocket.php	/^	public $config = array();$/;"	v
connect	lib/Cake/Network/CakeSocket.php	/^	public function connect() {$/;"	f
connectAs	lib/Cake/Network/CakeSocket.php	/^		$connectAs = STREAM_CLIENT_CONNECT;$/;"	v
connected	lib/Cake/Network/CakeSocket.php	/^			$this->connected = false;$/;"	v
connected	lib/Cake/Network/CakeSocket.php	/^		$this->connected = !fclose($this->connection);$/;"	v
connected	lib/Cake/Network/CakeSocket.php	/^		$this->connected = is_resource($this->connection);$/;"	v
connected	lib/Cake/Network/CakeSocket.php	/^	public $connected = false;$/;"	v
connection	lib/Cake/Network/CakeSocket.php	/^			$this->connection = null;$/;"	v
connection	lib/Cake/Network/CakeSocket.php	/^		$this->connection = stream_socket_client($/;"	v
connection	lib/Cake/Network/CakeSocket.php	/^	public $connection = null;$/;"	v
context	lib/Cake/Network/CakeSocket.php	/^			$context = stream_context_create($this->config['context']);$/;"	v
context	lib/Cake/Network/CakeSocket.php	/^			$context = stream_context_create();$/;"	v
context	lib/Cake/Network/CakeSocket.php	/^	public function context() {$/;"	f
description	lib/Cake/Network/CakeSocket.php	/^	public $description = 'Remote DataSource Network Socket Interface';$/;"	v
disconnect	lib/Cake/Network/CakeSocket.php	/^	public function disconnect() {$/;"	f
enableCrypto	lib/Cake/Network/CakeSocket.php	/^	public function enableCrypto($type, $clientOrServer = 'client', $enable = true) {$/;"	f
enableCryptoResult	lib/Cake/Network/CakeSocket.php	/^			$enableCryptoResult = stream_socket_enable_crypto($this->connection, $enable, $this->_encryptMethods[$type . '_' . $clientOrServer]);$/;"	v
enableCryptoResult	lib/Cake/Network/CakeSocket.php	/^		$enableCryptoResult = false;$/;"	v
encrypted	lib/Cake/Network/CakeSocket.php	/^			$this->encrypted = $enable;$/;"	v
encrypted	lib/Cake/Network/CakeSocket.php	/^	public $encrypted = false;$/;"	v
errorMessage	lib/Cake/Network/CakeSocket.php	/^		$errorMessage = __d('cake_dev', 'Unable to perform enableCrypto operation on CakeSocket');$/;"	v
host	lib/Cake/Network/CakeSocket.php	/^	public function host() {$/;"	f
info	lib/Cake/Network/CakeSocket.php	/^			$info = stream_get_meta_data($this->connection);$/;"	v
initalState	lib/Cake/Network/CakeSocket.php	/^				$initalState = get_class_vars(__CLASS__);$/;"	v
initalState	lib/Cake/Network/CakeSocket.php	/^			static $initalState = array();$/;"	v
lastError	lib/Cake/Network/CakeSocket.php	/^		$this->lastError = array('num' => $errNum, 'str' => $errStr);$/;"	v
lastError	lib/Cake/Network/CakeSocket.php	/^	public $lastError = array();$/;"	v
lastError	lib/Cake/Network/CakeSocket.php	/^	public function lastError() {$/;"	f
message	lib/Cake/Network/CakeSocket.php	/^			$message = implode("\\n", $this->_connectionErrors);$/;"	v
read	lib/Cake/Network/CakeSocket.php	/^	public function read($length = 1024) {$/;"	f
reset	lib/Cake/Network/CakeSocket.php	/^	public function reset($state = null) {$/;"	f
rv	lib/Cake/Network/CakeSocket.php	/^			$rv = fwrite($this->connection, substr($data, $written));$/;"	v
scheme	lib/Cake/Network/CakeSocket.php	/^			$scheme = 'ssl:\/\/';$/;"	v
scheme	lib/Cake/Network/CakeSocket.php	/^		$scheme = null;$/;"	v
setLastError	lib/Cake/Network/CakeSocket.php	/^	public function setLastError($errNum, $errStr) {$/;"	f
state	lib/Cake/Network/CakeSocket.php	/^			$state = $initalState;$/;"	v
totalBytes	lib/Cake/Network/CakeSocket.php	/^		$totalBytes = strlen($data);$/;"	v
write	lib/Cake/Network/CakeSocket.php	/^	public function write($data) {$/;"	f
AbstractTransport	lib/Cake/Network/Email/AbstractTransport.php	/^abstract class AbstractTransport {$/;"	c
_config	lib/Cake/Network/Email/AbstractTransport.php	/^			$this->_config = $config + $this->_config;$/;"	v
_config	lib/Cake/Network/Email/AbstractTransport.php	/^	protected $_config = array();$/;"	v
_headersToString	lib/Cake/Network/Email/AbstractTransport.php	/^	protected function _headersToString($headers, $eol = "\\r\\n") {$/;"	f
config	lib/Cake/Network/Email/AbstractTransport.php	/^	public function config($config = null) {$/;"	f
out	lib/Cake/Network/Email/AbstractTransport.php	/^			$out = substr($out, 0, -1 * strlen($eol));$/;"	v
out	lib/Cake/Network/Email/AbstractTransport.php	/^		$out = '';$/;"	v
CakeEmail	lib/Cake/Network/Email/CakeEmail.php	/^class CakeEmail {$/;"	c
File	lib/Cake/Network/Email/CakeEmail.php	/^		$File = new File($path);$/;"	v
View	lib/Cake/Network/Email/CakeEmail.php	/^		$View = new $viewClass(null);$/;"	v
__construct	lib/Cake/Network/Email/CakeEmail.php	/^	public function __construct($config = null) {$/;"	f
_addEmail	lib/Cake/Network/Email/CakeEmail.php	/^	protected function _addEmail($varName, $email, $name) {$/;"	f
_appCharset	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_appCharset = Configure::read('App.encoding');$/;"	v
_appCharset	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_appCharset = null;$/;"	v
_applyConfig	lib/Cake/Network/Email/CakeEmail.php	/^	protected function _applyConfig($config) {$/;"	f
_attachFiles	lib/Cake/Network/Email/CakeEmail.php	/^	protected function _attachFiles($boundary = null) {$/;"	f
_attachInlineFiles	lib/Cake/Network/Email/CakeEmail.php	/^	protected function _attachInlineFiles($boundary = null) {$/;"	f
_attachments	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_attachments = $attach;$/;"	v
_attachments	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_attachments = array();$/;"	v
_attachments	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_attachments = array_merge($current, $this->_attachments);$/;"	v
_attachments	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_attachments = array();$/;"	v
_bcc	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_bcc = array();$/;"	v
_bcc	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_bcc = array();$/;"	v
_boundary	lib/Cake/Network/Email/CakeEmail.php	/^			$this->_boundary = md5(uniqid(time()));$/;"	v
_boundary	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_boundary = null;$/;"	v
_cc	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_cc = array();$/;"	v
_cc	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_cc = array();$/;"	v
_charset8bit	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_charset8bit = array('UTF-8', 'SHIFT_JIS');$/;"	v
_config	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_config = $config + $this->_config;$/;"	v
_config	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_config = array();$/;"	v
_config	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_config = array();$/;"	v
_configClass	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_configClass = 'EmailConfig';$/;"	v
_contentTypeCharset	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_contentTypeCharset = array($/;"	v
_createBoundary	lib/Cake/Network/Email/CakeEmail.php	/^	protected function _createBoundary() {$/;"	f
_domain	lib/Cake/Network/Email/CakeEmail.php	/^			$this->_domain = php_uname('n');$/;"	v
_domain	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_domain = $domain;$/;"	v
_domain	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_domain = preg_replace('\/\\:\\d+$\/', '', env('HTTP_HOST'));$/;"	v
_domain	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_domain = null;$/;"	v
_emailFormat	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_emailFormat = $format;$/;"	v
_emailFormat	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_emailFormat = 'text';$/;"	v
_emailFormat	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_emailFormat = 'text';$/;"	v
_emailFormatAvailable	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_emailFormatAvailable = array('text', 'html', 'both');$/;"	v
_emailPattern	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_emailPattern = $regex;$/;"	v
_emailPattern	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_emailPattern = null;$/;"	v
_emailPattern	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_emailPattern = null;$/;"	v
_encode	lib/Cake/Network/Email/CakeEmail.php	/^	protected function _encode($text) {$/;"	f
_encodeString	lib/Cake/Network/Email/CakeEmail.php	/^	protected function _encodeString($text, $charset) {$/;"	f
_formatAddress	lib/Cake/Network/Email/CakeEmail.php	/^	protected function _formatAddress($address) {$/;"	f
_from	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_from = array();$/;"	v
_from	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_from = array();$/;"	v
_getContentTransferEncoding	lib/Cake/Network/Email/CakeEmail.php	/^	protected function _getContentTransferEncoding() {$/;"	f
_getContentTypeCharset	lib/Cake/Network/Email/CakeEmail.php	/^	protected function _getContentTypeCharset() {$/;"	f
_getTypes	lib/Cake/Network/Email/CakeEmail.php	/^	protected function _getTypes() {$/;"	f
_headers	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_headers = $headers;$/;"	v
_headers	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_headers = array();$/;"	v
_headers	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_headers = array_merge($this->_headers, $headers);$/;"	v
_headers	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_headers = array();$/;"	v
_helpers	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_helpers = (array)$helpers;$/;"	v
_helpers	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_helpers = array('Html');$/;"	v
_helpers	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_helpers = array('Html');$/;"	v
_htmlMessage	lib/Cake/Network/Email/CakeEmail.php	/^			$this->_htmlMessage = $rendered['html'];$/;"	v
_htmlMessage	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_htmlMessage = '';$/;"	v
_htmlMessage	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_htmlMessage = '';$/;"	v
_layout	lib/Cake/Network/Email/CakeEmail.php	/^			$this->_layout = $config['layout'];$/;"	v
_layout	lib/Cake/Network/Email/CakeEmail.php	/^			$this->_layout = $layout;$/;"	v
_layout	lib/Cake/Network/Email/CakeEmail.php	/^			$this->_layout = false;$/;"	v
_layout	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_layout = 'default';$/;"	v
_layout	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_layout = 'default';$/;"	v
_message	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_message = $this->_render($this->_wrap($content));$/;"	v
_message	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_message = '';$/;"	v
_message	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_message = array();$/;"	v
_messageId	lib/Cake/Network/Email/CakeEmail.php	/^			$this->_messageId = $message;$/;"	v
_messageId	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_messageId = true;$/;"	v
_messageId	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_messageId = true;$/;"	v
_readFile	lib/Cake/Network/Email/CakeEmail.php	/^	protected function _readFile($path) {$/;"	f
_readReceipt	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_readReceipt = array();$/;"	v
_readReceipt	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_readReceipt = array();$/;"	v
_render	lib/Cake/Network/Email/CakeEmail.php	/^	protected function _render($content) {$/;"	f
_renderTemplates	lib/Cake/Network/Email/CakeEmail.php	/^	protected function _renderTemplates($content) {$/;"	f
_replyTo	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_replyTo = array();$/;"	v
_replyTo	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_replyTo = array();$/;"	v
_returnPath	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_returnPath = array();$/;"	v
_returnPath	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_returnPath = array();$/;"	v
_sender	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_sender = array();$/;"	v
_sender	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_sender = array();$/;"	v
_setEmail	lib/Cake/Network/Email/CakeEmail.php	/^	protected function _setEmail($varName, $email, $name) {$/;"	f
_setEmailSingle	lib/Cake/Network/Email/CakeEmail.php	/^	protected function _setEmailSingle($varName, $email, $name, $throwMessage) {$/;"	f
_subject	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_subject = $this->_encode((string)$subject);$/;"	v
_subject	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_subject = '';$/;"	v
_subject	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_subject = '';$/;"	v
_template	lib/Cake/Network/Email/CakeEmail.php	/^			$this->_template = $config['template'];$/;"	v
_template	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_template = $template;$/;"	v
_template	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_template = '';$/;"	v
_template	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_template = '';$/;"	v
_textMessage	lib/Cake/Network/Email/CakeEmail.php	/^			$this->_textMessage = $rendered['text'];$/;"	v
_textMessage	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_textMessage = $this->_htmlMessage = '';$/;"	v
_textMessage	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_textMessage = '';$/;"	v
_textMessage	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_textMessage = '';$/;"	v
_theme	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_theme = $theme;$/;"	v
_theme	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_theme = null;$/;"	v
_theme	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_theme = null;$/;"	v
_to	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_to = array();$/;"	v
_to	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_to = array();$/;"	v
_transportClass	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_transportClass = null;$/;"	v
_transportClass	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_transportClass = null;$/;"	v
_transportName	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_transportName = 'Mail';$/;"	v
_transportName	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_transportName = (string)$name;$/;"	v
_transportName	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_transportName = 'Mail';$/;"	v
_validateEmail	lib/Cake/Network/Email/CakeEmail.php	/^	protected function _validateEmail($email) {$/;"	f
_viewRender	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_viewRender = $viewClass;$/;"	v
_viewRender	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_viewRender = 'View';$/;"	v
_viewRender	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_viewRender = 'View';$/;"	v
_viewVars	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_viewVars = array();$/;"	v
_viewVars	lib/Cake/Network/Email/CakeEmail.php	/^		$this->_viewVars = array_merge($this->_viewVars, (array)$viewVars);$/;"	v
_viewVars	lib/Cake/Network/Email/CakeEmail.php	/^	protected $_viewVars = array();$/;"	v
_wrap	lib/Cake/Network/Email/CakeEmail.php	/^	protected function _wrap($message, $wrapLength = CakeEmail::LINE_LENGTH_MUST) {$/;"	f
addAttachments	lib/Cake/Network/Email/CakeEmail.php	/^	public function addAttachments($attachments) {$/;"	f
addBcc	lib/Cake/Network/Email/CakeEmail.php	/^	public function addBcc($email, $name = null) {$/;"	f
addCc	lib/Cake/Network/Email/CakeEmail.php	/^	public function addCc($email, $name = null) {$/;"	f
addHeaders	lib/Cake/Network/Email/CakeEmail.php	/^	public function addHeaders($headers) {$/;"	f
addTo	lib/Cake/Network/Email/CakeEmail.php	/^	public function addTo($email, $name = null) {$/;"	f
attach	lib/Cake/Network/Email/CakeEmail.php	/^		$attach = array();$/;"	v
attachments	lib/Cake/Network/Email/CakeEmail.php	/^			$attachments = $this->_attachFiles($boundary);$/;"	v
attachments	lib/Cake/Network/Email/CakeEmail.php	/^			$attachments = $this->_attachInlineFiles($relBoundary);$/;"	v
attachments	lib/Cake/Network/Email/CakeEmail.php	/^	public function attachments($attachments = null) {$/;"	f
bcc	lib/Cake/Network/Email/CakeEmail.php	/^	public function bcc($email = null, $name = null) {$/;"	f
boundary	lib/Cake/Network/Email/CakeEmail.php	/^			$boundary = $this->_boundary;$/;"	v
boundary	lib/Cake/Network/Email/CakeEmail.php	/^		$boundary = $relBoundary = $textBoundary = $this->_boundary;$/;"	v
cc	lib/Cake/Network/Email/CakeEmail.php	/^	public function cc($email = null, $name = null) {$/;"	f
char	lib/Cake/Network/Email/CakeEmail.php	/^				$char = $line[$i];$/;"	v
charset	lib/Cake/Network/Email/CakeEmail.php	/^			$this->charset = $config['charset'];$/;"	v
charset	lib/Cake/Network/Email/CakeEmail.php	/^			$this->charset = $this->_appCharset;$/;"	v
charset	lib/Cake/Network/Email/CakeEmail.php	/^		$charset = strtoupper($this->charset);$/;"	v
charset	lib/Cake/Network/Email/CakeEmail.php	/^		$this->charset = $charset;$/;"	v
charset	lib/Cake/Network/Email/CakeEmail.php	/^		$this->charset = 'utf-8';$/;"	v
charset	lib/Cake/Network/Email/CakeEmail.php	/^	public $charset = 'utf-8';$/;"	v
charset	lib/Cake/Network/Email/CakeEmail.php	/^	public function charset($charset = null) {$/;"	f
class	lib/Cake/Network/Email/CakeEmail.php	/^		$class = __CLASS__;$/;"	v
classVar	lib/Cake/Network/Email/CakeEmail.php	/^				$classVar = '_' . $var;$/;"	v
config	lib/Cake/Network/Email/CakeEmail.php	/^				$config = $this->_config['log'] + $config;$/;"	v
config	lib/Cake/Network/Email/CakeEmail.php	/^			$config = $configs->{$config};$/;"	v
config	lib/Cake/Network/Email/CakeEmail.php	/^			$config = (string)$config;$/;"	v
config	lib/Cake/Network/Email/CakeEmail.php	/^			$config = array($/;"	v
config	lib/Cake/Network/Email/CakeEmail.php	/^	public function config($config = null) {$/;"	f
configs	lib/Cake/Network/Email/CakeEmail.php	/^			$configs = new $this->_configClass();$/;"	v
content	lib/Cake/Network/Email/CakeEmail.php	/^			$content = explode("\\n", $this->_htmlMessage);$/;"	v
content	lib/Cake/Network/Email/CakeEmail.php	/^			$content = explode("\\n", $this->_textMessage);$/;"	v
content	lib/Cake/Network/Email/CakeEmail.php	/^			$content = implode("\\n", $content) . "\\n";$/;"	v
content	lib/Cake/Network/Email/CakeEmail.php	/^		$content = implode("\\n", $content);$/;"	v
contentIds	lib/Cake/Network/Email/CakeEmail.php	/^		$contentIds = array_filter((array)Hash::extract($this->_attachments, '{s}.contentId'));$/;"	v
contents	lib/Cake/Network/Email/CakeEmail.php	/^		$contents = $this->transportClass()->send($this);$/;"	v
current	lib/Cake/Network/Email/CakeEmail.php	/^		$current = $this->_attachments;$/;"	v
current	lib/Cake/Network/Email/CakeEmail.php	/^		$current = $this->{$varName};$/;"	v
cut	lib/Cake/Network/Email/CakeEmail.php	/^		$cut = ($wrapLength == CakeEmail::LINE_LENGTH_MUST);$/;"	v
data	lib/Cake/Network/Email/CakeEmail.php	/^			$data = isset($fileInfo['data']) ? $fileInfo['data'] : $this->_readFile($fileInfo['file']);$/;"	v
defaults	lib/Cake/Network/Email/CakeEmail.php	/^		$defaults = array_fill_keys($/;"	v
deliver	lib/Cake/Network/Email/CakeEmail.php	/^	public static function deliver($to = null, $subject = null, $message = null, $transportConfig = 'fast', $send = true) {$/;"	f
domain	lib/Cake/Network/Email/CakeEmail.php	/^	public function domain($domain = null) {$/;"	f
emailFormat	lib/Cake/Network/Email/CakeEmail.php	/^	public function emailFormat($format = null) {$/;"	f
emailPattern	lib/Cake/Network/Email/CakeEmail.php	/^	public function emailPattern($regex = null) {$/;"	f
encoded	lib/Cake/Network/Email/CakeEmail.php	/^					$encoded = '"' . str_replace('"', '\\"', $encoded) . '"';$/;"	v
encoded	lib/Cake/Network/Email/CakeEmail.php	/^				$encoded = $this->_encode($alias);$/;"	v
fileInfo	lib/Cake/Network/Email/CakeEmail.php	/^				$fileInfo = array('file' => $fileInfo);$/;"	v
fileName	lib/Cake/Network/Email/CakeEmail.php	/^				$fileName = $fileInfo['file'];$/;"	v
formatted	lib/Cake/Network/Email/CakeEmail.php	/^								$formatted = array_merge($/;"	v
formatted	lib/Cake/Network/Email/CakeEmail.php	/^				$formatted = array_merge($/;"	v
formatted	lib/Cake/Network/Email/CakeEmail.php	/^		$formatted = array();$/;"	v
from	lib/Cake/Network/Email/CakeEmail.php	/^	public function from($email = null, $name = null) {$/;"	f
getHeaders	lib/Cake/Network/Email/CakeEmail.php	/^	public function getHeaders($include = array()) {$/;"	f
hasAttachments	lib/Cake/Network/Email/CakeEmail.php	/^		$hasAttachments = !empty($this->_attachments);$/;"	v
hasInlineAttachments	lib/Cake/Network/Email/CakeEmail.php	/^		$hasInlineAttachments = count($contentIds) > 0;$/;"	v
hasMultipleTypes	lib/Cake/Network/Email/CakeEmail.php	/^		$hasMultipleTypes = count($rendered) > 1;$/;"	v
headerCharset	lib/Cake/Network/Email/CakeEmail.php	/^			$this->headerCharset = $charset;$/;"	v
headerCharset	lib/Cake/Network/Email/CakeEmail.php	/^			$this->headerCharset = $config['headerCharset'];$/;"	v
headerCharset	lib/Cake/Network/Email/CakeEmail.php	/^			$this->headerCharset = $this->charset;$/;"	v
headerCharset	lib/Cake/Network/Email/CakeEmail.php	/^		$this->headerCharset = null;$/;"	v
headerCharset	lib/Cake/Network/Email/CakeEmail.php	/^	public $headerCharset = null;$/;"	v
headerCharset	lib/Cake/Network/Email/CakeEmail.php	/^	public function headerCharset($charset = null) {$/;"	f
headers	lib/Cake/Network/Email/CakeEmail.php	/^		$headers = array();$/;"	v
helpers	lib/Cake/Network/Email/CakeEmail.php	/^	public function helpers($helpers = null) {$/;"	f
include	lib/Cake/Network/Email/CakeEmail.php	/^			$include = array_fill_keys($include, true);$/;"	v
instance	lib/Cake/Network/Email/CakeEmail.php	/^		$instance = new $class($transportConfig);$/;"	v
internalEncoding	lib/Cake/Network/Email/CakeEmail.php	/^		$internalEncoding = function_exists('mb_internal_encoding');$/;"	v
key	lib/Cake/Network/Email/CakeEmail.php	/^				$key = $value;$/;"	v
lastSpace	lib/Cake/Network/Email/CakeEmail.php	/^						$lastSpace = strrpos($tmpLine, ' ');$/;"	v
lines	lib/Cake/Network/Email/CakeEmail.php	/^		$lines = explode("\\n", $message);$/;"	v
list	lib/Cake/Network/Email/CakeEmail.php	/^		$list = array();$/;"	v
message	lib/Cake/Network/Email/CakeEmail.php	/^			$message = $config['message'];$/;"	v
message	lib/Cake/Network/Email/CakeEmail.php	/^			$message = null;$/;"	v
message	lib/Cake/Network/Email/CakeEmail.php	/^		$message = str_replace(array("\\r\\n", "\\r"), "\\n", $message);$/;"	v
message	lib/Cake/Network/Email/CakeEmail.php	/^	public function message($type = null) {$/;"	f
messageId	lib/Cake/Network/Email/CakeEmail.php	/^	public function messageId($message = null) {$/;"	f
msg	lib/Cake/Network/Email/CakeEmail.php	/^			$msg = array_merge($msg, $attachments);$/;"	v
msg	lib/Cake/Network/Email/CakeEmail.php	/^			$msg = array_merge($msg, $content);$/;"	v
msg	lib/Cake/Network/Email/CakeEmail.php	/^		$msg = array();$/;"	v
multiPart	lib/Cake/Network/Email/CakeEmail.php	/^		$multiPart = ($hasAttachments || $hasMultipleTypes);$/;"	v
name	lib/Cake/Network/Email/CakeEmail.php	/^					$name = basename($fileInfo['file']);$/;"	v
name	lib/Cake/Network/Email/CakeEmail.php	/^				$name = $email;$/;"	v
nextChar	lib/Cake/Network/Email/CakeEmail.php	/^					$nextChar = $line[$i + 1];$/;"	v
readReceipt	lib/Cake/Network/Email/CakeEmail.php	/^	public function readReceipt($email = null, $name = null) {$/;"	f
relBoundary	lib/Cake/Network/Email/CakeEmail.php	/^			$relBoundary = $textBoundary = 'rel-' . $boundary;$/;"	v
relation	lib/Cake/Network/Email/CakeEmail.php	/^		$relation = array($/;"	v
render	lib/Cake/Network/Email/CakeEmail.php	/^			$render = $View->render($this->_template, $this->_layout);$/;"	v
render	lib/Cake/Network/Email/CakeEmail.php	/^			$render = str_replace(array("\\r\\n", "\\r"), "\\n", $render);$/;"	v
rendered	lib/Cake/Network/Email/CakeEmail.php	/^		$rendered = $this->_renderTemplates($content);$/;"	v
rendered	lib/Cake/Network/Email/CakeEmail.php	/^		$rendered = array();$/;"	v
replyTo	lib/Cake/Network/Email/CakeEmail.php	/^	public function replyTo($email = null, $name = null) {$/;"	f
reset	lib/Cake/Network/Email/CakeEmail.php	/^	public function reset() {$/;"	f
restore	lib/Cake/Network/Email/CakeEmail.php	/^			$restore = mb_internal_encoding();$/;"	v
return	lib/Cake/Network/Email/CakeEmail.php	/^		$return = array();$/;"	v
return	lib/Cake/Network/Email/CakeEmail.php	/^		$return = mb_encode_mimeheader($text, $this->headerCharset, 'B');$/;"	v
returnPath	lib/Cake/Network/Email/CakeEmail.php	/^	public function returnPath($email = null, $name = null) {$/;"	f
send	lib/Cake/Network/Email/CakeEmail.php	/^	public function send($content = null) {$/;"	f
sender	lib/Cake/Network/Email/CakeEmail.php	/^	public function sender($email = null, $name = null) {$/;"	f
setHeaders	lib/Cake/Network/Email/CakeEmail.php	/^	public function setHeaders($headers) {$/;"	f
simpleMethods	lib/Cake/Network/Email/CakeEmail.php	/^		$simpleMethods = array($/;"	v
subject	lib/Cake/Network/Email/CakeEmail.php	/^	public function subject($subject = null) {$/;"	f
tag	lib/Cake/Network/Email/CakeEmail.php	/^						$tag = '';$/;"	v
tag	lib/Cake/Network/Email/CakeEmail.php	/^					$tag = '<';$/;"	v
tagLength	lib/Cake/Network/Email/CakeEmail.php	/^						$tagLength = strlen($tag);$/;"	v
tagOpen	lib/Cake/Network/Email/CakeEmail.php	/^						$tagOpen = false;$/;"	v
tagOpen	lib/Cake/Network/Email/CakeEmail.php	/^					$tagOpen = true;$/;"	v
tagOpen	lib/Cake/Network/Email/CakeEmail.php	/^			$tagOpen = false;$/;"	v
template	lib/Cake/Network/Email/CakeEmail.php	/^	public function template($template = false, $layout = false) {$/;"	f
textBoundary	lib/Cake/Network/Email/CakeEmail.php	/^			$textBoundary = 'alt-' . $boundary;$/;"	v
theme	lib/Cake/Network/Email/CakeEmail.php	/^	public function theme($theme = null) {$/;"	f
tmpLine	lib/Cake/Network/Email/CakeEmail.php	/^								$tmpLine = $tag;$/;"	v
tmpLine	lib/Cake/Network/Email/CakeEmail.php	/^								$tmpLine = '';$/;"	v
tmpLine	lib/Cake/Network/Email/CakeEmail.php	/^						$tmpLine = '';$/;"	v
tmpLine	lib/Cake/Network/Email/CakeEmail.php	/^						$tmpLine = substr($tmpLine, $lastSpace + 1);$/;"	v
tmpLine	lib/Cake/Network/Email/CakeEmail.php	/^			$tmpLine = $tag = '';$/;"	v
tmpLineLength	lib/Cake/Network/Email/CakeEmail.php	/^								$tmpLineLength = $tagLength;$/;"	v
tmpLineLength	lib/Cake/Network/Email/CakeEmail.php	/^								$tmpLineLength = 0;$/;"	v
tmpLineLength	lib/Cake/Network/Email/CakeEmail.php	/^						$tmpLineLength = 0;$/;"	v
tmpLineLength	lib/Cake/Network/Email/CakeEmail.php	/^						$tmpLineLength = strlen($tmpLine);$/;"	v
tmpLineLength	lib/Cake/Network/Email/CakeEmail.php	/^					$tmpLineLength = 0;$/;"	v
tmpLineLength	lib/Cake/Network/Email/CakeEmail.php	/^			$tmpLineLength = 0;$/;"	v
to	lib/Cake/Network/Email/CakeEmail.php	/^	public function to($email = null, $name = null) {$/;"	f
transport	lib/Cake/Network/Email/CakeEmail.php	/^	public function transport($name = null) {$/;"	f
transportClass	lib/Cake/Network/Email/CakeEmail.php	/^	public function transportClass() {$/;"	f
types	lib/Cake/Network/Email/CakeEmail.php	/^			$types = array('html', 'text');$/;"	v
types	lib/Cake/Network/Email/CakeEmail.php	/^		$types = $this->_getTypes();$/;"	v
types	lib/Cake/Network/Email/CakeEmail.php	/^		$types = array($this->_emailFormat);$/;"	v
valid	lib/Cake/Network/Email/CakeEmail.php	/^		$valid = (($this->_emailPattern !== null &&$/;"	v
var	lib/Cake/Network/Email/CakeEmail.php	/^				$var = '_' . $var;$/;"	v
viewClass	lib/Cake/Network/Email/CakeEmail.php	/^		$viewClass = $this->_viewRender;$/;"	v
viewRender	lib/Cake/Network/Email/CakeEmail.php	/^	public function viewRender($viewClass = null) {$/;"	f
viewVars	lib/Cake/Network/Email/CakeEmail.php	/^	public function viewVars($viewVars = null) {$/;"	f
DebugTransport	lib/Cake/Network/Email/DebugTransport.php	/^class DebugTransport extends AbstractTransport {$/;"	c
headers	lib/Cake/Network/Email/DebugTransport.php	/^		$headers = $email->getHeaders(array('from', 'sender', 'replyTo', 'readReceipt', 'returnPath', 'to', 'cc', 'subject'));$/;"	v
headers	lib/Cake/Network/Email/DebugTransport.php	/^		$headers = $this->_headersToString($headers);$/;"	v
message	lib/Cake/Network/Email/DebugTransport.php	/^		$message = implode("\\r\\n", (array)$email->message());$/;"	v
send	lib/Cake/Network/Email/DebugTransport.php	/^	public function send(CakeEmail $email) {$/;"	f
MailTransport	lib/Cake/Network/Email/MailTransport.php	/^class MailTransport extends AbstractTransport {$/;"	c
_mail	lib/Cake/Network/Email/MailTransport.php	/^	protected function _mail($to, $subject, $message, $headers, $params = null) {$/;"	f
eol	lib/Cake/Network/Email/MailTransport.php	/^			$eol = $this->_config['eol'];$/;"	v
eol	lib/Cake/Network/Email/MailTransport.php	/^		$eol = PHP_EOL;$/;"	v
error	lib/Cake/Network/Email/MailTransport.php	/^				$error = error_get_last();$/;"	v
error	lib/Cake/Network/Email/MailTransport.php	/^			$error = error_get_last();$/;"	v
headers	lib/Cake/Network/Email/MailTransport.php	/^		$headers = $email->getHeaders(array('from', 'sender', 'replyTo', 'readReceipt', 'returnPath', 'to', 'cc', 'bcc'));$/;"	v
headers	lib/Cake/Network/Email/MailTransport.php	/^		$headers = $this->_headersToString($headers, $eol);$/;"	v
message	lib/Cake/Network/Email/MailTransport.php	/^		$message = implode($eol, $email->message());$/;"	v
msg	lib/Cake/Network/Email/MailTransport.php	/^				$msg = 'Could not send email: ' . isset($error['message']) ? $error['message'] : 'unknown';$/;"	v
msg	lib/Cake/Network/Email/MailTransport.php	/^			$msg = 'Could not send email: ' . isset($error['message']) ? $error['message'] : 'unknown';$/;"	v
params	lib/Cake/Network/Email/MailTransport.php	/^		$params = isset($this->_config['additionalParameters']) ? $this->_config['additionalParameters'] : null;$/;"	v
send	lib/Cake/Network/Email/MailTransport.php	/^	public function send(CakeEmail $email) {$/;"	f
subject	lib/Cake/Network/Email/MailTransport.php	/^		$subject = str_replace(array("\\r", "\\n"), '', $email->subject());$/;"	v
to	lib/Cake/Network/Email/MailTransport.php	/^		$to = $headers['To'];$/;"	v
to	lib/Cake/Network/Email/MailTransport.php	/^		$to = str_replace(array("\\r", "\\n"), '', $to);$/;"	v
SmtpTransport	lib/Cake/Network/Email/SmtpTransport.php	/^class SmtpTransport extends AbstractTransport {$/;"	c
_auth	lib/Cake/Network/Email/SmtpTransport.php	/^	protected function _auth() {$/;"	f
_bufferResponseLines	lib/Cake/Network/Email/SmtpTransport.php	/^	protected function _bufferResponseLines(array $responseLines) {$/;"	f
_cakeEmail	lib/Cake/Network/Email/SmtpTransport.php	/^		$this->_cakeEmail = $email;$/;"	v
_cakeEmail	lib/Cake/Network/Email/SmtpTransport.php	/^	protected $_cakeEmail;$/;"	v
_config	lib/Cake/Network/Email/SmtpTransport.php	/^		$this->_config = array_merge($default, $this->_config, $config);$/;"	v
_connect	lib/Cake/Network/Email/SmtpTransport.php	/^	protected function _connect() {$/;"	f
_content	lib/Cake/Network/Email/SmtpTransport.php	/^		$this->_content = array('headers' => $headers, 'message' => $message);$/;"	v
_content	lib/Cake/Network/Email/SmtpTransport.php	/^	protected $_content;$/;"	v
_disconnect	lib/Cake/Network/Email/SmtpTransport.php	/^	protected function _disconnect() {$/;"	f
_generateSocket	lib/Cake/Network/Email/SmtpTransport.php	/^	protected function _generateSocket() {$/;"	f
_lastResponse	lib/Cake/Network/Email/SmtpTransport.php	/^		$this->_lastResponse = array();$/;"	v
_lastResponse	lib/Cake/Network/Email/SmtpTransport.php	/^		$this->_lastResponse = array_merge($this->_lastResponse, $response);$/;"	v
_lastResponse	lib/Cake/Network/Email/SmtpTransport.php	/^	protected $_lastResponse = array();$/;"	v
_prepareFromAddress	lib/Cake/Network/Email/SmtpTransport.php	/^	protected function _prepareFromAddress() {$/;"	f
_prepareFromCmd	lib/Cake/Network/Email/SmtpTransport.php	/^	protected function _prepareFromCmd($email) {$/;"	f
_prepareMessage	lib/Cake/Network/Email/SmtpTransport.php	/^	protected function _prepareMessage() {$/;"	f
_prepareMessageHeaders	lib/Cake/Network/Email/SmtpTransport.php	/^	protected function _prepareMessageHeaders() {$/;"	f
_prepareRcptCmd	lib/Cake/Network/Email/SmtpTransport.php	/^	protected function _prepareRcptCmd($email) {$/;"	f
_prepareRecipientAddresses	lib/Cake/Network/Email/SmtpTransport.php	/^	protected function _prepareRecipientAddresses() {$/;"	f
_sendData	lib/Cake/Network/Email/SmtpTransport.php	/^	protected function _sendData() {$/;"	f
_sendRcpt	lib/Cake/Network/Email/SmtpTransport.php	/^	protected function _sendRcpt() {$/;"	f
_smtpSend	lib/Cake/Network/Email/SmtpTransport.php	/^	protected function _smtpSend($data, $checkCode = '250') {$/;"	f
_socket	lib/Cake/Network/Email/SmtpTransport.php	/^		$this->_socket = new CakeSocket($this->_config);$/;"	v
_socket	lib/Cake/Network/Email/SmtpTransport.php	/^	protected $_socket;$/;"	v
authRequired	lib/Cake/Network/Email/SmtpTransport.php	/^			$authRequired = $this->_smtpSend('AUTH LOGIN', '334|503');$/;"	v
bcc	lib/Cake/Network/Email/SmtpTransport.php	/^		$bcc = $this->_cakeEmail->bcc();$/;"	v
cc	lib/Cake/Network/Email/SmtpTransport.php	/^		$cc = $this->_cakeEmail->cc();$/;"	v
config	lib/Cake/Network/Email/SmtpTransport.php	/^	public function config($config = null) {$/;"	f
default	lib/Cake/Network/Email/SmtpTransport.php	/^		$default = array($/;"	v
emails	lib/Cake/Network/Email/SmtpTransport.php	/^		$emails = $this->_prepareRecipientAddresses();$/;"	v
from	lib/Cake/Network/Email/SmtpTransport.php	/^			$from = $this->_cakeEmail->from();$/;"	v
from	lib/Cake/Network/Email/SmtpTransport.php	/^		$from = $this->_cakeEmail->returnPath();$/;"	v
from	lib/Cake/Network/Email/SmtpTransport.php	/^		$from = $this->_prepareFromAddress();$/;"	v
getLastResponse	lib/Cake/Network/Email/SmtpTransport.php	/^	public function getLastResponse() {$/;"	f
headers	lib/Cake/Network/Email/SmtpTransport.php	/^		$headers = $this->_headersToString($this->_prepareMessageHeaders());$/;"	v
host	lib/Cake/Network/Email/SmtpTransport.php	/^			$host = $this->_config['client'];$/;"	v
host	lib/Cake/Network/Email/SmtpTransport.php	/^			$host = 'localhost';$/;"	v
lines	lib/Cake/Network/Email/SmtpTransport.php	/^		$lines = $this->_cakeEmail->message();$/;"	v
message	lib/Cake/Network/Email/SmtpTransport.php	/^		$message = $this->_prepareMessage();$/;"	v
messages	lib/Cake/Network/Email/SmtpTransport.php	/^		$messages = array();$/;"	v
response	lib/Cake/Network/Email/SmtpTransport.php	/^			$response = '';$/;"	v
response	lib/Cake/Network/Email/SmtpTransport.php	/^			$response = end($responseLines);$/;"	v
response	lib/Cake/Network/Email/SmtpTransport.php	/^		$response = array();$/;"	v
responseLines	lib/Cake/Network/Email/SmtpTransport.php	/^			$responseLines = explode("\\r\\n", rtrim($response, "\\r\\n"));$/;"	v
send	lib/Cake/Network/Email/SmtpTransport.php	/^	public function send(CakeEmail $email) {$/;"	f
startTime	lib/Cake/Network/Email/SmtpTransport.php	/^			$startTime = time();$/;"	v
to	lib/Cake/Network/Email/SmtpTransport.php	/^		$to = $this->_cakeEmail->to();$/;"	v
BasicAuthentication	lib/Cake/Network/Http/BasicAuthentication.php	/^class BasicAuthentication {$/;"	c
_generateHeader	lib/Cake/Network/Http/BasicAuthentication.php	/^	protected static function _generateHeader($user, $pass) {$/;"	f
authentication	lib/Cake/Network/Http/BasicAuthentication.php	/^	public static function authentication(HttpSocket $http, &$authInfo) {$/;"	f
proxyAuthentication	lib/Cake/Network/Http/BasicAuthentication.php	/^	public static function proxyAuthentication(HttpSocket $http, &$proxyInfo) {$/;"	f
DigestAuthentication	lib/Cake/Network/Http/DigestAuthentication.php	/^class DigestAuthentication {$/;"	c
_generateHeader	lib/Cake/Network/Http/DigestAuthentication.php	/^	protected static function _generateHeader(HttpSocket $http, &$authInfo) {$/;"	f
_getServerInformation	lib/Cake/Network/Http/DigestAuthentication.php	/^	protected static function _getServerInformation(HttpSocket $http, &$authInfo) {$/;"	f
a1	lib/Cake/Network/Http/DigestAuthentication.php	/^		$a1 = md5($authInfo['user'] . ':' . $authInfo['realm'] . ':' . $authInfo['pass']);$/;"	v
a2	lib/Cake/Network/Http/DigestAuthentication.php	/^		$a2 = md5($http->request['method'] . ':' . $http->request['uri']['path']);$/;"	v
authHeader	lib/Cake/Network/Http/DigestAuthentication.php	/^		$authHeader = 'Digest ';$/;"	v
authentication	lib/Cake/Network/Http/DigestAuthentication.php	/^	public static function authentication(HttpSocket $http, &$authInfo) {$/;"	f
nc	lib/Cake/Network/Http/DigestAuthentication.php	/^			$nc = sprintf('%08x', $authInfo['nc']++);$/;"	v
originalRequest	lib/Cake/Network/Http/DigestAuthentication.php	/^		$originalRequest = $http->request;$/;"	v
response	lib/Cake/Network/Http/DigestAuthentication.php	/^			$response = md5($a1 . ':' . $authInfo['nonce'] . ':' . $a2);$/;"	v
response	lib/Cake/Network/Http/DigestAuthentication.php	/^			$response = md5($a1 . ':' . $authInfo['nonce'] . ':' . $nc . ':' . $authInfo['cnonce'] . ':auth:' . $a2);$/;"	v
HttpResponse	lib/Cake/Network/Http/HttpResponse.php	/^class HttpResponse extends HttpSocketResponse {$/;"	c
Host	lib/Cake/Network/Http/HttpSocket.php	/^		$Host = $this->request['uri']['host'];$/;"	v
HttpSocket	lib/Cake/Network/Http/HttpSocket.php	/^class HttpSocket extends CakeSocket {$/;"	c
__construct	lib/Cake/Network/Http/HttpSocket.php	/^	public function __construct($config = array()) {$/;"	f
_auth	lib/Cake/Network/Http/HttpSocket.php	/^			$this->_auth = array($method => $user);$/;"	v
_auth	lib/Cake/Network/Http/HttpSocket.php	/^			$this->_auth = array();$/;"	v
_auth	lib/Cake/Network/Http/HttpSocket.php	/^		$this->_auth = array($method => compact('user', 'pass'));$/;"	v
_auth	lib/Cake/Network/Http/HttpSocket.php	/^	protected $_auth = array();$/;"	v
_buildHeader	lib/Cake/Network/Http/HttpSocket.php	/^	protected function _buildHeader($header, $mode = 'standard') {$/;"	f
_buildRequestLine	lib/Cake/Network/Http/HttpSocket.php	/^	protected function _buildRequestLine($request = array(), $versionToken = 'HTTP\/1.1') {$/;"	f
_buildUri	lib/Cake/Network/Http/HttpSocket.php	/^	protected function _buildUri($uri = array(), $uriTemplate = '%scheme:\/\/%user:%pass@%host:%port\/%path?%query#%fragment') {$/;"	f
_configContext	lib/Cake/Network/Http/HttpSocket.php	/^	protected function _configContext($host) {$/;"	f
_configUri	lib/Cake/Network/Http/HttpSocket.php	/^	protected function _configUri($uri = null) {$/;"	f
_contentResource	lib/Cake/Network/Http/HttpSocket.php	/^			$this->_contentResource = null;$/;"	v
_contentResource	lib/Cake/Network/Http/HttpSocket.php	/^		$this->_contentResource = $resource;$/;"	v
_contentResource	lib/Cake/Network/Http/HttpSocket.php	/^	protected $_contentResource = null;$/;"	v
_escapeToken	lib/Cake/Network/Http/HttpSocket.php	/^	protected function _escapeToken($token, $chars = null) {$/;"	f
_parseQuery	lib/Cake/Network/Http/HttpSocket.php	/^	protected function _parseQuery($query) {$/;"	f
_parseUri	lib/Cake/Network/Http/HttpSocket.php	/^	protected function _parseUri($uri = null, $base = array()) {$/;"	f
_proxy	lib/Cake/Network/Http/HttpSocket.php	/^			$this->_proxy = $host + array('host' => null);$/;"	v
_proxy	lib/Cake/Network/Http/HttpSocket.php	/^			$this->_proxy = array();$/;"	v
_proxy	lib/Cake/Network/Http/HttpSocket.php	/^		$this->_proxy = compact('host', 'port', 'method', 'user', 'pass');$/;"	v
_proxy	lib/Cake/Network/Http/HttpSocket.php	/^	protected $_proxy = array();$/;"	v
_setAuth	lib/Cake/Network/Http/HttpSocket.php	/^	protected function _setAuth() {$/;"	f
_setProxy	lib/Cake/Network/Http/HttpSocket.php	/^	protected function _setProxy() {$/;"	f
_tokenEscapeChars	lib/Cake/Network/Http/HttpSocket.php	/^	protected function _tokenEscapeChars($hex = true, $chars = null) {$/;"	f
asteriskMethods	lib/Cake/Network/Http/HttpSocket.php	/^		$asteriskMethods = array('OPTIONS');$/;"	v
authClass	lib/Cake/Network/Http/HttpSocket.php	/^		$authClass = Inflector::camelize($authClass) . 'Authentication';$/;"	v
base	lib/Cake/Network/Http/HttpSocket.php	/^			$base = $uriBase;$/;"	v
base	lib/Cake/Network/Http/HttpSocket.php	/^		$base = array_merge($this->config['request']['uri'], array('scheme' => array('http', 'https'), 'port' => array(80, 443)));$/;"	v
buildCookies	lib/Cake/Network/Http/HttpSocket.php	/^	public function buildCookies($cookies) {$/;"	f
config	lib/Cake/Network/Http/HttpSocket.php	/^			$this->config = Hash::merge($this->config, $config);$/;"	v
config	lib/Cake/Network/Http/HttpSocket.php	/^		$config = array($/;"	v
config	lib/Cake/Network/Http/HttpSocket.php	/^		$this->config = Hash::merge($this->config, $config);$/;"	v
config	lib/Cake/Network/Http/HttpSocket.php	/^		$this->config = Hash::merge($this->config, array_intersect_key($this->config['request']['uri'], $this->config));$/;"	v
config	lib/Cake/Network/Http/HttpSocket.php	/^	public $config = array($/;"	v
configAuth	lib/Cake/Network/Http/HttpSocket.php	/^	public function configAuth($method, $user = null, $pass = null) {$/;"	f
configProxy	lib/Cake/Network/Http/HttpSocket.php	/^	public function configProxy($host, $port = 3128, $method = null, $user = null, $pass = null) {$/;"	f
connectionType	lib/Cake/Network/Http/HttpSocket.php	/^			$connectionType = $this->request['header']['Connection'];$/;"	v
connectionType	lib/Cake/Network/Http/HttpSocket.php	/^		$connectionType = null;$/;"	v
contents	lib/Cake/Network/Http/HttpSocket.php	/^				$contents = implode(',', $contents);$/;"	v
contents	lib/Cake/Network/Http/HttpSocket.php	/^				$contents = preg_replace("\/\\r\\n(?![\\t ])\/", "\\r\\n ", $content);$/;"	v
contextKey	lib/Cake/Network/Http/HttpSocket.php	/^			$contextKey = substr($key, 4);$/;"	v
cookies	lib/Cake/Network/Http/HttpSocket.php	/^				$cookies = $this->buildCookies($this->request['cookies']);$/;"	v
cookies	lib/Cake/Network/Http/HttpSocket.php	/^		$cookies = null;$/;"	v
data	lib/Cake/Network/Http/HttpSocket.php	/^						$data = substr($response, $pos);$/;"	v
defaultPorts	lib/Cake/Network/Http/HttpSocket.php	/^		$defaultPorts = array('http' => 80, 'https' => 443);$/;"	v
delete	lib/Cake/Network/Http/HttpSocket.php	/^	public function delete($uri = null, $data = array(), $request = array()) {$/;"	f
escape	lib/Cake/Network/Http/HttpSocket.php	/^			$escape = $chars;$/;"	v
escape	lib/Cake/Network/Http/HttpSocket.php	/^			$escape = array('"', "(", ")", "<", ">", "@", ",", ";", ":", "\\\\", "\/", "[", "]", "?", "=", "{", "}", " ");$/;"	v
field	lib/Cake/Network/Http/HttpSocket.php	/^				$field = $this->_escapeToken($field);$/;"	v
fieldsInHeader	lib/Cake/Network/Http/HttpSocket.php	/^		$fieldsInHeader = array();$/;"	v
get	lib/Cake/Network/Http/HttpSocket.php	/^	public function get($uri = null, $query = array(), $request = array()) {$/;"	f
header	lib/Cake/Network/Http/HttpSocket.php	/^		$header = array();$/;"	v
host	lib/Cake/Network/Http/HttpSocket.php	/^			$host = $request['host'];$/;"	v
host	lib/Cake/Network/Http/HttpSocket.php	/^			$host = $this->config['host'];$/;"	v
inHeader	lib/Cake/Network/Http/HttpSocket.php	/^						$inHeader = false;$/;"	v
inHeader	lib/Cake/Network/Http/HttpSocket.php	/^		$inHeader = true;$/;"	v
initalState	lib/Cake/Network/Http/HttpSocket.php	/^			$initalState = get_class_vars(__CLASS__);$/;"	v
initalState	lib/Cake/Network/Http/HttpSocket.php	/^		static $initalState = array();$/;"	v
isValid	lib/Cake/Network/Http/HttpSocket.php	/^			$isValid = preg_match("\/(.+) (.+) (.+)\\r\\n\/U", $request, $match);$/;"	v
items	lib/Cake/Network/Http/HttpSocket.php	/^			$items = explode('&', $query);$/;"	v
key	lib/Cake/Network/Http/HttpSocket.php	/^					$key = $item;$/;"	v
key	lib/Cake/Network/Http/HttpSocket.php	/^				$key = urldecode($key);$/;"	v
lowKey	lib/Cake/Network/Http/HttpSocket.php	/^			$lowKey = strtolower($key);$/;"	v
method	lib/Cake/Network/Http/HttpSocket.php	/^		$method = key($this->_auth);$/;"	v
parsedQuery	lib/Cake/Network/Http/HttpSocket.php	/^		$parsedQuery = array();$/;"	v
patch	lib/Cake/Network/Http/HttpSocket.php	/^	public function patch($uri = null, $data = array(), $request = array()) {$/;"	f
port	lib/Cake/Network/Http/HttpSocket.php	/^				$port = $port[0];$/;"	v
port	lib/Cake/Network/Http/HttpSocket.php	/^				$port = $this->request['uri']['port'];$/;"	v
port	lib/Cake/Network/Http/HttpSocket.php	/^			$port = $this->config['request']['uri']['port'];$/;"	v
port	lib/Cake/Network/Http/HttpSocket.php	/^			$port = 0;$/;"	v
pos	lib/Cake/Network/Http/HttpSocket.php	/^					$pos = strpos($response, "\\r\\n\\r\\n");$/;"	v
post	lib/Cake/Network/Http/HttpSocket.php	/^	public function post($uri = null, $data = array(), $request = array()) {$/;"	f
put	lib/Cake/Network/Http/HttpSocket.php	/^	public function put($uri = null, $data = array(), $request = array()) {$/;"	f
query	lib/Cake/Network/Http/HttpSocket.php	/^			$query = preg_replace('\/^\\?\/', '', $query);$/;"	v
queryNode	lib/Cake/Network/Http/HttpSocket.php	/^							$queryNode = array();$/;"	v
queryNode	lib/Cake/Network/Http/HttpSocket.php	/^						$queryNode =& $queryNode[$subKey];$/;"	v
queryNode	lib/Cake/Network/Http/HttpSocket.php	/^					$queryNode = $value;$/;"	v
queryNode	lib/Cake/Network/Http/HttpSocket.php	/^					$queryNode =& $parsedQuery;$/;"	v
quirksMode	lib/Cake/Network/Http/HttpSocket.php	/^	public $quirksMode = false;$/;"	v
regex	lib/Cake/Network/Http/HttpSocket.php	/^		$regex = '\/([' . implode('', $this->_tokenEscapeChars(true, $chars)) . '])\/';$/;"	v
request	lib/Cake/Network/Http/HttpSocket.php	/^			$request = array('uri' => $request);$/;"	v
request	lib/Cake/Network/Http/HttpSocket.php	/^			$this->request = $initalState['request'];$/;"	v
request	lib/Cake/Network/Http/HttpSocket.php	/^		$request = Hash::merge(array('method' => 'DELETE', 'uri' => $uri, 'body' => $data), $request);$/;"	v
request	lib/Cake/Network/Http/HttpSocket.php	/^		$request = Hash::merge(array('method' => 'GET', 'uri' => $uri), $request);$/;"	v
request	lib/Cake/Network/Http/HttpSocket.php	/^		$request = Hash::merge(array('method' => 'PATCH', 'uri' => $uri, 'body' => $data), $request);$/;"	v
request	lib/Cake/Network/Http/HttpSocket.php	/^		$request = Hash::merge(array('method' => 'POST', 'uri' => $uri, 'body' => $data), $request);$/;"	v
request	lib/Cake/Network/Http/HttpSocket.php	/^		$request = Hash::merge(array('method' => 'PUT', 'uri' => $uri, 'body' => $data), $request);$/;"	v
request	lib/Cake/Network/Http/HttpSocket.php	/^		$this->request = Hash::merge($this->request, array_diff_key($this->config['request'], array('cookies' => true)), $request);$/;"	v
request	lib/Cake/Network/Http/HttpSocket.php	/^	public $request = array($/;"	v
request	lib/Cake/Network/Http/HttpSocket.php	/^	public function request($request = array()) {$/;"	f
reset	lib/Cake/Network/Http/HttpSocket.php	/^	public function reset($full = true) {$/;"	f
response	lib/Cake/Network/Http/HttpSocket.php	/^						$response = substr($response, 0, $pos);$/;"	v
response	lib/Cake/Network/Http/HttpSocket.php	/^			$this->response = $initalState['response'];$/;"	v
response	lib/Cake/Network/Http/HttpSocket.php	/^			$this->response = $this->request($request);$/;"	v
response	lib/Cake/Network/Http/HttpSocket.php	/^		$response = null;$/;"	v
response	lib/Cake/Network/Http/HttpSocket.php	/^		$this->response = new $responseClass($response);$/;"	v
response	lib/Cake/Network/Http/HttpSocket.php	/^	public $response = null;$/;"	v
responseClass	lib/Cake/Network/Http/HttpSocket.php	/^	public $responseClass = 'HttpSocketResponse';$/;"	v
returnHeader	lib/Cake/Network/Http/HttpSocket.php	/^		$returnHeader = '';$/;"	v
rootKey	lib/Cake/Network/Http/HttpSocket.php	/^					$rootKey = substr($key, 0, strpos($key, '['));$/;"	v
scheme	lib/Cake/Network/Http/HttpSocket.php	/^				$scheme = $scheme[0];$/;"	v
scheme	lib/Cake/Network/Http/HttpSocket.php	/^				$scheme = $this->request['uri']['scheme'];$/;"	v
scheme	lib/Cake/Network/Http/HttpSocket.php	/^			$scheme = $this->config['request']['uri']['scheme'];$/;"	v
scheme	lib/Cake/Network/Http/HttpSocket.php	/^			$scheme = '';$/;"	v
setContentResource	lib/Cake/Network/Http/HttpSocket.php	/^	public function setContentResource($resource) {$/;"	f
stripIfEmpty	lib/Cake/Network/Http/HttpSocket.php	/^		$stripIfEmpty = array($/;"	v
subKey	lib/Cake/Network/Http/HttpSocket.php	/^							$subKey = key($queryNode);$/;"	v
subKeys	lib/Cake/Network/Http/HttpSocket.php	/^					$subKeys = $matches[1];$/;"	v
token	lib/Cake/Network/Http/HttpSocket.php	/^		$token = preg_replace($regex, '"\\\\1"', $token);$/;"	v
uri	lib/Cake/Network/Http/HttpSocket.php	/^			$uri = $this->_buildUri($uri);$/;"	v
uri	lib/Cake/Network/Http/HttpSocket.php	/^			$uri = $this->_parseUri($uri);$/;"	v
uri	lib/Cake/Network/Http/HttpSocket.php	/^			$uri = $this->_parseUri($uri, $this->config['request']['uri']);$/;"	v
uri	lib/Cake/Network/Http/HttpSocket.php	/^			$uri = $this->_parseUri($uri, true);$/;"	v
uri	lib/Cake/Network/Http/HttpSocket.php	/^			$uri = array('host' => $uri);$/;"	v
uri	lib/Cake/Network/Http/HttpSocket.php	/^			$uri = array_merge($base, $uri);$/;"	v
uri	lib/Cake/Network/Http/HttpSocket.php	/^			$uri = parse_url($uri);$/;"	v
uri	lib/Cake/Network/Http/HttpSocket.php	/^		$uri = $this->_parseUri($request['uri']);$/;"	v
uri	lib/Cake/Network/Http/HttpSocket.php	/^		$uri = $this->_parseUri($uri, true);$/;"	v
uriBase	lib/Cake/Network/Http/HttpSocket.php	/^		$uriBase = array($/;"	v
uriTemplate	lib/Cake/Network/Http/HttpSocket.php	/^				$uriTemplate = str_replace($strip, null, $uriTemplate);$/;"	v
uriTemplate	lib/Cake/Network/Http/HttpSocket.php	/^			$uriTemplate = '*';$/;"	v
uriTemplate	lib/Cake/Network/Http/HttpSocket.php	/^			$uriTemplate = str_replace('%' . $property, $value, $uriTemplate);$/;"	v
uriTemplate	lib/Cake/Network/Http/HttpSocket.php	/^			$uriTemplate = str_replace(':%port', null, $uriTemplate);$/;"	v
url	lib/Cake/Network/Http/HttpSocket.php	/^				$url = $scheme . ':\/\/' . $url;$/;"	v
url	lib/Cake/Network/Http/HttpSocket.php	/^				$url = $this->config['request']['uri']['host'] . ':' . $port . $url;$/;"	v
url	lib/Cake/Network/Http/HttpSocket.php	/^			$url = $this->config['request']['uri'];$/;"	v
url	lib/Cake/Network/Http/HttpSocket.php	/^			$url = '\/';$/;"	v
url	lib/Cake/Network/Http/HttpSocket.php	/^		$url = $this->_parseUri($url, $base);$/;"	v
url	lib/Cake/Network/Http/HttpSocket.php	/^	public function url($url = null, $uriTemplate = null) {$/;"	f
value	lib/Cake/Network/Http/HttpSocket.php	/^					$value = null;$/;"	v
value	lib/Cake/Network/Http/HttpSocket.php	/^				$value = $this->_escapeToken($cookie, array(';'));$/;"	v
value	lib/Cake/Network/Http/HttpSocket.php	/^				$value = $this->_escapeToken($cookie['value'], array(';'));$/;"	v
value	lib/Cake/Network/Http/HttpSocket.php	/^				$value = urldecode($value);$/;"	v
HttpSocketResponse	lib/Cake/Network/Http/HttpSocketResponse.php	/^class HttpSocketResponse implements ArrayAccess {$/;"	c
__construct	lib/Cake/Network/Http/HttpSocketResponse.php	/^	public function __construct($message = null) {$/;"	f
__toString	lib/Cake/Network/Http/HttpSocketResponse.php	/^	public function __toString() {$/;"	f
_decodeBody	lib/Cake/Network/Http/HttpSocketResponse.php	/^	protected function _decodeBody($body, $encoding = 'chunked') {$/;"	f
_decodeChunkedBody	lib/Cake/Network/Http/HttpSocketResponse.php	/^	protected function _decodeChunkedBody($body) {$/;"	f
_parseHeader	lib/Cake/Network/Http/HttpSocketResponse.php	/^	protected function _parseHeader($header) {$/;"	f
_tokenEscapeChars	lib/Cake/Network/Http/HttpSocketResponse.php	/^	protected function _tokenEscapeChars($hex = true, $chars = null) {$/;"	f
_unescapeToken	lib/Cake/Network/Http/HttpSocketResponse.php	/^	protected function _unescapeToken($token, $chars = null) {$/;"	f
body	lib/Cake/Network/Http/HttpSocketResponse.php	/^				$body = substr($body, $chunkLength + strlen("\\r\\n"));$/;"	v
body	lib/Cake/Network/Http/HttpSocketResponse.php	/^			$body = substr($body, strlen($chunkSize));$/;"	v
body	lib/Cake/Network/Http/HttpSocketResponse.php	/^		$this->body = $decoded['body'];$/;"	v
body	lib/Cake/Network/Http/HttpSocketResponse.php	/^		$this->body = (string)substr($message, strlen($match[0]));$/;"	v
body	lib/Cake/Network/Http/HttpSocketResponse.php	/^	public $body = '';$/;"	v
body	lib/Cake/Network/Http/HttpSocketResponse.php	/^	public function body() {$/;"	f
chunk	lib/Cake/Network/Http/HttpSocketResponse.php	/^			$chunk = substr($body, 0, $chunkLength);$/;"	v
chunkExtensionValue	lib/Cake/Network/Http/HttpSocketResponse.php	/^				$chunkExtensionValue = $match[3];$/;"	v
chunkExtensionValue	lib/Cake/Network/Http/HttpSocketResponse.php	/^			$chunkExtensionValue = '';$/;"	v
chunkLength	lib/Cake/Network/Http/HttpSocketResponse.php	/^			$chunkLength = hexdec($hexLength);$/;"	v
chunkLength	lib/Cake/Network/Http/HttpSocketResponse.php	/^		$chunkLength = null;$/;"	v
chunkSize	lib/Cake/Network/Http/HttpSocketResponse.php	/^				$chunkSize = $match[0];$/;"	v
chunkSize	lib/Cake/Network/Http/HttpSocketResponse.php	/^			$chunkSize = 0;$/;"	v
code	lib/Cake/Network/Http/HttpSocketResponse.php	/^			$this->code = $match[2];$/;"	v
code	lib/Cake/Network/Http/HttpSocketResponse.php	/^	public $code = 0;$/;"	v
context	lib/Cake/Network/Http/HttpSocketResponse.php	/^	public $context = array();$/;"	v
cookie	lib/Cake/Network/Http/HttpSocketResponse.php	/^				$cookie = str_replace('";"', "{__cookie_replace__}", $cookie);$/;"	v
cookieHeader	lib/Cake/Network/Http/HttpSocketResponse.php	/^		$cookieHeader = $this->getHeader('Set-Cookie', $header);$/;"	v
cookies	lib/Cake/Network/Http/HttpSocketResponse.php	/^			$this->cookies = $this->parseCookies($this->headers);$/;"	v
cookies	lib/Cake/Network/Http/HttpSocketResponse.php	/^		$cookies = array();$/;"	v
cookies	lib/Cake/Network/Http/HttpSocketResponse.php	/^	public $cookies = array();$/;"	v
decodeMethod	lib/Cake/Network/Http/HttpSocketResponse.php	/^		$decodeMethod = '_decode' . Inflector::camelize(str_replace('-', '_', $encoding)) . 'Body';$/;"	v
decoded	lib/Cake/Network/Http/HttpSocketResponse.php	/^		$decoded = $this->_decodeBody($this->body, $transferEncoding);$/;"	v
decodedBody	lib/Cake/Network/Http/HttpSocketResponse.php	/^		$decodedBody = null;$/;"	v
entityHeader	lib/Cake/Network/Http/HttpSocketResponse.php	/^			$entityHeader = $this->_parseHeader($body);$/;"	v
entityHeader	lib/Cake/Network/Http/HttpSocketResponse.php	/^		$entityHeader = false;$/;"	v
escape	lib/Cake/Network/Http/HttpSocketResponse.php	/^			$escape = $chars;$/;"	v
escape	lib/Cake/Network/Http/HttpSocketResponse.php	/^			$escape = array('"', "(", ")", "<", ">", "@", ",", ";", ":", "\\\\", "\/", "[", "]", "?", "=", "{", "}", " ");$/;"	v
field	lib/Cake/Network/Http/HttpSocketResponse.php	/^			$field = $this->_unescapeToken($field);$/;"	v
firstLineLength	lib/Cake/Network/Http/HttpSocketResponse.php	/^				$firstLineLength = strpos($this->raw, "\\r\\n") + 2;$/;"	v
getHeader	lib/Cake/Network/Http/HttpSocketResponse.php	/^	public function getHeader($name, $headers = null) {$/;"	f
header	lib/Cake/Network/Http/HttpSocketResponse.php	/^					$header = null;$/;"	v
header	lib/Cake/Network/Http/HttpSocketResponse.php	/^					$header = substr($this->raw, $firstLineLength, strpos($this->raw, "\\r\\n\\r\\n") - $firstLineLength) . "\\r\\n";$/;"	v
header	lib/Cake/Network/Http/HttpSocketResponse.php	/^		$header = array();$/;"	v
headers	lib/Cake/Network/Http/HttpSocketResponse.php	/^			$headers =& $this->headers;$/;"	v
headers	lib/Cake/Network/Http/HttpSocketResponse.php	/^			$this->headers = $this->_parseHeader($this->_buildHeader($this->headers) . $this->_buildHeader($decoded['header']));$/;"	v
headers	lib/Cake/Network/Http/HttpSocketResponse.php	/^		$this->headers = $this->_parseHeader($header);$/;"	v
headers	lib/Cake/Network/Http/HttpSocketResponse.php	/^	public $headers = array();$/;"	v
hexLength	lib/Cake/Network/Http/HttpSocketResponse.php	/^				$hexLength = $match[1];$/;"	v
hexLength	lib/Cake/Network/Http/HttpSocketResponse.php	/^			$hexLength = 0;$/;"	v
httpVersion	lib/Cake/Network/Http/HttpSocketResponse.php	/^			$this->httpVersion = $match[1];$/;"	v
httpVersion	lib/Cake/Network/Http/HttpSocketResponse.php	/^	public $httpVersion = 'HTTP\/1.1';$/;"	v
isOk	lib/Cake/Network/Http/HttpSocketResponse.php	/^	public function isOk() {$/;"	f
isRedirect	lib/Cake/Network/Http/HttpSocketResponse.php	/^	public function isRedirect() {$/;"	f
key	lib/Cake/Network/Http/HttpSocketResponse.php	/^					$key = $part;$/;"	v
key	lib/Cake/Network/Http/HttpSocketResponse.php	/^				$key = strtolower($key);$/;"	v
offsetExists	lib/Cake/Network/Http/HttpSocketResponse.php	/^	public function offsetExists($offset) {$/;"	f
offsetGet	lib/Cake/Network/Http/HttpSocketResponse.php	/^	public function offsetGet($offset) {$/;"	f
offsetSet	lib/Cake/Network/Http/HttpSocketResponse.php	/^	public function offsetSet($offset, $value) {$/;"	f
offsetUnset	lib/Cake/Network/Http/HttpSocketResponse.php	/^	public function offsetUnset($offset) {$/;"	f
parseCookies	lib/Cake/Network/Http/HttpSocketResponse.php	/^	public function parseCookies($header) {$/;"	f
parseResponse	lib/Cake/Network/Http/HttpSocketResponse.php	/^	public function parseResponse($message) {$/;"	f
parts	lib/Cake/Network/Http/HttpSocketResponse.php	/^				$parts = preg_split('\/\\;[ \\t]*\/', $cookie);$/;"	v
parts	lib/Cake/Network/Http/HttpSocketResponse.php	/^				$parts = str_replace("{__cookie_replace__}", '";"', explode(';', $cookie));$/;"	v
raw	lib/Cake/Network/Http/HttpSocketResponse.php	/^		$this->raw = $message;$/;"	v
raw	lib/Cake/Network/Http/HttpSocketResponse.php	/^	public $raw = '';$/;"	v
reasonPhrase	lib/Cake/Network/Http/HttpSocketResponse.php	/^				$this->reasonPhrase = $match[3];$/;"	v
reasonPhrase	lib/Cake/Network/Http/HttpSocketResponse.php	/^	public $reasonPhrase = '';$/;"	v
regex	lib/Cake/Network/Http/HttpSocketResponse.php	/^		$regex = '\/"([' . implode('', $this->_tokenEscapeChars(true, $chars)) . '])"\/';$/;"	v
token	lib/Cake/Network/Http/HttpSocketResponse.php	/^		$token = preg_replace($regex, '\\\\1', $token);$/;"	v
transferEncoding	lib/Cake/Network/Http/HttpSocketResponse.php	/^		$transferEncoding = $this->getHeader('Transfer-Encoding');$/;"	v
value	lib/Cake/Network/Http/HttpSocketResponse.php	/^					$value = true;$/;"	v
value	lib/Cake/Network/Http/HttpSocketResponse.php	/^			$value = preg_replace("\/[\\t ]\\r\\n\/", "\\r\\n", $value);$/;"	v
value	lib/Cake/Network/Http/HttpSocketResponse.php	/^			$value = trim($value);$/;"	v
Dispatcher	lib/Cake/Routing/Dispatcher.php	/^class Dispatcher implements CakeEventListener {$/;"	c
__construct	lib/Cake/Routing/Dispatcher.php	/^	public function __construct($base = false) {$/;"	f
_attachFilters	lib/Cake/Routing/Dispatcher.php	/^	protected function _attachFilters($manager) {$/;"	f
_eventManager	lib/Cake/Routing/Dispatcher.php	/^			$this->_eventManager = new CakeEventManager();$/;"	v
_eventManager	lib/Cake/Routing/Dispatcher.php	/^	protected $_eventManager;$/;"	v
_getController	lib/Cake/Routing/Dispatcher.php	/^	protected function _getController($request, $response) {$/;"	f
_invoke	lib/Cake/Routing/Dispatcher.php	/^	protected function _invoke(Controller $controller, CakeRequest $request) {$/;"	f
_loadController	lib/Cake/Routing/Dispatcher.php	/^	protected function _loadController($request) {$/;"	f
afterEvent	lib/Cake/Routing/Dispatcher.php	/^		$afterEvent = new CakeEvent('Dispatcher.afterDispatch', $this, compact('request', 'response'));$/;"	v
beforeEvent	lib/Cake/Routing/Dispatcher.php	/^		$beforeEvent = new CakeEvent('Dispatcher.beforeDispatch', $this, compact('request', 'response', 'additionalParams'));$/;"	v
class	lib/Cake/Routing/Dispatcher.php	/^			$class = $controller . 'Controller';$/;"	v
controller	lib/Cake/Routing/Dispatcher.php	/^			$controller = Inflector::camelize($request->params['controller']);$/;"	v
controller	lib/Cake/Routing/Dispatcher.php	/^		$controller = $this->_getController($request, $response);$/;"	v
ctrlClass	lib/Cake/Routing/Dispatcher.php	/^		$ctrlClass = $this->_loadController($request);$/;"	v
dispatch	lib/Cake/Routing/Dispatcher.php	/^	public function dispatch(CakeRequest $request, CakeResponse $response, $additionalParams = array()) {$/;"	f
filter	lib/Cake/Routing/Dispatcher.php	/^				$filter = $index;$/;"	v
filter	lib/Cake/Routing/Dispatcher.php	/^				$filter = array('callable' => $filter);$/;"	v
filters	lib/Cake/Routing/Dispatcher.php	/^		$filters = Configure::read('Dispatcher.filters');$/;"	v
getEventManager	lib/Cake/Routing/Dispatcher.php	/^	public function getEventManager() {$/;"	f
implementedEvents	lib/Cake/Routing/Dispatcher.php	/^	public function implementedEvents() {$/;"	f
on	lib/Cake/Routing/Dispatcher.php	/^				$on = strtolower($filter['on']);$/;"	v
options	lib/Cake/Routing/Dispatcher.php	/^					$options = array('priority' => $filter['priority']);$/;"	v
options	lib/Cake/Routing/Dispatcher.php	/^				$options = array();$/;"	v
params	lib/Cake/Routing/Dispatcher.php	/^		$params = Router::parse($request->url);$/;"	v
parseParams	lib/Cake/Routing/Dispatcher.php	/^	public function parseParams($event) {$/;"	f
pluginName	lib/Cake/Routing/Dispatcher.php	/^			$pluginName = $controller = Inflector::camelize($request->params['plugin']);$/;"	v
pluginName	lib/Cake/Routing/Dispatcher.php	/^		$pluginName = $pluginPath = $controller = null;$/;"	v
pluginPath	lib/Cake/Routing/Dispatcher.php	/^			$pluginPath = $pluginName . '.';$/;"	v
reflection	lib/Cake/Routing/Dispatcher.php	/^		$reflection = new ReflectionClass($ctrlClass);$/;"	v
render	lib/Cake/Routing/Dispatcher.php	/^			$render = false;$/;"	v
render	lib/Cake/Routing/Dispatcher.php	/^		$render = true;$/;"	v
request	lib/Cake/Routing/Dispatcher.php	/^		$request = $beforeEvent->data['request'];$/;"	v
request	lib/Cake/Routing/Dispatcher.php	/^		$request = $event->data['request'];$/;"	v
response	lib/Cake/Routing/Dispatcher.php	/^			$response = $controller->render();$/;"	v
response	lib/Cake/Routing/Dispatcher.php	/^			$response = $result;$/;"	v
response	lib/Cake/Routing/Dispatcher.php	/^		$response = $controller->response;$/;"	v
response	lib/Cake/Routing/Dispatcher.php	/^		$response = $this->_invoke($controller, $request);$/;"	v
result	lib/Cake/Routing/Dispatcher.php	/^		$result = $controller->invokeAction($request);$/;"	v
settings	lib/Cake/Routing/Dispatcher.php	/^				$settings = $filter;$/;"	v
settings	lib/Cake/Routing/Dispatcher.php	/^			$settings = array();$/;"	v
DispatcherFilter	lib/Cake/Routing/DispatcherFilter.php	/^abstract class DispatcherFilter implements CakeEventListener {$/;"	c
__construct	lib/Cake/Routing/DispatcherFilter.php	/^	public function __construct($settings = array()) {$/;"	f
afterDispatch	lib/Cake/Routing/DispatcherFilter.php	/^	public function afterDispatch(CakeEvent $event) {$/;"	f
beforeDispatch	lib/Cake/Routing/DispatcherFilter.php	/^	public function beforeDispatch(CakeEvent $event) {$/;"	f
implementedEvents	lib/Cake/Routing/DispatcherFilter.php	/^	public function implementedEvents() {$/;"	f
priority	lib/Cake/Routing/DispatcherFilter.php	/^	public $priority = 10;$/;"	v
settings	lib/Cake/Routing/DispatcherFilter.php	/^		$this->settings = Hash::merge($this->settings, $settings);$/;"	v
settings	lib/Cake/Routing/DispatcherFilter.php	/^	public $settings = array();$/;"	v
AssetDispatcher	lib/Cake/Routing/Filter/AssetDispatcher.php	/^class AssetDispatcher extends DispatcherFilter {$/;"	c
_deliverAsset	lib/Cake/Routing/Filter/AssetDispatcher.php	/^	protected function _deliverAsset(CakeResponse $response, $assetFile, $ext) {$/;"	f
_filterAsset	lib/Cake/Routing/Filter/AssetDispatcher.php	/^	protected function _filterAsset(CakeEvent $event) {$/;"	f
_getAssetFile	lib/Cake/Routing/Filter/AssetDispatcher.php	/^	protected function _getAssetFile($url) {$/;"	f
agent	lib/Cake/Routing/Filter/AssetDispatcher.php	/^			$agent = env('HTTP_USER_AGENT');$/;"	v
assetFile	lib/Cake/Routing/Filter/AssetDispatcher.php	/^		$assetFile = $this->_getAssetFile($url);$/;"	v
beforeDispatch	lib/Cake/Routing/Filter/AssetDispatcher.php	/^	public function beforeDispatch(CakeEvent $event) {$/;"	f
compressionEnabled	lib/Cake/Routing/Filter/AssetDispatcher.php	/^		$compressionEnabled = Configure::read('Asset.compress') && $response->compress();$/;"	v
contentType	lib/Cake/Routing/Filter/AssetDispatcher.php	/^				$contentType = 'application\/octetstream';$/;"	v
contentType	lib/Cake/Routing/Filter/AssetDispatcher.php	/^			$contentType = 'application\/octet-stream';$/;"	v
ext	lib/Cake/Routing/Filter/AssetDispatcher.php	/^		$ext = array_pop($pathSegments);$/;"	v
fileFragment	lib/Cake/Routing/Filter/AssetDispatcher.php	/^			$fileFragment = implode(DS, $parts);$/;"	v
filters	lib/Cake/Routing/Filter/AssetDispatcher.php	/^		$filters = Configure::read('Asset.filter');$/;"	v
isCss	lib/Cake/Routing/Filter/AssetDispatcher.php	/^		$isCss = ($/;"	v
isJs	lib/Cake/Routing/Filter/AssetDispatcher.php	/^		$isJs = ($/;"	v
parts	lib/Cake/Routing/Filter/AssetDispatcher.php	/^		$parts = explode('\/', $url);$/;"	v
path	lib/Cake/Routing/Filter/AssetDispatcher.php	/^			$path = App::themePath($themeName) . 'webroot' . DS;$/;"	v
pathSegments	lib/Cake/Routing/Filter/AssetDispatcher.php	/^		$pathSegments = explode('.', $url);$/;"	v
plugin	lib/Cake/Routing/Filter/AssetDispatcher.php	/^		$plugin = Inflector::camelize($parts[0]);$/;"	v
pluginWebroot	lib/Cake/Routing/Filter/AssetDispatcher.php	/^			$pluginWebroot = CakePlugin::path($plugin) . 'webroot' . DS;$/;"	v
priority	lib/Cake/Routing/Filter/AssetDispatcher.php	/^	public $priority = 9;$/;"	v
response	lib/Cake/Routing/Filter/AssetDispatcher.php	/^		$response = $event->data['response'];$/;"	v
themeName	lib/Cake/Routing/Filter/AssetDispatcher.php	/^			$themeName = $parts[1];$/;"	v
url	lib/Cake/Routing/Filter/AssetDispatcher.php	/^		$url = $event->data['request']->url;$/;"	v
url	lib/Cake/Routing/Filter/AssetDispatcher.php	/^		$url = urldecode($event->data['request']->url);$/;"	v
CacheDispatcher	lib/Cake/Routing/Filter/CacheDispatcher.php	/^class CacheDispatcher extends DispatcherFilter {$/;"	c
beforeDispatch	lib/Cake/Routing/Filter/CacheDispatcher.php	/^	public function beforeDispatch(CakeEvent $event) {$/;"	f
controller	lib/Cake/Routing/Filter/CacheDispatcher.php	/^			$controller = null;$/;"	v
filename	lib/Cake/Routing/Filter/CacheDispatcher.php	/^			$filename = CACHE . 'views' . DS . $path . '_index.php';$/;"	v
filename	lib/Cake/Routing/Filter/CacheDispatcher.php	/^		$filename = CACHE . 'views' . DS . $path . '.php';$/;"	v
path	lib/Cake/Routing/Filter/CacheDispatcher.php	/^			$path = $prefix . '_' . $path;$/;"	v
path	lib/Cake/Routing/Filter/CacheDispatcher.php	/^			$path = 'home';$/;"	v
path	lib/Cake/Routing/Filter/CacheDispatcher.php	/^		$path = $event->data['request']->here();$/;"	v
path	lib/Cake/Routing/Filter/CacheDispatcher.php	/^		$path = strtolower(Inflector::slug($path));$/;"	v
prefix	lib/Cake/Routing/Filter/CacheDispatcher.php	/^		$prefix = Configure::read('Cache.viewPrefix');$/;"	v
priority	lib/Cake/Routing/Filter/CacheDispatcher.php	/^	public $priority = 9;$/;"	v
result	lib/Cake/Routing/Filter/CacheDispatcher.php	/^			$result = $view->renderCache($filename, microtime(true));$/;"	v
view	lib/Cake/Routing/Filter/CacheDispatcher.php	/^			$view = new View($controller);$/;"	v
CakeRoute	lib/Cake/Routing/Route/CakeRoute.php	/^class CakeRoute {$/;"	c
__construct	lib/Cake/Routing/Route/CakeRoute.php	/^	public function __construct($template, $defaults = array(), $options = array()) {$/;"	f
_compiledRoute	lib/Cake/Routing/Route/CakeRoute.php	/^			$this->_compiledRoute = '#^\/*$#';$/;"	v
_compiledRoute	lib/Cake/Routing/Route/CakeRoute.php	/^		$this->_compiledRoute = '#^' . $parsed . '[\/]*$#';$/;"	v
_compiledRoute	lib/Cake/Routing/Route/CakeRoute.php	/^	protected $_compiledRoute = null;$/;"	v
_greedy	lib/Cake/Routing/Route/CakeRoute.php	/^			$this->_greedy = true;$/;"	v
_greedy	lib/Cake/Routing/Route/CakeRoute.php	/^	protected $_greedy = false;$/;"	v
_headerMap	lib/Cake/Routing/Route/CakeRoute.php	/^	protected $_headerMap = array($/;"	v
_matchNamed	lib/Cake/Routing/Route/CakeRoute.php	/^	protected function _matchNamed($val, $rule, $context) {$/;"	f
_parseArgs	lib/Cake/Routing/Route/CakeRoute.php	/^	protected function _parseArgs($args, $context) {$/;"	f
_writeRoute	lib/Cake/Routing/Route/CakeRoute.php	/^	protected function _writeRoute() {$/;"	f
_writeUrl	lib/Cake/Routing/Route/CakeRoute.php	/^	protected function _writeUrl($params) {$/;"	f
actionMatches	lib/Cake/Routing/Route/CakeRoute.php	/^		$actionMatches = ($/;"	v
allowedNamedParams	lib/Cake/Routing/Route/CakeRoute.php	/^		$allowedNamedParams = $namedConfig['rules'];$/;"	v
args	lib/Cake/Routing/Route/CakeRoute.php	/^		$args = explode('\/', $args);$/;"	v
arr	lib/Cake/Routing/Route/CakeRoute.php	/^								$arr = array($/;"	v
arr	lib/Cake/Routing/Route/CakeRoute.php	/^								$arr = array($arr);$/;"	v
arr	lib/Cake/Routing/Route/CakeRoute.php	/^						$arr = $val;$/;"	v
compile	lib/Cake/Routing/Route/CakeRoute.php	/^	public function compile() {$/;"	f
compiled	lib/Cake/Routing/Route/CakeRoute.php	/^	public function compiled() {$/;"	f
controllerMatches	lib/Cake/Routing/Route/CakeRoute.php	/^		$controllerMatches = ($/;"	v
count	lib/Cake/Routing/Route/CakeRoute.php	/^		$count = count($this->keys);$/;"	v
defaultExists	lib/Cake/Routing/Route/CakeRoute.php	/^			$defaultExists = array_key_exists($key, $defaults);$/;"	v
defaults	lib/Cake/Routing/Route/CakeRoute.php	/^		$defaults = $this->defaults;$/;"	v
defaults	lib/Cake/Routing/Route/CakeRoute.php	/^		$this->defaults = (array)$defaults;$/;"	v
defaults	lib/Cake/Routing/Route/CakeRoute.php	/^	public $defaults = array();$/;"	v
flat	lib/Cake/Routing/Route/CakeRoute.php	/^					$flat = Hash::flatten($value, '%5D%5B');$/;"	v
greedy	lib/Cake/Routing/Route/CakeRoute.php	/^			$greedy = isset($this->options['greedyNamed']) && $this->options['greedyNamed'] === true;$/;"	v
greedy	lib/Cake/Routing/Route/CakeRoute.php	/^		$greedy = $namedConfig['greedyNamed'];$/;"	v
greedyNamed	lib/Cake/Routing/Route/CakeRoute.php	/^		$greedyNamed = $namedConfig['greedyNamed'];$/;"	v
h	lib/Cake/Routing/Route/CakeRoute.php	/^						$h = true;$/;"	v
h	lib/Cake/Routing/Route/CakeRoute.php	/^				$h = false;$/;"	v
hasRule	lib/Cake/Routing/Route/CakeRoute.php	/^				$hasRule = isset($rules[$key]);$/;"	v
header	lib/Cake/Routing/Route/CakeRoute.php	/^					$header = $this->_headerMap[$header[1]];$/;"	v
header	lib/Cake/Routing/Route/CakeRoute.php	/^					$header = 'http_' . $header[1];$/;"	v
header	lib/Cake/Routing/Route/CakeRoute.php	/^				$header = strtoupper($header);$/;"	v
j	lib/Cake/Routing/Route/CakeRoute.php	/^			$j = count($this->options['pass']);$/;"	v
key	lib/Cake/Routing/Route/CakeRoute.php	/^						$key = array_shift($parts);$/;"	v
key	lib/Cake/Routing/Route/CakeRoute.php	/^			$key = (string)$key;$/;"	v
keyNames	lib/Cake/Routing/Route/CakeRoute.php	/^		$keyNames = array_flip($this->keys);$/;"	v
keys	lib/Cake/Routing/Route/CakeRoute.php	/^			$this->keys = array();$/;"	v
keys	lib/Cake/Routing/Route/CakeRoute.php	/^		$keys = $this->keys;$/;"	v
keys	lib/Cake/Routing/Route/CakeRoute.php	/^		$this->keys = $names;$/;"	v
keys	lib/Cake/Routing/Route/CakeRoute.php	/^		$this->keys = array_reverse($keys);$/;"	v
keys	lib/Cake/Routing/Route/CakeRoute.php	/^	public $keys = array();$/;"	v
match	lib/Cake/Routing/Route/CakeRoute.php	/^	public function match($url) {$/;"	f
matches	lib/Cake/Routing/Route/CakeRoute.php	/^						$matches = array_reverse($matches);$/;"	v
named	lib/Cake/Routing/Route/CakeRoute.php	/^					$named = array_merge_recursive($named, array($key => $val));$/;"	v
named	lib/Cake/Routing/Route/CakeRoute.php	/^			$named = array();$/;"	v
named	lib/Cake/Routing/Route/CakeRoute.php	/^		$named = $pass = array();$/;"	v
namedConfig	lib/Cake/Routing/Route/CakeRoute.php	/^		$namedConfig = Router::namedConfig();$/;"	v
names	lib/Cake/Routing/Route/CakeRoute.php	/^		$names = $routeParams = array();$/;"	v
numeric	lib/Cake/Routing/Route/CakeRoute.php	/^			$numeric = is_numeric($key);$/;"	v
option	lib/Cake/Routing/Route/CakeRoute.php	/^					$option = '?';$/;"	v
option	lib/Cake/Routing/Route/CakeRoute.php	/^				$option = null;$/;"	v
options	lib/Cake/Routing/Route/CakeRoute.php	/^		$this->options = (array)$options;$/;"	v
options	lib/Cake/Routing/Route/CakeRoute.php	/^	public $options = array();$/;"	v
out	lib/Cake/Routing/Route/CakeRoute.php	/^			$out = str_replace($search, $replace, $out);$/;"	v
out	lib/Cake/Routing/Route/CakeRoute.php	/^			$out = str_replace('%2F', '\/', $out);$/;"	v
out	lib/Cake/Routing/Route/CakeRoute.php	/^			$out = str_replace('*', $params['pass'], $out);$/;"	v
out	lib/Cake/Routing/Route/CakeRoute.php	/^			$out = str_replace('**', $params['pass'], $out);$/;"	v
out	lib/Cake/Routing/Route/CakeRoute.php	/^		$out = $this->template;$/;"	v
out	lib/Cake/Routing/Route/CakeRoute.php	/^		$out = str_replace('\/\/', '\/', $out);$/;"	v
parse	lib/Cake/Routing/Route/CakeRoute.php	/^	public function parse($url) {$/;"	f
parsed	lib/Cake/Routing/Route/CakeRoute.php	/^			$parsed = preg_replace('#\/\\\\\\\\\\*$#', '(?:\/(?P<_args_>.*))?', $parsed);$/;"	v
parsed	lib/Cake/Routing/Route/CakeRoute.php	/^			$parsed = preg_replace('#\/\\\\\\\\\\*\\\\\\\\\\*$#', '(?:\/(?P<_trailing_>.*))?', $parsed);$/;"	v
parsed	lib/Cake/Routing/Route/CakeRoute.php	/^		$parsed = preg_quote($this->template, '#');$/;"	v
parsed	lib/Cake/Routing/Route/CakeRoute.php	/^		$parsed = str_replace(array_keys($routeParams), array_values($routeParams), $parsed);$/;"	v
parts	lib/Cake/Routing/Route/CakeRoute.php	/^						$parts = explode('[', $key);$/;"	v
pass	lib/Cake/Routing/Route/CakeRoute.php	/^		$pass = $named = array();$/;"	v
passIt	lib/Cake/Routing/Route/CakeRoute.php	/^				$passIt = (!$hasRule && !$greedy) || ($hasRule && !$this->_matchNamed($val, $rules[$key], $context));$/;"	v
persistParams	lib/Cake/Routing/Route/CakeRoute.php	/^	public function persistParams($url, $params) {$/;"	f
prefixed	lib/Cake/Routing/Route/CakeRoute.php	/^			$prefixed = $params['prefix'] . '_';$/;"	v
prefixes	lib/Cake/Routing/Route/CakeRoute.php	/^		$prefixes = Router::prefixes();$/;"	v
route	lib/Cake/Routing/Route/CakeRoute.php	/^		$route = $this->template;$/;"	v
rule	lib/Cake/Routing/Route/CakeRoute.php	/^			$rule = array('match' => $rule);$/;"	v
rules	lib/Cake/Routing/Route/CakeRoute.php	/^		$rules = $namedConfig['rules'];$/;"	v
search	lib/Cake/Routing/Route/CakeRoute.php	/^			$search = $replace = array();$/;"	v
search	lib/Cake/Routing/Route/CakeRoute.php	/^			$search = '\\\\' . $namedElements[0][$i];$/;"	v
separator	lib/Cake/Routing/Route/CakeRoute.php	/^		$separator = $namedConfig['separator'];$/;"	v
separatorIsPresent	lib/Cake/Routing/Route/CakeRoute.php	/^			$separatorIsPresent = strpos($param, $namedConfig['separator']) !== false;$/;"	v
slashParam	lib/Cake/Routing/Route/CakeRoute.php	/^				$slashParam = '\/\\\\' . $namedElements[0][$i];$/;"	v
string	lib/Cake/Routing/Route/CakeRoute.php	/^					$string = $params[$key];$/;"	v
string	lib/Cake/Routing/Route/CakeRoute.php	/^				$string = null;$/;"	v
template	lib/Cake/Routing/Route/CakeRoute.php	/^		$this->template = $template;$/;"	v
template	lib/Cake/Routing/Route/CakeRoute.php	/^	public $template = null;$/;"	v
val	lib/Cake/Routing/Route/CakeRoute.php	/^						$val = $arr;$/;"	v
val	lib/Cake/Routing/Route/CakeRoute.php	/^				$val = (array)$val;$/;"	v
PluginShortRoute	lib/Cake/Routing/Route/PluginShortRoute.php	/^class PluginShortRoute extends CakeRoute {$/;"	c
match	lib/Cake/Routing/Route/PluginShortRoute.php	/^	public function match($url) {$/;"	f
params	lib/Cake/Routing/Route/PluginShortRoute.php	/^		$params = parent::parse($url);$/;"	v
parse	lib/Cake/Routing/Route/PluginShortRoute.php	/^	public function parse($url) {$/;"	f
result	lib/Cake/Routing/Route/PluginShortRoute.php	/^		$result = parent::match($url);$/;"	v
RedirectRoute	lib/Cake/Routing/Route/RedirectRoute.php	/^class RedirectRoute extends CakeRoute {$/;"	c
__construct	lib/Cake/Routing/Route/RedirectRoute.php	/^	public function __construct($template, $defaults = array(), $options = array()) {$/;"	f
_stop	lib/Cake/Routing/Route/RedirectRoute.php	/^	protected function _stop($code = 0) {$/;"	f
match	lib/Cake/Routing/Route/RedirectRoute.php	/^	public function match($url) {$/;"	f
params	lib/Cake/Routing/Route/RedirectRoute.php	/^		$params = parent::parse($url);$/;"	v
parse	lib/Cake/Routing/Route/RedirectRoute.php	/^	public function parse($url) {$/;"	f
redirect	lib/Cake/Routing/Route/RedirectRoute.php	/^			$redirect = $this->redirect[0];$/;"	v
redirect	lib/Cake/Routing/Route/RedirectRoute.php	/^			$redirect = Router::reverse($redirect);$/;"	v
redirect	lib/Cake/Routing/Route/RedirectRoute.php	/^		$redirect = $this->redirect;$/;"	v
redirect	lib/Cake/Routing/Route/RedirectRoute.php	/^		$this->redirect = (array)$defaults;$/;"	v
redirect	lib/Cake/Routing/Route/RedirectRoute.php	/^	public $redirect;$/;"	v
response	lib/Cake/Routing/Route/RedirectRoute.php	/^			$this->response = new CakeResponse();$/;"	v
response	lib/Cake/Routing/Route/RedirectRoute.php	/^	public $response = null;$/;"	v
status	lib/Cake/Routing/Route/RedirectRoute.php	/^			$status = $this->options['status'];$/;"	v
status	lib/Cake/Routing/Route/RedirectRoute.php	/^		$status = 301;$/;"	v
stop	lib/Cake/Routing/Route/RedirectRoute.php	/^	public $stop = true;$/;"	v
Router	lib/Cake/Routing/Router.php	/^class Router {$/;"	c
_currentRoute	lib/Cake/Routing/Router.php	/^	protected static $_currentRoute = array();$/;"	v
_fullBaseUrl	lib/Cake/Routing/Router.php	/^	protected static $_fullBaseUrl;$/;"	v
_handleNoRoute	lib/Cake/Routing/Router.php	/^	protected static function _handleNoRoute($url) {$/;"	f
_initialState	lib/Cake/Routing/Router.php	/^	protected static $_initialState = array();$/;"	v
_loadRoutes	lib/Cake/Routing/Router.php	/^	protected static function _loadRoutes() {$/;"	f
_namedConfig	lib/Cake/Routing/Router.php	/^	protected static $_namedConfig = array($/;"	v
_namedExpressions	lib/Cake/Routing/Router.php	/^	protected static $_namedExpressions = array($/;"	v
_parseExtension	lib/Cake/Routing/Router.php	/^	protected static function _parseExtension($url) {$/;"	f
_parseExtensions	lib/Cake/Routing/Router.php	/^	protected static $_parseExtensions = false;$/;"	v
_prefixes	lib/Cake/Routing/Router.php	/^	protected static $_prefixes = array();$/;"	v
_requests	lib/Cake/Routing/Router.php	/^	protected static $_requests = array();$/;"	v
_resourceMap	lib/Cake/Routing/Router.php	/^	protected static $_resourceMap = array($/;"	v
_resourceMapped	lib/Cake/Routing/Router.php	/^	protected static $_resourceMapped = array();$/;"	v
_routeClass	lib/Cake/Routing/Router.php	/^	protected static $_routeClass = 'CakeRoute';$/;"	v
_setPrefixes	lib/Cake/Routing/Router.php	/^	protected static function _setPrefixes() {$/;"	f
_validExtensions	lib/Cake/Routing/Router.php	/^	protected static $_validExtensions = array();$/;"	v
_validateRouteClass	lib/Cake/Routing/Router.php	/^	protected static function _validateRouteClass($routeClass) {$/;"	f
addition	lib/Cake/Routing/Router.php	/^		$addition = http_build_query($q, null, $join);$/;"	v
base	lib/Cake/Routing/Router.php	/^				$base = null;$/;"	v
base	lib/Cake/Routing/Router.php	/^				$base = substr($base, 0, $char);$/;"	v
base	lib/Cake/Routing/Router.php	/^			$base = preg_replace('\/(?:' . $plugin . ')\/', '', $base);$/;"	v
base	lib/Cake/Routing/Router.php	/^			$base = str_replace('\/\/', '', $base);$/;"	v
base	lib/Cake/Routing/Router.php	/^		$base = $path['base'];$/;"	v
char	lib/Cake/Routing/Router.php	/^			$char = strlen($base) - 1;$/;"	v
connect	lib/Cake/Routing/Router.php	/^	public static function connect($route, $defaults = array(), $options = array()) {$/;"	f
connectNamed	lib/Cake/Routing/Router.php	/^	public static function connectNamed($named, $options = array()) {$/;"	f
connectOptions	lib/Cake/Routing/Router.php	/^		$connectOptions = $options['connectOptions'];$/;"	v
count	lib/Cake/Routing/Router.php	/^		$count = count($keys);$/;"	v
count	lib/Cake/Routing/Router.php	/^		$count = count(self::$_currentRoute) - 1;$/;"	v
currentRoute	lib/Cake/Routing/Router.php	/^	public static function currentRoute() {$/;"	f
defaultRouteClass	lib/Cake/Routing/Router.php	/^	public static function defaultRouteClass($routeClass = null) {$/;"	f
defaults	lib/Cake/Routing/Router.php	/^			$defaults = $defaults['redirect'];$/;"	v
escape	lib/Cake/Routing/Router.php	/^			$escape = false;$/;"	v
ext	lib/Cake/Routing/Router.php	/^							$ext = $match;$/;"	v
ext	lib/Cake/Routing/Router.php	/^					$ext = $match;$/;"	v
ext	lib/Cake/Routing/Router.php	/^		$ext = null;$/;"	v
extension	lib/Cake/Routing/Router.php	/^				$extension = '.' . $url['ext'];$/;"	v
extension	lib/Cake/Routing/Router.php	/^		$extension = $output = $q = $frag = null;$/;"	v
extensions	lib/Cake/Routing/Router.php	/^	public static function extensions() {$/;"	f
flattend	lib/Cake/Routing/Router.php	/^					$flattend = Hash::flatten($value, '%5D%5B');$/;"	v
frag	lib/Cake/Routing/Router.php	/^				$frag = '#' . $url['#'];$/;"	v
full	lib/Cake/Routing/Router.php	/^				$full = true;$/;"	v
fullBaseUrl	lib/Cake/Routing/Router.php	/^	public static function fullBaseUrl($base = null) {$/;"	f
getNamedExpressions	lib/Cake/Routing/Router.php	/^	public static function getNamedExpressions() {$/;"	f
getParam	lib/Cake/Routing/Router.php	/^	public static function getParam($name = 'controller', $current = false) {$/;"	f
getParams	lib/Cake/Routing/Router.php	/^	public static function getParams($current = false) {$/;"	f
getPaths	lib/Cake/Routing/Router.php	/^	public static function getPaths($current = false) {$/;"	f
getRequest	lib/Cake/Routing/Router.php	/^	public static function getRequest($current = false) {$/;"	f
hasPrefix	lib/Cake/Routing/Router.php	/^		$hasPrefix = isset($options['prefix']);$/;"	v
i	lib/Cake/Routing/Router.php	/^			$i = count(self::$_requests) - 1;$/;"	v
initialized	lib/Cake/Routing/Router.php	/^	public static $initialized = false;$/;"	v
join	lib/Cake/Routing/Router.php	/^			$join = '&amp;';$/;"	v
join	lib/Cake/Routing/Router.php	/^		$join = '&';$/;"	v
key	lib/Cake/Routing/Router.php	/^			$key = $keys[$i];$/;"	v
keys	lib/Cake/Routing/Router.php	/^		$keys = array_values(array_diff(array_keys($url), $skip));$/;"	v
mapResources	lib/Cake/Routing/Router.php	/^	public static function mapResources($controller, $options = array()) {$/;"	f
match	lib/Cake/Routing/Router.php	/^				$match = substr($match[0], 1);$/;"	v
match	lib/Cake/Routing/Router.php	/^			$match = false;$/;"	v
named	lib/Cake/Routing/Router.php	/^			$named = array();$/;"	v
named	lib/Cake/Routing/Router.php	/^			$named = array_merge($named, self::$_namedConfig['default']);$/;"	v
named	lib/Cake/Routing/Router.php	/^		$named = $args = array();$/;"	v
named	lib/Cake/Routing/Router.php	/^		$named = isset($params['named']) ? $params['named'] : array();$/;"	v
namedConfig	lib/Cake/Routing/Router.php	/^	public static function namedConfig() {$/;"	f
normalize	lib/Cake/Routing/Router.php	/^	public static function normalize($url = '\/') {$/;"	f
originalUrl	lib/Cake/Routing/Router.php	/^				$originalUrl = $url;$/;"	v
out	lib/Cake/Routing/Router.php	/^				$out = $r;$/;"	v
out	lib/Cake/Routing/Router.php	/^			$out = $q;$/;"	v
out	lib/Cake/Routing/Router.php	/^			$out = '?' . $out;$/;"	v
out	lib/Cake/Routing/Router.php	/^		$out = '';$/;"	v
out	lib/Cake/Routing/Router.php	/^		$out = array();$/;"	v
output	lib/Cake/Routing/Router.php	/^					$output = trim($match, '\/');$/;"	v
output	lib/Cake/Routing/Router.php	/^				$output = rtrim($output, '\/');$/;"	v
output	lib/Cake/Routing/Router.php	/^				$output = self::_handleNoRoute($url);$/;"	v
output	lib/Cake/Routing/Router.php	/^				$output = self::fullBaseUrl() . $output;$/;"	v
output	lib/Cake/Routing/Router.php	/^				$output = substr($url, 1);$/;"	v
output	lib/Cake/Routing/Router.php	/^			$output = isset($path['here']) ? $path['here'] : '\/';$/;"	v
output	lib/Cake/Routing/Router.php	/^			$output = str_replace('\/\/', '\/', $base . '\/' . $output);$/;"	v
output	lib/Cake/Routing/Router.php	/^		$output = implode('\/', $urlOut);$/;"	v
params	lib/Cake/Routing/Router.php	/^			$params = $params->params;$/;"	v
params	lib/Cake/Routing/Router.php	/^			$params = $request->params;$/;"	v
params	lib/Cake/Routing/Router.php	/^		$params = Router::getParams($current);$/;"	v
params	lib/Cake/Routing/Router.php	/^		$params = array('plugin' => null, 'controller' => null, 'action' => 'index');$/;"	v
params	lib/Cake/Routing/Router.php	/^		$params = array_merge($params, $pass, $named);$/;"	v
parse	lib/Cake/Routing/Router.php	/^	public static function parse($url) {$/;"	f
parseExtensions	lib/Cake/Routing/Router.php	/^	public static function parseExtensions() {$/;"	f
pass	lib/Cake/Routing/Router.php	/^		$pass = isset($params['pass']) ? $params['pass'] : array();$/;"	v
path	lib/Cake/Routing/Router.php	/^			$path = array('base' => $request->base, 'here' => $request->here);$/;"	v
path	lib/Cake/Routing/Router.php	/^		$path = array('base' => null);$/;"	v
plugin	lib/Cake/Routing/Router.php	/^			$plugin = Inflector::underscore($plugin);$/;"	v
popRequest	lib/Cake/Routing/Router.php	/^	public static function popRequest() {$/;"	f
pos1	lib/Cake/Routing/Router.php	/^			$pos1 = strrpos($base, '\/');$/;"	v
prefix	lib/Cake/Routing/Router.php	/^				$prefix = '\/' . $plugin . '\/';$/;"	v
prefix	lib/Cake/Routing/Router.php	/^			$prefix = '\/' . $prefix;$/;"	v
prefix	lib/Cake/Routing/Router.php	/^		$prefix = $options['prefix'];$/;"	v
prefixExists	lib/Cake/Routing/Router.php	/^			$prefixExists = (array_intersect_key($url, array_flip(self::$_prefixes)));$/;"	v
prefixed	lib/Cake/Routing/Router.php	/^			$prefixed = $prefix . '_';$/;"	v
prefixes	lib/Cake/Routing/Router.php	/^	public static function prefixes() {$/;"	f
promote	lib/Cake/Routing/Router.php	/^	public static function promote($which = null) {$/;"	f
protocol	lib/Cake/Routing/Router.php	/^		$protocol = preg_match('#^[a-z][a-z0-9+\\-.]*\\:\/\/#i', $output);$/;"	v
q	lib/Cake/Routing/Router.php	/^				$q = $url['?'];$/;"	v
q	lib/Cake/Routing/Router.php	/^			$q = $extra;$/;"	v
q	lib/Cake/Routing/Router.php	/^			$q = array_merge($q, $extra);$/;"	v
queryString	lib/Cake/Routing/Router.php	/^	public static function queryString($q, $extra = array(), $escape = false) {$/;"	f
redirect	lib/Cake/Routing/Router.php	/^	public static function redirect($route, $url, $options = array()) {$/;"	f
reload	lib/Cake/Routing/Router.php	/^	public static function reload() {$/;"	f
request	lib/Cake/Routing/Router.php	/^			$request = self::$_requests[count(self::$_requests) - 1];$/;"	v
request	lib/Cake/Routing/Router.php	/^		$request = Router::getRequest();$/;"	v
requestObj	lib/Cake/Routing/Router.php	/^			$requestObj = new CakeRequest();$/;"	v
requestRoute	lib/Cake/Routing/Router.php	/^	public static function requestRoute() {$/;"	f
resourceMap	lib/Cake/Routing/Router.php	/^	public static function resourceMap($resourceMap = null) {$/;"	f
reverse	lib/Cake/Routing/Router.php	/^	public static function reverse($params, $full = false) {$/;"	f
route	lib/Cake/Routing/Router.php	/^			$route =& self::$routes[$i];$/;"	v
route	lib/Cake/Routing/Router.php	/^		$route =& self::$routes[$which];$/;"	v
routeClass	lib/Cake/Routing/Router.php	/^				$routeClass = $options['routeClass'];$/;"	v
routeClass	lib/Cake/Routing/Router.php	/^			$routeClass = self::_validateRouteClass($routeClass);$/;"	v
routeClass	lib/Cake/Routing/Router.php	/^		$routeClass = self::$_routeClass;$/;"	v
routes	lib/Cake/Routing/Router.php	/^	public static $routes = array();$/;"	v
routing	lib/Cake/Routing/Router.php	/^		$routing = Configure::read('Routing');$/;"	v
setExtensions	lib/Cake/Routing/Router.php	/^	public static function setExtensions($extensions, $merge = true) {$/;"	f
setRequestInfo	lib/Cake/Routing/Router.php	/^	public static function setRequestInfo($request) {$/;"	f
skip	lib/Cake/Routing/Router.php	/^		$skip = array_merge($/;"	v
stripPlugin	lib/Cake/Routing/Router.php	/^	public static function stripPlugin($base, $plugin = null) {$/;"	f
url	lib/Cake/Routing/Router.php	/^							$url = substr($url, 0, strpos($url, '.' . $name));$/;"	v
url	lib/Cake/Routing/Router.php	/^					$url = substr($url, 0, strpos($url, '.' . $match));$/;"	v
url	lib/Cake/Routing/Router.php	/^				$url = $originalUrl;$/;"	v
url	lib/Cake/Routing/Router.php	/^				$url = $prefix . $urlName . (($params['id']) ? '\/:id' : '');$/;"	v
url	lib/Cake/Routing/Router.php	/^				$url = self::$routes[$i]->persistParams($url, $params);$/;"	v
url	lib/Cake/Routing/Router.php	/^			$url = $params->query;$/;"	v
url	lib/Cake/Routing/Router.php	/^			$url = $params['url'];$/;"	v
url	lib/Cake/Routing/Router.php	/^			$url = '\/' . $url;$/;"	v
url	lib/Cake/Routing/Router.php	/^			$url = Router::url($url);$/;"	v
url	lib/Cake/Routing/Router.php	/^			$url = array('redirect' => $url);$/;"	v
url	lib/Cake/Routing/Router.php	/^			$url = preg_replace('\/^' . preg_quote($request->base, '\/') . '\/', '', $url, 1);$/;"	v
url	lib/Cake/Routing/Router.php	/^			$url = str_replace('\/\/', '\/', $url);$/;"	v
url	lib/Cake/Routing/Router.php	/^		$url = '\/' . $url;$/;"	v
url	lib/Cake/Routing/Router.php	/^		$url = preg_replace('\/(?:(\\\/$))\/', '', $url);$/;"	v
url	lib/Cake/Routing/Router.php	/^	public static function url($url = null, $full = false) {$/;"	f
urlName	lib/Cake/Routing/Router.php	/^			$urlName = Inflector::underscore($name);$/;"	v
urlOut	lib/Cake/Routing/Router.php	/^		$urlOut = array_filter(array($url['controller'], $url['action']));$/;"	v
which	lib/Cake/Routing/Router.php	/^			$which = count(self::$routes) - 1;$/;"	v
AllBehaviorsTest	lib/Cake/Test/Case/AllBehaviorsTest.php	/^class AllBehaviorsTest extends PHPUnit_Framework_TestSuite {$/;"	c
path	lib/Cake/Test/Case/AllBehaviorsTest.php	/^		$path = CORE_TEST_CASES . DS . 'Model' . DS . 'Behavior' . DS;$/;"	v
suite	lib/Cake/Test/Case/AllBehaviorsTest.php	/^		$suite = new CakeTestSuite('Model Behavior and all behaviors');$/;"	v
suite	lib/Cake/Test/Case/AllBehaviorsTest.php	/^	public static function suite() {$/;"	f
AllCacheTest	lib/Cake/Test/Case/AllCacheTest.php	/^class AllCacheTest extends PHPUnit_Framework_TestSuite {$/;"	c
suite	lib/Cake/Test/Case/AllCacheTest.php	/^		$suite = new CakeTestSuite('All Cache related class tests');$/;"	v
suite	lib/Cake/Test/Case/AllCacheTest.php	/^	public static function suite() {$/;"	f
AllComponentsTest	lib/Cake/Test/Case/AllComponentsTest.php	/^class AllComponentsTest extends PHPUnit_Framework_TestSuite {$/;"	c
suite	lib/Cake/Test/Case/AllComponentsTest.php	/^		$suite = new CakeTestSuite('All component class tests');$/;"	v
suite	lib/Cake/Test/Case/AllComponentsTest.php	/^	public static function suite() {$/;"	f
AllConfigureTest	lib/Cake/Test/Case/AllConfigureTest.php	/^class AllConfigureTest extends PHPUnit_Framework_TestSuite {$/;"	c
suite	lib/Cake/Test/Case/AllConfigureTest.php	/^		$suite = new CakeTestSuite('All Configure related tests');$/;"	v
suite	lib/Cake/Test/Case/AllConfigureTest.php	/^	public static function suite() {$/;"	f
AllConsoleTest	lib/Cake/Test/Case/AllConsoleTest.php	/^class AllConsoleTest extends PHPUnit_Framework_TestSuite {$/;"	c
path	lib/Cake/Test/Case/AllConsoleTest.php	/^		$path = CORE_TEST_CASES . DS . 'Console' . DS;$/;"	v
suite	lib/Cake/Test/Case/AllConsoleTest.php	/^		$suite = new CakeTestSuite('All console classes');$/;"	v
suite	lib/Cake/Test/Case/AllConsoleTest.php	/^	public static function suite() {$/;"	f
AllControllersTest	lib/Cake/Test/Case/AllControllerTest.php	/^class AllControllersTest extends PHPUnit_Framework_TestSuite {$/;"	c
suite	lib/Cake/Test/Case/AllControllerTest.php	/^		$suite = new CakeTestSuite('All Controller related class tests');$/;"	v
suite	lib/Cake/Test/Case/AllControllerTest.php	/^	public static function suite() {$/;"	f
AllCoreTest	lib/Cake/Test/Case/AllCoreTest.php	/^class AllCoreTest extends PHPUnit_Framework_TestSuite {$/;"	c
suite	lib/Cake/Test/Case/AllCoreTest.php	/^		$suite = new CakeTestSuite('All Core class tests');$/;"	v
suite	lib/Cake/Test/Case/AllCoreTest.php	/^	public static function suite() {$/;"	f
AllDatabaseTest	lib/Cake/Test/Case/AllDatabaseTest.php	/^class AllDatabaseTest extends PHPUnit_Framework_TestSuite {$/;"	c
path	lib/Cake/Test/Case/AllDatabaseTest.php	/^		$path = CORE_TEST_CASES . DS . 'Model' . DS;$/;"	v
suite	lib/Cake/Test/Case/AllDatabaseTest.php	/^		$suite = new PHPUnit_Framework_TestSuite('Datasources, Schema and DbAcl tests');$/;"	v
suite	lib/Cake/Test/Case/AllDatabaseTest.php	/^	public static function suite() {$/;"	f
tasks	lib/Cake/Test/Case/AllDatabaseTest.php	/^		$tasks = array($/;"	v
AllDbRelatedTest	lib/Cake/Test/Case/AllDbRelatedTest.php	/^class AllDbRelatedTest extends PHPUnit_Framework_TestSuite {$/;"	c
path	lib/Cake/Test/Case/AllDbRelatedTest.php	/^		$path = CORE_TEST_CASES . DS;$/;"	v
suite	lib/Cake/Test/Case/AllDbRelatedTest.php	/^		$suite = new PHPUnit_Framework_TestSuite('All Db Related Tests');$/;"	v
suite	lib/Cake/Test/Case/AllDbRelatedTest.php	/^	public static function suite() {$/;"	f
AllErrorTest	lib/Cake/Test/Case/AllErrorTest.php	/^class AllErrorTest extends PHPUnit_Framework_TestSuite {$/;"	c
libs	lib/Cake/Test/Case/AllErrorTest.php	/^		$libs = CORE_TEST_CASES . DS;$/;"	v
suite	lib/Cake/Test/Case/AllErrorTest.php	/^		$suite = new CakeTestSuite('All Error handling tests');$/;"	v
suite	lib/Cake/Test/Case/AllErrorTest.php	/^	public static function suite() {$/;"	f
AllEventTest	lib/Cake/Test/Case/AllEventTest.php	/^class AllEventTest extends PHPUnit_Framework_TestSuite {$/;"	c
suite	lib/Cake/Test/Case/AllEventTest.php	/^		$suite = new CakeTestSuite('All Event related class tests');$/;"	v
suite	lib/Cake/Test/Case/AllEventTest.php	/^	public static function suite() {$/;"	f
AllHelpersTest	lib/Cake/Test/Case/AllHelpersTest.php	/^class AllHelpersTest extends PHPUnit_Framework_TestSuite {$/;"	c
suite	lib/Cake/Test/Case/AllHelpersTest.php	/^		$suite = new CakeTestSuite('All Helper tests');$/;"	v
suite	lib/Cake/Test/Case/AllHelpersTest.php	/^	public static function suite() {$/;"	f
AllLocalizationTest	lib/Cake/Test/Case/AllI18nTest.php	/^class AllLocalizationTest extends PHPUnit_Framework_TestSuite {$/;"	c
suite	lib/Cake/Test/Case/AllI18nTest.php	/^		$suite = new CakeTestSuite('All localization class tests');$/;"	v
suite	lib/Cake/Test/Case/AllI18nTest.php	/^	public static function suite() {$/;"	f
AllLogTest	lib/Cake/Test/Case/AllLogTest.php	/^class AllLogTest extends PHPUnit_Framework_TestSuite {$/;"	c
suite	lib/Cake/Test/Case/AllLogTest.php	/^		$suite = new CakeTestSuite('All Logging related class tests');$/;"	v
suite	lib/Cake/Test/Case/AllLogTest.php	/^	public static function suite() {$/;"	f
AllNetworkTest	lib/Cake/Test/Case/AllNetworkTest.php	/^class AllNetworkTest extends PHPUnit_Framework_TestSuite {$/;"	c
suite	lib/Cake/Test/Case/AllNetworkTest.php	/^		$suite = new CakeTestSuite('All Network related class tests');$/;"	v
suite	lib/Cake/Test/Case/AllNetworkTest.php	/^	public static function suite() {$/;"	f
AllRoutingTest	lib/Cake/Test/Case/AllRoutingTest.php	/^class AllRoutingTest extends PHPUnit_Framework_TestSuite {$/;"	c
libs	lib/Cake/Test/Case/AllRoutingTest.php	/^		$libs = CORE_TEST_CASES . DS;$/;"	v
suite	lib/Cake/Test/Case/AllRoutingTest.php	/^		$suite = new CakeTestSuite('All Routing class tests');$/;"	v
suite	lib/Cake/Test/Case/AllRoutingTest.php	/^	public static function suite() {$/;"	f
AllTestSuiteTest	lib/Cake/Test/Case/AllTestSuiteTest.php	/^class AllTestSuiteTest extends PHPUnit_Framework_TestSuite {$/;"	c
suite	lib/Cake/Test/Case/AllTestSuiteTest.php	/^		$suite = new CakeTestSuite('All Test Suite classes tests');$/;"	v
suite	lib/Cake/Test/Case/AllTestSuiteTest.php	/^	public static function suite() {$/;"	f
AllTests	lib/Cake/Test/Case/AllTestsTest.php	/^class AllTests extends PHPUnit_Framework_TestSuite {$/;"	c
path	lib/Cake/Test/Case/AllTestsTest.php	/^		$path = CORE_TEST_CASES . DS;$/;"	v
suite	lib/Cake/Test/Case/AllTestsTest.php	/^		$suite = new PHPUnit_Framework_TestSuite('All Tests');$/;"	v
suite	lib/Cake/Test/Case/AllTestsTest.php	/^	public static function suite() {$/;"	f
AllUtilityTest	lib/Cake/Test/Case/AllUtilityTest.php	/^class AllUtilityTest extends PHPUnit_Framework_TestSuite {$/;"	c
suite	lib/Cake/Test/Case/AllUtilityTest.php	/^		$suite = new CakeTestSuite('All Utility class tests');$/;"	v
suite	lib/Cake/Test/Case/AllUtilityTest.php	/^	public static function suite() {$/;"	f
AllViewTest	lib/Cake/Test/Case/AllViewTest.php	/^class AllViewTest extends PHPUnit_Framework_TestSuite {$/;"	c
suite	lib/Cake/Test/Case/AllViewTest.php	/^		$suite = new CakeTestSuite('All View class tests');$/;"	v
suite	lib/Cake/Test/Case/AllViewTest.php	/^	public static function suite() {$/;"	f
BasicsTest	lib/Cake/Test/Case/BasicsTest.php	/^class BasicsTest extends CakeTestCase {$/;"	c
Folder	lib/Cake/Test/Case/BasicsTest.php	/^		$Folder = new Folder($path);$/;"	v
_ENV	lib/Cake/Test/Case/BasicsTest.php	/^		$_ENV = $env;$/;"	v
_SERVER	lib/Cake/Test/Case/BasicsTest.php	/^		$_SERVER = $_ENV = array();$/;"	v
_SERVER	lib/Cake/Test/Case/BasicsTest.php	/^		$_SERVER = $server;$/;"	v
_SERVER	lib/Cake/Test/Case/BasicsTest.php	/^		$_SERVER = array();$/;"	v
_cacheDisable	lib/Cake/Test/Case/BasicsTest.php	/^		$_cacheDisable = Configure::read('Cache.disable');$/;"	v
_includePath	lib/Cake/Test/Case/BasicsTest.php	/^		$_includePath = ini_get('include_path');$/;"	v
arr	lib/Cake/Test/Case/BasicsTest.php	/^		$arr = array('<foo>', '&nbsp;');$/;"	v
arr	lib/Cake/Test/Case/BasicsTest.php	/^		$arr = array('f' => '<foo>', 'n' => '&nbsp;');$/;"	v
arr	lib/Cake/Test/Case/BasicsTest.php	/^		$arr = array('foo' => false, 'bar' => true);$/;"	v
cacheOff	lib/Cake/Test/Case/BasicsTest.php	/^		$cacheOff = Configure::read('Cache.disable');$/;"	v
emptyExists	lib/Cake/Test/Case/BasicsTest.php	/^		$emptyExists = file_exists(CACHE . 'views' . DS . 'empty');$/;"	v
env	lib/Cake/Test/Case/BasicsTest.php	/^		$env = $_ENV;$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^			$expected = sprintf($expectedHtml, str_replace(CAKE_CORE_INCLUDE_PATH, '', __FILE__), __LINE__ - 19);$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^			$expected = sprintf($expectedText, str_replace(CAKE_CORE_INCLUDE_PATH, '', __FILE__), __LINE__ - 18);$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = "<pre>Array\\n(\\n    [this] => is\\n    [a] => test\\n)\\n<\/pre>";$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = "<pre>this is a test<\/pre>";$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = "\\nArray\\n(\\n    [this] => is\\n    [a] => test\\n)\\n\\n";$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = "\\nthis is a test\\n";$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = '     hello world';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = '   +1 item.';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = '###+1 item.';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = '%-5d = 0 or > 1 (translated)';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = '%-5d = 1 (translated)';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = '%d = 0 or > 1 (from core translated)';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = '%d = 0 or > 1 (translated)';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = '%d = 0 or > 1';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = '%d = 1 (from core translated)';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = '%d = 1 (translated)';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = '%nonsense Apples';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = '**+90 items.';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = '+9000 items.';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = '1 item.';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = '10    items.';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = '2 Apples entered the bowl';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = '2 items for id 1234';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = '99.44% of all Cats agree';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = 'Apples are 100% real fruit';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = 'Apples are awesome%';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = 'Check,    +1, two, three';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = 'Check,   one, two, three';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = 'Check, @@one, two, three';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = 'Check, one, two  , three';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = 'Check, one, two##, three';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = 'Plural Rule 1 (from core translated)';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = 'Plural Rule 1 (translated)';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = 'Plural Rule 1';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = 'Some string with  arguments';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = 'Some string with arguments : args';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = 'Some string with arguments';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = 'Some string with arguments*: args';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = 'Some string with multiple arguments';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = 'Testing 1.23 number';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = 'Testing different order';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = '\\path\\to\\location\\\\';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = 'hello      world';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = 'hello@@@@@ world';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = 'path_to_location';$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = <<<EXPECTED$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = array('one' => array('value', 'value-two'), 'three' => 3);$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = array('one' => array(4, 5), 'two' => array('foo'));$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = array('one' => null, 'three' => '', 'four' => 0);$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = array('one', 'two', 2, 3, 4);$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = array('this &amp; that', '&lt;p&gt;Which one&lt;\/p&gt;');$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = array('three' => 3);$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = sprintf($expected, str_replace(CAKE_CORE_INCLUDE_PATH, '', __FILE__), __LINE__ - 10);$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = sprintf($expected, str_replace(CAKE_CORE_INCLUDE_PATH, '', __FILE__), __LINE__ - 9);$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = sprintf($expectedHtml, str_replace(CAKE_CORE_INCLUDE_PATH, '', __FILE__), __LINE__ - 10);$/;"	v
expected	lib/Cake/Test/Case/BasicsTest.php	/^		$expected = sprintf($expectedText, str_replace(CAKE_CORE_INCLUDE_PATH, '', __FILE__), __LINE__ - 9);$/;"	v
expectedHtml	lib/Cake/Test/Case/BasicsTest.php	/^		$expectedHtml = <<<EXPECTED$/;"	v
expectedText	lib/Cake/Test/Case/BasicsTest.php	/^		$expectedText = <<<EXPECTED$/;"	v
file1	lib/Cake/Test/Case/BasicsTest.php	/^		$file1 = $path . DS . 'file1.php';$/;"	v
file2	lib/Cake/Test/Case/BasicsTest.php	/^		$file2 = $folder1 . DS . 'file2.php';$/;"	v
file3	lib/Cake/Test/Case/BasicsTest.php	/^		$file3 = $folder1 . DS . 'file3.php';$/;"	v
file4	lib/Cake/Test/Case/BasicsTest.php	/^		$file4 = $folder2 . DS . 'file4.php';$/;"	v
folder1	lib/Cake/Test/Case/BasicsTest.php	/^		$folder1 = $path . DS . 'folder1';$/;"	v
folder2	lib/Cake/Test/Case/BasicsTest.php	/^		$folder2 = $path . DS . 'folder2';$/;"	v
in	lib/Cake/Test/Case/BasicsTest.php	/^		$in = array('this & that', '<p>Which one<\/p>');$/;"	v
nested	lib/Cake/Test/Case/BasicsTest.php	/^		$nested = array($/;"	v
obj	lib/Cake/Test/Case/BasicsTest.php	/^		$obj = new CakeResponse(array('body' => 'Body content'));$/;"	v
obj	lib/Cake/Test/Case/BasicsTest.php	/^		$obj = new stdClass();$/;"	v
one	lib/Cake/Test/Case/BasicsTest.php	/^		$one = array('minYear' => null, 'maxYear' => null, 'separator' => '-', 'interval' => 1, 'monthNames' => true);$/;"	v
one	lib/Cake/Test/Case/BasicsTest.php	/^		$one = array('one' => 1, 'two' => 2, 'three' => 3);$/;"	v
one	lib/Cake/Test/Case/BasicsTest.php	/^		$one = array('one' => array('value', 'value-two'), 'two' => 2, 'three' => 3);$/;"	v
one	lib/Cake/Test/Case/BasicsTest.php	/^		$one = array('one' => null, 'two' => 2, 'three' => '', 'four' => 0);$/;"	v
path	lib/Cake/Test/Case/BasicsTest.php	/^		$path = TMP . 'basics_test';$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __('%.2f% of all %s agree', 99.44444, 'Cats');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __('%2$d %1$s entered the bowl', 'Apples', 2);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __('%nonsense %s', 'Apples');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __('%s are %d% real fruit', 'Apples', 100);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __('%s are %s% real fruit', 'Apples', 100);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __('%s are 100% real fruit', 'Apples');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __('%s are awesome%', 'Apples');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __('Check, %+10s, three', 'one, two');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __('Check, %+5d, two, three', 1);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __('Check, %-10s, three', 'one, two');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __('Check, %\\'#-10s, three', 'one, two');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __('Check, %\\'@+10s, three', 'one, two');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __('Plural Rule 1 (from core)');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __('Plural Rule 1');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __('Some string with %s %s', 'multiple', 'arguments');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __('Some string with %s %s', array('multiple', 'arguments'));$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __('Some string with %s', 'arguments');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __('Testing %.2f number', 1.2345);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __('Testing %2$s %1$s', 'order', 'different');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __('Testing %2$s %1$s', array('order', 'different'));$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __c('Plural Rule 1 (from core)', 6);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __c('Plural Rule 1', 6);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __c('Some string with %+10s', 6, 'arguments');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __c('Some string with %-10s: args', 6, 'arguments');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __c('Some string with %\\'*-10s: args', 6, 'arguments');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __c('Some string with %s %s', 6, 'multiple', 'arguments');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __c('Some string with %s %s', 6, array('multiple', 'arguments'));$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __c('Some string with %s', 6, 'arguments');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __d('core', 'Plural Rule 1 (from core)');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __d('core', 'Plural Rule 1');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __d('core', 'Some string with %s %s', 'multiple', 'arguments');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __d('core', 'Some string with %s %s', array('multiple', 'arguments'));$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __d('core', 'Some string with %s', 'arguments');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __d('default', 'Check, %+10s, three', 'one, two');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __d('default', 'Check, %-10s, three', 'one, two');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __d('default', 'Check, %\\'#-10s, three', 'one, two');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __d('default', 'Check, %\\'@+10s, three', 'one, two');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __d('default', 'Plural Rule 1');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __dc('core', 'Plural Rule 1 (from core)', 6);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __dc('core', 'Plural Rule 1', 6);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __dc('core', 'Some string with %s %s', 6, 'multiple', 'arguments');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __dc('core', 'Some string with %s %s', 6, array('multiple', 'arguments'));$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __dc('core', 'Some string with %s', 6, 'arguments');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __dc('default', '%+10s world', 6, 'hello');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __dc('default', '%-10s world', 6, 'hello');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __dc('default', '%\\'@-10s world', 6, 'hello');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __dc('default', 'Plural Rule 1 (from core)', 6);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __dc('default', 'Plural Rule 1', 6);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __dcn('core', '%d = 1', '%d = 0 or > 1', 0, 6);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __dcn('core', '%d item for id %s', '%d items for id %s', 2, 6, 2, '1234');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __dcn('core', '%d item for id %s', '%d items for id %s', 2, 6, array(2, '1234'));$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __dcn('core', '%d item.', '%d items.', 1, 6, 1);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __dcn('default', '%-5d = 1', '%-5d = 0 or > 1', 0, 6);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __dcn('default', '%-5d = 1', '%-5d = 0 or > 1', 1, 6);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __dcn('default', '%d = 1 (from core)', '%d = 0 or > 1 (from core)', 1, 6);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __dcn('default', '%d = 1', '%d = 0 or > 1', 0, 6);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __dn('core', '%+5d item.', '%+5d items.', 1, 1);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __dn('core', '%-5d item.', '%-5d items.', 10, 10);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __dn('core', '%\\'#+5d item.', '%\\'*+5d items.', 1, 1);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __dn('core', '%\\'#+5d item.', '%\\'*+5d items.', 90, 90);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __dn('core', '%\\'#+5d item.', '%\\'*+5d items.', 9000, 9000);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __dn('core', '%d = 1 (from core)', '%d = 0 or > 1 (from core)', 0);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __dn('core', '%d = 1', '%d = 0 or > 1', 0);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __dn('core', '%d item for id %s', '%d items for id %s', 2, 2, '1234');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __dn('core', '%d item for id %s', '%d items for id %s', 2, array(2, '1234'));$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __dn('core', '%d item.', '%d items.', 1, 1);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __dn('default', '%d = 1', '%d = 0 or > 1', 0);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __dn('default', '%d = 1', '%d = 0 or > 1', 1);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __n('%-5d = 1', '%-5d = 0 or > 1', 10);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __n('%d = 1 (from core)', '%d = 0 or > 1 (from core)', 2);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __n('%d = 1', '%d = 0 or > 1', 0);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __n('%d = 1', '%d = 0 or > 1', 1);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __n('%d item for id %s', '%d items for id %s', 2, 2, '1234');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __n('%d item for id %s', '%d items for id %s', 2, array(2, '1234'));$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = __n('%d item.', '%d items.', 1, 1);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = am(array('one' => array(2, 3), 'two' => array('foo')), array('one' => array(4, 5)));$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = am(array('one', 'two'), 2, 3, 4);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = array_diff_key($one, $two);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = cache('basics_test');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = cache('basics_test', 'simple cache write');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = cache('basics_test', null, '+1 second');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = clearCache('basics', 'models', '.cache');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = clearCache();$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = clearCache(array('basics_test', 'basics_test_2'), 'views', '.cache');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = clearCache(null, 'views', '.cache');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = convertSlash('\/path\/to\/location\/');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = convertSlash('\\path\\to\\location\\\\');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = file_get_contents(LOGS . 'error.log');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = h($arr);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = h($arr, false);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = h($in);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = h($obj);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = h($string);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = h($string, 'UTF-8');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = h($string, false);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = h(false);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = ob_get_clean();$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = pluginSplit('Blog.Post', false, 'Ultimate');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = pluginSplit('Post', false, 'Blog');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = pluginSplit('Something.else');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = pluginSplit('Something.else', true);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = pluginSplit('Something.else.more.dots');$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = pluginSplit('Something.else.more.dots', true);$/;"	v
result	lib/Cake/Test/Case/BasicsTest.php	/^		$result = pluginSplit('Somethingelse');$/;"	v
server	lib/Cake/Test/Case/BasicsTest.php	/^		$server = $_SERVER;$/;"	v
setUp	lib/Cake/Test/Case/BasicsTest.php	/^	public function setUp() {$/;"	f
string	lib/Cake/Test/Case/BasicsTest.php	/^		$string = '<foo> & &nbsp;';$/;"	v
string	lib/Cake/Test/Case/BasicsTest.php	/^		$string = '<foo>';$/;"	v
testAm	lib/Cake/Test/Case/BasicsTest.php	/^	public function testAm() {$/;"	f
testArrayDiffKey	lib/Cake/Test/Case/BasicsTest.php	/^	public function testArrayDiffKey() {$/;"	f
testCache	lib/Cake/Test/Case/BasicsTest.php	/^	public function testCache() {$/;"	f
testClearCache	lib/Cake/Test/Case/BasicsTest.php	/^	public function testClearCache() {$/;"	f
testConvertSlash	lib/Cake/Test/Case/BasicsTest.php	/^	public function testConvertSlash() {$/;"	f
testDebug	lib/Cake/Test/Case/BasicsTest.php	/^	public function testDebug() {$/;"	f
testEnv	lib/Cake/Test/Case/BasicsTest.php	/^	public function testEnv() {$/;"	f
testFileExistsInPath	lib/Cake/Test/Case/BasicsTest.php	/^	public function testFileExistsInPath() {$/;"	f
testH	lib/Cake/Test/Case/BasicsTest.php	/^	public function testH() {$/;"	f
testLogError	lib/Cake/Test/Case/BasicsTest.php	/^	public function testLogError() {$/;"	f
testPluginSplit	lib/Cake/Test/Case/BasicsTest.php	/^	public function testPluginSplit() {$/;"	f
testPr	lib/Cake/Test/Case/BasicsTest.php	/^	public function testPr() {$/;"	f
testPrCli	lib/Cake/Test/Case/BasicsTest.php	/^	public function testPrCli() {$/;"	f
testStripslashesDeep	lib/Cake/Test/Case/BasicsTest.php	/^	public function testStripslashesDeep() {$/;"	f
testStripslashesDeepSybase	lib/Cake/Test/Case/BasicsTest.php	/^	public function testStripslashesDeepSybase() {$/;"	f
testTranslate	lib/Cake/Test/Case/BasicsTest.php	/^	public function testTranslate() {$/;"	f
testTranslateCategory	lib/Cake/Test/Case/BasicsTest.php	/^	public function testTranslateCategory() {$/;"	f
testTranslateCategoryWithFormatSpecifiers	lib/Cake/Test/Case/BasicsTest.php	/^	public function testTranslateCategoryWithFormatSpecifiers() {$/;"	f
testTranslateDomain	lib/Cake/Test/Case/BasicsTest.php	/^	public function testTranslateDomain() {$/;"	f
testTranslateDomainCategory	lib/Cake/Test/Case/BasicsTest.php	/^	public function testTranslateDomainCategory() {$/;"	f
testTranslateDomainCategoryPlural	lib/Cake/Test/Case/BasicsTest.php	/^	public function testTranslateDomainCategoryPlural() {$/;"	f
testTranslateDomainCategoryPluralWithFormatSpecifiers	lib/Cake/Test/Case/BasicsTest.php	/^	public function testTranslateDomainCategoryPluralWithFormatSpecifiers() {$/;"	f
testTranslateDomainCategoryWithFormatSpecifiers	lib/Cake/Test/Case/BasicsTest.php	/^	public function testTranslateDomainCategoryWithFormatSpecifiers() {$/;"	f
testTranslateDomainPlural	lib/Cake/Test/Case/BasicsTest.php	/^	public function testTranslateDomainPlural() {$/;"	f
testTranslateDomainPluralWithFormatSpecifiers	lib/Cake/Test/Case/BasicsTest.php	/^	public function testTranslateDomainPluralWithFormatSpecifiers() {$/;"	f
testTranslatePercent	lib/Cake/Test/Case/BasicsTest.php	/^	public function testTranslatePercent() {$/;"	f
testTranslatePlural	lib/Cake/Test/Case/BasicsTest.php	/^	public function testTranslatePlural() {$/;"	f
testTranslatePluralWithFormatSpecifiers	lib/Cake/Test/Case/BasicsTest.php	/^	public function testTranslatePluralWithFormatSpecifiers() {$/;"	f
testTranslateWithFormatSpecifiers	lib/Cake/Test/Case/BasicsTest.php	/^	public function testTranslateWithFormatSpecifiers() {$/;"	f
two	lib/Cake/Test/Case/BasicsTest.php	/^		$two = array('minYear' => null, 'maxYear' => null, 'separator' => '-', 'interval' => 1, 'monthNames' => true);$/;"	v
two	lib/Cake/Test/Case/BasicsTest.php	/^		$two = array('one' => 'one', 'two' => 'two');$/;"	v
two	lib/Cake/Test/Case/BasicsTest.php	/^		$two = array('two' => 'two');$/;"	v
CacheTest	lib/Cake/Test/Case/Cache/CacheTest.php	/^class CacheTest extends CakeTestCase {$/;"	c
_cacheConfigSessions	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$_cacheConfigSessions = Cache::config('sessions');$/;"	v
_cacheConfigTests	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$_cacheConfigTests = Cache::config('tests');$/;"	v
_cacheDisable	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$this->_cacheDisable = Configure::read('Cache.disable');$/;"	v
_cacheSet	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$_cacheSet = Cache::set();$/;"	v
_count	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$this->_count = 1;$/;"	v
_count	lib/Cake/Test/Case/Cache/CacheTest.php	/^	protected $_count = 0;$/;"	v
_defaultCacheConfig	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$this->_defaultCacheConfig = Cache::config('default');$/;"	v
_testsConfig	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$_testsConfig = Cache::config('tests');$/;"	v
cacher	lib/Cake/Test/Case/Cache/CacheTest.php	/^	public function cacher() {$/;"	f
data	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$data = 'this is just a simple test of the cache system';$/;"	v
data	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$data = Cache::read('test_cache');$/;"	v
debug	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$debug = Configure::read('debug');$/;"	v
expected	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$expected = 'This is some data 0';$/;"	v
expected	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$expected = array($/;"	v
expecting	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$expecting = $override + $initial;$/;"	v
initial	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$initial = Cache::settings();$/;"	v
override	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$override = array('engine' => 'File', 'path' => TMP . 'tests');$/;"	v
result	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$result = Cache::config('libEngine', $settings);$/;"	v
result	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$result = Cache::config('pluginLibEngine', $settings);$/;"	v
result	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$result = Cache::config('sessions', array('engine' => 'File', 'path' => TMP . 'sessions'));$/;"	v
result	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$result = Cache::config('tests', array('engine' => 'File', 'path' => TMP . 'tests'));$/;"	v
result	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$result = Cache::configured();$/;"	v
result	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$result = Cache::drop('some_config_that_does_not_exist');$/;"	v
result	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$result = Cache::drop('tests');$/;"	v
result	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$result = Cache::groupConfigs('archive');$/;"	v
result	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$result = Cache::groupConfigs('posts');$/;"	v
result	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$result = Cache::groupConfigs();$/;"	v
result	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$result = Cache::read('value_one');$/;"	v
result	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$result = Cache::read('value_one', 'test_name');$/;"	v
result	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$result = Cache::remember('test_key', array($this, 'cacher'), 'default');$/;"	v
results	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$results = Cache::config('new', $settings);$/;"	v
setUp	lib/Cake/Test/Case/Cache/CacheTest.php	/^	public function setUp() {$/;"	f
settings	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$settings = Cache::settings('file_config');$/;"	v
settings	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$settings = Cache::settings();$/;"	v
settings	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$settings = array('engine' => 'File', 'path' => TMP . 'tests', 'prefix' => 'cake_test_');$/;"	v
settings	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$settings = array('engine' => 'Imaginary');$/;"	v
settings	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$settings = array('engine' => 'TestAppCache', 'path' => TMP, 'prefix' => 'cake_test_');$/;"	v
settings	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$settings = array('engine' => 'TestPlugin.TestPluginCache', 'path' => TMP, 'prefix' => 'cake_test_');$/;"	v
tearDown	lib/Cake/Test/Case/Cache/CacheTest.php	/^	public function tearDown() {$/;"	f
testAttemptingToConfigureANonCacheEngineClass	lib/Cake/Test/Case/Cache/CacheTest.php	/^	public function testAttemptingToConfigureANonCacheEngineClass() {$/;"	f
testCacheDisable	lib/Cake/Test/Case/Cache/CacheTest.php	/^	public function testCacheDisable() {$/;"	f
testConfig	lib/Cake/Test/Case/Cache/CacheTest.php	/^	public function testConfig() {$/;"	f
testConfigChange	lib/Cake/Test/Case/Cache/CacheTest.php	/^	public function testConfigChange() {$/;"	f
testConfigInvalidEngine	lib/Cake/Test/Case/Cache/CacheTest.php	/^	public function testConfigInvalidEngine() {$/;"	f
testConfigSettingDefaultConfigKey	lib/Cake/Test/Case/Cache/CacheTest.php	/^	public function testConfigSettingDefaultConfigKey() {$/;"	f
testConfigWithLibAndPluginEngines	lib/Cake/Test/Case/Cache/CacheTest.php	/^	public function testConfigWithLibAndPluginEngines() {$/;"	f
testConfigured	lib/Cake/Test/Case/Cache/CacheTest.php	/^	public function testConfigured() {$/;"	f
testDrop	lib/Cake/Test/Case/Cache/CacheTest.php	/^	public function testDrop() {$/;"	f
testGroupConfigs	lib/Cake/Test/Case/Cache/CacheTest.php	/^	public function testGroupConfigs() {$/;"	f
testGroupConfigsThrowsException	lib/Cake/Test/Case/Cache/CacheTest.php	/^	public function testGroupConfigsThrowsException() {$/;"	f
testInitSettings	lib/Cake/Test/Case/Cache/CacheTest.php	/^	public function testInitSettings() {$/;"	f
testInvalidConfig	lib/Cake/Test/Case/Cache/CacheTest.php	/^	public function testInvalidConfig() {$/;"	f
testNonFatalErrorsWithCachedisable	lib/Cake/Test/Case/Cache/CacheTest.php	/^	public function testNonFatalErrorsWithCachedisable() {$/;"	f
testReadNonExistingConfig	lib/Cake/Test/Case/Cache/CacheTest.php	/^	public function testReadNonExistingConfig() {$/;"	f
testRemember	lib/Cake/Test/Case/Cache/CacheTest.php	/^	public function testRemember() {$/;"	f
testSet	lib/Cake/Test/Case/Cache/CacheTest.php	/^	public function testSet() {$/;"	f
testSetOnAlternateConfigs	lib/Cake/Test/Case/Cache/CacheTest.php	/^	public function testSetOnAlternateConfigs() {$/;"	f
testWriteEmptyValues	lib/Cake/Test/Case/Cache/CacheTest.php	/^	public function testWriteEmptyValues() {$/;"	f
testWriteTriggerError	lib/Cake/Test/Case/Cache/CacheTest.php	/^	public function testWriteTriggerError() {$/;"	f
testWritingWithConfig	lib/Cake/Test/Case/Cache/CacheTest.php	/^	public function testWritingWithConfig() {$/;"	f
write	lib/Cake/Test/Case/Cache/CacheTest.php	/^		$write = Cache::write('test_cache', $data);$/;"	v
ApcEngineTest	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^class ApcEngineTest extends CakeTestCase {$/;"	c
_cacheDisable	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^		$this->_cacheDisable = Configure::read('Cache.disable');$/;"	v
data	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^		$data = 'this is a test of the emergency broadcasting system';$/;"	v
expecting	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^		$expecting = $data;$/;"	v
expecting	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^		$expecting = '';$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^		$result = Cache::clear(false, 'apc');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^		$result = Cache::decrement('test_decrement', 1, 'apc');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^		$result = Cache::decrement('test_decrement', 2, 'apc');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^		$result = Cache::delete('delete_test', 'apc');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^		$result = Cache::increment('test_increment', 1, 'apc');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^		$result = Cache::increment('test_increment', 2, 'apc');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^		$result = Cache::read('other_test', 'apc');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^		$result = Cache::read('test', 'apc');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^		$result = Cache::read('test_decrement', 'apc');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^		$result = Cache::read('test_increment', 'apc');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^		$result = Cache::read('zero', 'apc');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^		$result = Cache::write('delete_test', $data, 'apc');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^		$result = Cache::write('other_test', $data, 'apc');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^		$result = Cache::write('test', $data, 'apc');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^		$result = Cache::write('test_decrement', 5, 'apc');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^		$result = Cache::write('test_increment', 5, 'apc');$/;"	v
setUp	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^	public function tearDown() {$/;"	f
testClear	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^	public function testClear() {$/;"	f
testDecrement	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^	public function testDecrement() {$/;"	f
testDeleteCache	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^	public function testDeleteCache() {$/;"	f
testExpiry	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^	public function testExpiry() {$/;"	f
testGroupClear	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^	public function testGroupClear() {$/;"	f
testGroupDelete	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^	public function testGroupDelete() {$/;"	f
testGroupsReadWrite	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^	public function testGroupsReadWrite() {$/;"	f
testIncrement	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^	public function testIncrement() {$/;"	f
testReadAndWriteCache	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^	public function testReadAndWriteCache() {$/;"	f
testReadWriteDurationZero	lib/Cake/Test/Case/Cache/Engine/ApcEngineTest.php	/^	public function testReadWriteDurationZero() {$/;"	f
FileEngineTest	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^class FileEngineTest extends CakeTestCase {$/;"	c
FileOne	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$FileOne = new FileEngine();$/;"	v
FileTwo	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$FileTwo = new FileEngine();$/;"	v
config	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^	public $config = array();$/;"	v
data	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$data = 'This is some test content';$/;"	v
data	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$data = 'this is a test of the emergency broadcasting system';$/;"	v
data	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$data = Cache::read('test_dir_map', 'windows_test');$/;"	v
dataOne	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$dataOne = $dataTwo = $expected = 'content to cache';$/;"	v
engine	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$engine = new FileEngine();$/;"	v
expected	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$expected = '0640';$/;"	v
expected	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$expected = '0644';$/;"	v
expected	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$expected = '0664';$/;"	v
expected	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$expected = '0666';$/;"	v
expected	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$expected = array($/;"	v
expecting	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$expecting = $data;$/;"	v
expecting	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$expecting = '';$/;"	v
key	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$key = 'cake_test_test_key';$/;"	v
newread	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$newread = Cache::read('serialize_test', 'file_test');$/;"	v
read	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$read = Cache::read('serialize_test', 'file_test');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$result = Cache::clear(false, 'file_test');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$result = Cache::clear(true, 'file_test');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$result = Cache::config('sessions', array('engine' => 'File', 'path' => TMP . 'sessions'));$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$result = Cache::config('sessions', array('engine' => 'File', 'path' => TMP . 'tests'));$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$result = Cache::delete('delete_test', 'file_test');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$result = Cache::read('other_test', 'file_test');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$result = Cache::read('rw', 'file_test');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$result = Cache::read('test', 'file_test');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$result = Cache::read('views.countries.something', 'file_test');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$result = Cache::write('command>dir|more', 'here', 'file_test');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$result = Cache::write('delete_test', $data, 'file_test');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$result = Cache::write('domain.test.com:8080', 'here', 'file_test');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$result = Cache::write('other_test', $data, 'file_test');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$result = Cache::write('test', $data, 'file_test');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$result = Cache::write('views.countries.something', 'here', 'file_test');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$result = Cache::write(null, 'here', 'file_test');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$result = substr(sprintf('%o', fileperms(TMP . 'tests' . DS . 'cake_masking_test')), -4);$/;"	v
resultB	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$resultB = Cache::read('rw', 'file_test');$/;"	v
setUp	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^	public function tearDown() {$/;"	f
testCacheDirChange	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^	public function testCacheDirChange() {$/;"	f
testClear	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^	public function testClear() {$/;"	f
testClearWithGroups	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^	public function testClearWithGroups() {$/;"	f
testClearWithNoKeys	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^	public function testClearWithNoKeys() {$/;"	f
testClearWithPrefixes	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^	public function testClearWithPrefixes() {$/;"	f
testClearingWithRepeatWrites	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^	public function testClearingWithRepeatWrites() {$/;"	f
testConsecutiveReadWrite	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^	public function testConsecutiveReadWrite() {$/;"	f
testDeleteCache	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^	public function testDeleteCache() {$/;"	f
testExpiry	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^	public function testExpiry() {$/;"	f
testGroupClear	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^	public function testGroupClear() {$/;"	f
testGroupClearNoPrefix	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^	public function testGroupClearNoPrefix() {$/;"	f
testGroupDelete	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^	public function testGroupDelete() {$/;"	f
testGroupsReadWrite	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^	public function testGroupsReadWrite() {$/;"	f
testKeyPath	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^	public function testKeyPath() {$/;"	f
testMaskSetting	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^	public function testMaskSetting() {$/;"	f
testPathDoesNotExist	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^	public function testPathDoesNotExist() {$/;"	f
testReadAndWriteCache	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^	public function testReadAndWriteCache() {$/;"	f
testRemoveWindowsSlashesFromCache	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^	public function testRemoveWindowsSlashesFromCache() {$/;"	f
testSerialize	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^	public function testSerialize() {$/;"	f
testWriteQuotedString	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^	public function testWriteQuotedString() {$/;"	f
write	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$write = Cache::write('masking_test', $data, 'mask_test');$/;"	v
write	lib/Cake/Test/Case/Cache/Engine/FileEngineTest.php	/^		$write = Cache::write('serialize_test', $data, 'file_test');$/;"	v
Memcache	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$Memcache = new Memcache();$/;"	v
Memcache	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$Memcache = new MemcacheEngine();$/;"	v
Memcache	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$Memcache = new TestMemcacheEngine();$/;"	v
MemcacheEngineTest	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^class MemcacheEngineTest extends CakeTestCase {$/;"	c
TestMemcacheEngine	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^class TestMemcacheEngine extends MemcacheEngine {$/;"	c
_Memcache	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$this->_Memcache = $memcache;$/;"	v
_cacheDisable	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$this->_cacheDisable = Configure::read('Cache.disable');$/;"	v
available	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^				$available = false;$/;"	v
available	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$available = true;$/;"	v
data	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$data = 'this is a test of the emergency broadcasting system';$/;"	v
expecting	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$expecting = $data;$/;"	v
expecting	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$expecting = '';$/;"	v
expecting	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$expecting = array($/;"	v
memcache	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$memcache = new TestMemcacheEngine();$/;"	v
mock	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$mock = $this->getMock('Memcache');$/;"	v
parseServerString	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^	public function parseServerString($server) {$/;"	f
result	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$result = $Memcache->connect('127.0.0.1');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$result = $Memcache->init(array($/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$result = $Memcache->parseServerString('schülervz.net:13211');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$result = $Memcache->parseServerString('sülül:1111');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$result = $Memcache->parseServerString('unix:\/\/\/path\/to\/memcached.sock');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$result = Cache::clear(false, 'memcache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$result = Cache::clear(true, 'memcache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$result = Cache::decrement('test_decrement', 1, 'memcache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$result = Cache::decrement('test_decrement', 2, 'memcache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$result = Cache::delete('delete_test', 'memcache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$result = Cache::increment('test_increment', 1, 'memcache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$result = Cache::increment('test_increment', 2, 'memcache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$result = Cache::read('long_expiry_test', 'memcache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$result = Cache::read('other_test', 'memcache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$result = Cache::read('test', 'memcache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$result = Cache::read('test_decrement', 'memcache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$result = Cache::read('test_increment', 'memcache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$result = Cache::read('test_key', 'memcache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$result = Cache::write('delete_test', $data, 'memcache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$result = Cache::write('long_expiry_test', $data, 'memcache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$result = Cache::write('other_test', $data, 'memcache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$result = Cache::write('test', $data, 'memcache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$result = Cache::write('test_decrement', 5, 'memcache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$result = Cache::write('test_increment', 5, 'memcache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$result = Cache::write('test_key', 'written!', 'memcache');$/;"	v
servers	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$servers = array('127.0.0.1:11211', '127.0.0.1:11222');$/;"	v
setMemcache	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^	public function setMemcache($memcache) {$/;"	f
setUp	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^	public function setUp() {$/;"	f
settings	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$settings = $Memcache->settings();$/;"	v
settings	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$settings = Cache::settings('memcache');$/;"	v
tearDown	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^	public function tearDown() {$/;"	f
testClear	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^	public function testClear() {$/;"	f
testConfigurationConflict	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^	public function testConfigurationConflict() {$/;"	f
testConnect	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^	public function testConnect() {$/;"	f
testConnectIpv6	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^	public function testConnectIpv6() {$/;"	f
testDecrement	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^	public function testDecrement() {$/;"	f
testDeleteCache	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^	public function testDeleteCache() {$/;"	f
testExpiry	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^	public function testExpiry() {$/;"	f
testGroupClear	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^	public function testGroupClear() {$/;"	f
testGroupDelete	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^	public function testGroupDelete() {$/;"	f
testGroupReadWrite	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^	public function testGroupReadWrite() {$/;"	f
testIncrement	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^	public function testIncrement() {$/;"	f
testLongDurationEqualToZero	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^	public function testLongDurationEqualToZero() {$/;"	f
testMultipleServers	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^	public function testMultipleServers() {$/;"	f
testParseServerStringNonLatin	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^	public function testParseServerStringNonLatin() {$/;"	f
testParseServerStringUnix	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^	public function testParseServerStringUnix() {$/;"	f
testReadAndWriteCache	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^	public function testReadAndWriteCache() {$/;"	f
testSettings	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^	public function testSettings() {$/;"	f
testZeroDuration	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^	public function testZeroDuration() {$/;"	f
value	lib/Cake/Test/Case/Cache/Engine/MemcacheEngineTest.php	/^		$value = 'value';$/;"	v
Memcached	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$Memcached = new Memcached();$/;"	v
Memcached	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$Memcached = new MemcachedEngine();$/;"	v
Memcached	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$Memcached = new TestMemcachedEngine();$/;"	v
MemcachedCompressed	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$MemcachedCompressed = new TestMemcachedEngine();$/;"	v
MemcachedEngineTest	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^class MemcachedEngineTest extends CakeTestCase {$/;"	c
TestMemcachedEngine	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^class TestMemcachedEngine extends MemcachedEngine {$/;"	c
_Memcached	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$this->_Memcached = $memcached;$/;"	v
available	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^				$available = false;$/;"	v
available	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$available = true;$/;"	v
data	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$data = 'this is a test of the emergency broadcasting system';$/;"	v
expecting	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$expecting = $data;$/;"	v
expecting	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$expecting = '';$/;"	v
expecting	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$expecting = array($/;"	v
getMemcached	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function getMemcached() {$/;"	f
memcached	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$memcached = new TestMemcachedEngine();$/;"	v
mock	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$mock = $this->getMock('Memcached');$/;"	v
parseServerString	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function parseServerString($server) {$/;"	f
result	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$result = $Memcached->init(array($/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$result = $Memcached->parseServerString('schülervz.net:13211');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$result = $Memcached->parseServerString('sülül:1111');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$result = $Memcached->parseServerString('unix:\/\/\/path\/to\/memcachedd.sock');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$result = Cache::clear(false, 'memcached');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$result = Cache::clear(true, 'memcached');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$result = Cache::decrement('test_decrement', 1, 'compressed_memcached');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$result = Cache::decrement('test_decrement', 1, 'memcached');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$result = Cache::decrement('test_decrement', 2, 'compressed_memcached');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$result = Cache::decrement('test_decrement', 2, 'memcached');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$result = Cache::delete('delete_test', 'memcached');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$result = Cache::increment('test_increment', 1, 'compressed_memcached');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$result = Cache::increment('test_increment', 1, 'memcached');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$result = Cache::increment('test_increment', 2, 'compressed_memcached');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$result = Cache::increment('test_increment', 2, 'memcached');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$result = Cache::read('long_expiry_test', 'memcached');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$result = Cache::read('other_test', 'memcached');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$result = Cache::read('test', 'memcached');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$result = Cache::read('test_decrement', 'compressed_memcached');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$result = Cache::read('test_decrement', 'memcached');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$result = Cache::read('test_increment', 'compressed_memcached');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$result = Cache::read('test_increment', 'memcached');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$result = Cache::read('test_key', 'memcached');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$result = Cache::write('delete_test', $data, 'memcached');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$result = Cache::write('long_expiry_test', $data, 'memcached');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$result = Cache::write('other_test', $data, 'memcached');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$result = Cache::write('test', $data, 'memcached');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$result = Cache::write('test_decrement', 5, 'compressed_memcached');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$result = Cache::write('test_decrement', 5, 'memcached');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$result = Cache::write('test_increment', 5, 'compressed_memcached');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$result = Cache::write('test_increment', 5, 'memcached');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$result = Cache::write('test_key', 'written!', 'memcached');$/;"	v
servers	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$servers = array('127.0.0.1:11211', '127.0.0.1:11222');$/;"	v
setMemcached	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function setMemcached($memcached) {$/;"	f
setUp	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function setUp() {$/;"	f
settings	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$settings = $Memcached->settings();$/;"	v
settings	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$settings = Cache::settings('memcached');$/;"	v
settings	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$settings = array($/;"	v
tearDown	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function tearDown() {$/;"	f
testClear	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function testClear() {$/;"	f
testCompressionSetting	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function testCompressionSetting() {$/;"	f
testConfigurationConflict	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function testConfigurationConflict() {$/;"	f
testConnectIpv6	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function testConnectIpv6() {$/;"	f
testDecrement	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function testDecrement() {$/;"	f
testDecrementCompressedKeys	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function testDecrementCompressedKeys() {$/;"	f
testDeleteCache	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function testDeleteCache() {$/;"	f
testExpiry	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function testExpiry() {$/;"	f
testGroupClear	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function testGroupClear() {$/;"	f
testGroupDelete	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function testGroupDelete() {$/;"	f
testGroupReadWrite	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function testGroupReadWrite() {$/;"	f
testIgbinarySerializerSetting	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function testIgbinarySerializerSetting() {$/;"	f
testIgbinarySerializerThrowException	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function testIgbinarySerializerThrowException() {$/;"	f
testIncrement	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function testIncrement() {$/;"	f
testIncrementCompressedKeys	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function testIncrementCompressedKeys() {$/;"	f
testInvalidSerializerSetting	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function testInvalidSerializerSetting() {$/;"	f
testJsonSerializerSetting	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function testJsonSerializerSetting() {$/;"	f
testJsonSerializerThrowException	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function testJsonSerializerThrowException() {$/;"	f
testLongDurationEqualToZero	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function testLongDurationEqualToZero() {$/;"	f
testMsgpackSerializerSetting	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function testMsgpackSerializerSetting() {$/;"	f
testMsgpackSerializerThrowException	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function testMsgpackSerializerThrowException() {$/;"	f
testMultipleServers	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function testMultipleServers() {$/;"	f
testParseServerStringNonLatin	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function testParseServerStringNonLatin() {$/;"	f
testParseServerStringUnix	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function testParseServerStringUnix() {$/;"	f
testPhpSerializerSetting	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function testPhpSerializerSetting() {$/;"	f
testReadAndWriteCache	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function testReadAndWriteCache() {$/;"	f
testSaslAuthException	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function testSaslAuthException() {$/;"	f
testSettings	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function testSettings() {$/;"	f
testZeroDuration	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^	public function testZeroDuration() {$/;"	f
value	lib/Cake/Test/Case/Cache/Engine/MemcachedEngineTest.php	/^		$value = 'value';$/;"	v
Redis	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^		$Redis = new RedisEngine();$/;"	v
RedisEngineTest	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^class RedisEngineTest extends CakeTestCase {$/;"	c
_cacheDisable	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^		$this->_cacheDisable = Configure::read('Cache.disable');$/;"	v
data	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^		$data = 'this is a test of the emergency broadcasting system';$/;"	v
data	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^		$data = array(1, 2, 3);$/;"	v
exist	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^		$exist = Cache::read('save_in_0', 'redisdb0');$/;"	v
exist	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^		$exist = Cache::read('save_in_0', 'redisdb1');$/;"	v
exist	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^		$exist = Cache::read('save_in_1', 'redisdb1');$/;"	v
expecting	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^		$expecting = $data;$/;"	v
expecting	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^		$expecting = '';$/;"	v
expecting	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^		$expecting = array($/;"	v
result	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^		$result = Cache::clear(false, 'redis');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^		$result = Cache::clear(true, 'redis');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^		$result = Cache::decrement('test_decrement', 1, 'redis');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^		$result = Cache::decrement('test_decrement', 2, 'redis');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^		$result = Cache::delete('delete_test', 'redis');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^		$result = Cache::increment('test_increment', 1, 'redis');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^		$result = Cache::increment('test_increment', 2, 'redis');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^		$result = Cache::read('long_expiry_test', 'redis');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^		$result = Cache::read('other_test', 'redis');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^		$result = Cache::read('test', 'redis');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^		$result = Cache::read('test_decrement', 'redis');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^		$result = Cache::read('test_increment', 'redis');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^		$result = Cache::read('test_key', 'redis');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^		$result = Cache::write('delete_test', $data, 'redis');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^		$result = Cache::write('long_expiry_test', $data, 'redis');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^		$result = Cache::write('other_test', $data, 'redis');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^		$result = Cache::write('save_in_0', true, 'redisdb0');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^		$result = Cache::write('save_in_1', true, 'redisdb1');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^		$result = Cache::write('test', $data, 'redis');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^		$result = Cache::write('test_decrement', 5, 'redis');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^		$result = Cache::write('test_key', 'written!', 'redis');$/;"	v
setUp	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^	public function setUp() {$/;"	f
settings	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^		$settings = Cache::settings('redis');$/;"	v
tearDown	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^	public function tearDown() {$/;"	f
testClear	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^	public function testClear() {$/;"	f
testConnect	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^	public function testConnect() {$/;"	f
testDecrement	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^	public function testDecrement() {$/;"	f
testDeleteCache	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^	public function testDeleteCache() {$/;"	f
testExpiry	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^	public function testExpiry() {$/;"	f
testGroupClear	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^	public function testGroupClear() {$/;"	f
testGroupDelete	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^	public function testGroupDelete() {$/;"	f
testGroupReadWrite	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^	public function testGroupReadWrite() {$/;"	f
testIncrement	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^	public function testIncrement() {$/;"	f
testMultiDatabaseOperations	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^	public function testMultiDatabaseOperations() {$/;"	f
testReadAndWriteCache	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^	public function testReadAndWriteCache() {$/;"	f
testSettings	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^	public function testSettings() {$/;"	f
testZeroDuration	lib/Cake/Test/Case/Cache/Engine/RedisEngineTest.php	/^	public function testZeroDuration() {$/;"	f
WincacheEngineTest	lib/Cake/Test/Case/Cache/Engine/WincacheEngineTest.php	/^class WincacheEngineTest extends CakeTestCase {$/;"	c
_cacheDisable	lib/Cake/Test/Case/Cache/Engine/WincacheEngineTest.php	/^		$this->_cacheDisable = Configure::read('Cache.disable');$/;"	v
data	lib/Cake/Test/Case/Cache/Engine/WincacheEngineTest.php	/^		$data = 'this is a test of the emergency broadcasting system';$/;"	v
expecting	lib/Cake/Test/Case/Cache/Engine/WincacheEngineTest.php	/^		$expecting = $data;$/;"	v
expecting	lib/Cake/Test/Case/Cache/Engine/WincacheEngineTest.php	/^		$expecting = '';$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/WincacheEngineTest.php	/^		$result = Cache::clear(false, 'wincache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/WincacheEngineTest.php	/^		$result = Cache::decrement('test_decrement', 1, 'wincache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/WincacheEngineTest.php	/^		$result = Cache::decrement('test_decrement', 2, 'wincache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/WincacheEngineTest.php	/^		$result = Cache::delete('delete_test', 'wincache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/WincacheEngineTest.php	/^		$result = Cache::increment('test_increment', 1, 'wincache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/WincacheEngineTest.php	/^		$result = Cache::increment('test_increment', 2, 'wincache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/WincacheEngineTest.php	/^		$result = Cache::read('other_test', 'wincache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/WincacheEngineTest.php	/^		$result = Cache::read('test', 'wincache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/WincacheEngineTest.php	/^		$result = Cache::read('test_decrement', 'wincache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/WincacheEngineTest.php	/^		$result = Cache::read('test_increment', 'wincache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/WincacheEngineTest.php	/^		$result = Cache::write('delete_test', $data, 'wincache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/WincacheEngineTest.php	/^		$result = Cache::write('other_test', $data, 'wincache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/WincacheEngineTest.php	/^		$result = Cache::write('test', $data, 'wincache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/WincacheEngineTest.php	/^		$result = Cache::write('test_decrement', 5, 'wincache');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/WincacheEngineTest.php	/^		$result = Cache::write('test_increment', 5, 'wincache');$/;"	v
setUp	lib/Cake/Test/Case/Cache/Engine/WincacheEngineTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Cache/Engine/WincacheEngineTest.php	/^	public function tearDown() {$/;"	f
testClear	lib/Cake/Test/Case/Cache/Engine/WincacheEngineTest.php	/^	public function testClear() {$/;"	f
testDecrement	lib/Cake/Test/Case/Cache/Engine/WincacheEngineTest.php	/^	public function testDecrement() {$/;"	f
testDeleteCache	lib/Cake/Test/Case/Cache/Engine/WincacheEngineTest.php	/^	public function testDeleteCache() {$/;"	f
testExpiry	lib/Cake/Test/Case/Cache/Engine/WincacheEngineTest.php	/^	public function testExpiry() {$/;"	f
testGroupClear	lib/Cake/Test/Case/Cache/Engine/WincacheEngineTest.php	/^	public function testGroupClear() {$/;"	f
testGroupDelete	lib/Cake/Test/Case/Cache/Engine/WincacheEngineTest.php	/^	public function testGroupDelete() {$/;"	f
testGroupsReadWrite	lib/Cake/Test/Case/Cache/Engine/WincacheEngineTest.php	/^	public function testGroupsReadWrite() {$/;"	f
testIncrement	lib/Cake/Test/Case/Cache/Engine/WincacheEngineTest.php	/^	public function testIncrement() {$/;"	f
testReadAndWriteCache	lib/Cake/Test/Case/Cache/Engine/WincacheEngineTest.php	/^	public function testReadAndWriteCache() {$/;"	f
XcacheEngineTest	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^class XcacheEngineTest extends CakeTestCase {$/;"	c
_cacheDisable	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^		$this->_cacheDisable = Configure::read('Cache.disable');$/;"	v
data	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^		$data = 'this is a test of the emergency broadcasting system';$/;"	v
expecting	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^		$expecting = $data;$/;"	v
expecting	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^		$expecting = '';$/;"	v
expecting	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^		$expecting = array($/;"	v
result	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^		$result = Cache::clear();$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^		$result = Cache::decrement('test_decrement');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^		$result = Cache::decrement('test_decrement', 2);$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^		$result = Cache::delete('delete_test');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^		$result = Cache::increment('test_increment');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^		$result = Cache::increment('test_increment', 2);$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^		$result = Cache::read('other_test');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^		$result = Cache::read('test');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^		$result = Cache::read('test_decrement');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^		$result = Cache::read('test_increment');$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^		$result = Cache::write('clear_test_1', $data);$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^		$result = Cache::write('clear_test_2', $data);$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^		$result = Cache::write('delete_test', $data);$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^		$result = Cache::write('other_test', $data);$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^		$result = Cache::write('test', $data);$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^		$result = Cache::write('test_decrement', 5);$/;"	v
result	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^		$result = Cache::write('test_increment', 5);$/;"	v
setUp	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^	public function setUp() {$/;"	f
settings	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^		$settings = Cache::settings();$/;"	v
tearDown	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^	public function tearDown() {$/;"	f
testClearCache	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^	public function testClearCache() {$/;"	f
testDecrement	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^	public function testDecrement() {$/;"	f
testDeleteCache	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^	public function testDeleteCache() {$/;"	f
testExpiry	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^	public function testExpiry() {$/;"	f
testGroupClear	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^	public function testGroupClear() {$/;"	f
testGroupDelete	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^	public function testGroupDelete() {$/;"	f
testGroupsReadWrite	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^	public function testGroupsReadWrite() {$/;"	f
testIncrement	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^	public function testIncrement() {$/;"	f
testReadAndWriteCache	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^	public function testReadAndWriteCache() {$/;"	f
testSettings	lib/Cake/Test/Case/Cache/Engine/XcacheEngineTest.php	/^	public function testSettings() {$/;"	f
IniReaderTest	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^class IniReaderTest extends CakeTestCase {$/;"	c
config	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^		$config = $reader->read('acl.ini');$/;"	v
config	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^		$config = $reader->read('acl.ini.php');$/;"	v
config	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^		$config = $reader->read('empty');$/;"	v
config	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^		$config = $reader->read('nested');$/;"	v
config	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^		$config = $reader->read('nested.ini');$/;"	v
config	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^		$config = $reader->read('no_section.ini');$/;"	v
contents	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^		$contents = file_get_contents($file);$/;"	v
expected	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^		$expected = $this->testData;$/;"	v
expected	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^		$expected = <<<INI$/;"	v
expected	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^		$expected = array($/;"	v
file	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^		$file = TMP . 'test.ini';$/;"	v
path	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^		$this->path = CAKE . 'Test' . DS . 'test_app' . DS . 'Config' . DS;$/;"	v
reader	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^		$reader = new IniReader($this->path);$/;"	v
reader	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^		$reader = new IniReader($this->path, 'admin');$/;"	v
reader	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^		$reader = new IniReader(TMP);$/;"	v
result	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^		$result = $reader->dump('test', $this->testData);$/;"	v
result	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^		$result = $reader->dump('test.ini', $this->testData);$/;"	v
result	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^		$result = $reader->read('TestPlugin.acl.ini.php');$/;"	v
result	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^		$result = $reader->read('TestPlugin.nested');$/;"	v
result	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^		$result = $reader->read('TestPlugin.nested.ini');$/;"	v
result	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^		$result = $reader->read('test.ini');$/;"	v
result	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^		$result = file_get_contents($file);$/;"	v
setUp	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^	public function setUp() {$/;"	f
testBooleanReading	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^	public function testBooleanReading() {$/;"	f
testConstruct	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^	public function testConstruct() {$/;"	f
testData	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^	public $testData = array($/;"	v
testDump	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^	public function testDump() {$/;"	f
testDumpRead	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^	public function testDumpRead() {$/;"	f
testRead	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^	public function testRead() {$/;"	f
testReadEmptyFile	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^	public function testReadEmptyFile() {$/;"	f
testReadOnlyOneSection	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^	public function testReadOnlyOneSection() {$/;"	f
testReadPluginSpecialAclIniPhpValue	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^	public function testReadPluginSpecialAclIniPhpValue() {$/;"	f
testReadPluginValue	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^	public function testReadPluginValue() {$/;"	f
testReadSpecialAclIniPhp	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^	public function testReadSpecialAclIniPhp() {$/;"	f
testReadValuesWithDots	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^	public function testReadValuesWithDots() {$/;"	f
testReadWithDots	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^	public function testReadWithDots() {$/;"	f
testReadWithExistentFileWithoutExtension	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^	public function testReadWithExistentFileWithoutExtension() {$/;"	f
testReadWithNonExistentFile	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^	public function testReadWithNonExistentFile() {$/;"	f
testReadWithoutSection	lib/Cake/Test/Case/Configure/IniReaderTest.php	/^	public function testReadWithoutSection() {$/;"	f
PhpReaderTest	lib/Cake/Test/Case/Configure/PhpReaderTest.php	/^class PhpReaderTest extends CakeTestCase {$/;"	c
contents	lib/Cake/Test/Case/Configure/PhpReaderTest.php	/^		$contents = file_get_contents($file);$/;"	v
expected	lib/Cake/Test/Case/Configure/PhpReaderTest.php	/^		$expected = <<<PHP$/;"	v
file	lib/Cake/Test/Case/Configure/PhpReaderTest.php	/^		$file = TMP . 'test.php';$/;"	v
path	lib/Cake/Test/Case/Configure/PhpReaderTest.php	/^		$this->path = CAKE . 'Test' . DS . 'test_app' . DS . 'Config' . DS;$/;"	v
reader	lib/Cake/Test/Case/Configure/PhpReaderTest.php	/^		$reader = new PhpReader($this->path);$/;"	v
reader	lib/Cake/Test/Case/Configure/PhpReaderTest.php	/^		$reader = new PhpReader(TMP);$/;"	v
result	lib/Cake/Test/Case/Configure/PhpReaderTest.php	/^		$result = $reader->dump('test', $this->testData);$/;"	v
result	lib/Cake/Test/Case/Configure/PhpReaderTest.php	/^		$result = $reader->dump('test.php', $this->testData);$/;"	v
result	lib/Cake/Test/Case/Configure/PhpReaderTest.php	/^		$result = $reader->read('TestPlugin.load');$/;"	v
result	lib/Cake/Test/Case/Configure/PhpReaderTest.php	/^		$result = $reader->read('TestPlugin.load.php');$/;"	v
result	lib/Cake/Test/Case/Configure/PhpReaderTest.php	/^		$result = $reader->read('test.php');$/;"	v
setUp	lib/Cake/Test/Case/Configure/PhpReaderTest.php	/^	public function setUp() {$/;"	f
testData	lib/Cake/Test/Case/Configure/PhpReaderTest.php	/^	public $testData = array($/;"	v
testDump	lib/Cake/Test/Case/Configure/PhpReaderTest.php	/^	public function testDump() {$/;"	f
testDumpRead	lib/Cake/Test/Case/Configure/PhpReaderTest.php	/^	public function testDumpRead() {$/;"	f
testRead	lib/Cake/Test/Case/Configure/PhpReaderTest.php	/^	public function testRead() {$/;"	f
testReadEmptyFile	lib/Cake/Test/Case/Configure/PhpReaderTest.php	/^	public function testReadEmptyFile() {$/;"	f
testReadPluginValue	lib/Cake/Test/Case/Configure/PhpReaderTest.php	/^	public function testReadPluginValue() {$/;"	f
testReadWithDots	lib/Cake/Test/Case/Configure/PhpReaderTest.php	/^	public function testReadWithDots() {$/;"	f
testReadWithExistentFileWithoutExtension	lib/Cake/Test/Case/Configure/PhpReaderTest.php	/^	public function testReadWithExistentFileWithoutExtension() {$/;"	f
testReadWithNonExistentFile	lib/Cake/Test/Case/Configure/PhpReaderTest.php	/^	public function testReadWithNonExistentFile() {$/;"	f
values	lib/Cake/Test/Case/Configure/PhpReaderTest.php	/^		$values = $reader->read('var_test');$/;"	v
values	lib/Cake/Test/Case/Configure/PhpReaderTest.php	/^		$values = $reader->read('var_test.php');$/;"	v
AllConsoleLibsTest	lib/Cake/Test/Case/Console/AllConsoleLibsTest.php	/^class AllConsoleLibsTest extends PHPUnit_Framework_TestSuite {$/;"	c
fileName	lib/Cake/Test/Case/Console/AllConsoleLibsTest.php	/^			$fileName = $file->getRealPath();$/;"	v
suite	lib/Cake/Test/Case/Console/AllConsoleLibsTest.php	/^		$suite = new CakeTestSuite('All console lib classes');$/;"	v
suite	lib/Cake/Test/Case/Console/AllConsoleLibsTest.php	/^	public static function suite() {$/;"	f
AllConsoleTest	lib/Cake/Test/Case/Console/AllConsoleTest.php	/^class AllConsoleTest extends PHPUnit_Framework_TestSuite {$/;"	c
path	lib/Cake/Test/Case/Console/AllConsoleTest.php	/^		$path = CORE_TEST_CASES . DS . 'Console' . DS;$/;"	v
suite	lib/Cake/Test/Case/Console/AllConsoleTest.php	/^		$suite = new CakeTestSuite('All console classes');$/;"	v
suite	lib/Cake/Test/Case/Console/AllConsoleTest.php	/^	public static function suite() {$/;"	f
AllShellsTest	lib/Cake/Test/Case/Console/AllShellsTest.php	/^class AllShellsTest extends PHPUnit_Framework_TestSuite {$/;"	c
path	lib/Cake/Test/Case/Console/AllShellsTest.php	/^		$path = CORE_TEST_CASES . DS . 'Console' . DS . 'Command' . DS;$/;"	v
suite	lib/Cake/Test/Case/Console/AllShellsTest.php	/^		$suite = new CakeTestSuite('All shell classes');$/;"	v
suite	lib/Cake/Test/Case/Console/AllShellsTest.php	/^	public static function suite() {$/;"	f
AllTasksTest	lib/Cake/Test/Case/Console/AllTasksTest.php	/^class AllTasksTest extends PHPUnit_Framework_TestSuite {$/;"	c
path	lib/Cake/Test/Case/Console/AllTasksTest.php	/^		$path = CORE_TEST_CASES . DS . 'Console' . DS . 'Command' . DS . 'Task' . DS;$/;"	v
suite	lib/Cake/Test/Case/Console/AllTasksTest.php	/^		$suite = new CakeTestSuite('All Tasks tests');$/;"	v
suite	lib/Cake/Test/Case/Console/AllTasksTest.php	/^	public static function suite() {$/;"	f
AclShellTest	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^class AclShellTest extends CakeTestCase {$/;"	c
Aro	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^		$Aro = ClassRegistry::init('Aro');$/;"	v
Task	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^		$this->Task = $this->getMock($/;"	v
collection	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^		$collection = new ComponentCollection();$/;"	v
data	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^		$data = array($/;"	v
expected	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^		$expected = array('model' => 'Model', 'foreign_key' => 'foreignKey');$/;"	v
first	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^		$first = $node[0]['Aro']['id'];$/;"	v
fixtures	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^	public $fixtures = array('core.aco', 'core.aro', 'core.aros_aco');$/;"	v
id	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^		$id = $result['Aro']['id'];$/;"	v
in	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^		$in = $this->getMock('ConsoleInput', array(), array(), '', false);$/;"	v
last	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^		$last = $node[2]['Aro']['id'];$/;"	v
node	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^		$node = $this->Task->Acl->Aro->node(array('model' => 'AuthUser', 'foreign_key' => 2));$/;"	v
node	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^		$node = $this->Task->Acl->Aro->read(null, $node[0]['Aro']['id']);$/;"	v
out	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^		$out = $this->getMock('ConsoleOutput', array(), array(), '', false);$/;"	v
result	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^		$result = $Aro->findById(3);$/;"	v
result	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^		$result = $Aro->read();$/;"	v
result	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^		$result = $Aro->read(null, 4);$/;"	v
result	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^		$result = $this->Task->parseIdentifier('111234');$/;"	v
result	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^		$result = $this->Task->parseIdentifier('Model.foreignKey');$/;"	v
result	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^		$result = $this->Task->parseIdentifier('mySuperUser');$/;"	v
second	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^		$second = $node[1]['Aro']['id'];$/;"	v
setUp	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^	public function setUp() {$/;"	f
testCheck	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^	public function testCheck() {$/;"	f
testCreate	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^	public function testCreate() {$/;"	f
testDelete	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^	public function testDelete() {$/;"	f
testDeny	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^	public function testDeny() {$/;"	f
testGetPath	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^	public function testGetPath() {$/;"	f
testGrant	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^	public function testGrant() {$/;"	f
testInherit	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^	public function testInherit() {$/;"	f
testInitDb	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^	public function testInitDb() {$/;"	f
testParsingModelAndForeignKey	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^	public function testParsingModelAndForeignKey() {$/;"	f
testSetParent	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^	public function testSetParent() {$/;"	f
testViewWithArgument	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^	public function testViewWithArgument() {$/;"	f
testViewWithModelForeignKeyOutput	lib/Cake/Test/Case/Console/Command/AclShellTest.php	/^	public function testViewWithModelForeignKeyOutput() {$/;"	f
ApiShellTest	lib/Cake/Test/Case/Console/Command/ApiShellTest.php	/^class ApiShellTest extends CakeTestCase {$/;"	c
Shell	lib/Cake/Test/Case/Console/Command/ApiShellTest.php	/^		$this->Shell = $this->getMock($/;"	v
expected	lib/Cake/Test/Case/Console/Command/ApiShellTest.php	/^		$expected = array($/;"	v
in	lib/Cake/Test/Case/Console/Command/ApiShellTest.php	/^		$in = $this->getMock('ConsoleInput', array(), array(), '', false);$/;"	v
out	lib/Cake/Test/Case/Console/Command/ApiShellTest.php	/^		$out = $this->getMock('ConsoleOutput', array(), array(), '', false);$/;"	v
setUp	lib/Cake/Test/Case/Console/Command/ApiShellTest.php	/^	public function setUp() {$/;"	f
testMethodNameDetection	lib/Cake/Test/Case/Console/Command/ApiShellTest.php	/^	public function testMethodNameDetection() {$/;"	f
BakeShellTest	lib/Cake/Test/Case/Console/Command/BakeShellTest.php	/^class BakeShellTest extends CakeTestCase {$/;"	c
Shell	lib/Cake/Test/Case/Console/Command/BakeShellTest.php	/^		$this->Shell = $this->getMock($/;"	v
UsersController	lib/Cake/Test/Case/Console/Command/BakeShellTest.php	/^	class UsersController extends Controller {$/;"	c
fixtures	lib/Cake/Test/Case/Console/Command/BakeShellTest.php	/^	public $fixtures = array('core.user');$/;"	v
in	lib/Cake/Test/Case/Console/Command/BakeShellTest.php	/^		$in = $this->getMock('ConsoleInput', array(), array(), '', false);$/;"	v
out	lib/Cake/Test/Case/Console/Command/BakeShellTest.php	/^		$out = $this->getMock('ConsoleOutput', array(), array(), '', false);$/;"	v
setUp	lib/Cake/Test/Case/Console/Command/BakeShellTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Console/Command/BakeShellTest.php	/^	public function tearDown() {$/;"	f
testAllWithModelName	lib/Cake/Test/Case/Console/Command/BakeShellTest.php	/^	public function testAllWithModelName() {$/;"	f
userExists	lib/Cake/Test/Case/Console/Command/BakeShellTest.php	/^		$userExists = class_exists('User');$/;"	v
CommandListShellTest	lib/Cake/Test/Case/Console/Command/CommandListShellTest.php	/^class CommandListShellTest extends CakeTestCase {$/;"	c
Shell	lib/Cake/Test/Case/Console/Command/CommandListShellTest.php	/^		$this->Shell = $this->getMock($/;"	v
TestStringOutput	lib/Cake/Test/Case/Console/Command/CommandListShellTest.php	/^class TestStringOutput extends ConsoleOutput {$/;"	c
_write	lib/Cake/Test/Case/Console/Command/CommandListShellTest.php	/^	protected function _write($message) {$/;"	f
expected	lib/Cake/Test/Case/Console/Command/CommandListShellTest.php	/^		$expected = "\/\\[.*CORE.*\\] acl, api, bake, command_list, completion, console, i18n, schema, server, test, testsuite, upgrade\/";$/;"	v
expected	lib/Cake/Test/Case/Console/Command/CommandListShellTest.php	/^		$expected = "\/\\[.*TestPlugin.*\\] example\/";$/;"	v
expected	lib/Cake/Test/Case/Console/Command/CommandListShellTest.php	/^		$expected = "\/\\[.*TestPluginTwo.*\\] example, welcome\/";$/;"	v
expected	lib/Cake/Test/Case/Console/Command/CommandListShellTest.php	/^		$expected = "\/\\[.*app.*\\] sample\/";$/;"	v
find	lib/Cake/Test/Case/Console/Command/CommandListShellTest.php	/^		$find = '<shell name="bake" call_as="bake" provider="CORE" help="bake -h"\/>';$/;"	v
find	lib/Cake/Test/Case/Console/Command/CommandListShellTest.php	/^		$find = '<shell name="sample" call_as="sample" provider="app" help="sample -h"\/>';$/;"	v
find	lib/Cake/Test/Case/Console/Command/CommandListShellTest.php	/^		$find = '<shell name="welcome" call_as="TestPluginTwo.welcome" provider="TestPluginTwo" help="TestPluginTwo.welcome -h"\/>';$/;"	v
in	lib/Cake/Test/Case/Console/Command/CommandListShellTest.php	/^		$in = $this->getMock('ConsoleInput', array(), array(), '', false);$/;"	v
out	lib/Cake/Test/Case/Console/Command/CommandListShellTest.php	/^		$out = new TestStringOutput();$/;"	v
output	lib/Cake/Test/Case/Console/Command/CommandListShellTest.php	/^		$output = $this->Shell->stdout->output;$/;"	v
output	lib/Cake/Test/Case/Console/Command/CommandListShellTest.php	/^	public $output = '';$/;"	v
setUp	lib/Cake/Test/Case/Console/Command/CommandListShellTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Console/Command/CommandListShellTest.php	/^	public function tearDown() {$/;"	f
testMain	lib/Cake/Test/Case/Console/Command/CommandListShellTest.php	/^	public function testMain() {$/;"	f
testMainXml	lib/Cake/Test/Case/Console/Command/CommandListShellTest.php	/^	public function testMainXml() {$/;"	f
CompletionShellTest	lib/Cake/Test/Case/Console/Command/CompletionShellTest.php	/^class CompletionShellTest extends CakeTestCase {$/;"	c
Shell	lib/Cake/Test/Case/Console/Command/CompletionShellTest.php	/^		$this->Shell = $this->getMock($/;"	v
TestCompletionStringOutput	lib/Cake/Test/Case/Console/Command/CompletionShellTest.php	/^class TestCompletionStringOutput extends ConsoleOutput {$/;"	c
_write	lib/Cake/Test/Case/Console/Command/CompletionShellTest.php	/^	protected function _write($message) {$/;"	f
expected	lib/Cake/Test/Case/Console/Command/CompletionShellTest.php	/^		$expected = "--help -h --verbose -v --quiet -q --connection -c --theme -t\\n";$/;"	v
expected	lib/Cake/Test/Case/Console/Command/CompletionShellTest.php	/^		$expected = "--help -h --verbose -v --quiet -q\\n";$/;"	v
expected	lib/Cake/Test/Case/Console/Command/CompletionShellTest.php	/^		$expected = "TestPlugin.example TestPluginTwo.example TestPluginTwo.welcome acl api bake command_list completion console i18n schema server test testsuite upgrade sample\\n";$/;"	v
expected	lib/Cake/Test/Case/Console/Command/CompletionShellTest.php	/^		$expected = "\/This command is not intended to be called manually\/";$/;"	v
expected	lib/Cake/Test/Case/Console/Command/CompletionShellTest.php	/^		$expected = "controller db_config fixture model plugin project test view\\n";$/;"	v
expected	lib/Cake/Test/Case/Console/Command/CompletionShellTest.php	/^		$expected = "say_hello\\n";$/;"	v
expected	lib/Cake/Test/Case/Console/Command/CompletionShellTest.php	/^		$expected = '';$/;"	v
in	lib/Cake/Test/Case/Console/Command/CompletionShellTest.php	/^		$in = $this->getMock('ConsoleInput', array(), array(), '', false);$/;"	v
needle	lib/Cake/Test/Case/Console/Command/CompletionShellTest.php	/^		$needle = 'Welcome to CakePHP';$/;"	v
out	lib/Cake/Test/Case/Console/Command/CompletionShellTest.php	/^		$out = new TestCompletionStringOutput();$/;"	v
output	lib/Cake/Test/Case/Console/Command/CompletionShellTest.php	/^		$output = $this->Shell->stdout->output;$/;"	v
output	lib/Cake/Test/Case/Console/Command/CompletionShellTest.php	/^	public $output = '';$/;"	v
setUp	lib/Cake/Test/Case/Console/Command/CompletionShellTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Console/Command/CompletionShellTest.php	/^	public function tearDown() {$/;"	f
testCommands	lib/Cake/Test/Case/Console/Command/CompletionShellTest.php	/^	public function testCommands() {$/;"	f
testFuzzy	lib/Cake/Test/Case/Console/Command/CompletionShellTest.php	/^	public function testFuzzy() {$/;"	f
testMain	lib/Cake/Test/Case/Console/Command/CompletionShellTest.php	/^	public function testMain() {$/;"	f
testOptions	lib/Cake/Test/Case/Console/Command/CompletionShellTest.php	/^	public function testOptions() {$/;"	f
testOptionsNoArguments	lib/Cake/Test/Case/Console/Command/CompletionShellTest.php	/^	public function testOptionsNoArguments() {$/;"	f
testOptionsNonExistingCommand	lib/Cake/Test/Case/Console/Command/CompletionShellTest.php	/^	public function testOptionsNonExistingCommand() {$/;"	f
testStartup	lib/Cake/Test/Case/Console/Command/CompletionShellTest.php	/^	public function testStartup() {$/;"	f
testSubCommands	lib/Cake/Test/Case/Console/Command/CompletionShellTest.php	/^	public function testSubCommands() {$/;"	f
testSubCommandsAppPlugin	lib/Cake/Test/Case/Console/Command/CompletionShellTest.php	/^	public function testSubCommandsAppPlugin() {$/;"	f
testSubCommandsCorePlugin	lib/Cake/Test/Case/Console/Command/CompletionShellTest.php	/^	public function testSubCommandsCorePlugin() {$/;"	f
testSubCommandsNoArguments	lib/Cake/Test/Case/Console/Command/CompletionShellTest.php	/^	public function testSubCommandsNoArguments() {$/;"	f
testSubCommandsNonExistingCommand	lib/Cake/Test/Case/Console/Command/CompletionShellTest.php	/^	public function testSubCommandsNonExistingCommand() {$/;"	f
testSubCommandsPlugin	lib/Cake/Test/Case/Console/Command/CompletionShellTest.php	/^	public function testSubCommandsPlugin() {$/;"	f
SchemaShellTest	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^class SchemaShellTest extends CakeTestCase {$/;"	c
SchemaShellTestSchema	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^class SchemaShellTestSchema extends CakeSchema {$/;"	c
Shell	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^		$this->Shell = $this->getMock($/;"	v
articles	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^	public $articles = array($/;"	v
comments	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^	public $comments = array($/;"	v
connection	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^	public $connection = 'test';$/;"	v
contents	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^		$contents = $this->file->read();$/;"	v
contents	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^		$contents = file_get_contents($file);$/;"	v
contents	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^		$contents = file_get_contents($this->Shell->Schema->path . DS . 'custom_name.php');$/;"	v
db	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^		$db = ConnectionManager::getDataSource('test');$/;"	v
expected	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^		$expected = CAKE . 'Test' . DS . 'test_app' . DS . 'Plugin' . DS . 'TestPlugin' . DS . 'Config' . DS . 'Schema';$/;"	v
file	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^		$file = $this->Shell->Schema->path . DS . 'other_name.php';$/;"	v
file	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^		$this->file = new File(TMP . 'tests' . DS . 'dump_test.sql');$/;"	v
file	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^		$this->file = new File(TMP . 'tests' . DS . 'i18n.sql');$/;"	v
file	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^		$this->file = new File(TMP . 'tests' . DS . 'schema.php');$/;"	v
fixtures	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^	public $fixtures = array($/;"	v
in	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^		$in = $this->getMock('ConsoleInput', array(), array(), '', false);$/;"	v
newone	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^	public $newone = array($/;"	v
out	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^		$out = $this->getMock('ConsoleOutput', array(), array(), '', false);$/;"	v
schema	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^		$schema = new I18nSchema();$/;"	v
schema	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^		$schema = new TestPluginAppSchema();$/;"	v
schema	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^		$schema = new i18nSchema();$/;"	v
setUp	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^	public function setUp() {$/;"	f
sources	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^		$sources = $db->listSources();$/;"	v
tearDown	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^	public function tearDown() {$/;"	f
testCreateNoArgs	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^	public function testCreateNoArgs() {$/;"	f
testCreateOptionYes	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^	public function testCreateOptionYes() {$/;"	f
testCreateWithTableArgs	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^	public function testCreateWithTableArgs() {$/;"	f
testDumpFileWritingWithPlugins	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^	public function testDumpFileWritingWithPlugins() {$/;"	f
testDumpWithFileWriting	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^	public function testDumpWithFileWriting() {$/;"	f
testGenerateExclude	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^	public function testGenerateExclude() {$/;"	f
testGenerateModels	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^	public function testGenerateModels() {$/;"	f
testGenerateNoOverwrite	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^	public function testGenerateNoOverwrite() {$/;"	f
testGenerateOverwrite	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^	public function testGenerateOverwrite() {$/;"	f
testGenerateSnapshot	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^	public function testGenerateSnapshot() {$/;"	f
testGenerateWithPlugins	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^	public function testGenerateWithPlugins() {$/;"	f
testName	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^	public function testName() {$/;"	f
testNameAndFile	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^	public function testNameAndFile() {$/;"	f
testPluginDotSyntaxWithCreate	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^	public function testPluginDotSyntaxWithCreate() {$/;"	f
testPluginParam	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^	public function testPluginParam() {$/;"	f
testStartup	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^	public function testStartup() {$/;"	f
testUpdateWithOptionYes	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^	public function testUpdateWithOptionYes() {$/;"	f
testUpdateWithTable	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^	public function testUpdateWithTable() {$/;"	f
testUpdateWithTableCreate	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^	public function testUpdateWithTableCreate() {$/;"	f
testView	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^	public function testView() {$/;"	f
testViewWithPlugins	lib/Cake/Test/Case/Console/Command/SchemaShellTest.php	/^	public function testViewWithPlugins() {$/;"	f
CommandTask	lib/Cake/Test/Case/Console/Command/Task/CommandTaskTest.php	/^		$this->CommandTask = $this->getMock($/;"	v
CommandTaskTest	lib/Cake/Test/Case/Console/Command/Task/CommandTaskTest.php	/^class CommandTaskTest extends CakeTestCase {$/;"	c
expected	lib/Cake/Test/Case/Console/Command/Task/CommandTaskTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/CommandTaskTest.php	/^		$expected = array();$/;"	v
in	lib/Cake/Test/Case/Console/Command/Task/CommandTaskTest.php	/^		$in = $this->getMock('ConsoleInput', array(), array(), '', false);$/;"	v
out	lib/Cake/Test/Case/Console/Command/Task/CommandTaskTest.php	/^		$out = $this->getMock('ConsoleOutput', array(), array(), '', false);$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/CommandTaskTest.php	/^		$result = $this->CommandTask->commands();$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/CommandTaskTest.php	/^		$result = $this->CommandTask->getShell('acl');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/CommandTaskTest.php	/^		$result = $this->CommandTask->getShell('core.bake');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/CommandTaskTest.php	/^		$result = $this->CommandTask->getShell('strawberry');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/CommandTaskTest.php	/^		$result = $this->CommandTask->getShellList();$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/CommandTaskTest.php	/^		$result = $this->CommandTask->options('bake');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/CommandTaskTest.php	/^		$result = $this->CommandTask->options('pie');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/CommandTaskTest.php	/^		$result = $this->CommandTask->subCommands('acl');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/CommandTaskTest.php	/^		$result = $this->CommandTask->subCommands('yoghurt');$/;"	v
setUp	lib/Cake/Test/Case/Console/Command/Task/CommandTaskTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Console/Command/Task/CommandTaskTest.php	/^	public function tearDown() {$/;"	f
testCommands	lib/Cake/Test/Case/Console/Command/Task/CommandTaskTest.php	/^	public function testCommands() {$/;"	f
testGetShell	lib/Cake/Test/Case/Console/Command/Task/CommandTaskTest.php	/^	public function testGetShell() {$/;"	f
testGetShellCore	lib/Cake/Test/Case/Console/Command/Task/CommandTaskTest.php	/^	public function testGetShellCore() {$/;"	f
testGetShellList	lib/Cake/Test/Case/Console/Command/Task/CommandTaskTest.php	/^	public function testGetShellList() {$/;"	f
testGetShellNonExisting	lib/Cake/Test/Case/Console/Command/Task/CommandTaskTest.php	/^	public function testGetShellNonExisting() {$/;"	f
testOptions	lib/Cake/Test/Case/Console/Command/Task/CommandTaskTest.php	/^	public function testOptions() {$/;"	f
testOptionsUnknownCommand	lib/Cake/Test/Case/Console/Command/Task/CommandTaskTest.php	/^	public function testOptionsUnknownCommand() {$/;"	f
testSubCommands	lib/Cake/Test/Case/Console/Command/Task/CommandTaskTest.php	/^	public function testSubCommands() {$/;"	f
testSubCommandsUnknownCommand	lib/Cake/Test/Case/Console/Command/Task/CommandTaskTest.php	/^	public function testSubCommandsUnknownCommand() {$/;"	f
ARTICLE_MODEL_CREATED	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^	define('ARTICLE_MODEL_CREATED', true);$/;"	d
BakeArticle	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^	class BakeArticle extends Model {$/;"	c
ControllerTaskTest	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^class ControllerTaskTest extends CakeTestCase {$/;"	c
Task	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$this->Task = $this->getMock('ControllerTask',$/;"	v
components	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$components = array('Acl', 'Auth');$/;"	v
controller	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$controller = 'Posts';$/;"	v
count	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$count = count($this->Task->listAll('test'));$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$expected = 'BakeArticles';$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$expected = 'BakeComments';$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$expected = array('BakeArticles', 'BakeArticlesBakeTags', 'BakeComments', 'BakeTags');$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$expected = array('Paginator', 'RequestHandler', 'Security');$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$expected = array('Text', 'Number', 'CustomOne');$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$expected = array('bake_articles', 'bake_articles_bake_tags', 'bake_comments', 'bake_tags');$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$expected = file_get_contents(CAKE . 'Test' . DS . 'bake_compare' . DS . 'Controller' . DS . 'ActionsUsingSessions.ctp');$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$expected = file_get_contents(CAKE . 'Test' . DS . 'bake_compare' . DS . 'Controller' . DS . 'ActionsWithNoSessions.ctp');$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$expected = file_get_contents(CAKE . 'Test' . DS . 'bake_compare' . DS . 'Controller' . DS . 'NoActions.ctp');$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$expected = file_get_contents(CAKE . 'Test' . DS . 'bake_compare' . DS . 'Controller' . DS . 'NoHelpersOrComponents.ctp');$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$expected = file_get_contents(CAKE . 'Test' . DS . 'bake_compare' . DS . 'Controller' . DS . 'Scaffold.ctp');$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$expected = new PHPUnit_Framework_Constraint_Not($this->stringContains('$scaffold'));$/;"	v
filename	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$filename = '\/my\/path\/BakeArticlesController.php';$/;"	v
fixtures	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^	public $fixtures = array('core.bake_article', 'core.bake_articles_bake_tag', 'core.bake_comment', 'core.bake_tag');$/;"	v
hasAndBelongsToMany	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		public $hasAndBelongsToMany = array('BakeTag');$/;"	v
hasMany	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		public $hasMany = array('BakeComment');$/;"	v
helpers	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$helpers = array('Js', 'Time');$/;"	v
imported	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^$imported = class_exists('BakeArticle') || class_exists('BakeComment') || class_exists('BakeTag');$/;"	v
in	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$in = $this->getMock('ConsoleInput', array(), array(), '', false);$/;"	v
nameVariations	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^	public static function nameVariations() {$/;"	f
out	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$out = $this->getMock('ConsoleOutput', array(), array(), '', false);$/;"	v
path	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$path = APP . 'Plugin' . DS . 'ControllerTest' . DS . 'Controller' . DS . 'ArticlesController.php';$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$result = $this->Task->bake('Articles', '--actions--', array(), array(), array());$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$result = $this->Task->bake('Articles', 'scaffold', $helpers, $components);$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$result = $this->Task->bake('Articles', null, $helpers, $components);$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$result = $this->Task->bake('Articles', null, array(), array());$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$result = $this->Task->bakeActions('BakeArticles', 'admin_', true);$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$result = $this->Task->bakeActions('BakeArticles', null, false);$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$result = $this->Task->bakeActions('BakeArticles', null, true);$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$result = $this->Task->doComponents();$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$result = $this->Task->doHelpers();$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$result = $this->Task->execute();$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$result = $this->Task->getName('test');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$result = $this->Task->listAll('test');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$result = $this->Task->listAll();$/;"	v
scaffold	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^		$scaffold = false;$/;"	v
setUp	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^	public function tearDown() {$/;"	f
testBake	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^	public function testBake() {$/;"	f
testBakeActionsUsingSessions	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^	public function testBakeActionsUsingSessions() {$/;"	f
testBakeActionsWithNoSessions	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^	public function testBakeActionsWithNoSessions() {$/;"	f
testBakeTest	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^	public function testBakeTest() {$/;"	f
testBakeWithPlugin	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^	public function testBakeWithPlugin() {$/;"	f
testConfirmController	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^	public function testConfirmController() {$/;"	f
testDoComponentsNo	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^	public function testDoComponentsNo() {$/;"	f
testDoComponentsTrailingCommas	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^	public function testDoComponentsTrailingCommas() {$/;"	f
testDoComponentsTrailingSpaces	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^	public function testDoComponentsTrailingSpaces() {$/;"	f
testDoHelpersNo	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^	public function testDoHelpersNo() {$/;"	f
testDoHelpersTrailingCommas	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^	public function testDoHelpersTrailingCommas() {$/;"	f
testDoHelpersTrailingSpace	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^	public function testDoHelpersTrailingSpace() {$/;"	f
testExecuteIntoAll	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^	public function testExecuteIntoAll() {$/;"	f
testExecuteIntoAllAdmin	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^	public function testExecuteIntoAllAdmin() {$/;"	f
testExecuteWithController	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^	public function testExecuteWithController() {$/;"	f
testExecuteWithControllerAndAdmin	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^	public function testExecuteWithControllerAndAdmin() {$/;"	f
testExecuteWithControllerAndBoth	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^	public function testExecuteWithControllerAndBoth() {$/;"	f
testExecuteWithControllerNameVariations	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^	public function testExecuteWithControllerNameVariations($name) {$/;"	f
testExecuteWithPublicParam	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^	public function testExecuteWithPublicParam() {$/;"	f
testGetNameInvalidIndex	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^	public function testGetNameInvalidIndex() {$/;"	f
testGetNameValidIndex	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^	public function testGetNameValidIndex() {$/;"	f
testInteractive	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^	public function testInteractive() {$/;"	f
testInteractiveAdminMethodsNotInteractive	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^	public function testInteractiveAdminMethodsNotInteractive() {$/;"	f
testListAll	lib/Cake/Test/Case/Console/Command/Task/ControllerTaskTest.php	/^	public function testListAll() {$/;"	f
DbConfigTaskTest	lib/Cake/Test/Case/Console/Command/Task/DbConfigTaskTest.php	/^class DbConfigTaskTest extends CakeTestCase {$/;"	c
Task	lib/Cake/Test/Case/Console/Command/Task/DbConfigTaskTest.php	/^		$this->Task = $this->getMock($/;"	v
Task	lib/Cake/Test/Case/Console/Command/Task/DbConfigTaskTest.php	/^		$this->Task = $this->getMock('DbConfigTask',$/;"	v
in	lib/Cake/Test/Case/Console/Command/Task/DbConfigTaskTest.php	/^		$in = $this->getMock('ConsoleInput', array(), array(), '', false);$/;"	v
out	lib/Cake/Test/Case/Console/Command/Task/DbConfigTaskTest.php	/^		$out = $this->getMock('ConsoleOutput', array(), array(), '', false);$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/DbConfigTaskTest.php	/^		$result = $this->Task->getConfig();$/;"	v
setUp	lib/Cake/Test/Case/Console/Command/Task/DbConfigTaskTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Console/Command/Task/DbConfigTaskTest.php	/^	public function tearDown() {$/;"	f
testExecuteIntoInteractive	lib/Cake/Test/Case/Console/Command/Task/DbConfigTaskTest.php	/^	public function testExecuteIntoInteractive() {$/;"	f
testGetConfig	lib/Cake/Test/Case/Console/Command/Task/DbConfigTaskTest.php	/^	public function testGetConfig() {$/;"	f
testInitialize	lib/Cake/Test/Case/Console/Command/Task/DbConfigTaskTest.php	/^	public function testInitialize() {$/;"	f
ExtractTaskTest	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^class ExtractTaskTest extends CakeTestCase {$/;"	c
Folder	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$Folder = new Folder($this->path);$/;"	v
Task	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$this->Task = $this->getMock($/;"	v
Task	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$this->Task = $this->getMock('ExtractTask',$/;"	v
in	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$in = $this->getMock('ConsoleInput', array(), array(), '', false);$/;"	v
in	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$this->in = $this->getMock('ConsoleInput', array(), array(), '', false);$/;"	v
original	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$original = file_get_contents($this->path . DS . 'default.pot');$/;"	v
out	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$out = $this->getMock('ConsoleOutput', array(), array(), '', false);$/;"	v
out	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$this->out = $this->getMock('ConsoleOutput', array(), array(), '', false);$/;"	v
path	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$this->path = TMP . 'tests' . DS . 'extract_task_test';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '#Plugin\/TestPlugin\/Model\/TestPluginPost.php:validation for field title#';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '#msgid "Post body is required"#';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '#msgid "Post body is super required"#';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '#msgid "Post title is required"#';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '#msgid "You may enter up to %s chars \\(minimum is %s chars\\)"#';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '\/"Content-Transfer-Encoding\\: 8bit\/';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '\/"Content-Type\\: text\\\/plain; charset\\=utf-8\/';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '\/"Plural-Forms\\: nplurals\\=INTEGER; plural\\=EXPRESSION;\/';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '\/#: Console\\\/Templates\\\/\/';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '\/#: Test\\\/\/';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '\/To change its layout, create: APP\\\/views\\\/layouts\\\/default\\.ctp\\.\/s';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '\/\\#: (\\\\\\\\|\\\/)extract\\.ctp:14\\n';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '\/\\#: (\\\\\\\\|\\\/)extract\\.ctp:15;6\\n';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '\/\\#: (\\\\\\\\|\\\/)extract\\.ctp:22\\nmsgid "';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '\/\\#: (\\\\\\\\|\\\/)extract\\.ctp:7\\n';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '\/\\#: .*default\\.ctp:26\\n\/';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '\/\\#: .*extract\\.ctp:31\\n\/';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '\/\\#: .*extract\\.ctp:6\\n\/';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '\/msgid "Add User"\/';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '\/msgid "Cake is NOT able to connect to the database."\\nmsgstr ""\\n\/';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '\/msgid "Cake is able to connect to the database."\\nmsgstr ""\\n\/';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '\/msgid "Editing this Page"\\nmsgstr ""\\n\/';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '\/msgid "Rename config\\\/database.php.default to ';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '\/msgid "The %s is being used for caching. To change the config edit ';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '\/msgid "To change the content of this page, create: APP\\\/views\\\/pages\\\/home\\.ctp\/';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '\/msgid "Yesterday, %s"\\nmsgstr ""\\n\/';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '\/msgid "You deleted %d message \\(domain\\)."\\nmsgid_plural "You deleted %d messages \\(domain\\)."\/';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '\/msgid "You deleted %d message."\\nmsgid_plural "You deleted %d messages."\/';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '\/msgid "You have %d new message \\(domain\\)."\\nmsgid_plural "You have %d new messages \\(domain\\)."\/';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '\/msgid "You have %d new message."\\nmsgid_plural "You have %d new messages."\/';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '\/msgid "You have %d new message."\\nmsgstr ""\/';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '\/msgid "Your cache is NOT working. Please check ';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '\/msgid "Your database configuration file is NOT present."\\nmsgstr ""\\n\/';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '\/msgid "Your database configuration file is present."\\nmsgstr ""\\n\/';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '\/msgid "Your tmp directory is NOT writable."\\nmsgstr ""\\n\/';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = '\/msgid "Your tmp directory is writable."\\nmsgstr ""\\n\/';$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = preg_quote('#Model\/PersisterOne.php:validation for field body#', '\\\\');$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = preg_quote('#Model\/PersisterOne.php:validation for field title#', '\\\\');$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = preg_quote('#Model\/TestPluginPost.php:validation for field body#', '\\\\');$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = preg_quote('#Model\/TestPluginPost.php:validation for field title#', '\\\\');$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = preg_quote('#Plugin\/TestPlugin\/Model\/TestPluginPost.php:validation for field body#', '\\\\');$/;"	v
pattern	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$pattern = preg_quote('#Plugin\/TestPlugin\/Model\/TestPluginPost.php:validation for field title#', '\\\\');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$result = file_get_contents($this->path . DS . 'cake.pot');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$result = file_get_contents($this->path . DS . 'cake_dev.pot');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$result = file_get_contents($this->path . DS . 'default.pot');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$result = file_get_contents($this->path . DS . 'domain.pot');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^		$result = file_get_contents($this->path . DS . 'test_plugin.pot');$/;"	v
setUp	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^	public function tearDown() {$/;"	f
testExecute	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^	public function testExecute() {$/;"	f
testExtractCategory	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^	public function testExtractCategory() {$/;"	f
testExtractCore	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^	public function testExtractCore() {$/;"	f
testExtractExcludePlugins	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^	public function testExtractExcludePlugins() {$/;"	f
testExtractModelValidation	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^	public function testExtractModelValidation() {$/;"	f
testExtractModelValidationInPlugin	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^	public function testExtractModelValidationInPlugin() {$/;"	f
testExtractModelValidationWithDomainInModel	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^	public function testExtractModelValidationWithDomainInModel() {$/;"	f
testExtractMultiplePaths	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^	public function testExtractMultiplePaths() {$/;"	f
testExtractOverwrite	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^	public function testExtractOverwrite() {$/;"	f
testExtractPlugin	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^	public function testExtractPlugin() {$/;"	f
testExtractWithExclude	lib/Cake/Test/Case/Console/Command/Task/ExtractTaskTest.php	/^	public function testExtractWithExclude() {$/;"	f
Article	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^		$Article = ClassRegistry::init('Article');$/;"	v
FixtureTaskTest	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^class FixtureTaskTest extends CakeTestCase {$/;"	c
Task	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^		$Task = new FixtureTask($out, $out, $in);$/;"	v
Task	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^		$this->Task = $this->getMock('FixtureTask',$/;"	v
backupGlobals	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^	public $backupGlobals = false;$/;"	v
db	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^		$db = ConnectionManager::getDataSource('test');$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^		$expected = array('fromTable' => true);$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^		$expected = array('records' => true);$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^		$expected = array('schema' => 'Article');$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^		$expected = array('schema' => 'Article', 'records' => true);$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^		$expected = array();$/;"	v
filename	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^		$filename = '\/my\/path\/ArticleFixture.php';$/;"	v
filename	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^		$filename = '\/my\/path\/CommentFixture.php';$/;"	v
filename	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^		$filename = APP . 'Plugin' . DS . 'TestFixture' . DS . 'Test' . DS . 'Fixture' . DS . 'ArticleFixture.php';$/;"	v
fixtures	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^	public $fixtures = array('core.article', 'core.comment', 'core.datatype', 'core.binary_test', 'core.user');$/;"	v
in	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^		$in = $this->getMock('ConsoleInput', array(), array(), '', false);$/;"	v
out	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^		$out = $this->getMock('ConsoleOutput', array(), array(), '', false);$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^		$result = $this->Task->bake('Article');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^		$result = $this->Task->bake('Article', 'binary_tests');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^		$result = $this->Task->bake('Article', 'comments');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^		$result = $this->Task->bake('Article', 'comments', array('records' => true));$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^		$result = $this->Task->bake('Article', 'comments', array('schema' => 'Article'));$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^		$result = $this->Task->bake('Article', 'comments', array('schema' => 'Article', 'records' => true));$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^		$result = $this->Task->bake('Article', 'datatypes');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^		$result = $this->Task->bake('Article', false, array($/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^		$result = $this->Task->bake('Article', false, array('schema' => 'Article'));$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^		$result = $this->Task->importOptions('Article');$/;"	v
setUp	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^	public function tearDown() {$/;"	f
testAllWithCountAndRecordsFlags	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^	public function testAllWithCountAndRecordsFlags() {$/;"	f
testAllWithSchemaImport	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^	public function testAllWithSchemaImport() {$/;"	f
testBake	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^	public function testBake() {$/;"	f
testConstruct	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^	public function testConstruct() {$/;"	f
testExecuteInteractive	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^	public function testExecuteInteractive() {$/;"	f
testExecuteIntoAll	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^	public function testExecuteIntoAll() {$/;"	f
testExecuteWithNamedModel	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^	public function testExecuteWithNamedModel() {$/;"	f
testGenerateFixtureFile	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^	public function testGenerateFixtureFile() {$/;"	f
testGeneratePluginFixtureFile	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^	public function testGeneratePluginFixtureFile() {$/;"	f
testImportOptionsAlternateConnection	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^	public function testImportOptionsAlternateConnection() {$/;"	f
testImportOptionsNothing	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^	public function testImportOptionsNothing() {$/;"	f
testImportOptionsSchemaRecords	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^	public function testImportOptionsSchemaRecords() {$/;"	f
testImportOptionsTable	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^	public function testImportOptionsTable() {$/;"	f
testImportOptionsWithCommandLineOptions	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^	public function testImportOptionsWithCommandLineOptions() {$/;"	f
testImportOptionsWithRecords	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^	public function testImportOptionsWithRecords() {$/;"	f
testImportOptionsWithSchema	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^	public function testImportOptionsWithSchema() {$/;"	f
testImportRecordsFromDatabaseWithConditionsPoo	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^	public function testImportRecordsFromDatabaseWithConditionsPoo() {$/;"	f
testImportRecordsNoEscaping	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^	public function testImportRecordsNoEscaping() {$/;"	f
testRecordGenerationForBinaryAndFloat	lib/Cake/Test/Case/Console/Command/Task/FixtureTaskTest.php	/^	public function testRecordGenerationForBinaryAndFloat() {$/;"	f
Model	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$Model = $this->getMock('Model');$/;"	v
ModelTaskTest	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^class ModelTaskTest extends CakeTestCase {$/;"	c
Task	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$this->Task = $this->getMock('ModelTask',$/;"	v
_setupOtherMocks	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	protected function _setupOtherMocks() {$/;"	f
_useMockedOut	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	protected function _useMockedOut() {$/;"	f
anything	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$anything = new PHPUnit_Framework_Constraint_IsAnything();$/;"	v
article	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$article = array_search('bake_articles', $tables) + 1;$/;"	v
associations	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$associations = array($/;"	v
count	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$count = count($this->Task->listAll('test'));$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$expected = 'BakeOdd';$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$expected = 'bake_articles';$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$expected = 'bake_odd';$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$expected = 'my_field';$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$expected = 'my_table';$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$expected = <<< STRINGEND$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$expected = <<<TEXT$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$expected = array('a_z_0_9' => '\/^[a-z]{0,9}$\/');$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$expected = array('boolean' => 'boolean');$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$expected = array('date' => 'date');$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$expected = array('email' => 'email');$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$expected = array('notEmpty' => 'notEmpty');$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$expected = array('notEmpty' => 'notEmpty', '_skipFields' => true);$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$expected = array('notEmpty' => 'notEmpty', 'maxLength' => 'maxLength');$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$expected = array('numeric' => 'numeric');$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$expected = array('time' => 'time');$/;"	v
fields	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$fields = array($/;"	v
filename	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$filename = '\/my\/path\/BakeArticle.php';$/;"	v
filename	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$filename = '\/my\/path\/BakeArticlesBakeTag.php';$/;"	v
filename	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$filename = '\/my\/path\/BakeComment.php';$/;"	v
filename	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$filename = '\/my\/path\/BakeOdd.php';$/;"	v
filename	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$filename = '\/my\/path\/BakeTag.php';$/;"	v
filename	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$filename = '\/my\/path\/CategoryThread.php';$/;"	v
filename	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$filename = '\/my\/path\/NumberTree.php';$/;"	v
fixtures	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public $fixtures = array($/;"	v
in	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$in = $this->getMock('ConsoleInput', array(), array(), '', false);$/;"	v
listing	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$listing = $this->Task->listAll('test');$/;"	v
model	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$model = new Model(array('ds' => 'test', 'name' => 'BakeArticle'));$/;"	v
model	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$model = new Model(array('ds' => 'test', 'name' => 'BakeComment'));$/;"	v
model	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$model = new Model(array('ds' => 'test', 'name' => 'CategoryThread'));$/;"	v
model	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$model = new Model(array('ds' => 'test', 'name' => 'NumberTree'));$/;"	v
nameVariations	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public static function nameVariations() {$/;"	f
object	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$object = new Model(array('name' => 'BakeOdd', 'table' => 'bake_odd', 'ds' => 'test'));$/;"	v
options	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$options = array('one', 'two', 'three');$/;"	v
out	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$out = $this->getMock('ConsoleOutput', array(), array(), '', false);$/;"	v
path	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$path = APP . 'Plugin' . DS . 'ControllerTest' . DS . 'Model' . DS . 'BakeArticle.php';$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$result = $this->Task->bake('BakeArticle', array(), array());$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$result = $this->Task->bake('BakeArticle', compact('associations'));$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$result = $this->Task->bake('BakeArticle', compact('validate'));$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$result = $this->Task->bake('NumberTree', array('actsAs' => array('Tree', 'PluginName.Sluggable')));$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$result = $this->Task->confirmAssociations($model, $associations);$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$result = $this->Task->doActsAs($model);$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$result = $this->Task->doAssociations($model);$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$result = $this->Task->doValidation($Model);$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$result = $this->Task->fieldValidation('email', array('type' => 'string', 'length' => 10, 'null' => false));$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$result = $this->Task->fieldValidation('test', array('type' => 'boolean', 'length' => 10, 'null' => false));$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$result = $this->Task->fieldValidation('test', array('type' => 'integer', 'length' => 10, 'null' => false));$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$result = $this->Task->fieldValidation('text', array('type' => 'date', 'length' => 10, 'null' => false));$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$result = $this->Task->fieldValidation('text', array('type' => 'string', 'length' => 10, 'null' => false));$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$result = $this->Task->fieldValidation('text', array('type' => 'time', 'length' => 10, 'null' => false));$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$result = $this->Task->findBelongsTo($model, array());$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$result = $this->Task->findDisplayField($fields);$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$result = $this->Task->findHasAndBelongsToMany($model, array());$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$result = $this->Task->findHasOneAndMany($model, array());$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$result = $this->Task->findPrimaryKey($fields);$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$result = $this->Task->getName('test');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$result = $this->Task->getName();$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$result = $this->Task->getTable($result);$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$result = $this->Task->getTable('BakeArticle', 'test');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$result = $this->Task->getTable('BakeOdd');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$result = $this->Task->inOptions($options, 'Pick a number');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$result = $this->Task->initValidations();$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$result = $this->Task->listAll('test');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$result = $this->Task->listAll();$/;"	v
setUp	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function setUp() {$/;"	f
tables	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$tables = $this->Task->listAll('test');$/;"	v
tearDown	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function tearDown() {$/;"	f
testBakeFixture	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testBakeFixture() {$/;"	f
testBakeRelations	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testBakeRelations() {$/;"	f
testBakeTest	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testBakeTest() {$/;"	f
testBakeValidation	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testBakeValidation() {$/;"	f
testBakeWithBehaviors	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testBakeWithBehaviors() {$/;"	f
testBakeWithPlugin	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testBakeWithPlugin() {$/;"	f
testBelongsToGeneration	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testBelongsToGeneration() {$/;"	f
testConfirmAssociations	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testConfirmAssociations() {$/;"	f
testDoActsAs	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testDoActsAs() {$/;"	f
testDoAssociationsNonInteractive	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testDoAssociationsNonInteractive() {$/;"	f
testExecuteIntoAll	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testExecuteIntoAll() {$/;"	f
testExecuteIntoAllOddTables	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testExecuteIntoAllOddTables() {$/;"	f
testExecuteIntoBakeOddTables	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testExecuteIntoBakeOddTables() {$/;"	f
testExecuteIntoInteractive	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testExecuteIntoInteractive() {$/;"	f
testExecuteWithNamedModel	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testExecuteWithNamedModel() {$/;"	f
testExecuteWithNamedModelHasManyCreated	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testExecuteWithNamedModelHasManyCreated() {$/;"	f
testExecuteWithNamedModelVariations	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testExecuteWithNamedModelVariations($name) {$/;"	f
testExecuteWithNonExistantTableName	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testExecuteWithNonExistantTableName() {$/;"	f
testFieldValidationGuessing	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testFieldValidationGuessing() {$/;"	f
testFindDisplayFieldNone	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testFindDisplayFieldNone() {$/;"	f
testFindDisplayName	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testFindDisplayName() {$/;"	f
testFindPrimaryKey	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testFindPrimaryKey() {$/;"	f
testForcedExecuteWithNonExistantTableName	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testForcedExecuteWithNonExistantTableName() {$/;"	f
testGetNameQuit	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testGetNameQuit() {$/;"	f
testGetNameValidOption	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testGetNameValidOption() {$/;"	f
testGetNameWithOutOfBoundsOption	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testGetNameWithOutOfBoundsOption() {$/;"	f
testGetTableName	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testGetTableName() {$/;"	f
testGetTableNameCustom	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testGetTableNameCustom() {$/;"	f
testGetTableOddTable	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testGetTableOddTable() {$/;"	f
testGetTableOddTableInteractive	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testGetTableOddTableInteractive() {$/;"	f
testHasAndBelongsToManyGeneration	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testHasAndBelongsToManyGeneration() {$/;"	f
testHasManyHasOneGeneration	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testHasManyHasOneGeneration() {$/;"	f
testInOptions	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testInOptions() {$/;"	f
testInitValidations	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testInitValidations() {$/;"	f
testInteractiveDoValidationWithSkipping	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testInteractiveDoValidationWithSkipping() {$/;"	f
testInteractiveFieldValidation	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testInteractiveFieldValidation() {$/;"	f
testInteractiveFieldValidationWithBogusResponse	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testInteractiveFieldValidationWithBogusResponse() {$/;"	f
testInteractiveFieldValidationWithRegexp	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testInteractiveFieldValidationWithRegexp() {$/;"	f
testListAllArgument	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testListAllArgument() {$/;"	f
testListAllConnection	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testListAllConnection() {$/;"	f
testNonInteractiveDoValidation	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testNonInteractiveDoValidation() {$/;"	f
testSkipTablesAndAll	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testSkipTablesAndAll() {$/;"	f
testSkippingAnotherInteractiveFieldValidation	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testSkippingAnotherInteractiveFieldValidation() {$/;"	f
testSkippingChoiceInteractiveFieldValidation	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^	public function testSkippingChoiceInteractiveFieldValidation() {$/;"	f
validate	lib/Cake/Test/Case/Console/Command/Task/ModelTaskTest.php	/^		$validate = array($/;"	v
Folder	lib/Cake/Test/Case/Console/Command/Task/PluginTaskTest.php	/^		$Folder = new Folder($path);$/;"	v
Folder	lib/Cake/Test/Case/Console/Command/Task/PluginTaskTest.php	/^		$Folder = new Folder($this->Task->path . 'BakeTestPlugin');$/;"	v
PluginTaskTest	lib/Cake/Test/Case/Console/Command/Task/PluginTaskTest.php	/^class PluginTaskTest extends CakeTestCase {$/;"	c
Task	lib/Cake/Test/Case/Console/Command/Task/PluginTaskTest.php	/^		$this->Task = $this->getMock('PluginTask',$/;"	v
_paths	lib/Cake/Test/Case/Console/Command/Task/PluginTaskTest.php	/^		$this->_paths = $paths = App::path('plugins');$/;"	v
_testPath	lib/Cake/Test/Case/Console/Command/Task/PluginTaskTest.php	/^		$this->_testPath = array_push($paths, TMP . 'tests' . DS);$/;"	v
directories	lib/Cake/Test/Case/Console/Command/Task/PluginTaskTest.php	/^		$directories = array($/;"	v
file	lib/Cake/Test/Case/Console/Command/Task/PluginTaskTest.php	/^		$file = $path . DS . 'Controller' . DS . 'BakeTestPluginAppController.php';$/;"	v
file	lib/Cake/Test/Case/Console/Command/Task/PluginTaskTest.php	/^		$file = $path . DS . 'Controller' . DS . 'TestPluginAppController.php';$/;"	v
file	lib/Cake/Test/Case/Console/Command/Task/PluginTaskTest.php	/^		$file = $path . DS . 'Model' . DS . 'BakeTestPluginAppModel.php';$/;"	v
file	lib/Cake/Test/Case/Console/Command/Task/PluginTaskTest.php	/^		$file = $path . DS . 'Model' . DS . 'TestPluginAppModel.php';$/;"	v
in	lib/Cake/Test/Case/Console/Command/Task/PluginTaskTest.php	/^		$this->in = $this->getMock('ConsoleInput', array(), array(), '', false);$/;"	v
last	lib/Cake/Test/Case/Console/Command/Task/PluginTaskTest.php	/^		$last = count($paths);$/;"	v
out	lib/Cake/Test/Case/Console/Command/Task/PluginTaskTest.php	/^		$this->out = $this->getMock('ConsoleOutput', array(), array(), '', false);$/;"	v
path	lib/Cake/Test/Case/Console/Command/Task/PluginTaskTest.php	/^		$path = $this->Task->path . 'BakeTestPlugin';$/;"	v
path	lib/Cake/Test/Case/Console/Command/Task/PluginTaskTest.php	/^		$path = $this->Task->path . 'TestPlugin';$/;"	v
paths	lib/Cake/Test/Case/Console/Command/Task/PluginTaskTest.php	/^		$paths = App::path('plugins');$/;"	v
setUp	lib/Cake/Test/Case/Console/Command/Task/PluginTaskTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Console/Command/Task/PluginTaskTest.php	/^	public function tearDown() {$/;"	f
testBakeFoldersAndFiles	lib/Cake/Test/Case/Console/Command/Task/PluginTaskTest.php	/^	public function testBakeFoldersAndFiles() {$/;"	f
testExecuteWithNoArgs	lib/Cake/Test/Case/Console/Command/Task/PluginTaskTest.php	/^	public function testExecuteWithNoArgs() {$/;"	f
testExecuteWithOneArg	lib/Cake/Test/Case/Console/Command/Task/PluginTaskTest.php	/^	public function testExecuteWithOneArg() {$/;"	f
testFindPathNonExistant	lib/Cake/Test/Case/Console/Command/Task/PluginTaskTest.php	/^	public function testFindPathNonExistant() {$/;"	f
File	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^		$File = new File($path . 'Config' . DS . 'core.php');$/;"	v
File	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^		$File = new File($path . 'Console' . DS . 'cake.php');$/;"	v
File	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^		$File = new File($path . 'webroot' . DS . 'index.php');$/;"	v
File	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^		$File = new File($path . 'webroot' . DS . 'test.php');$/;"	v
File	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^		$File = new File($path . DS . 'webroot' . DS . 'index.php');$/;"	v
File	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^		$File = new File($path . DS . 'webroot' . DS . 'test.php');$/;"	v
File	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^		$File = new File($this->Task->configPath . 'core.php');$/;"	v
File	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^		$File = new File(APP . 'Config' . DS . 'core.php');$/;"	v
File	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^		$File = new File(TMP . 'tests' . DS . 'core.php');$/;"	v
Folder	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^		$Folder = new Folder($this->Task->path . 'bake_test_app');$/;"	v
ProjectTaskTest	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^class ProjectTaskTest extends CakeTestCase {$/;"	c
Task	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^		$this->Task = $this->getMock('ProjectTask',$/;"	v
_setupTestProject	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^	protected function _setupTestProject() {$/;"	f
contents	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^		$contents = $File->read();$/;"	v
contents	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^		$contents = file_get_contents($path . DS . 'webroot' . DS . 'index.php');$/;"	v
contents	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^		$contents = file_get_contents($path . DS . 'webroot' . DS . 'test.php');$/;"	v
dirs	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^		$dirs = array($/;"	v
empty	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^		$empty = array($/;"	v
in	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^		$in = $this->getMock('ConsoleInput', array(), array(), '', false);$/;"	v
out	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^		$out = $this->getMock('ConsoleOutput', array(), array(), '', false);$/;"	v
path	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^		$path = $this->Task->args[0] = TMP . 'tests' . DS . 'bake_test_app';$/;"	v
path	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^		$path = $this->Task->path . 'bake_test_app' . DS;$/;"	v
path	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^		$path = $this->Task->path . 'bake_test_app';$/;"	v
restore	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^		$restore = ini_get('include_path');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^		$result = $this->Task->cachePrefix($path);$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^		$result = $this->Task->cakeAdmin('my_prefix');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^		$result = $this->Task->consolePath($path);$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^		$result = $this->Task->getPrefix();$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^		$result = $this->Task->securityCipherSeed($path);$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^		$result = $this->Task->securitySalt($path);$/;"	v
setUp	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^	public function setUp() {$/;"	f
skel	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^		$skel = CAKE . 'Console' . DS . 'Templates' . DS . 'skel';$/;"	v
tearDown	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^	public function tearDown() {$/;"	f
testBake	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^	public function testBake() {$/;"	f
testBakeEmptyFlag	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^	public function testBakeEmptyFlag() {$/;"	f
testCachePrefixGeneration	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^	public function testCachePrefixGeneration() {$/;"	f
testCakeAdmin	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^	public function testCakeAdmin() {$/;"	f
testConsolePath	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^	public function testConsolePath() {$/;"	f
testExecute	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^	public function testExecute() {$/;"	f
testExecuteWithAbsolutePath	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^	public function testExecuteWithAbsolutePath() {$/;"	f
testExecuteWithCakeOnIncludePath	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^	public function testExecuteWithCakeOnIncludePath() {$/;"	f
testGetPrefix	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^	public function testGetPrefix() {$/;"	f
testGetPrefixWithMultiplePrefixes	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^	public function testGetPrefixWithMultiplePrefixes() {$/;"	f
testIndexPhpGeneration	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^	public function testIndexPhpGeneration() {$/;"	f
testSecurityCipherSeedGeneration	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^	public function testSecurityCipherSeedGeneration() {$/;"	f
testSecuritySaltGeneration	lib/Cake/Test/Case/Console/Command/Task/ProjectTaskTest.php	/^	public function testSecuritySaltGeneration() {$/;"	f
Task	lib/Cake/Test/Case/Console/Command/Task/TemplateTaskTest.php	/^		$this->Task = $this->getMock('TemplateTask',$/;"	v
TemplateTaskTest	lib/Cake/Test/Case/Console/Command/Task/TemplateTaskTest.php	/^class TemplateTaskTest extends CakeTestCase {$/;"	c
consoleLibs	lib/Cake/Test/Case/Console/Command/Task/TemplateTaskTest.php	/^		$consoleLibs = CAKE . 'Console' . DS;$/;"	v
defaultTheme	lib/Cake/Test/Case/Console/Command/Task/TemplateTaskTest.php	/^		$defaultTheme = CAKE . 'Console' . DS . 'Templates' . DS . 'default' . DS;$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/TemplateTaskTest.php	/^		$expected = "I got rendered\\nfoo";$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/TemplateTaskTest.php	/^		$expected = array(3 => 'three', 4 => 'four', 1 => 'one', 2 => 'two');$/;"	v
in	lib/Cake/Test/Case/Console/Command/Task/TemplateTaskTest.php	/^		$in = $this->getMock('ConsoleInput', array(), array(), '', false);$/;"	v
out	lib/Cake/Test/Case/Console/Command/Task/TemplateTaskTest.php	/^		$out = $this->getMock('ConsoleOutput', array(), array(), '', false);$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/TemplateTaskTest.php	/^		$result = $this->Task->generate('classes', 'fixture');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/TemplateTaskTest.php	/^		$result = $this->Task->generate('classes', 'test_object', array('test' => 'foo'));$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/TemplateTaskTest.php	/^		$result = $this->Task->getThemePath();$/;"	v
setUp	lib/Cake/Test/Case/Console/Command/Task/TemplateTaskTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Console/Command/Task/TemplateTaskTest.php	/^	public function tearDown() {$/;"	f
testFindingInstalledThemesForBake	lib/Cake/Test/Case/Console/Command/Task/TemplateTaskTest.php	/^	public function testFindingInstalledThemesForBake() {$/;"	f
testGenerate	lib/Cake/Test/Case/Console/Command/Task/TemplateTaskTest.php	/^	public function testGenerate() {$/;"	f
testGenerateWithTemplateFallbacks	lib/Cake/Test/Case/Console/Command/Task/TemplateTaskTest.php	/^	public function testGenerateWithTemplateFallbacks() {$/;"	f
testGetThemePath	lib/Cake/Test/Case/Console/Command/Task/TemplateTaskTest.php	/^	public function testGetThemePath() {$/;"	f
testSet	lib/Cake/Test/Case/Console/Command/Task/TemplateTaskTest.php	/^	public function testSet() {$/;"	f
Task	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$this->Task = $this->getMock('TestTask',$/;"	v
TestTaskAppModel	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^class TestTaskAppModel extends Model {$/;"	c
TestTaskArticle	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^class TestTaskArticle extends Model {$/;"	c
TestTaskComment	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^class TestTaskComment extends TestTaskAppModel {$/;"	c
TestTaskCommentsController	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^class TestTaskCommentsController extends Controller {$/;"	c
TestTaskTag	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^class TestTaskTag extends Model {$/;"	c
TestTaskTest	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^class TestTaskTest extends CakeTestCase {$/;"	c
_innerMethod	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	protected function _innerMethod() {$/;"	f
belongsTo	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public $belongsTo = array($/;"	v
caseFileNameProvider	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public static function caseFileNameProvider() {$/;"	f
doSomething	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public function doSomething() {$/;"	f
doSomethingElse	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public function doSomethingElse() {$/;"	f
expected	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$expected = $this->Task->path . $expected;$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$expected = APP . 'Plugin' . DS . 'TestTest' . DS . 'Test' . DS . 'Case' . DS . 'Model' . DS . 'PostTest.php';$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$expected = array("\\$View = new View();\\n", "new FormHelper(\\$View);\\n", '');$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$expected = array('', "ClassRegistry::init('Post');\\n", '');$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$expected = array('', '', '');$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$expected = array('app.pizza', 'app.topping', 'app.side_dish');$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$expected = array('dosomething', 'dosomethingelse');$/;"	v
expected	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$expected = array('plugin.test_task.test_task_comment', 'app.articles_tags',$/;"	v
file	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$file = TESTS . 'Case' . DS . 'Controller' . DS . 'CommentsControllerTest.php';$/;"	v
file	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$file = TESTS . 'Case' . DS . 'Model' . DS . 'MyClassTest.php';$/;"	v
fixtures	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public $fixtures = array('core.article', 'core.comment', 'core.articles_tag', 'core.tag');$/;"	v
hasAndBelongsToMany	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public $hasAndBelongsToMany = array($/;"	v
hasMany	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public $hasMany = array($/;"	v
in	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$in = $this->getMock('ConsoleInput', array(), array(), '', false);$/;"	v
keys	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$keys = ClassRegistry::keys();$/;"	v
mapTypeProvider	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public static function mapTypeProvider() {$/;"	f
model	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$model = ClassRegistry::init('TestTaskComment');$/;"	v
objects	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$objects = App::objects('model');$/;"	v
options	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$options = App::objects('model');$/;"	v
out	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$out = $this->getMock('ConsoleOutput', array(), array(), '', false);$/;"	v
path	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$path = $testApp . 'TestPlugin' . DS . 'Test' . DS . 'Case' . DS . 'View' . DS . 'Helper' . DS . 'OtherHelperTest.php';$/;"	v
path	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$path = APP . 'Plugin' . DS . 'TestTest' . DS . 'Test' . DS . 'Case' . DS . 'View' . DS . 'Helper' . DS . 'FormHelperTest.php';$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$result = $this->Task->bake('Behavior', 'Example');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$result = $this->Task->bake('Component', 'Example');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$result = $this->Task->bake('Controller', 'TestTaskComments');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$result = $this->Task->bake('Helper', 'Example');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$result = $this->Task->bake('Model', 'TestTaskArticle');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$result = $this->Task->generateConstructor('controller', 'PostsController', null);$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$result = $this->Task->generateConstructor('helper', 'FormHelper', null);$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$result = $this->Task->generateConstructor('model', 'Post', null);$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$result = $this->Task->generateFixtureList($subject);$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$result = $this->Task->generateUses('component', 'Controller\/Component', 'AuthComponent');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$result = $this->Task->generateUses('controller', 'Controller', 'PostsController');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$result = $this->Task->generateUses('helper', 'View\/Helper', 'FormHelper');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$result = $this->Task->generateUses('model', 'Model', 'Post');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$result = $this->Task->getClassName('Model');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$result = $this->Task->getObjectType();$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$result = $this->Task->getRealClassname('Behavior', 'Containable');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$result = $this->Task->getRealClassname('Behavior', 'ContainableBehavior');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$result = $this->Task->getRealClassname('Component', 'Auth');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$result = $this->Task->getRealClassname('Controller', 'AlertTypes');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$result = $this->Task->getRealClassname('Controller', 'Posts');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$result = $this->Task->getRealClassname('Controller', 'PostsController');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$result = $this->Task->getRealClassname('Helper', 'Form');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$result = $this->Task->getRealClassname('Helper', 'FormHelper');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$result = $this->Task->getRealClassname('Model', 'Post');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$result = $this->Task->getTestableMethods('TestTaskArticle');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$result = $this->Task->getUserFixtures();$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$result = $this->Task->hasMockClass('controller');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$result = $this->Task->testCaseFileName($type, $class);$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$result = $this->Task->testCaseFileName('Model', 'Post');$/;"	v
setUp	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public function setUp() {$/;"	f
subject	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$subject = ClassRegistry::init('TestTaskArticle');$/;"	v
subject	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$subject = new TestTaskCommentsController();$/;"	v
tearDown	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public function tearDown() {$/;"	f
testApp	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^		$testApp = CAKE . 'Test' . DS . 'test_app' . DS . 'Plugin' . DS;$/;"	v
testBakeBehaviorTest	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public function testBakeBehaviorTest() {$/;"	f
testBakeComponentTest	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public function testBakeComponentTest() {$/;"	f
testBakeControllerTest	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public function testBakeControllerTest() {$/;"	f
testBakeHelperTest	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public function testBakeHelperTest() {$/;"	f
testBakeModelTest	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public function testBakeModelTest() {$/;"	f
testBakeWithPlugin	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public function testBakeWithPlugin() {$/;"	f
testExecuteWithOneArg	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public function testExecuteWithOneArg() {$/;"	f
testExecuteWithTwoArgs	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public function testExecuteWithTwoArgs() {$/;"	f
testExecuteWithTwoArgsLowerCase	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public function testExecuteWithTwoArgsLowerCase() {$/;"	f
testFilePathGenerationModelRepeated	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public function testFilePathGenerationModelRepeated() {$/;"	f
testFixtureArrayGenerationFromController	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public function testFixtureArrayGenerationFromController() {$/;"	f
testFixtureArrayGenerationFromModel	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public function testFixtureArrayGenerationFromModel() {$/;"	f
testGenerateConstructor	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public function testGenerateConstructor() {$/;"	f
testGenerateUses	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public function testGenerateUses() {$/;"	f
testGetClassName	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public function testGetClassName() {$/;"	f
testGetObjectType	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public function testGetObjectType() {$/;"	f
testGetRealClassname	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public function testGetRealClassname() {$/;"	f
testGetUserFixtures	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public function testGetUserFixtures() {$/;"	f
testInteractiveWithPlugin	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public function testInteractiveWithPlugin() {$/;"	f
testMapType	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public function testMapType($original, $plugin, $expected) {$/;"	f
testMethodIntrospection	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public function testMethodIntrospection() {$/;"	f
testMockClassGeneration	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public function testMockClassGeneration() {$/;"	f
testRegistryClearWhenBuildingTestObjects	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public function testRegistryClearWhenBuildingTestObjects() {$/;"	f
testTestCaseFileName	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public function testTestCaseFileName($type, $class, $expected) {$/;"	f
testTestCaseFileNamePlugin	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public function testTestCaseFileNamePlugin() {$/;"	f
useTable	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public $useTable = 'articles';$/;"	v
useTable	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public $useTable = 'comments';$/;"	v
useTable	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public $useTable = 'tags';$/;"	v
uses	lib/Cake/Test/Case/Console/Command/Task/TestTaskTest.php	/^	public $uses = array('TestTaskComment', 'TestTaskTag');$/;"	v
Task	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^		$this->Task = $this->getMock('ViewTask',$/;"	v
ViewTaskArticle	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^class ViewTaskArticle extends Model {$/;"	c
ViewTaskArticlesController	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^class ViewTaskArticlesController extends Controller {$/;"	c
ViewTaskComment	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^class ViewTaskComment extends Model {$/;"	c
ViewTaskCommentsController	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^class ViewTaskCommentsController extends Controller {$/;"	c
ViewTaskTest	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^class ViewTaskTest extends CakeTestCase {$/;"	c
_back	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^		$_back = Configure::read('Routing');$/;"	v
add	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public function add() {$/;"	f
admin_add	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public function admin_add() {$/;"	f
admin_delete	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public function admin_delete() {$/;"	f
admin_edit	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public function admin_edit() {$/;"	f
admin_index	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public function admin_index() {$/;"	f
admin_view	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public function admin_view() {$/;"	f
belongsTo	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public $belongsTo = array($/;"	v
fixtures	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public $fixtures = array('core.article', 'core.comment', 'core.articles_tag', 'core.tag');$/;"	v
in	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^		$in = $this->getMock('ConsoleInput', array(), array(), '', false);$/;"	v
index	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public function index() {$/;"	f
nameVariations	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public static function nameVariations() {$/;"	f
out	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^		$out = $this->getMock('ConsoleOutput', array(), array(), '', false);$/;"	v
path	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^		$path = APP . 'Plugin' . DS . 'TestTest' . DS . 'View' . DS . 'ViewTaskComments' . DS . 'view.ctp';$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^		$result = $this->Task->getContent('admin_add', $vars);$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^		$result = $this->Task->getContent('admin_view', $vars);$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^		$result = $this->Task->getContent('index');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^		$result = $this->Task->getContent('view', $vars);$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^		$result = $this->Task->getTemplate('add');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^		$result = $this->Task->getTemplate('admin_add');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^		$result = $this->Task->getTemplate('admin_edit');$/;"	v
result	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^		$result = $this->Task->getTemplate('delete');$/;"	v
setUp	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public function tearDown() {$/;"	f
testBakeActions	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public function testBakeActions() {$/;"	f
testBakeEdit	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public function testBakeEdit() {$/;"	f
testBakeIndex	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public function testBakeIndex() {$/;"	f
testBakeView	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public function testBakeView() {$/;"	f
testBakeWithNoTemplate	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public function testBakeWithNoTemplate() {$/;"	f
testBakeWithPlugin	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public function testBakeWithPlugin() {$/;"	f
testCustomAction	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public function testCustomAction() {$/;"	f
testExecuteInteractive	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public function testExecuteInteractive() {$/;"	f
testExecuteInteractiveWithAdmin	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public function testExecuteInteractiveWithAdmin() {$/;"	f
testExecuteIntoAll	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public function testExecuteIntoAll() {$/;"	f
testExecuteIntoAllWithActionName	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public function testExecuteIntoAllWithActionName() {$/;"	f
testExecuteWithActionParam	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public function testExecuteWithActionParam() {$/;"	f
testExecuteWithAlternateTemplates	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public function testExecuteWithAlternateTemplates() {$/;"	f
testExecuteWithController	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public function testExecuteWithController() {$/;"	f
testExecuteWithControllerAndAdminFlag	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public function testExecuteWithControllerAndAdminFlag() {$/;"	f
testExecuteWithControllerVariations	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public function testExecuteWithControllerVariations($name) {$/;"	f
testGetContent	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public function testGetContent() {$/;"	f
testGetContentWithAdminAction	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public function testGetContentWithAdminAction() {$/;"	f
testGetTemplate	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public function testGetTemplate() {$/;"	f
useTable	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public $useTable = 'articles';$/;"	v
useTable	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^	public $useTable = 'comments';$/;"	v
vars	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^		$vars = array($/;"	v
views	lib/Cake/Test/Case/Console/Command/Task/ViewTaskTest.php	/^		$views = array('admin_index.ctp', 'admin_add.ctp', 'admin_view.ctp', 'admin_edit.ctp');$/;"	v
Shell	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$this->Shell = $this->getMock($/;"	v
TestShellTest	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^class TestShellTest extends CakeTestCase {$/;"	c
TestTestShell	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^class TestTestShell extends TestShell {$/;"	c
in	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$in = $this->getMock('ConsoleInput', array(), array(), '', false);$/;"	v
mapFileToCase	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^	public function mapFileToCase($file, $category, $throwOnMissingFile = true) {$/;"	f
mapFileToCategory	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^	public function mapFileToCategory($file) {$/;"	f
out	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$out = $this->getMock('ConsoleOutput', array(), array(), '', false);$/;"	v
return	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$return = $this->Shell->mapFileToCase('lib\/Cake\/Core\/App.php', 'core');$/;"	v
return	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$return = $this->Shell->mapFileToCase('lib\/Cake\/Some\/Deeply\/Nested\/Structure.php', 'core', false);$/;"	v
return	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$return = $this->Shell->mapFileToCase('lib\/Cake\/Test\/Case\/BasicsTest.php', 'core');$/;"	v
return	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$return = $this->Shell->mapFileToCase('lib\/Cake\/Test\/Case\/Core\/AppTest.php', 'core');$/;"	v
return	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$return = $this->Shell->mapFileToCase('lib\/Cake\/Test\/Case\/Some\/Deeply\/Nested\/StructureTest.php', 'core', false);$/;"	v
return	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$return = $this->Shell->mapFileToCase('lib\/Cake\/basics.php', 'core');$/;"	v
return	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$return = $this->Shell->mapFileToCase(APP . 'Controller\/ExampleController.php', 'app', false);$/;"	v
return	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$return = $this->Shell->mapFileToCase(APP . 'My\/File\/Is\/Here.php', 'app', false);$/;"	v
return	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$return = $this->Shell->mapFileToCase(APP . 'Plugin\/awesome\/Controller\/ExampleController.php', 'awesome', false);$/;"	v
return	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$return = $this->Shell->mapFileToCase(APP . 'Plugin\/awesome\/Test\/Case\/Controller\/ExampleControllerTest.php', 'awesome', false);$/;"	v
return	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$return = $this->Shell->mapFileToCase(APP . 'Test\/Case\/Controller\/ExampleControllerTest.php', 'app', false);$/;"	v
return	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$return = $this->Shell->mapFileToCase(APP . 'Test\/Case\/My\/File\/Is\/HereTest.php', 'app', false);$/;"	v
return	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$return = $this->Shell->mapFileToCase(APP . 'Test\/Case\/NotATestFile.php', false, false);$/;"	v
return	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$return = $this->Shell->mapFileToCase(APP . 'Test\/Fixture\/SomeTest.php', false, false);$/;"	v
return	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$return = $this->Shell->mapFileToCase(dirname(CAKE) . 'plugins\/awesome\/Controller\/ExampleController.php', 'awesome', false);$/;"	v
return	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$return = $this->Shell->mapFileToCase(dirname(CAKE) . 'plugins\/awesome\/Test\/Case\/Controller\/ExampleControllerTest.php', 'awesome', false);$/;"	v
return	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$return = $this->Shell->mapFileToCategory('lib\/Cake\/Core\/App.php');$/;"	v
return	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$return = $this->Shell->mapFileToCategory('lib\/Cake\/Some\/Deeply\/Nested\/Structure.php');$/;"	v
return	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$return = $this->Shell->mapFileToCategory('lib\/Cake\/Test\/Case\/BasicsTest.php');$/;"	v
return	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$return = $this->Shell->mapFileToCategory('lib\/Cake\/Test\/Case\/Some\/Deeply\/Nested\/StructureTest.php');$/;"	v
return	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$return = $this->Shell->mapFileToCategory('lib\/Cake\/basics.php');$/;"	v
return	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$return = $this->Shell->mapFileToCategory(APP . 'Controller\/ExampleController.php');$/;"	v
return	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$return = $this->Shell->mapFileToCategory(APP . 'My\/File\/Is\/Here.php');$/;"	v
return	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$return = $this->Shell->mapFileToCategory(APP . 'Plugin\/awesome\/Controller\/ExampleController.php');$/;"	v
return	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$return = $this->Shell->mapFileToCategory(APP . 'Plugin\/awesome\/Test\/Case\/Controller\/ExampleControllerTest.php');$/;"	v
return	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$return = $this->Shell->mapFileToCategory(APP . 'Test\/Case\/Controller\/ExampleControllerTest.php');$/;"	v
return	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$return = $this->Shell->mapFileToCategory(APP . 'Test\/Case\/My\/File\/Is\/HereTest.php');$/;"	v
return	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$return = $this->Shell->mapFileToCategory(APP . 'Test\/Case\/NotATestFile.php');$/;"	v
return	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$return = $this->Shell->mapFileToCategory(APP . 'Test\/Fixture\/SomeTest.php');$/;"	v
return	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$return = $this->Shell->mapFileToCategory(dirname(CAKE) . 'plugins\/awesome\/Controller\/ExampleController.php');$/;"	v
return	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^		$return = $this->Shell->mapFileToCategory(dirname(CAKE) . 'plugins\/awesome\/Test\/Case\/Controller\/ExampleControllerTest.php');$/;"	v
setUp	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^	public function tearDown() {$/;"	f
testAvailableCoreCategory	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^	public function testAvailableCoreCategory() {$/;"	f
testAvailableWithEmptyList	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^	public function testAvailableWithEmptyList() {$/;"	f
testMapAppFileToCase	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^	public function testMapAppFileToCase() {$/;"	f
testMapAppFileToCategory	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^	public function testMapAppFileToCategory() {$/;"	f
testMapAppTestToCase	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^	public function testMapAppTestToCase() {$/;"	f
testMapAppTestToCategory	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^	public function testMapAppTestToCategory() {$/;"	f
testMapCoreFileToCase	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^	public function testMapCoreFileToCase() {$/;"	f
testMapCoreFileToCategory	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^	public function testMapCoreFileToCategory() {$/;"	f
testMapCoreTestToCase	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^	public function testMapCoreTestToCase() {$/;"	f
testMapCoreTestToCategory	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^	public function testMapCoreTestToCategory() {$/;"	f
testMapNotTestToNothing	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^	public function testMapNotTestToNothing() {$/;"	f
testMapPluginFileToCase	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^	public function testMapPluginFileToCase() {$/;"	f
testMapPluginFileToCategory	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^	public function testMapPluginFileToCategory() {$/;"	f
testMapPluginTestToCase	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^	public function testMapPluginTestToCase() {$/;"	f
testMapPluginTestToCategory	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^	public function testMapPluginTestToCategory() {$/;"	f
testRunnerOptions	lib/Cake/Test/Case/Console/Command/TestShellTest.php	/^	public function testRunnerOptions() {$/;"	f
ConsoleErrorHandlerTest	lib/Cake/Test/Case/Console/ConsoleErrorHandlerTest.php	/^class ConsoleErrorHandlerTest extends CakeTestCase {$/;"	c
Error	lib/Cake/Test/Case/Console/ConsoleErrorHandlerTest.php	/^		$this->Error = $this->getMock('ConsoleErrorHandler', array('_stop'));$/;"	v
content	lib/Cake/Test/Case/Console/ConsoleErrorHandlerTest.php	/^		$content = "<error>Fatal Error Error:<\/error> This is a fatal error in [\/some\/file, line 275]\\n";$/;"	v
content	lib/Cake/Test/Case/Console/ConsoleErrorHandlerTest.php	/^		$content = "<error>Notice Error:<\/error> This is a notice error in [\/some\/file, line 275]\\n";$/;"	v
exception	lib/Cake/Test/Case/Console/ConsoleErrorHandlerTest.php	/^		$exception = new InternalErrorException('dont use me in cli.');$/;"	v
exception	lib/Cake/Test/Case/Console/ConsoleErrorHandlerTest.php	/^		$exception = new InvalidArgumentException('Too many parameters.');$/;"	v
exception	lib/Cake/Test/Case/Console/ConsoleErrorHandlerTest.php	/^		$exception = new MissingActionException('Missing action');$/;"	v
exception	lib/Cake/Test/Case/Console/ConsoleErrorHandlerTest.php	/^		$exception = new NotFoundException('dont use me in cli.');$/;"	v
setUp	lib/Cake/Test/Case/Console/ConsoleErrorHandlerTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Console/ConsoleErrorHandlerTest.php	/^	public function tearDown() {$/;"	f
testCakeErrors	lib/Cake/Test/Case/Console/ConsoleErrorHandlerTest.php	/^	public function testCakeErrors() {$/;"	f
testError404Exception	lib/Cake/Test/Case/Console/ConsoleErrorHandlerTest.php	/^	public function testError404Exception() {$/;"	f
testError500Exception	lib/Cake/Test/Case/Console/ConsoleErrorHandlerTest.php	/^	public function testError500Exception() {$/;"	f
testHandleError	lib/Cake/Test/Case/Console/ConsoleErrorHandlerTest.php	/^	public function testHandleError() {$/;"	f
testHandleFatalError	lib/Cake/Test/Case/Console/ConsoleErrorHandlerTest.php	/^	public function testHandleFatalError() {$/;"	f
testNonCakeExceptions	lib/Cake/Test/Case/Console/ConsoleErrorHandlerTest.php	/^	public function testNonCakeExceptions() {$/;"	f
ConsoleOptionParserTest	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^class ConsoleOptionParserTest extends CakeTestCase {$/;"	c
args	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$args = $parser->arguments();$/;"	v
commands	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$commands = $parser->subcommands();$/;"	v
expected	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$expected = <<<TEXT$/;"	v
expected	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$expected = array('file' => true, 'test' => true, 'output' => true, 'help' => false);$/;"	v
expected	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$expected = array('mark', 'samurai', 'sword');$/;"	v
expected	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$expected = array('name' => '-foo', 'age' => 'old', 'help' => false);$/;"	v
expected	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$expected = array('name' => 'mark', 'help' => false);$/;"	v
expected	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$expected = array('one', 'two');$/;"	v
expected	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$expected = array('one', 'two', 0, 'after', 'zero');$/;"	v
expected	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$expected = array('test' => 'value', 'table' => true, 'connection' => 'postgres', 'help' => false);$/;"	v
expected	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$expected = array(array($/;"	v
expected	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$expected = array(array('table' => 'posts', 'no-commit' => true, 'help' => false), array('arg1', 'arg2'));$/;"	v
expected	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$expected = array(array('test' => false, 'help' => false), array('value'));$/;"	v
expected	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$expected = array(array('test' => true, 'help' => false), array('value'));$/;"	v
options	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$options = $parser->options();$/;"	v
parser	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$parser = ConsoleOptionParser::buildFromArray($spec);$/;"	v
parser	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$parser = ConsoleOptionParser::create('factory', false);$/;"	v
parser	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$parser = new ConsoleOptionParser('CommandLine');$/;"	v
parser	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$parser = new ConsoleOptionParser('mycommand', false);$/;"	v
parser	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$parser = new ConsoleOptionParser('something', false);$/;"	v
parser	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$parser = new ConsoleOptionParser('test', false);$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->addArgument('name', array('help' => 'An argument'));$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->addArguments(array($/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->addOption('test');$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->addOptions(array($/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->addSubcommand('initdb', array($/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->addSubcommands(array($/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->arguments();$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->description('A test');$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->description(array('A test', 'something'));$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->epilog('A test');$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->epilog(array('A test', 'something'));$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->help('method');$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->options();$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->parse($expected);$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->parse(array('--count', '0'));$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->parse(array('--help'));$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->parse(array('--name', '-foo', '--age', 'old'));$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->parse(array('--name', 'jimmy'));$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->parse(array('--name', 'mark'));$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->parse(array('--secondary', '--fourth', '4', 'c'), 'sub');$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->parse(array('--table', 'posts', '--no-commit', 'arg1', 'arg2'));$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->parse(array('--test'));$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->parse(array('--test', 'value'));$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->parse(array('--test', 'value', '-t', '--connection', 'postgres'));$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->parse(array('--test=value'));$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->parse(array('-o', '-t', '-f'));$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->parse(array('-otf'));$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->parse(array('-t', 'value'));$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->parse(array('jose', 'coder'));$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->parse(array('mark', 'samurai', 'sword'));$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->parse(array('one', 'two', 'three'));$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->parse(array('value'));$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->parse(array());$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$result = $parser->subcommands();$/;"	v
spec	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$spec = array($/;"	v
subParser	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^		$subParser = new ConsoleOptionParser('method', false);$/;"	v
testAddArgumentObject	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testAddArgumentObject() {$/;"	f
testAddArgumentOutOfOrder	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testAddArgumentOutOfOrder() {$/;"	f
testAddArguments	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testAddArguments() {$/;"	f
testAddOptionBoolean	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testAddOptionBoolean() {$/;"	f
testAddOptionDefault	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testAddOptionDefault() {$/;"	f
testAddOptionLong	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testAddOptionLong() {$/;"	f
testAddOptionLongEquals	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testAddOptionLongEquals() {$/;"	f
testAddOptionMultipleShort	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testAddOptionMultipleShort() {$/;"	f
testAddOptionObject	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testAddOptionObject() {$/;"	f
testAddOptionReturnSelf	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testAddOptionReturnSelf() {$/;"	f
testAddOptionShort	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testAddOptionShort() {$/;"	f
testAddOptionShortOneLetter	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testAddOptionShortOneLetter() {$/;"	f
testAddOptionZero	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testAddOptionZero() {$/;"	f
testAddOptions	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testAddOptions() {$/;"	f
testAddSubcommandObject	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testAddSubcommandObject() {$/;"	f
testAddSubcommands	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testAddSubcommands() {$/;"	f
testBuildFromArray	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testBuildFromArray() {$/;"	f
testCommandInflection	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testCommandInflection() {$/;"	f
testCreateFactory	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testCreateFactory() {$/;"	f
testDescription	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testDescription() {$/;"	f
testEpilog	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testEpilog() {$/;"	f
testHelpNoExceptionWhenGettingHelp	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testHelpNoExceptionWhenGettingHelp() {$/;"	f
testHelpSubcommandHelp	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testHelpSubcommandHelp() {$/;"	f
testMultipleOptions	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testMultipleOptions() {$/;"	f
testOptionThatDoesNotExist	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testOptionThatDoesNotExist() {$/;"	f
testOptionWithBooleanParam	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testOptionWithBooleanParam() {$/;"	f
testOptionWithChoices	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testOptionWithChoices() {$/;"	f
testOptionWithValueStartingWithMinus	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testOptionWithValueStartingWithMinus() {$/;"	f
testParseArgumentTooMany	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testParseArgumentTooMany() {$/;"	f
testParseArgumentZero	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testParseArgumentZero() {$/;"	f
testParsingWithSubParser	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testParsingWithSubParser() {$/;"	f
testPositionalArgNotEnough	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testPositionalArgNotEnough() {$/;"	f
testPositionalArgOverwrite	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testPositionalArgOverwrite() {$/;"	f
testPositionalArgWithChoices	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testPositionalArgWithChoices() {$/;"	f
testPositionalArgument	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testPositionalArgument() {$/;"	f
testShortOptionThatDoesNotExist	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testShortOptionThatDoesNotExist() {$/;"	f
testSubcommand	lib/Cake/Test/Case/Console/ConsoleOptionParserTest.php	/^	public function testSubcommand() {$/;"	f
ConsoleOutputTest	lib/Cake/Test/Case/Console/ConsoleOutputTest.php	/^class ConsoleOutputTest extends CakeTestCase {$/;"	c
expected	lib/Cake/Test/Case/Console/ConsoleOutputTest.php	/^		$expected = array('text' => 'red', 'background' => 'black');$/;"	v
expected	lib/Cake/Test/Case/Console/ConsoleOutputTest.php	/^		$expected = array('text' => 'red', 'underline' => true);$/;"	v
output	lib/Cake/Test/Case/Console/ConsoleOutputTest.php	/^		$this->output = $this->getMock('ConsoleOutput', array('_write'));$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOutputTest.php	/^		$result = $this->output->styles('error');$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOutputTest.php	/^		$result = $this->output->styles('test');$/;"	v
result	lib/Cake/Test/Case/Console/ConsoleOutputTest.php	/^		$result = $this->output->styles();$/;"	v
setUp	lib/Cake/Test/Case/Console/ConsoleOutputTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Console/ConsoleOutputTest.php	/^	public function tearDown() {$/;"	f
testFormattingCustom	lib/Cake/Test/Case/Console/ConsoleOutputTest.php	/^	public function testFormattingCustom() {$/;"	f
testFormattingMissingStyleName	lib/Cake/Test/Case/Console/ConsoleOutputTest.php	/^	public function testFormattingMissingStyleName() {$/;"	f
testFormattingMultipleSameTags	lib/Cake/Test/Case/Console/ConsoleOutputTest.php	/^	public function testFormattingMultipleSameTags() {$/;"	f
testFormattingMultipleStylesName	lib/Cake/Test/Case/Console/ConsoleOutputTest.php	/^	public function testFormattingMultipleStylesName() {$/;"	f
testFormattingNotEatingTags	lib/Cake/Test/Case/Console/ConsoleOutputTest.php	/^	public function testFormattingNotEatingTags() {$/;"	f
testFormattingSimple	lib/Cake/Test/Case/Console/ConsoleOutputTest.php	/^	public function testFormattingSimple() {$/;"	f
testOutputAsPlain	lib/Cake/Test/Case/Console/ConsoleOutputTest.php	/^	public function testOutputAsPlain() {$/;"	f
testOutputAsPlainSelectiveTagRemoval	lib/Cake/Test/Case/Console/ConsoleOutputTest.php	/^	public function testOutputAsPlainSelectiveTagRemoval() {$/;"	f
testOutputAsRaw	lib/Cake/Test/Case/Console/ConsoleOutputTest.php	/^	public function testOutputAsRaw() {$/;"	f
testStylesAdding	lib/Cake/Test/Case/Console/ConsoleOutputTest.php	/^	public function testStylesAdding() {$/;"	f
testStylesGet	lib/Cake/Test/Case/Console/ConsoleOutputTest.php	/^	public function testStylesGet() {$/;"	f
testWriteArray	lib/Cake/Test/Case/Console/ConsoleOutputTest.php	/^	public function testWriteArray() {$/;"	f
testWriteMultipleNewLines	lib/Cake/Test/Case/Console/ConsoleOutputTest.php	/^	public function testWriteMultipleNewLines() {$/;"	f
testWriteNewLine	lib/Cake/Test/Case/Console/ConsoleOutputTest.php	/^	public function testWriteNewLine() {$/;"	f
testWriteNoNewLine	lib/Cake/Test/Case/Console/ConsoleOutputTest.php	/^	public function testWriteNoNewLine() {$/;"	f
HelpFormatterTest	lib/Cake/Test/Case/Console/HelpFormatterTest.php	/^class HelpFormatterTest extends CakeTestCase {$/;"	c
expected	lib/Cake/Test/Case/Console/HelpFormatterTest.php	/^		$expected = 'cake mycommand [-h] [arguments]';$/;"	v
expected	lib/Cake/Test/Case/Console/HelpFormatterTest.php	/^		$expected = 'cake mycommand [options] <model> [<other_longer>]';$/;"	v
expected	lib/Cake/Test/Case/Console/HelpFormatterTest.php	/^		$expected = <<<TEXT$/;"	v
formatter	lib/Cake/Test/Case/Console/HelpFormatterTest.php	/^		$formatter = new HelpFormatter($parser);$/;"	v
parser	lib/Cake/Test/Case/Console/HelpFormatterTest.php	/^		$parser = new ConsoleOptionParser('mycommand', false);$/;"	v
parser	lib/Cake/Test/Case/Console/HelpFormatterTest.php	/^		$parser = new ConsoleOptionParser('test', false);$/;"	v
result	lib/Cake/Test/Case/Console/HelpFormatterTest.php	/^		$result = $formatter->text();$/;"	v
result	lib/Cake/Test/Case/Console/HelpFormatterTest.php	/^		$result = $formatter->text(30);$/;"	v
result	lib/Cake/Test/Case/Console/HelpFormatterTest.php	/^		$result = $formatter->xml();$/;"	v
result	lib/Cake/Test/Case/Console/HelpFormatterTest.php	/^		$result = $formatter->xml(false);$/;"	v
testHelpDescriptionAndEpilog	lib/Cake/Test/Case/Console/HelpFormatterTest.php	/^	public function testHelpDescriptionAndEpilog() {$/;"	f
testHelpSubcommand	lib/Cake/Test/Case/Console/HelpFormatterTest.php	/^	public function testHelpSubcommand() {$/;"	f
testHelpWithChoices	lib/Cake/Test/Case/Console/HelpFormatterTest.php	/^	public function testHelpWithChoices() {$/;"	f
testHelpWithLotsOfArguments	lib/Cake/Test/Case/Console/HelpFormatterTest.php	/^	public function testHelpWithLotsOfArguments() {$/;"	f
testHelpWithLotsOfOptions	lib/Cake/Test/Case/Console/HelpFormatterTest.php	/^	public function testHelpWithLotsOfOptions() {$/;"	f
testHelpWithOptions	lib/Cake/Test/Case/Console/HelpFormatterTest.php	/^	public function testHelpWithOptions() {$/;"	f
testHelpWithOptionsAndArguments	lib/Cake/Test/Case/Console/HelpFormatterTest.php	/^	public function testHelpWithOptionsAndArguments() {$/;"	f
testWidthFormatting	lib/Cake/Test/Case/Console/HelpFormatterTest.php	/^	public function testWidthFormatting() {$/;"	f
testXmlHelpAsObject	lib/Cake/Test/Case/Console/HelpFormatterTest.php	/^	public function testXmlHelpAsObject() {$/;"	f
testXmlHelpDescriptionAndEpilog	lib/Cake/Test/Case/Console/HelpFormatterTest.php	/^	public function testXmlHelpDescriptionAndEpilog() {$/;"	f
testXmlHelpSubcommand	lib/Cake/Test/Case/Console/HelpFormatterTest.php	/^	public function testXmlHelpSubcommand() {$/;"	f
testXmlHelpWithChoices	lib/Cake/Test/Case/Console/HelpFormatterTest.php	/^	public function testXmlHelpWithChoices() {$/;"	f
testXmlHelpWithOptions	lib/Cake/Test/Case/Console/HelpFormatterTest.php	/^	public function testXmlHelpWithOptions() {$/;"	f
testXmlHelpWithOptionsAndArguments	lib/Cake/Test/Case/Console/HelpFormatterTest.php	/^	public function testXmlHelpWithOptionsAndArguments() {$/;"	f
Dispatcher	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^		$Dispatcher = new TestShellDispatcher();$/;"	v
Shell	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^		$Shell = $this->getMock('Object', $methods);$/;"	v
Shell	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^		$Shell = $this->getMock('Shell');$/;"	v
ShellDispatcherTest	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^class ShellDispatcherTest extends CakeTestCase {$/;"	c
TestShell	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^	public $TestShell;$/;"	v
TestShellDispatcher	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^class TestShellDispatcher extends ShellDispatcher {$/;"	c
_getShell	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^	protected function _getShell($shell) {$/;"	f
_initEnvironment	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^	protected function _initEnvironment() {$/;"	f
_stop	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^	protected function _stop($status = 0) {$/;"	f
clear	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^	public function clear() {$/;"	f
expected	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^			$expected = array($/;"	v
expected	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^		$expected = array($/;"	v
getShell	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^	public function getShell($shell) {$/;"	f
methods	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^		$methods = get_class_methods('Object');$/;"	v
params	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^			$params = array($/;"	v
params	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^		$params = array($/;"	v
params	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^		$params = array('cake.php');$/;"	v
params	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^	public $params = array();$/;"	v
result	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^		$result = $Dispatcher->dispatch();$/;"	v
result	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^		$result = $Dispatcher->getShell('TestPlugin.example');$/;"	v
result	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^		$result = $Dispatcher->getShell('sample');$/;"	v
result	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^		$result = $Dispatcher->getShell('test_plugin.example');$/;"	v
setUp	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^	public function setUp() {$/;"	f
stopped	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^		$this->stopped = 'Stopped with status: ' . $status;$/;"	v
stopped	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^	public $stopped = null;$/;"	v
tearDown	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^	public function tearDown() {$/;"	f
testDispatchNotAShellWithMain	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^	public function testDispatchNotAShellWithMain() {$/;"	f
testDispatchNotAShellWithoutMain	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^	public function testDispatchNotAShellWithoutMain() {$/;"	f
testDispatchShellWithMain	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^	public function testDispatchShellWithMain() {$/;"	f
testDispatchShellWithoutMain	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^	public function testDispatchShellWithoutMain() {$/;"	f
testGetShell	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^	public function testGetShell() {$/;"	f
testParseParams	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^	public function testParseParams() {$/;"	f
testShiftArgs	lib/Cake/Test/Case/Console/ShellDispatcherTest.php	/^	public function testShiftArgs() {$/;"	f
Folder	lib/Cake/Test/Case/Console/ShellTest.php	/^			$Folder = new Folder(TMP . 'shell_test');$/;"	v
Mock	lib/Cake/Test/Case/Console/ShellTest.php	/^		$Mock = $this->getMock('Shell', array('hit_me', 'startup'), array(), '', false);$/;"	v
Mock	lib/Cake/Test/Case/Console/ShellTest.php	/^		$Mock = $this->getMock('Shell', array('main', 'startup'), array(), '', false);$/;"	v
Mock	lib/Cake/Test/Case/Console/ShellTest.php	/^		$Mock = $this->getMock('Shell', array('startup', 'getOptionParser', 'out'), array(), '', false);$/;"	v
Parser	lib/Cake/Test/Case/Console/ShellTest.php	/^		$Parser = $this->getMock('ConsoleOptionParser', array(), array(), '', false);$/;"	v
Shell	lib/Cake/Test/Case/Console/ShellTest.php	/^		$Shell = $this->getMock('Shell', array('getOptionParser', 'out', 'startup', '_welcome'), array(), '', false);$/;"	v
Shell	lib/Cake/Test/Case/Console/ShellTest.php	/^		$Shell = $this->getMock('Shell', array('hasTask', 'startup'), array(), '', false);$/;"	v
Shell	lib/Cake/Test/Case/Console/ShellTest.php	/^		$Shell = new TestMergeShell();$/;"	v
Shell	lib/Cake/Test/Case/Console/ShellTest.php	/^		$this->Shell = $this->getMock('ShellTestShell', array('_useLogger'), array($output, $error, $in));$/;"	v
Shell	lib/Cake/Test/Case/Console/ShellTest.php	/^		$this->Shell = new ShellTestShell($output, $error, $in);$/;"	v
ShellTest	lib/Cake/Test/Case/Console/ShellTest.php	/^class ShellTest extends CakeTestCase {$/;"	c
ShellTestShell	lib/Cake/Test/Case/Console/ShellTest.php	/^class ShellTestShell extends Shell {$/;"	c
TestAppleTask	lib/Cake/Test/Case/Console/ShellTest.php	/^class TestAppleTask extends Shell {$/;"	c
TestBananaTask	lib/Cake/Test/Case/Console/ShellTest.php	/^class TestBananaTask extends Shell {$/;"	c
TestMergeShell	lib/Cake/Test/Case/Console/ShellTest.php	/^class TestMergeShell extends Shell {$/;"	c
_secret	lib/Cake/Test/Case/Console/ShellTest.php	/^	protected function _secret() {$/;"	f
_stop	lib/Cake/Test/Case/Console/ShellTest.php	/^	protected function _stop($status = 0) {$/;"	f
bar	lib/Cake/Test/Case/Console/ShellTest.php	/^		$bar = '---------------------------------------------------------------';$/;"	v
contents	lib/Cake/Test/Case/Console/ShellTest.php	/^		$contents = "<?php\\necho 'another test';\\n\\$te = 'st';\\n";$/;"	v
contents	lib/Cake/Test/Case/Console/ShellTest.php	/^		$contents = "<?php{$eol}echo 'test';${eol}\\$te = 'st';{$eol}";$/;"	v
contents	lib/Cake/Test/Case/Console/ShellTest.php	/^		$contents = "<?php{$eol}echo 'yet another test';{$eol}\\$te = 'st';{$eol}";$/;"	v
contents	lib/Cake/Test/Case/Console/ShellTest.php	/^		$contents = 'more new contents';$/;"	v
contents	lib/Cake/Test/Case/Console/ShellTest.php	/^		$contents = 'new contents';$/;"	v
contents	lib/Cake/Test/Case/Console/ShellTest.php	/^		$contents = file_get_contents(LOGS . 'error.log');$/;"	v
do_something	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function do_something() {$/;"	f
eol	lib/Cake/Test/Case/Console/ShellTest.php	/^		$eol = PHP_EOL;$/;"	v
error	lib/Cake/Test/Case/Console/ShellTest.php	/^		$error = $this->getMock('ConsoleOutput', array(), array(), '', false);$/;"	v
expected	lib/Cake/Test/Case/Console/ShellTest.php	/^		$expected = 'TestApple';$/;"	v
expected	lib/Cake/Test/Case/Console/ShellTest.php	/^		$expected = 'tmp' . DS . 'ab';$/;"	v
expected	lib/Cake/Test/Case/Console/ShellTest.php	/^		$expected = <<<TEXT$/;"	v
expected	lib/Cake/Test/Case/Console/ShellTest.php	/^		$expected = DS . 'tmp' . DS . 'ab' . DS . 'cd';$/;"	v
expected	lib/Cake/Test/Case/Console/ShellTest.php	/^		$expected = DS . basename(APP) . DS . 'index.php';$/;"	v
expected	lib/Cake/Test/Case/Console/ShellTest.php	/^		$expected = DS . basename(APP) . DS;$/;"	v
expected	lib/Cake/Test/Case/Console/ShellTest.php	/^		$expected = array('DbConfig' => null, 'Fixture' => null, 'DbConfig' => array('one', 'two'));$/;"	v
expected	lib/Cake/Test/Case/Console/ShellTest.php	/^		$expected = array('Fixture' => null, 'DbConfig' => array('one', 'two'));$/;"	v
file	lib/Cake/Test/Case/Console/ShellTest.php	/^		$file = $path . DS . 'file1.php';$/;"	v
file	lib/Cake/Test/Case/Console/ShellTest.php	/^		$file = $path . DS . 'no_perms';$/;"	v
fixtures	lib/Cake/Test/Case/Console/ShellTest.php	/^	public $fixtures = array($/;"	v
in	lib/Cake/Test/Case/Console/ShellTest.php	/^		$in = $this->getMock('ConsoleInput', array(), array(), '', false);$/;"	v
log_something	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function log_something() {$/;"	f
mergeVars	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function mergeVars($properties, $class, $normalize = true) {$/;"	f
mock	lib/Cake/Test/Case/Console/ShellTest.php	/^		$mock = $this->getMock('ConsoleLog', array('write'), array($/;"	v
name	lib/Cake/Test/Case/Console/ShellTest.php	/^	public $name = 'ShellTestShell';$/;"	v
newLine	lib/Cake/Test/Case/Console/ShellTest.php	/^			$newLine = "\\r\\n";$/;"	v
newLine	lib/Cake/Test/Case/Console/ShellTest.php	/^		$newLine = "\\n";$/;"	v
no_access	lib/Cake/Test/Case/Console/ShellTest.php	/^	protected function no_access() {$/;"	f
output	lib/Cake/Test/Case/Console/ShellTest.php	/^		$output = $this->getMock('ConsoleOutput', array(), array(), '', false);$/;"	v
parser	lib/Cake/Test/Case/Console/ShellTest.php	/^		$parser = $this->Shell->getOptionParser();$/;"	v
path	lib/Cake/Test/Case/Console/ShellTest.php	/^		$path = $expected = DS . 'tmp' . DS . 'ab' . DS . 'cd' . DS;$/;"	v
path	lib/Cake/Test/Case/Console/ShellTest.php	/^		$path = $expected = DS . 'tmp' . DS . 'ab' . DS . 'cd';$/;"	v
path	lib/Cake/Test/Case/Console/ShellTest.php	/^		$path = $expected = DS . 'tmp' . DS . 'ab' . DS . 'index.php';$/;"	v
path	lib/Cake/Test/Case/Console/ShellTest.php	/^		$path = 'tmp' . DS . 'ab';$/;"	v
path	lib/Cake/Test/Case/Console/ShellTest.php	/^		$path = APP . 'index.php';$/;"	v
path	lib/Cake/Test/Case/Console/ShellTest.php	/^		$path = APP;$/;"	v
path	lib/Cake/Test/Case/Console/ShellTest.php	/^		$path = DS . 'tmp' . DS . 'ab' . DS . DS . 'cd';$/;"	v
path	lib/Cake/Test/Case/Console/ShellTest.php	/^		$path = TMP . 'shell_test';$/;"	v
result	lib/Cake/Test/Case/Console/ShellTest.php	/^		$result = $Mock->runCommand('hit_me', array());$/;"	v
result	lib/Cake/Test/Case/Console/ShellTest.php	/^		$result = $Mock->runCommand('idontexist', array());$/;"	v
result	lib/Cake/Test/Case/Console/ShellTest.php	/^		$result = $Mock->runCommand(null, array());$/;"	v
result	lib/Cake/Test/Case/Console/ShellTest.php	/^		$result = $this->Shell->TestApple;$/;"	v
result	lib/Cake/Test/Case/Console/ShellTest.php	/^		$result = $this->Shell->createFile($file, $contents);$/;"	v
result	lib/Cake/Test/Case/Console/ShellTest.php	/^		$result = $this->Shell->in('Just a test?', 'y', 'y');$/;"	v
result	lib/Cake/Test/Case/Console/ShellTest.php	/^		$result = $this->Shell->in('Just a test?', 'y,n', 'n');$/;"	v
result	lib/Cake/Test/Case/Console/ShellTest.php	/^		$result = $this->Shell->in('Just a test?', 'y\/n', 'n');$/;"	v
result	lib/Cake/Test/Case/Console/ShellTest.php	/^		$result = $this->Shell->in('Just a test?', array('y', 'n'), 'n');$/;"	v
result	lib/Cake/Test/Case/Console/ShellTest.php	/^		$result = $this->Shell->in('Just a test?', array(0, 1, 2), '0');$/;"	v
result	lib/Cake/Test/Case/Console/ShellTest.php	/^		$result = $this->Shell->wrapText($text, 33);$/;"	v
result	lib/Cake/Test/Case/Console/ShellTest.php	/^		$result = $this->Shell->wrapText($text, array('indent' => '  ', 'width' => 33));$/;"	v
setUp	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function setUp() {$/;"	f
stopped	lib/Cake/Test/Case/Console/ShellTest.php	/^		$this->stopped = $status;$/;"	v
stopped	lib/Cake/Test/Case/Console/ShellTest.php	/^	public $stopped;$/;"	v
task	lib/Cake/Test/Case/Console/ShellTest.php	/^		$task = $this->getMock('Shell', array('execute', 'runCommand'), array(), '', false);$/;"	v
tasks	lib/Cake/Test/Case/Console/ShellTest.php	/^	public $tasks = array('DbConfig', 'Fixture');$/;"	v
testConstruct	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testConstruct() {$/;"	f
testCreateFileInteractive	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testCreateFileInteractive() {$/;"	f
testCreateFileNoPermissions	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testCreateFileNoPermissions() {$/;"	f
testCreateFileNonInteractive	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testCreateFileNonInteractive() {$/;"	f
testErr	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testErr() {$/;"	f
testError	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testError() {$/;"	f
testFileAndConsoleLogging	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testFileAndConsoleLogging() {$/;"	f
testGetOptionParser	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testGetOptionParser() {$/;"	f
testHasMethod	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testHasMethod() {$/;"	f
testHasTask	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testHasTask() {$/;"	f
testHr	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testHr() {$/;"	f
testIn	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testIn() {$/;"	f
testInNonInteractive	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testInNonInteractive() {$/;"	f
testInitialize	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testInitialize() {$/;"	f
testLoadModel	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testLoadModel() {$/;"	f
testLoadTasks	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testLoadTasks() {$/;"	f
testMagicGetArgAndParamReferences	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testMagicGetArgAndParamReferences() {$/;"	f
testMergeVars	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testMergeVars() {$/;"	f
testMessage	lib/Cake/Test/Case/Console/ShellTest.php	/^	public $testMessage = 'all your base are belong to us';$/;"	v
testNl	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testNl() {$/;"	f
testOut	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testOut() {$/;"	f
testProtectedUseLogger	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testProtectedUseLogger() {$/;"	f
testQuietLog	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testQuietLog() {$/;"	f
testQuietOutput	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testQuietOutput() {$/;"	f
testRunCommandBaseclassMethod	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testRunCommandBaseclassMethod() {$/;"	f
testRunCommandHittingTask	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testRunCommandHittingTask() {$/;"	f
testRunCommandMain	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testRunCommandMain() {$/;"	f
testRunCommandMissingMethod	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testRunCommandMissingMethod() {$/;"	f
testRunCommandTriggeringHelp	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testRunCommandTriggeringHelp() {$/;"	f
testRunCommandWithMethod	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testRunCommandWithMethod() {$/;"	f
testShellNaming	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testShellNaming() {$/;"	f
testShortPath	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testShortPath() {$/;"	f
testVerboseOutput	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testVerboseOutput() {$/;"	f
testWrapText	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function testWrapText() {$/;"	f
text	lib/Cake/Test/Case/Console/ShellTest.php	/^		$text = 'This is the song that never ends. This is the song that never ends. This is the song that never ends.';$/;"	v
useLogger	lib/Cake/Test/Case/Console/ShellTest.php	/^	public function useLogger($enable = true) {$/;"	f
uses	lib/Cake/Test/Case/Console/ShellTest.php	/^	public $uses = array('Comment');$/;"	v
DbConfigAliasedTask	lib/Cake/Test/Case/Console/TaskCollectionTest.php	/^class DbConfigAliasedTask extends Shell {$/;"	c
TaskCollectionTest	lib/Cake/Test/Case/Console/TaskCollectionTest.php	/^class TaskCollectionTest extends CakeTestCase {$/;"	c
Tasks	lib/Cake/Test/Case/Console/TaskCollectionTest.php	/^		$this->Tasks = new TaskCollection($shell, $dispatcher);$/;"	v
dispatcher	lib/Cake/Test/Case/Console/TaskCollectionTest.php	/^		$dispatcher = $this->getMock('ShellDispatcher', array(), array(), '', false);$/;"	v
result	lib/Cake/Test/Case/Console/TaskCollectionTest.php	/^		$result = $this->Tasks->load('DbConfig');$/;"	v
result	lib/Cake/Test/Case/Console/TaskCollectionTest.php	/^		$result = $this->Tasks->load('DbConfig', array('className' => 'DbConfigAliased'));$/;"	v
result	lib/Cake/Test/Case/Console/TaskCollectionTest.php	/^		$result = $this->Tasks->load('DbConfig', array('enabled' => false));$/;"	v
result	lib/Cake/Test/Case/Console/TaskCollectionTest.php	/^		$result = $this->Tasks->load('SomeTask', array('className' => 'TestPlugin.OtherTask'));$/;"	v
result	lib/Cake/Test/Case/Console/TaskCollectionTest.php	/^		$result = $this->Tasks->load('TestPlugin.OtherTask');$/;"	v
result	lib/Cake/Test/Case/Console/TaskCollectionTest.php	/^		$result = $this->Tasks->loaded();$/;"	v
setUp	lib/Cake/Test/Case/Console/TaskCollectionTest.php	/^	public function setUp() {$/;"	f
shell	lib/Cake/Test/Case/Console/TaskCollectionTest.php	/^		$shell = $this->getMock('Shell', array(), array(), '', false);$/;"	v
tearDown	lib/Cake/Test/Case/Console/TaskCollectionTest.php	/^	public function tearDown() {$/;"	f
testLoad	lib/Cake/Test/Case/Console/TaskCollectionTest.php	/^	public function testLoad() {$/;"	f
testLoadMissingTask	lib/Cake/Test/Case/Console/TaskCollectionTest.php	/^	public function testLoadMissingTask() {$/;"	f
testLoadPluginTask	lib/Cake/Test/Case/Console/TaskCollectionTest.php	/^	public function testLoadPluginTask() {$/;"	f
testLoadWithAlias	lib/Cake/Test/Case/Console/TaskCollectionTest.php	/^	public function testLoadWithAlias() {$/;"	f
testLoadWithEnableFalse	lib/Cake/Test/Case/Console/TaskCollectionTest.php	/^	public function testLoadWithEnableFalse() {$/;"	f
testUnload	lib/Cake/Test/Case/Console/TaskCollectionTest.php	/^	public function testUnload() {$/;"	f
Acl	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^		$this->Acl = new AclComponent($Collection);$/;"	v
AclNodeTwoTestBase	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^class AclNodeTwoTestBase extends AclNode {$/;"	c
Aco	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^		$this->Aco = new AcoTwoTest();$/;"	v
AcoTwoTest	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^class AcoTwoTest extends AclNodeTwoTestBase {$/;"	c
Aro	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^		$this->Aro = new AroTwoTest();$/;"	v
AroTwoTest	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^class AroTwoTest extends AclNodeTwoTestBase {$/;"	c
Collection	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^		$Collection = new ComponentCollection();$/;"	v
DbAclTest	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^class DbAclTest extends CakeTestCase {$/;"	c
DbAclTwoTest	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^class DbAclTwoTest extends DbAcl {$/;"	c
Permission	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^		$this->Permission = $this->Aro->Permission;$/;"	v
PermissionTwoTest	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^class PermissionTwoTest extends Permission {$/;"	c
__construct	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	public function __construct() {$/;"	f
_debug	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	protected function _debug($printTreesToo = false) {$/;"	f
_pad	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	protected function _pad($string = '', $len = 14) {$/;"	f
acos	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^		$acos = $this->Acl->Aco->find('list', array('order' => 'lft'));$/;"	v
actsAs	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	public $actsAs = null;$/;"	v
aros	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^		$aros = $this->Acl->Aro->find('list', array('order' => 'lft'));$/;"	v
belongsTo	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	public $belongsTo = array('AroTwoTest' => array('foreignKey' => 'aro_id'), 'AcoTwoTest' => array('foreignKey' => 'aco_id'));$/;"	v
cacheQueries	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	public $cacheQueries = false;$/;"	v
cacheSources	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	public $cacheSources = false;$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^		$expected = '-1';$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^		$expected = array($/;"	v
fixtures	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	public $fixtures = array('core.aro_two', 'core.aco_two', 'core.aros_aco_two');$/;"	v
hasAndBelongsToMany	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	public $hasAndBelongsToMany = array('AcoTwoTest' => array('with' => 'PermissionTwoTest'));$/;"	v
hasAndBelongsToMany	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	public $hasAndBelongsToMany = array('AroTwoTest' => array('with' => 'PermissionTwoTest'));$/;"	v
name	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	public $name = 'AcoTwoTest';$/;"	v
name	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	public $name = 'AroTwoTest';$/;"	v
name	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	public $name = 'PermissionTwoTest';$/;"	v
parent	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^		$parent = $root[0]['AcoTwoTest']['id'];$/;"	v
parent	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^		$parent = $this->Acl->Aro->findByAlias('Peter', null, null, -1);$/;"	v
parent	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^		$parent = $this->Acl->Aro->id;$/;"	v
permissions	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^		$permissions = array_map(array(&$this, '_pad'), $permissions);$/;"	v
perms	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^				$perms = '';$/;"	v
result	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^		$result = $this->Acl->Aco->node('ROOT\/tpsReports\/view\/current');$/;"	v
result	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^		$result = $this->Acl->Aro->Permission->find('all', array('conditions' => array('AroTwoTest.alias' => 'Samir')));$/;"	v
result	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^		$result = $this->Acl->Aro->findByAlias('Subordinate', null, null, -1);$/;"	v
result	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^		$result = $this->Acl->Aro->node('root\/users\/Samir');$/;"	v
rights	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^		$rights = array('*', 'create', 'read', 'update', 'delete');$/;"	v
root	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^		$root = $this->Acl->Aco->node('ROOT');$/;"	v
row	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^			$row = array();$/;"	v
setUp	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	public function tearDown() {$/;"	f
testAclCascadingDeny	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	public function testAclCascadingDeny() {$/;"	f
testAclNodeLookup	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	public function testAclNodeLookup() {$/;"	f
testAllow	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	public function testAllow() {$/;"	f
testAllowInvalidNode	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	public function testAllowInvalidNode() {$/;"	f
testAllowInvalidPermission	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	public function testAllowInvalidPermission() {$/;"	f
testCheck	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	public function testCheck() {$/;"	f
testCheckInvalidNode	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	public function testCheckInvalidNode() {$/;"	f
testCheckInvalidPermission	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	public function testCheckInvalidPermission() {$/;"	f
testCheckMissingPermission	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	public function testCheckMissingPermission() {$/;"	f
testCreate	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	public function testCreate() {$/;"	f
testCreateWithParent	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	public function testCreateWithParent() {$/;"	f
testDeny	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	public function testDeny() {$/;"	f
testGrant	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	public function testGrant() {$/;"	f
testInherit	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	public function testInherit() {$/;"	f
testRevoke	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	public function testRevoke() {$/;"	f
useDbConfig	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	public $useDbConfig = 'test';$/;"	v
useTable	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	public $useTable = 'aco_twos';$/;"	v
useTable	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	public $useTable = 'aro_twos';$/;"	v
useTable	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^	public $useTable = 'aros_aco_twos';$/;"	v
values	lib/Cake/Test/Case/Controller/Component/Acl/DbAclTest.php	/^			$values = array_map(array(&$this, '_pad'), $values);$/;"	v
Ini	lib/Cake/Test/Case/Controller/Component/Acl/IniAclTest.php	/^		$Ini = new IniAcl();$/;"	v
IniAclTest	lib/Cake/Test/Case/Controller/Component/Acl/IniAclTest.php	/^class IniAclTest extends CakeTestCase {$/;"	c
iniFile	lib/Cake/Test/Case/Controller/Component/Acl/IniAclTest.php	/^		$iniFile = CAKE . 'Test' . DS . 'test_app' . DS . 'Config' . DS . 'acl.ini.php';$/;"	v
testCheck	lib/Cake/Test/Case/Controller/Component/Acl/IniAclTest.php	/^	public function testCheck() {$/;"	f
testCheckArray	lib/Cake/Test/Case/Controller/Component/Acl/IniAclTest.php	/^	public function testCheckArray() {$/;"	f
user	lib/Cake/Test/Case/Controller/Component/Acl/IniAclTest.php	/^		$user = array($/;"	v
Acl	lib/Cake/Test/Case/Controller/Component/Acl/PhpAclTest.php	/^		$this->Acl = new AclComponent($Collection, array($/;"	v
Collection	lib/Cake/Test/Case/Controller/Component/Acl/PhpAclTest.php	/^		$Collection = new ComponentCollection();$/;"	v
PhpAcl	lib/Cake/Test/Case/Controller/Component/Acl/PhpAclTest.php	/^		$this->PhpAcl = new PhpAcl();$/;"	v
PhpAclTest	lib/Cake/Test/Case/Controller/Component/Acl/PhpAclTest.php	/^class PhpAclTest extends CakeTestCase {$/;"	c
config	lib/Cake/Test/Case/Controller/Component/Acl/PhpAclTest.php	/^		$config = array($/;"	v
config	lib/Cake/Test/Case/Controller/Component/Acl/PhpAclTest.php	/^		$config = array('aco' => array('allow' => array('foo' => '')));$/;"	v
roles	lib/Cake/Test/Case/Controller/Component/Acl/PhpAclTest.php	/^		$roles = $this->Acl->Aro->roles('User\/peter');$/;"	v
roles	lib/Cake/Test/Case/Controller/Component/Acl/PhpAclTest.php	/^		$roles = $this->Acl->Aro->roles('hardy');$/;"	v
setUp	lib/Cake/Test/Case/Controller/Component/Acl/PhpAclTest.php	/^	public function setUp() {$/;"	f
testAcoResolve	lib/Cake/Test/Case/Controller/Component/Acl/PhpAclTest.php	/^	public function testAcoResolve() {$/;"	f
testAddRole	lib/Cake/Test/Case/Controller/Component/Acl/PhpAclTest.php	/^	public function testAddRole() {$/;"	f
testAllow	lib/Cake/Test/Case/Controller/Component/Acl/PhpAclTest.php	/^	public function testAllow() {$/;"	f
testAroAliases	lib/Cake/Test/Case/Controller/Component/Acl/PhpAclTest.php	/^	public function testAroAliases() {$/;"	f
testAroDeclarationContainsCycles	lib/Cake/Test/Case/Controller/Component/Acl/PhpAclTest.php	/^	public function testAroDeclarationContainsCycles() {$/;"	f
testAroResolve	lib/Cake/Test/Case/Controller/Component/Acl/PhpAclTest.php	/^	public function testAroResolve() {$/;"	f
testCheck	lib/Cake/Test/Case/Controller/Component/Acl/PhpAclTest.php	/^	public function testCheck() {$/;"	f
testCheckIsCaseInsensitive	lib/Cake/Test/Case/Controller/Component/Acl/PhpAclTest.php	/^	public function testCheckIsCaseInsensitive() {$/;"	f
testDeny	lib/Cake/Test/Case/Controller/Component/Acl/PhpAclTest.php	/^	public function testDeny() {$/;"	f
testDenyRuleIsStrongerThanAllowRule	lib/Cake/Test/Case/Controller/Component/Acl/PhpAclTest.php	/^	public function testDenyRuleIsStrongerThanAllowRule() {$/;"	f
testInvalidConfigWithAcosMissing	lib/Cake/Test/Case/Controller/Component/Acl/PhpAclTest.php	/^	public function testInvalidConfigWithAcosMissing() {$/;"	f
testInvalidConfigWithAroMissing	lib/Cake/Test/Case/Controller/Component/Acl/PhpAclTest.php	/^	public function testInvalidConfigWithAroMissing() {$/;"	f
testPolicy	lib/Cake/Test/Case/Controller/Component/Acl/PhpAclTest.php	/^	public function testPolicy() {$/;"	f
testRoleInheritance	lib/Cake/Test/Case/Controller/Component/Acl/PhpAclTest.php	/^	public function testRoleInheritance() {$/;"	f
user	lib/Cake/Test/Case/Controller/Component/Acl/PhpAclTest.php	/^		$user = array($/;"	v
Acl	lib/Cake/Test/Case/Controller/Component/AclComponentTest.php	/^		$this->Acl = new AclComponent($Collection);$/;"	v
AclComponentTest	lib/Cake/Test/Case/Controller/Component/AclComponentTest.php	/^class AclComponentTest extends CakeTestCase {$/;"	c
Adapter	lib/Cake/Test/Case/Controller/Component/AclComponentTest.php	/^		$Adapter = $this->getMock('AclInterface');$/;"	v
Collection	lib/Cake/Test/Case/Controller/Component/AclComponentTest.php	/^		$Collection = new ComponentCollection();$/;"	v
setUp	lib/Cake/Test/Case/Controller/Component/AclComponentTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Controller/Component/AclComponentTest.php	/^	public function tearDown() {$/;"	f
testAdapter	lib/Cake/Test/Case/Controller/Component/AclComponentTest.php	/^	public function testAdapter() {$/;"	f
testAdapterException	lib/Cake/Test/Case/Controller/Component/AclComponentTest.php	/^	public function testAdapterException() {$/;"	f
testConstrutorException	lib/Cake/Test/Case/Controller/Component/AclComponentTest.php	/^	public function testConstrutorException() {$/;"	f
thing	lib/Cake/Test/Case/Controller/Component/AclComponentTest.php	/^		$thing = new StdClass();$/;"	v
Acl	lib/Cake/Test/Case/Controller/Component/Auth/ActionsAuthorizeTest.php	/^		$this->Acl = $this->getMock('AclComponent', array(), array(), '', false);$/;"	v
ActionsAuthorizeTest	lib/Cake/Test/Case/Controller/Component/Auth/ActionsAuthorizeTest.php	/^class ActionsAuthorizeTest extends CakeTestCase {$/;"	c
Collection	lib/Cake/Test/Case/Controller/Component/Auth/ActionsAuthorizeTest.php	/^		$this->Collection = $this->getMock('ComponentCollection');$/;"	v
_mockAcl	lib/Cake/Test/Case/Controller/Component/Auth/ActionsAuthorizeTest.php	/^	protected function _mockAcl() {$/;"	f
auth	lib/Cake/Test/Case/Controller/Component/Auth/ActionsAuthorizeTest.php	/^		$this->auth = new ActionsAuthorize($this->Collection);$/;"	v
controller	lib/Cake/Test/Case/Controller/Component/Auth/ActionsAuthorizeTest.php	/^		$this->controller = $this->getMock('Controller', array(), array(), '', false);$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/Auth/ActionsAuthorizeTest.php	/^		$expected = array('TestPlugin.TestPluginAuthUser' => array('id' => 1, 'user' => 'mariano'));$/;"	v
request	lib/Cake/Test/Case/Controller/Component/Auth/ActionsAuthorizeTest.php	/^		$request = new CakeRequest('\/debug_kit\/posts\/index', false);$/;"	v
request	lib/Cake/Test/Case/Controller/Component/Auth/ActionsAuthorizeTest.php	/^		$request = new CakeRequest('\/posts\/index', false);$/;"	v
result	lib/Cake/Test/Case/Controller/Component/Auth/ActionsAuthorizeTest.php	/^		$result = $this->auth->action($request);$/;"	v
setUp	lib/Cake/Test/Case/Controller/Component/Auth/ActionsAuthorizeTest.php	/^	public function setUp() {$/;"	f
testActionMethod	lib/Cake/Test/Case/Controller/Component/Auth/ActionsAuthorizeTest.php	/^	public function testActionMethod() {$/;"	f
testActionNoDoubleSlash	lib/Cake/Test/Case/Controller/Component/Auth/ActionsAuthorizeTest.php	/^	public function testActionNoDoubleSlash() {$/;"	f
testActionWithPlugin	lib/Cake/Test/Case/Controller/Component/Auth/ActionsAuthorizeTest.php	/^	public function testActionWithPlugin() {$/;"	f
testAuthorizeFailure	lib/Cake/Test/Case/Controller/Component/Auth/ActionsAuthorizeTest.php	/^	public function testAuthorizeFailure() {$/;"	f
testAuthorizeSettings	lib/Cake/Test/Case/Controller/Component/Auth/ActionsAuthorizeTest.php	/^	public function testAuthorizeSettings() {$/;"	f
testAuthorizeSuccess	lib/Cake/Test/Case/Controller/Component/Auth/ActionsAuthorizeTest.php	/^	public function testAuthorizeSuccess() {$/;"	f
user	lib/Cake/Test/Case/Controller/Component/Auth/ActionsAuthorizeTest.php	/^		$user = array($/;"	v
BasicAuthenticateTest	lib/Cake/Test/Case/Controller/Component/Auth/BasicAuthenticateTest.php	/^class BasicAuthenticateTest extends CakeTestCase {$/;"	c
Collection	lib/Cake/Test/Case/Controller/Component/Auth/BasicAuthenticateTest.php	/^		$this->Collection = $this->getMock('ComponentCollection');$/;"	v
User	lib/Cake/Test/Case/Controller/Component/Auth/BasicAuthenticateTest.php	/^		$User = ClassRegistry::init('User');$/;"	v
auth	lib/Cake/Test/Case/Controller/Component/Auth/BasicAuthenticateTest.php	/^		$this->auth = new BasicAuthenticate($this->Collection, array($/;"	v
expected	lib/Cake/Test/Case/Controller/Component/Auth/BasicAuthenticateTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Controller/Component/Auth/BasicAuthenticateTest.php	/^		$expected = array('WWW-Authenticate: Basic realm="localhost"');$/;"	v
fixtures	lib/Cake/Test/Case/Controller/Component/Auth/BasicAuthenticateTest.php	/^	public $fixtures = array('core.user', 'core.auth_user');$/;"	v
hash	lib/Cake/Test/Case/Controller/Component/Auth/BasicAuthenticateTest.php	/^		$hash = Security::hash('password', 'blowfish');$/;"	v
object	lib/Cake/Test/Case/Controller/Component/Auth/BasicAuthenticateTest.php	/^		$object = new BasicAuthenticate($this->Collection, array($/;"	v
password	lib/Cake/Test/Case/Controller/Component/Auth/BasicAuthenticateTest.php	/^		$password = Security::hash('password', null, true);$/;"	v
request	lib/Cake/Test/Case/Controller/Component/Auth/BasicAuthenticateTest.php	/^		$request = new CakeRequest('posts\/index', false);$/;"	v
response	lib/Cake/Test/Case/Controller/Component/Auth/BasicAuthenticateTest.php	/^		$this->response = $this->getMock('CakeResponse');$/;"	v
result	lib/Cake/Test/Case/Controller/Component/Auth/BasicAuthenticateTest.php	/^		$result = $this->auth->authenticate($request, $this->response);$/;"	v
setUp	lib/Cake/Test/Case/Controller/Component/Auth/BasicAuthenticateTest.php	/^	public function setUp() {$/;"	f
testAuthenticateChallenge	lib/Cake/Test/Case/Controller/Component/Auth/BasicAuthenticateTest.php	/^	public function testAuthenticateChallenge() {$/;"	f
testAuthenticateFailReChallenge	lib/Cake/Test/Case/Controller/Component/Auth/BasicAuthenticateTest.php	/^	public function testAuthenticateFailReChallenge() {$/;"	f
testAuthenticateInjection	lib/Cake/Test/Case/Controller/Component/Auth/BasicAuthenticateTest.php	/^	public function testAuthenticateInjection() {$/;"	f
testAuthenticateNoData	lib/Cake/Test/Case/Controller/Component/Auth/BasicAuthenticateTest.php	/^	public function testAuthenticateNoData() {$/;"	f
testAuthenticateNoPassword	lib/Cake/Test/Case/Controller/Component/Auth/BasicAuthenticateTest.php	/^	public function testAuthenticateNoPassword() {$/;"	f
testAuthenticateNoUsername	lib/Cake/Test/Case/Controller/Component/Auth/BasicAuthenticateTest.php	/^	public function testAuthenticateNoUsername() {$/;"	f
testAuthenticateSuccess	lib/Cake/Test/Case/Controller/Component/Auth/BasicAuthenticateTest.php	/^	public function testAuthenticateSuccess() {$/;"	f
testAuthenticateUsernameZero	lib/Cake/Test/Case/Controller/Component/Auth/BasicAuthenticateTest.php	/^	public function testAuthenticateUsernameZero() {$/;"	f
testAuthenticateWithBlowfish	lib/Cake/Test/Case/Controller/Component/Auth/BasicAuthenticateTest.php	/^	public function testAuthenticateWithBlowfish() {$/;"	f
testConstructor	lib/Cake/Test/Case/Controller/Component/Auth/BasicAuthenticateTest.php	/^	public function testConstructor() {$/;"	f
BlowfishAuthenticateTest	lib/Cake/Test/Case/Controller/Component/Auth/BlowfishAuthenticateTest.php	/^class BlowfishAuthenticateTest extends CakeTestCase {$/;"	c
Collection	lib/Cake/Test/Case/Controller/Component/Auth/BlowfishAuthenticateTest.php	/^		$this->Collection = $this->getMock('ComponentCollection');$/;"	v
Object	lib/Cake/Test/Case/Controller/Component/Auth/BlowfishAuthenticateTest.php	/^		$Object = new BlowfishAuthenticate($this->Collection, array($/;"	v
PluginModel	lib/Cake/Test/Case/Controller/Component/Auth/BlowfishAuthenticateTest.php	/^		$PluginModel = ClassRegistry::init('TestPlugin.TestPluginAuthUser');$/;"	v
User	lib/Cake/Test/Case/Controller/Component/Auth/BlowfishAuthenticateTest.php	/^		$User = ClassRegistry::init('User');$/;"	v
auth	lib/Cake/Test/Case/Controller/Component/Auth/BlowfishAuthenticateTest.php	/^		$this->auth = new BlowfishAuthenticate($this->Collection, array($/;"	v
expected	lib/Cake/Test/Case/Controller/Component/Auth/BlowfishAuthenticateTest.php	/^		$expected = array($/;"	v
fixtures	lib/Cake/Test/Case/Controller/Component/Auth/BlowfishAuthenticateTest.php	/^	public $fixtures = array('core.user', 'core.auth_user');$/;"	v
hash	lib/Cake/Test/Case/Controller/Component/Auth/BlowfishAuthenticateTest.php	/^		$hash = Security::hash('password', 'blowfish');$/;"	v
password	lib/Cake/Test/Case/Controller/Component/Auth/BlowfishAuthenticateTest.php	/^		$password = Security::hash('password', 'blowfish');$/;"	v
request	lib/Cake/Test/Case/Controller/Component/Auth/BlowfishAuthenticateTest.php	/^		$request = new CakeRequest('posts\/index', false);$/;"	v
response	lib/Cake/Test/Case/Controller/Component/Auth/BlowfishAuthenticateTest.php	/^		$this->response = $this->getMock('CakeResponse');$/;"	v
result	lib/Cake/Test/Case/Controller/Component/Auth/BlowfishAuthenticateTest.php	/^		$result = $this->auth->authenticate($request, $this->response);$/;"	v
setUp	lib/Cake/Test/Case/Controller/Component/Auth/BlowfishAuthenticateTest.php	/^	public function setUp() {$/;"	f
testAuthenticateInjection	lib/Cake/Test/Case/Controller/Component/Auth/BlowfishAuthenticateTest.php	/^	public function testAuthenticateInjection() {$/;"	f
testAuthenticateNoData	lib/Cake/Test/Case/Controller/Component/Auth/BlowfishAuthenticateTest.php	/^	public function testAuthenticateNoData() {$/;"	f
testAuthenticateNoPassword	lib/Cake/Test/Case/Controller/Component/Auth/BlowfishAuthenticateTest.php	/^	public function testAuthenticateNoPassword() {$/;"	f
testAuthenticateNoUsername	lib/Cake/Test/Case/Controller/Component/Auth/BlowfishAuthenticateTest.php	/^	public function testAuthenticateNoUsername() {$/;"	f
testAuthenticatePasswordIsFalse	lib/Cake/Test/Case/Controller/Component/Auth/BlowfishAuthenticateTest.php	/^	public function testAuthenticatePasswordIsFalse() {$/;"	f
testAuthenticateScopeFail	lib/Cake/Test/Case/Controller/Component/Auth/BlowfishAuthenticateTest.php	/^	public function testAuthenticateScopeFail() {$/;"	f
testAuthenticateSuccess	lib/Cake/Test/Case/Controller/Component/Auth/BlowfishAuthenticateTest.php	/^	public function testAuthenticateSuccess() {$/;"	f
testConstructor	lib/Cake/Test/Case/Controller/Component/Auth/BlowfishAuthenticateTest.php	/^	public function testConstructor() {$/;"	f
testPluginModel	lib/Cake/Test/Case/Controller/Component/Auth/BlowfishAuthenticateTest.php	/^	public function testPluginModel() {$/;"	f
ControllerAuthorizeTest	lib/Cake/Test/Case/Controller/Component/Auth/ControllerAuthorizeTest.php	/^class ControllerAuthorizeTest extends CakeTestCase {$/;"	c
auth	lib/Cake/Test/Case/Controller/Component/Auth/ControllerAuthorizeTest.php	/^		$this->auth = new ControllerAuthorize($this->components);$/;"	v
components	lib/Cake/Test/Case/Controller/Component/Auth/ControllerAuthorizeTest.php	/^		$this->components = $this->getMock('ComponentCollection');$/;"	v
controller	lib/Cake/Test/Case/Controller/Component/Auth/ControllerAuthorizeTest.php	/^		$this->controller = $this->getMock('Controller', array('isAuthorized'), array(), '', false);$/;"	v
request	lib/Cake/Test/Case/Controller/Component/Auth/ControllerAuthorizeTest.php	/^		$request = new CakeRequest('\/posts\/index', false);$/;"	v
setUp	lib/Cake/Test/Case/Controller/Component/Auth/ControllerAuthorizeTest.php	/^	public function setUp() {$/;"	f
testAuthorizeFailure	lib/Cake/Test/Case/Controller/Component/Auth/ControllerAuthorizeTest.php	/^	public function testAuthorizeFailure() {$/;"	f
testAuthorizeSuccess	lib/Cake/Test/Case/Controller/Component/Auth/ControllerAuthorizeTest.php	/^	public function testAuthorizeSuccess() {$/;"	f
testControllerErrorOnMissingMethod	lib/Cake/Test/Case/Controller/Component/Auth/ControllerAuthorizeTest.php	/^	public function testControllerErrorOnMissingMethod() {$/;"	f
testControllerTypeError	lib/Cake/Test/Case/Controller/Component/Auth/ControllerAuthorizeTest.php	/^	public function testControllerTypeError() {$/;"	f
user	lib/Cake/Test/Case/Controller/Component/Auth/ControllerAuthorizeTest.php	/^		$user = array('User' => array('username' => 'mark'));$/;"	v
user	lib/Cake/Test/Case/Controller/Component/Auth/ControllerAuthorizeTest.php	/^		$user = array();$/;"	v
Acl	lib/Cake/Test/Case/Controller/Component/Auth/CrudAuthorizeTest.php	/^		$this->Acl = $this->getMock('AclComponent', array(), array(), '', false);$/;"	v
Components	lib/Cake/Test/Case/Controller/Component/Auth/CrudAuthorizeTest.php	/^		$this->Components = $this->getMock('ComponentCollection');$/;"	v
CrudAuthorizeTest	lib/Cake/Test/Case/Controller/Component/Auth/CrudAuthorizeTest.php	/^class CrudAuthorizeTest extends CakeTestCase {$/;"	c
_mockAcl	lib/Cake/Test/Case/Controller/Component/Auth/CrudAuthorizeTest.php	/^	protected function _mockAcl() {$/;"	f
auth	lib/Cake/Test/Case/Controller/Component/Auth/CrudAuthorizeTest.php	/^		$auth = new CrudAuthorize($this->Components);$/;"	v
auth	lib/Cake/Test/Case/Controller/Component/Auth/CrudAuthorizeTest.php	/^		$this->auth = new CrudAuthorize($this->Components);$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/Auth/CrudAuthorizeTest.php	/^		$expected = array($/;"	v
map	lib/Cake/Test/Case/Controller/Component/Auth/CrudAuthorizeTest.php	/^		$map = array($/;"	v
request	lib/Cake/Test/Case/Controller/Component/Auth/CrudAuthorizeTest.php	/^		$request = new CakeRequest('\/posts\/foobar', false);$/;"	v
request	lib/Cake/Test/Case/Controller/Component/Auth/CrudAuthorizeTest.php	/^		$request = new CakeRequest('posts\/index', false);$/;"	v
result	lib/Cake/Test/Case/Controller/Component/Auth/CrudAuthorizeTest.php	/^		$result = $this->auth->mapActions($map);$/;"	v
result	lib/Cake/Test/Case/Controller/Component/Auth/CrudAuthorizeTest.php	/^		$result = $this->auth->mapActions();$/;"	v
setUp	lib/Cake/Test/Case/Controller/Component/Auth/CrudAuthorizeTest.php	/^	public function setUp() {$/;"	f
testAuthorizeCheckFailure	lib/Cake/Test/Case/Controller/Component/Auth/CrudAuthorizeTest.php	/^	public function testAuthorizeCheckFailure() {$/;"	f
testAuthorizeCheckSuccess	lib/Cake/Test/Case/Controller/Component/Auth/CrudAuthorizeTest.php	/^	public function testAuthorizeCheckSuccess() {$/;"	f
testAuthorizeNoMappedAction	lib/Cake/Test/Case/Controller/Component/Auth/CrudAuthorizeTest.php	/^	public function testAuthorizeNoMappedAction() {$/;"	f
testAutoPrefixMapActions	lib/Cake/Test/Case/Controller/Component/Auth/CrudAuthorizeTest.php	/^	public function testAutoPrefixMapActions() {$/;"	f
testMapActionsGet	lib/Cake/Test/Case/Controller/Component/Auth/CrudAuthorizeTest.php	/^	public function testMapActionsGet() {$/;"	f
testMapActionsSet	lib/Cake/Test/Case/Controller/Component/Auth/CrudAuthorizeTest.php	/^	public function testMapActionsSet() {$/;"	f
user	lib/Cake/Test/Case/Controller/Component/Auth/CrudAuthorizeTest.php	/^		$user = array('User' => array('user' => 'mark'));$/;"	v
Collection	lib/Cake/Test/Case/Controller/Component/Auth/DigestAuthenticateTest.php	/^		$this->Collection = $this->getMock('ComponentCollection');$/;"	v
DigestAuthenticateTest	lib/Cake/Test/Case/Controller/Component/Auth/DigestAuthenticateTest.php	/^class DigestAuthenticateTest extends CakeTestCase {$/;"	c
User	lib/Cake/Test/Case/Controller/Component/Auth/DigestAuthenticateTest.php	/^		$User = ClassRegistry::init('User');$/;"	v
_SERVER	lib/Cake/Test/Case/Controller/Component/Auth/DigestAuthenticateTest.php	/^		$_SERVER = $this->server;$/;"	v
auth	lib/Cake/Test/Case/Controller/Component/Auth/DigestAuthenticateTest.php	/^		$this->auth = new DigestAuthenticate($this->Collection, array($/;"	v
digest	lib/Cake/Test/Case/Controller/Component/Auth/DigestAuthenticateTest.php	/^		$digest = <<<DIGEST$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/Auth/DigestAuthenticateTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Controller/Component/Auth/DigestAuthenticateTest.php	/^		$expected = array('WWW-Authenticate: Digest realm="localhost",qop="auth",nonce="123",opaque="123abc"');$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/Auth/DigestAuthenticateTest.php	/^		$expected = md5('mark:localhost:password');$/;"	v
fixtures	lib/Cake/Test/Case/Controller/Component/Auth/DigestAuthenticateTest.php	/^	public $fixtures = array('core.user', 'core.auth_user');$/;"	v
object	lib/Cake/Test/Case/Controller/Component/Auth/DigestAuthenticateTest.php	/^		$object = new DigestAuthenticate($this->Collection, array($/;"	v
password	lib/Cake/Test/Case/Controller/Component/Auth/DigestAuthenticateTest.php	/^		$password = DigestAuthenticate::password('mariano', 'cake', 'localhost');$/;"	v
request	lib/Cake/Test/Case/Controller/Component/Auth/DigestAuthenticateTest.php	/^		$request = new CakeRequest('posts\/index', false);$/;"	v
response	lib/Cake/Test/Case/Controller/Component/Auth/DigestAuthenticateTest.php	/^		$this->response = $this->getMock('CakeResponse');$/;"	v
result	lib/Cake/Test/Case/Controller/Component/Auth/DigestAuthenticateTest.php	/^		$result = $this->auth->authenticate($request, $this->response);$/;"	v
result	lib/Cake/Test/Case/Controller/Component/Auth/DigestAuthenticateTest.php	/^		$result = $this->auth->parseAuthData($digest);$/;"	v
result	lib/Cake/Test/Case/Controller/Component/Auth/DigestAuthenticateTest.php	/^		$result = $this->auth->parseAuthData('');$/;"	v
result	lib/Cake/Test/Case/Controller/Component/Auth/DigestAuthenticateTest.php	/^		$result = DigestAuthenticate::password('mark', 'password', 'localhost');$/;"	v
server	lib/Cake/Test/Case/Controller/Component/Auth/DigestAuthenticateTest.php	/^		$this->server = $_SERVER;$/;"	v
setUp	lib/Cake/Test/Case/Controller/Component/Auth/DigestAuthenticateTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Controller/Component/Auth/DigestAuthenticateTest.php	/^	public function tearDown() {$/;"	f
testAuthenticateChallenge	lib/Cake/Test/Case/Controller/Component/Auth/DigestAuthenticateTest.php	/^	public function testAuthenticateChallenge() {$/;"	f
testAuthenticateFailReChallenge	lib/Cake/Test/Case/Controller/Component/Auth/DigestAuthenticateTest.php	/^	public function testAuthenticateFailReChallenge() {$/;"	f
testAuthenticateNoData	lib/Cake/Test/Case/Controller/Component/Auth/DigestAuthenticateTest.php	/^	public function testAuthenticateNoData() {$/;"	f
testAuthenticateSuccess	lib/Cake/Test/Case/Controller/Component/Auth/DigestAuthenticateTest.php	/^	public function testAuthenticateSuccess() {$/;"	f
testAuthenticateWrongUsername	lib/Cake/Test/Case/Controller/Component/Auth/DigestAuthenticateTest.php	/^	public function testAuthenticateWrongUsername() {$/;"	f
testConstructor	lib/Cake/Test/Case/Controller/Component/Auth/DigestAuthenticateTest.php	/^	public function testConstructor() {$/;"	f
testParseAuthData	lib/Cake/Test/Case/Controller/Component/Auth/DigestAuthenticateTest.php	/^	public function testParseAuthData() {$/;"	f
testParseAuthEmailAddress	lib/Cake/Test/Case/Controller/Component/Auth/DigestAuthenticateTest.php	/^	public function testParseAuthEmailAddress() {$/;"	f
testPassword	lib/Cake/Test/Case/Controller/Component/Auth/DigestAuthenticateTest.php	/^	public function testPassword() {$/;"	f
Collection	lib/Cake/Test/Case/Controller/Component/Auth/FormAuthenticateTest.php	/^		$this->Collection = $this->getMock('ComponentCollection');$/;"	v
FormAuthenticateTest	lib/Cake/Test/Case/Controller/Component/Auth/FormAuthenticateTest.php	/^class FormAuthenticateTest extends CakeTestCase {$/;"	c
PluginModel	lib/Cake/Test/Case/Controller/Component/Auth/FormAuthenticateTest.php	/^		$PluginModel = ClassRegistry::init('TestPlugin.TestPluginAuthUser');$/;"	v
User	lib/Cake/Test/Case/Controller/Component/Auth/FormAuthenticateTest.php	/^		$User = ClassRegistry::init('User');$/;"	v
auth	lib/Cake/Test/Case/Controller/Component/Auth/FormAuthenticateTest.php	/^		$this->auth = $this->getMock($/;"	v
auth	lib/Cake/Test/Case/Controller/Component/Auth/FormAuthenticateTest.php	/^		$this->auth = new FormAuthenticate($this->Collection, array($/;"	v
expected	lib/Cake/Test/Case/Controller/Component/Auth/FormAuthenticateTest.php	/^		$expected = array($/;"	v
fixtures	lib/Cake/Test/Case/Controller/Component/Auth/FormAuthenticateTest.php	/^	public $fixtures = array('core.user', 'core.auth_user');$/;"	v
hash	lib/Cake/Test/Case/Controller/Component/Auth/FormAuthenticateTest.php	/^		$hash = Security::hash('mypass', 'md5', true);$/;"	v
object	lib/Cake/Test/Case/Controller/Component/Auth/FormAuthenticateTest.php	/^		$object = new FormAuthenticate($this->Collection, array($/;"	v
password	lib/Cake/Test/Case/Controller/Component/Auth/FormAuthenticateTest.php	/^		$password = Security::hash('password', null, true);$/;"	v
passwordHasher	lib/Cake/Test/Case/Controller/Component/Auth/FormAuthenticateTest.php	/^		$passwordHasher = $this->auth->passwordHasher();$/;"	v
request	lib/Cake/Test/Case/Controller/Component/Auth/FormAuthenticateTest.php	/^		$request = new CakeRequest('posts\/index', false);$/;"	v
response	lib/Cake/Test/Case/Controller/Component/Auth/FormAuthenticateTest.php	/^		$this->response = $this->getMock('CakeResponse');$/;"	v
result	lib/Cake/Test/Case/Controller/Component/Auth/FormAuthenticateTest.php	/^		$result = $passwordHasher->config();$/;"	v
result	lib/Cake/Test/Case/Controller/Component/Auth/FormAuthenticateTest.php	/^		$result = $this->auth->authenticate($request, $this->response);$/;"	v
setUp	lib/Cake/Test/Case/Controller/Component/Auth/FormAuthenticateTest.php	/^	public function setUp() {$/;"	f
testAuthenticateFieldsAreNotString	lib/Cake/Test/Case/Controller/Component/Auth/FormAuthenticateTest.php	/^	public function testAuthenticateFieldsAreNotString() {$/;"	f
testAuthenticateInjection	lib/Cake/Test/Case/Controller/Component/Auth/FormAuthenticateTest.php	/^	public function testAuthenticateInjection() {$/;"	f
testAuthenticateNoData	lib/Cake/Test/Case/Controller/Component/Auth/FormAuthenticateTest.php	/^	public function testAuthenticateNoData() {$/;"	f
testAuthenticateNoPassword	lib/Cake/Test/Case/Controller/Component/Auth/FormAuthenticateTest.php	/^	public function testAuthenticateNoPassword() {$/;"	f
testAuthenticateNoUsername	lib/Cake/Test/Case/Controller/Component/Auth/FormAuthenticateTest.php	/^	public function testAuthenticateNoUsername() {$/;"	f
testAuthenticatePasswordIsEmptyString	lib/Cake/Test/Case/Controller/Component/Auth/FormAuthenticateTest.php	/^	public function testAuthenticatePasswordIsEmptyString() {$/;"	f
testAuthenticatePasswordIsFalse	lib/Cake/Test/Case/Controller/Component/Auth/FormAuthenticateTest.php	/^	public function testAuthenticatePasswordIsFalse() {$/;"	f
testAuthenticateScopeFail	lib/Cake/Test/Case/Controller/Component/Auth/FormAuthenticateTest.php	/^	public function testAuthenticateScopeFail() {$/;"	f
testAuthenticateSuccess	lib/Cake/Test/Case/Controller/Component/Auth/FormAuthenticateTest.php	/^	public function testAuthenticateSuccess() {$/;"	f
testAuthenticateUsernameZero	lib/Cake/Test/Case/Controller/Component/Auth/FormAuthenticateTest.php	/^	public function testAuthenticateUsernameZero() {$/;"	f
testConstructor	lib/Cake/Test/Case/Controller/Component/Auth/FormAuthenticateTest.php	/^	public function testConstructor() {$/;"	f
testPasswordHasherSettings	lib/Cake/Test/Case/Controller/Component/Auth/FormAuthenticateTest.php	/^	public function testPasswordHasherSettings() {$/;"	f
testPluginModel	lib/Cake/Test/Case/Controller/Component/Auth/FormAuthenticateTest.php	/^	public function testPluginModel() {$/;"	f
AjaxAuthController	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^class AjaxAuthController extends Controller {$/;"	c
App	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$App = Configure::read('App');$/;"	v
Auth	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$this->Auth = new TestAuthComponent($collection);$/;"	v
AuthComponentTest	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^class AuthComponentTest extends CakeTestCase {$/;"	c
AuthLoginFormAuthenticate	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$AuthLoginFormAuthenticate = $this->getMock('FormAuthenticate', array(), array(), '', false);$/;"	v
AuthMockFourAuthorize	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$AuthMockFourAuthorize = $this->getMock('BaseAuthorize', array('authorize'), array(), '', false);$/;"	v
AuthMockOneAuthorize	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$AuthMockOneAuthorize = $this->getMock('BaseAuthorize', array('authorize'), array(), '', false);$/;"	v
AuthMockThreeAuthorize	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$AuthMockThreeAuthorize = $this->getMock('BaseAuthorize', array('authorize'), array(), '', false);$/;"	v
AuthMockTwoAuthorize	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$AuthMockTwoAuthorize = $this->getMock('BaseAuthorize', array('authorize'), array(), '', false);$/;"	v
AuthTestController	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^class AuthTestController extends Controller {$/;"	c
AuthUser	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$this->AuthUser = new AuthUser();$/;"	v
AuthUser	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^class AuthUser extends CakeTestModel {$/;"	c
CakeResponse	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$CakeResponse = new CakeResponse();$/;"	v
Controller	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$Controller = $this->getMock($/;"	v
Controller	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$this->Controller = new AuthTestController($request, $this->getMock('CakeResponse'));$/;"	v
Dispatcher	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$Dispatcher = new Dispatcher();$/;"	v
LogoutTriggerMockAuthenticate	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$LogoutTriggerMockAuthenticate = $this->getMock('BaseAuthenticate', array('authenticate', 'logout'), array(), '', false);$/;"	v
MapActionMockAuthorize	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$MapActionMockAuthorize = $this->getMock('BaseAuthorize', array('authorize', 'mapActions'), array(), '', false);$/;"	v
RequestLoginMockAuthenticate	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$RequestLoginMockAuthenticate = $this->getMock('FormAuthenticate', array(), array(), '', false);$/;"	v
Response	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$Response = new CakeResponse();$/;"	v
TestAuthComponent	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^class TestAuthComponent extends AuthComponent {$/;"	c
User	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$User = ClassRegistry::init('AuthUser');$/;"	v
_GET	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$_GET = $_back;$/;"	v
_GET	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$_GET = array($/;"	v
_GET	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$_GET = array();$/;"	v
_SESSION	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$_SESSION = null;$/;"	v
__construct	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function __construct($request, $response) {$/;"	f
_back	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$_back = $_GET;$/;"	v
_stop	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	protected function _stop($status = 0) {$/;"	f
add	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function add() {$/;"	f
admin	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$admin = Configure::read('Routing.prefixes');$/;"	v
admin_add	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function admin_add() {$/;"	f
admin_login	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function admin_login() {$/;"	f
appConfig	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$appConfig = Configure::read('App');$/;"	v
beforeFilter	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function beforeFilter() {$/;"	f
camelCase	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function camelCase() {$/;"	f
clearUser	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public static function clearUser() {$/;"	f
collection	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$collection = new ComponentCollection();$/;"	v
components	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public $components = array('Session', 'Auth');$/;"	v
components	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public $components = array('Session', 'TestAuth');$/;"	v
controller	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$controller = $this->getMock('Controller');$/;"	v
data	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$data = array($/;"	v
expected	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$expected = Router::normalize($this->Auth->loginRedirect);$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$expected = Router::normalize('\/');$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$expected = Router::normalize('\/AuthTest\/login');$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$expected = Router::normalize('\/admin');$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$expected = Router::normalize('\/posts\/add');$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$expected = Router::normalize('\/posts\/edit\/1');$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$expected = Router::normalize('posts\/index\/29?print=true&refer=menu');$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$expected = Router::normalize('posts\/index\/year:2008\/month:feb');$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$expected = Router::normalize('posts\/view\/1');$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$expected = Router::url($this->Auth->loginRedirect);$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$expected = Security::hash('password', null, true);$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$expected = array($/;"	v
fixtures	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public $fixtures = array('core.auth_user');$/;"	v
initialized	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$this->initialized = true;$/;"	v
initialized	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public $initialized = false;$/;"	v
isAuthorized	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function isAuthorized() {$/;"	f
login	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function login() {$/;"	f
logout	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function logout() {$/;"	f
name	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public $name = 'Auth';$/;"	v
objects	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$objects = $this->Controller->Auth->constructAuthenticate();$/;"	v
objects	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$objects = $this->Controller->Auth->constructAuthorize();$/;"	v
pref	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$pref = Configure::read('Routing.prefixes');$/;"	v
redirect	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function redirect($url, $status = null, $exit = true) {$/;"	f
request	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$request = $this->Auth->request;$/;"	v
request	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$request = $this->Controller->request;$/;"	v
request	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$request = new CakeRequest($url);$/;"	v
request	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$request = new CakeRequest('users\/login', false);$/;"	v
request	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$request = new CakeRequest(null, false);$/;"	v
result	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$result = $objects[0];$/;"	v
result	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$result = $this->Auth->login();$/;"	v
result	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$result = $this->Auth->logout();$/;"	v
result	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$result = $this->Auth->password('password');$/;"	v
result	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$result = $this->Auth->redirectUrl($value);$/;"	v
result	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$result = $this->Auth->redirectUrl();$/;"	v
result	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$result = $this->Auth->startup($this->Controller);$/;"	v
result	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$result = $this->Auth->user('Company.invalid');$/;"	v
result	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$result = $this->Auth->user('Group.name');$/;"	v
result	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$result = $this->Auth->user('invalid');$/;"	v
result	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$result = $this->Auth->user('is_admin');$/;"	v
result	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$result = $this->Auth->user('username');$/;"	v
result	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$result = $this->Auth->user();$/;"	v
result	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$result = $this->Controller->Auth->constructAuthenticate();$/;"	v
result	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$result = $this->Controller->Auth->constructAuthorize();$/;"	v
result	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$result = $this->Controller->Auth->startup($this->Controller);$/;"	v
result	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$result = ob_get_clean();$/;"	v
return	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$return = $this->Auth->startup($this->Controller);$/;"	v
setAuthenticateObject	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function setAuthenticateObject($index, $object) {$/;"	f
setAuthorizeObject	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function setAuthorizeObject($index, $object) {$/;"	f
setUp	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function tearDown() {$/;"	f
testAdminRoute	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testAdminRoute() {$/;"	f
testAjaxLogin	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testAjaxLogin() {$/;"	f
testAllConfigWithAuthenticate	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testAllConfigWithAuthenticate() {$/;"	f
testAllConfigWithAuthorize	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testAllConfigWithAuthorize() {$/;"	f
testAllowDenyAll	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testAllowDenyAll() {$/;"	f
testAllowedActionsSetWithAllowMethod	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testAllowedActionsSetWithAllowMethod() {$/;"	f
testAllowedActionsWithCamelCaseMethods	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testAllowedActionsWithCamelCaseMethods() {$/;"	f
testAuthorizeFalse	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testAuthorizeFalse() {$/;"	f
testComponentSettings	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testComponentSettings() {$/;"	f
testDefaultToLoginRedirect	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testDefaultToLoginRedirect() {$/;"	f
testDenyWithCamelCaseMethods	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testDenyWithCamelCaseMethods() {$/;"	f
testFlashSettings	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testFlashSettings() {$/;"	f
testForbiddenException	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testForbiddenException() {$/;"	f
testIsAuthorizedDelegation	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testIsAuthorizedDelegation() {$/;"	f
testIsAuthorizedMissingFile	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testIsAuthorizedMissingFile() {$/;"	f
testIsAuthorizedUsingUserInSession	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testIsAuthorizedUsingUserInSession() {$/;"	f
testIsErrorOrTests	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testIsErrorOrTests() {$/;"	f
testLoadAuthenticateNoFile	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testLoadAuthenticateNoFile() {$/;"	f
testLoadAuthenticateResets	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testLoadAuthenticateResets() {$/;"	f
testLoadAuthorizeResets	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testLoadAuthorizeResets() {$/;"	f
testLogin	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testLogin() {$/;"	f
testLoginActionRedirect	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testLoginActionRedirect() {$/;"	f
testLoginRedirect	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testLoginRedirect() {$/;"	f
testLoginWithRequestData	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testLoginWithRequestData() {$/;"	f
testLoginWithUserData	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testLoginWithUserData() {$/;"	f
testLogout	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testLogout() {$/;"	f
testLogoutTrigger	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testLogoutTrigger() {$/;"	f
testMapActionsDelegation	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testMapActionsDelegation() {$/;"	f
testNoAuth	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testNoAuth() {$/;"	f
testNoLoginRedirectForAuthenticatedUser	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testNoLoginRedirectForAuthenticatedUser() {$/;"	f
testNoRedirectOn404	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testNoRedirectOn404() {$/;"	f
testNoRedirectOnLoginAction	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testNoRedirectOnLoginAction() {$/;"	f
testPassword	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testPassword() {$/;"	f
testRedirectSessionRead	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testRedirectSessionRead() {$/;"	f
testRedirectSessionReadDuplicateBase	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testRedirectSessionReadDuplicateBase() {$/;"	f
testRedirectSessionReadEqualToLoginAction	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testRedirectSessionReadEqualToLoginAction() {$/;"	f
testRedirectSet	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testRedirectSet() {$/;"	f
testRedirectToUnauthorizedRedirect	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testRedirectToUnauthorizedRedirect() {$/;"	f
testRedirectToUnauthorizedRedirectSuppressedAuthError	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testRedirectToUnauthorizedRedirectSuppressedAuthError() {$/;"	f
testRedirectUrlWithBaseSet	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testRedirectUrlWithBaseSet() {$/;"	f
testRedirectVarClearing	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testRedirectVarClearing() {$/;"	f
testSameAuthenticateWithDifferentHashers	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testSameAuthenticateWithDifferentHashers() {$/;"	f
testStatelessAuthNoRedirect	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testStatelessAuthNoRedirect() {$/;"	f
testStatelessAuthNoSessionStart	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testStatelessAuthNoSessionStart() {$/;"	f
testStatelessAuthWorksWithUser	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testStatelessAuthWorksWithUser() {$/;"	f
testStatelessFollowedByStatefulAuth	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testStatelessFollowedByStatefulAuth() {$/;"	f
testStop	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$this->testStop = true;$/;"	v
testStop	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public $testStop = false;$/;"	v
testUrl	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$this->testUrl = Router::url($url);$/;"	v
testUrl	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public $testUrl = null;$/;"	v
testUser	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public function testUser() {$/;"	f
url	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$url = '\/AuthTest\/login';$/;"	v
url	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$url = '\/admin\/auth_test\/add';$/;"	v
url	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$url = '\/admin\/auth_test\/login';$/;"	v
url	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$url = '\/auth_test\/CamelCase';$/;"	v
url	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$url = '\/auth_test\/action_name';$/;"	v
url	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$url = '\/auth_test\/add';$/;"	v
url	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$url = '\/auth_test\/camelCase';$/;"	v
url	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$url = '\/auth_test\/delete';$/;"	v
url	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$url = '\/party\/on';$/;"	v
url	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$url = '\/posts\/add';$/;"	v
url	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$url = '\/posts\/edit\/1';$/;"	v
url	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$url = '\/posts\/index\/29';$/;"	v
url	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$url = '\/posts\/index\/year:2008\/month:feb';$/;"	v
url	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$url = '\/posts\/view\/1';$/;"	v
url	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$url = '\/users\/login';$/;"	v
useDbConfig	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public $useDbConfig = 'test';$/;"	v
user	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$user = $this->AuthUser->find();$/;"	v
user	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$user = array($/;"	v
user	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$user = array('user' => 'mark');$/;"	v
user	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$user = array('username' => 'mark', 'role' => 'admin');$/;"	v
uses	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public $uses = array('AuthUser');$/;"	v
uses	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^	public $uses = array();$/;"	v
value	lib/Cake/Test/Case/Controller/Component/AuthComponentTest.php	/^		$value = array('controller' => 'users', 'action' => 'home');$/;"	v
Controller	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$this->Controller = new CookieComponentTestController(new CakeRequest(), new CakeResponse());$/;"	v
Controller	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public $Controller;$/;"	v
Cookie	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$Cookie = new CookieComponent(new ComponentCollection(), $settings);$/;"	v
Cookie	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$this->Cookie = $this->Controller->Cookie;$/;"	v
CookieComponentTest	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^class CookieComponentTest extends CakeTestCase {$/;"	c
CookieComponentTestController	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^class CookieComponentTestController extends Controller {$/;"	c
_COOKIE	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$_COOKIE = array($/;"	v
_COOKIE	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$_COOKIE = array();$/;"	v
_encrypt	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	protected function _encrypt($value) {$/;"	f
_implode	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	protected function _implode(array $array) {$/;"	f
_oldImplode	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	protected function _oldImplode(array $array) {$/;"	f
_setCookieData	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	protected function _setCookieData() {$/;"	f
beforeFilter	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public function beforeFilter() {$/;"	f
components	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public $components = array('Cookie');$/;"	v
data	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$data = $this->Cookie->read('Encrytped_array');$/;"	v
data	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$data = $this->Cookie->read('Encrytped_array.name');$/;"	v
data	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$data = $this->Cookie->read('Encrytped_array.tag');$/;"	v
data	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$data = $this->Cookie->read('Encrytped_array.version');$/;"	v
data	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$data = $this->Cookie->read('Encrytped_multi_cookies');$/;"	v
data	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$data = $this->Cookie->read('Encrytped_multi_cookies.name');$/;"	v
data	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$data = $this->Cookie->read('Encrytped_multi_cookies.tag');$/;"	v
data	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$data = $this->Cookie->read('Encrytped_multi_cookies.version');$/;"	v
data	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$data = $this->Cookie->read('Plain_array');$/;"	v
data	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$data = $this->Cookie->read('Plain_array.name');$/;"	v
data	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$data = $this->Cookie->read('Plain_array.tag');$/;"	v
data	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$data = $this->Cookie->read('Plain_array.version');$/;"	v
data	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$data = $this->Cookie->read('Plain_multi_cookies');$/;"	v
data	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$data = $this->Cookie->read('Plain_multi_cookies.name');$/;"	v
data	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$data = $this->Cookie->read('Plain_multi_cookies.tag');$/;"	v
data	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$data = $this->Cookie->read('Plain_multi_cookies.version');$/;"	v
data	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$data = $this->Cookie->read();$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$expected = '1.2.0.x';$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$expected = 'CakePHP Rocks!';$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$expected = 'CakePHP';$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$expected = array('name' => 'CakePHP', 'version' => '1.2.0.x', 'tag' => 'CakePHP Rocks!');$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$expected = array('version' => '1.2.0.x', 'tag' => 'CakePHP Rocks!');$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$expected = array(1, 2, 3);$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$expected = null;$/;"	v
future	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$future = new DateTime('now');$/;"	v
name	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$name = $this->Cookie->name . '[key1]';$/;"	v
name	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$name = $this->Cookie->name . '[key2]';$/;"	v
result	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$result = $this->Controller->response->cookie($name);$/;"	v
result	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$result = $this->Controller->response->cookie($this->Cookie->name . '[Testing]');$/;"	v
result	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$result = $this->Controller->response->cookie($this->Cookie->name . '[User]');$/;"	v
result	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$result = $this->Cookie->read('Legacy.value');$/;"	v
result	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$result = $this->Cookie->read('Testing');$/;"	v
setUp	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public function setUp() {$/;"	f
settings	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$settings = array($/;"	v
string	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^		$string = '';$/;"	v
tearDown	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public function tearDown() {$/;"	f
testCheck	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public function testCheck() {$/;"	f
testCheckEmpty	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public function testCheckEmpty() {$/;"	f
testCheckKeyWithSpaces	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public function testCheckKeyWithSpaces() {$/;"	f
testCheckingSavedEmpty	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public function testCheckingSavedEmpty() {$/;"	f
testCookieName	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public function testCookieName() {$/;"	f
testDeleteChildrenNotExist	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public function testDeleteChildrenNotExist() {$/;"	f
testDeleteCookieValue	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public function testDeleteCookieValue() {$/;"	f
testDeleteHttpOnly	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public function testDeleteHttpOnly() {$/;"	f
testDeleteRemovesChildren	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public function testDeleteRemovesChildren() {$/;"	f
testNoErrorOnNonArrayData	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public function testNoErrorOnNonArrayData() {$/;"	f
testReadEmpty	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public function testReadEmpty() {$/;"	f
testReadEncryptedCookieData	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public function testReadEncryptedCookieData() {$/;"	f
testReadLegacyCookieValue	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public function testReadLegacyCookieValue() {$/;"	f
testReadPlainCookieData	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public function testReadPlainCookieData() {$/;"	f
testReadWithNameSwitch	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public function testReadWithNameSwitch() {$/;"	f
testReadingCookieArray	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public function testReadingCookieArray() {$/;"	f
testReadingCookieDataOnStartup	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public function testReadingCookieDataOnStartup() {$/;"	f
testReadingCookieDataWithoutStartup	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public function testReadingCookieDataWithoutStartup() {$/;"	f
testReadingCookieValue	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public function testReadingCookieValue() {$/;"	f
testSettings	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public function testSettings() {$/;"	f
testWriteArrayValues	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public function testWriteArrayValues() {$/;"	f
testWriteFarFuture	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public function testWriteFarFuture() {$/;"	f
testWriteHttpOnly	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public function testWriteHttpOnly() {$/;"	f
testWriteMixedArray	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public function testWriteMixedArray() {$/;"	f
testWriteMultipleShareExpiry	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public function testWriteMultipleShareExpiry() {$/;"	f
testWritePlainCookieArray	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public function testWritePlainCookieArray() {$/;"	f
testWriteSimple	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public function testWriteSimple() {$/;"	f
testWriteWithFalseyValue	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^	public function testWriteWithFalseyValue() {$/;"	f
value	lib/Cake/Test/Case/Controller/Component/CookieComponentTest.php	/^			$value = $this->_implode($value);$/;"	v
Controller	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$this->Controller = new EmailTestController();$/;"	v
Controller	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^	public $Controller;$/;"	v
DebugCompTransport	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^class DebugCompTransport extends AbstractTransport {$/;"	c
EmailComponentTest	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^class EmailComponentTest extends CakeTestCase {$/;"	c
EmailTestComponent	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^class EmailTestComponent extends EmailComponent {$/;"	c
EmailTestController	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^class EmailTestController extends Controller {$/;"	c
body	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$body = '<p>This is the body of the message<\/p>';$/;"	v
body	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$body = 'Body of message';$/;"	v
components	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^	public $components = array('Session', 'EmailTest');$/;"	v
content	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$content = "Previous content\\n--alt-\\nContent-TypeContent-Type:: text\/html; charsetcharset==utf-8\\nContent-Transfer-Encoding: 8bit";$/;"	v
content	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$content = '<p>Some HTML content with an ';$/;"	v
content	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$content = '<p>Some HTML content with an <a href="mailto:test@example.com">email link<\/a>';$/;"	v
content	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$content = array('First line', 'Second line', 'Third line');$/;"	v
date	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$date = self::$sentDate;$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$expected = "Previous content\\n--alt-\\n text\/html; utf-8\\n 8bit\\n\\n<p>My own html content<\/p>";$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$expected = $content;$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$expected = '<pre>' . $expected . '<\/pre>';$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$expected = '<pre>' . str_replace('{CONTENTTYPE}', 'text\/html; charset=UTF-8', $header) . $html . "\\n" . '<\/pre>';$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$expected = '<pre>' . str_replace('{CONTENTTYPE}', 'text\/html; charset=UTF-8', $header) . $html . '<\/pre>';$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$expected = '<pre>' . str_replace('{CONTENTTYPE}', 'text\/plain; charset=UTF-8', $header) . $text . "\\n" . '<\/pre>';$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$expected = str_replace('{CONTENTTYPE}', 'multipart\/alternative; boundary="{boundary}"', $header);$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$expected = str_replace('{CONTENTTYPE}', 'text\/html; charset=UTF-8', $message);$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$expected = str_replace('{CONTENTTYPE}', 'text\/plain; charset=UTF-8', $message);$/;"	v
header	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$header = <<<HEADBLOC$/;"	v
headers	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$headers = $email->getHeaders(array_fill_keys(array('from', 'replyTo', 'readReceipt', 'returnPath', 'to', 'cc', 'bcc', 'subject'), true));$/;"	v
host	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$host = env('HTTP_HOST') ? env('HTTP_HOST') : php_uname('n');$/;"	v
html	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$html = <<<HTMLBLOC$/;"	v
last	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$last = '<pre>';$/;"	v
lastEmail	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^	public static $lastEmail = null;$/;"	v
message	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$message = <<<MSGBLOC$/;"	v
message	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$message = implode("\\n", $email->message());$/;"	v
msg	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$msg = DebugCompTransport::$lastEmail;$/;"	v
name	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^	public $name = 'Email';$/;"	v
restore	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$restore = mb_internal_encoding();$/;"	v
result	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$result = $this->Controller->EmailTest->strip($content, true);$/;"	v
result	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$result = DebugCompTransport::$lastEmail;$/;"	v
result	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$result = mb_internal_encoding();$/;"	v
send	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^	public function send(CakeEmail $email) {$/;"	f
sentDate	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^	public static $sentDate = null;$/;"	v
session	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$session = $this->Controller->Session;$/;"	v
setUp	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^	public function setUp() {$/;"	f
strip	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^	public function strip($content, $message = false) {$/;"	f
subject	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$subject = $headers['Subject'];$/;"	v
subject	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$subject = '=?UTF-8?B?2YfYsNmHINix2LPYp9mE2Kkg2KjYudmG2YjYp9mGINi32YjZitmEINmF2LE=?=' . "\\r\\n" . ' =?UTF-8?B?2LPZhCDZhNmE2YXYs9iq2YTZhQ==?=';$/;"	v
testContentStripping	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^	public function testContentStripping() {$/;"	f
testDateProperty	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^	public function testDateProperty() {$/;"	f
testEncodeSettingInternalCharset	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^	public function testEncodeSettingInternalCharset() {$/;"	f
testEncodingFrom	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^	public function testEncodingFrom() {$/;"	f
testMessageId	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^	public function testMessageId() {$/;"	f
testMessageRetrievalWithHelper	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^	public function testMessageRetrievalWithHelper() {$/;"	f
testMessageRetrievalWithTemplate	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^	public function testMessageRetrievalWithTemplate() {$/;"	f
testMessageRetrievalWithoutTemplate	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^	public function testMessageRetrievalWithoutTemplate() {$/;"	f
testMultibyte	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^	public function testMultibyte() {$/;"	f
testNoDoubleNewlinesInHeaders	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^	public function testNoDoubleNewlinesInHeaders() {$/;"	f
testPluginCustomViewClass	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^	public function testPluginCustomViewClass() {$/;"	f
testReset	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^	public function testReset() {$/;"	f
testSendAsIsNotIgnoredIfAttachmentsPresent	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^	public function testSendAsIsNotIgnoredIfAttachmentsPresent() {$/;"	f
testSendContentArray	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^	public function testSendContentArray() {$/;"	f
testSendDebug	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^	public function testSendDebug() {$/;"	f
testSendDebugWithNoSessions	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^	public function testSendDebugWithNoSessions() {$/;"	f
testSendFormats	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^	public function testSendFormats() {$/;"	f
testSendWithAttachments	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^	public function testSendWithAttachments() {$/;"	f
testStartup	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^	public function testStartup() {$/;"	f
testTemplateNestedElements	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^	public function testTemplateNestedElements() {$/;"	f
testTemplates	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^	public function testTemplates() {$/;"	f
text	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$text = $html = "This is the body of the message\\n";$/;"	v
text	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$text = <<<TEXTBLOC$/;"	v
timestamp	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$timestamp = time();$/;"	v
to	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^		$to = $headers['To'];$/;"	v
uses	lib/Cake/Test/Case/Controller/Component/EmailComponentTest.php	/^	public $uses = null;$/;"	v
Controller	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$Controller = new Controller($this->request);$/;"	v
Controller	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$Controller = new PaginatorTestController($this->request);$/;"	v
Controller	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$this->Controller = new Controller($this->request);$/;"	v
ControllerPaginateModel	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^class ControllerPaginateModel extends CakeTestModel {$/;"	c
Paginator	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$this->Paginator = new PaginatorComponent($this->getMock('ComponentCollection'), array());$/;"	v
PaginatorAuthor	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^class PaginatorAuthor extends CakeTestModel {$/;"	c
PaginatorComponentTest	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^class PaginatorComponentTest extends CakeTestCase {$/;"	c
PaginatorControllerComment	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^class PaginatorControllerComment extends CakeTestModel {$/;"	c
PaginatorControllerPost	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^class PaginatorControllerPost extends CakeTestModel {$/;"	c
PaginatorCustomPost	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^class PaginatorCustomPost extends CakeTestModel {$/;"	c
PaginatorTestController	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^class PaginatorTestController extends Controller {$/;"	c
_findPublished	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	protected function _findPublished($state, $query, $results = array()) {$/;"	f
_findTotals	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	protected function _findTotals($state, $query, $results = array()) {$/;"	f
_findTotalsOperation	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	protected function _findTotalsOperation($state, $query, $results = array()) {$/;"	f
alias	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public $alias = 'PaginatorControllerComment';$/;"	v
beforeFind	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function beforeFind($query) {$/;"	f
belongsTo	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public $belongsTo = array('Author');$/;"	v
belongsTo	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public $belongsTo = array('PaginatorAuthor' => array('foreignKey' => 'author_id'));$/;"	v
components	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public $components = array('Paginator');$/;"	v
conditions	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^			$conditions = array($this->name . '.' . $this->primaryKey . ' > ' => '1');$/;"	v
data	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$data = array('author_id' => 2, 'title' => 'Fourth Article', 'body' => 'Article Body, unpublished', 'published' => 'N');$/;"	v
data	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$data = array('author_id' => 3, 'title' => 'Fourth Article', 'body' => 'Article Body, unpublished', 'published' => 'N');$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$expected = array('2007-03-18 10:43:23', '2007-03-18 10:41:23', '2007-03-18 10:39:23');$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$expected = array('PaginatorControllerPost.created' => 'asc');$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$expected = array('body' => 'asc');$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$expected = array('page' => 1, 'limit' => 10, 'paramType' => 'named', 'maxLimit' => 50);$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$expected = array('page' => 1, 'limit' => 20, 'maxLimit' => 10, 'paramType' => 'named');$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$expected = array('page' => 1, 'limit' => 200, 'maxLimit' => 200, 'paramType' => 'named');$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$expected = array('page' => 1, 'limit' => 500, 'maxLimit' => 150, 'paramType' => 'named');$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$expected = array('page' => 10, 'limit' => 10, 'maxLimit' => 100, 'paramType' => 'named');$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$expected = array('page' => 10, 'limit' => 10, 'maxLimit' => 100, 'paramType' => 'named', 'findType' => 'myCustomFind');$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$expected = array('page' => 99, 'limit' => 75, 'maxLimit' => 100, 'paramType' => 'querystring');$/;"	v
extra	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$this->extra = $extra;$/;"	v
extraCount	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$this->extraCount = $extra;$/;"	v
find	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function find($conditions = null, $fields = array(), $order = null, $recursive = null) {$/;"	f
findMethods	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public $findMethods = array($/;"	v
fixtures	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public $fixtures = array('core.post', 'core.comment', 'core.author');$/;"	v
invalidFields	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public $invalidFields = array('name' => 'error_msg');$/;"	v
lastQueries	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public $lastQueries = array();$/;"	v
model	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$model = $this->getMock('Model');$/;"	v
name	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public $name = 'Comment';$/;"	v
options	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^			$options = Hash::merge($fields, compact('conditions'));$/;"	v
options	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$options = array($/;"	v
options	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$options = array('direction' => 'asc');$/;"	v
options	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$options = array('order' => 'invalid desc');$/;"	v
options	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$options = array('sort' => 'Child.something', 'direction' => 'desc');$/;"	v
options	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$options = array('sort' => 'Derp.id');$/;"	v
options	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$options = array('sort' => 'body', 'direction' => 'asc');$/;"	v
options	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$options = array('sort' => 'something', 'direction' => 'boogers');$/;"	v
options	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$options = array('sort' => 'something', 'direction' => 'desc');$/;"	v
paginate	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function paginate($conditions, $fields, $order, $limit, $page, $recursive, $extra) {$/;"	f
paginateCount	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function paginateCount($conditions, $recursive, $extra) {$/;"	f
paging	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$paging = $Controller->params['paging']['PaginatorControllerPost'];$/;"	v
request	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$this->request = new CakeRequest('controller_posts\/index');$/;"	v
result	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$result = $Controller->Paginator->paginate('ControllerPaginateModel');$/;"	v
result	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$result = $Controller->Paginator->paginate('PaginatorControllerPost');$/;"	v
result	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$result = $Controller->Paginator->validateSort($Controller->PaginatorControllerPost, array());$/;"	v
result	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$result = $Controller->PaginatorCustomPost->save();$/;"	v
result	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$result = $Controller->paginate();$/;"	v
result	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$result = $Controller->params['paging']['PaginatorCustomPost'];$/;"	v
result	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$result = $this->Paginator->checkLimit(array('limit' => '-1', 'maxLimit' => 100));$/;"	v
result	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$result = $this->Paginator->checkLimit(array('limit' => 'sheep!', 'maxLimit' => 100));$/;"	v
result	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$result = $this->Paginator->checkLimit(array('limit' => 0, 'maxLimit' => 100));$/;"	v
result	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$result = $this->Paginator->checkLimit(array('limit' => 1000000, 'maxLimit' => 100));$/;"	v
result	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$result = $this->Paginator->checkLimit(array('limit' => null, 'maxLimit' => 100));$/;"	v
result	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$result = $this->Paginator->mergeOptions('Post');$/;"	v
result	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$result = $this->Paginator->mergeOptions('Silly');$/;"	v
result	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$result = $this->Paginator->validateSort($model, $options);$/;"	v
result	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$result = $this->Paginator->validateSort($model, $options, array('body'));$/;"	v
result	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$result = $this->Paginator->validateSort($model, $options, array('title', 'id'));$/;"	v
result	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$result = Hash::extract($/;"	v
result1	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$result1 = array_splice($result, 0, 2);$/;"	v
results	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$results = Hash::extract($Controller->Paginator->paginate('PaginatorControllerComment'), '{n}.PaginatorControllerComment.id');$/;"	v
results	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$results = Hash::extract($Controller->Paginator->paginate('PaginatorControllerPost'), '{n}.PaginatorControllerPost.id');$/;"	v
results	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$results = Hash::extract($Controller->Paginator->paginate(), '{n}.PaginatorControllerPost.id');$/;"	v
setUp	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function setUp() {$/;"	f
testCheckLimit	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testCheckLimit() {$/;"	f
testDefaultPaginateParams	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testDefaultPaginateParams() {$/;"	f
testMergeOptionsCustomFindKey	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testMergeOptionsCustomFindKey() {$/;"	f
testMergeOptionsDefaultWhiteList	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testMergeOptionsDefaultWhiteList() {$/;"	f
testMergeOptionsExtraWhitelist	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testMergeOptionsExtraWhitelist() {$/;"	f
testMergeOptionsMaxLimit	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testMergeOptionsMaxLimit() {$/;"	f
testMergeOptionsModelSpecific	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testMergeOptionsModelSpecific() {$/;"	f
testMergeOptionsNamedParams	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testMergeOptionsNamedParams() {$/;"	f
testMergeOptionsQueryString	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testMergeOptionsQueryString() {$/;"	f
testOutOfRangePageNumberAndPageCountZero	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testOutOfRangePageNumberAndPageCountZero() {$/;"	f
testOutOfRangePageNumberGetsClamped	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testOutOfRangePageNumberGetsClamped() {$/;"	f
testOutOfVeryBigPageNumberGetsClamped	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testOutOfVeryBigPageNumberGetsClamped() {$/;"	f
testPageParamCasting	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testPageParamCasting() {$/;"	f
testPaginate	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testPaginate() {$/;"	f
testPaginateCustomFind	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testPaginateCustomFind() {$/;"	f
testPaginateCustomFindCount	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testPaginateCustomFindCount() {$/;"	f
testPaginateCustomFindFieldsArray	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testPaginateCustomFindFieldsArray() {$/;"	f
testPaginateCustomFindGroupBy	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testPaginateCustomFindGroupBy() {$/;"	f
testPaginateCustomFindWithCustomFindKey	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testPaginateCustomFindWithCustomFindKey() {$/;"	f
testPaginateExtraParams	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testPaginateExtraParams() {$/;"	f
testPaginateMaxLimit	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testPaginateMaxLimit() {$/;"	f
testPaginateMissingModel	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testPaginateMissingModel() {$/;"	f
testPaginateOrderModelDefault	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testPaginateOrderModelDefault() {$/;"	f
testPaginateOrderVirtualField	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testPaginateOrderVirtualField() {$/;"	f
testPaginateOrderVirtualFieldJoinedModel	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testPaginateOrderVirtualFieldJoinedModel() {$/;"	f
testPaginateOrderVirtualFieldSharedWithRealField	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testPaginateOrderVirtualFieldSharedWithRealField() {$/;"	f
testPaginateSpecialType	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testPaginateSpecialType() {$/;"	f
testValidateSortInvalidAlias	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testValidateSortInvalidAlias() {$/;"	f
testValidateSortInvalidDirection	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testValidateSortInvalidDirection() {$/;"	f
testValidateSortMultiple	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testValidateSortMultiple() {$/;"	f
testValidateSortNoSort	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testValidateSortNoSort() {$/;"	f
testValidateSortSharedFields	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testValidateSortSharedFields() {$/;"	f
testValidateSortVirtualField	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testValidateSortVirtualField() {$/;"	f
testValidateSortWhitelistFailure	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testValidateSortWhitelistFailure() {$/;"	f
testValidateSortWhitelistTrusted	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public function testValidateSortWhitelistTrusted() {$/;"	f
useTable	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public $useTable = 'authors';$/;"	v
useTable	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public $useTable = 'comments';$/;"	v
useTable	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public $useTable = 'posts';$/;"	v
virtualFields	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^		$this->virtualFields = array();$/;"	v
virtualFields	lib/Cake/Test/Case/Controller/Component/PaginatorComponentTest.php	/^	public $virtualFields = array($/;"	v
Collection	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^		$Collection = new ComponentCollection();$/;"	v
Controller	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^		$this->Controller = new RequestHandlerTestController($request, $response);$/;"	v
Controller	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public $Controller;$/;"	v
CustomJsonView	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^class CustomJsonView extends JsonView {$/;"	c
RequestHandler	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^		$RequestHandler = $this->getMock('RequestHandlerComponent', array('_stop'), array(&$this->Controller->Components));$/;"	v
RequestHandler	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^		$RequestHandler = new RequestHandlerComponent($Collection, $settings);$/;"	v
RequestHandler	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^		$this->RequestHandler = $this->getMock($/;"	v
RequestHandler	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^		$this->RequestHandler = new RequestHandlerComponent($this->Controller->Components);$/;"	v
RequestHandler	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public $RequestHandler;$/;"	v
RequestHandlerComponentTest	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^class RequestHandlerComponentTest extends CakeTestCase {$/;"	c
RequestHandlerTestController	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^class RequestHandlerTestController extends Controller {$/;"	c
_extensions	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^		$this->_extensions = Router::extensions();$/;"	v
_init	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	protected function _init() {$/;"	f
ajax2_layout	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function ajax2_layout() {$/;"	f
autoRender	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^		$this->autoRender = false;$/;"	v
controller	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^		$controller = $this->getMock('Controller', array('header'));$/;"	v
destination	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function destination() {$/;"	f
expected	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^		$expected = array('application\/xml', 'application\/javascript', 'application\/json');$/;"	v
extensions	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^		$extensions = Router::extensions();$/;"	v
layout	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^			$this->layout = 'ajax2';$/;"	v
param_method	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function param_method($one = null, $two = null) {$/;"	f
request	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^		$request = $this->getMock('CakeRequest');$/;"	v
request	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^		$request = new CakeRequest('controller_posts\/index');$/;"	v
response	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^		$response = new CakeResponse();$/;"	v
result	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^		$result = $this->RequestHandler->mapAlias('text\/html');$/;"	v
result	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^		$result = $this->RequestHandler->mapAlias('wap');$/;"	v
result	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^		$result = $this->RequestHandler->mapAlias('xml');$/;"	v
result	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^		$result = $this->RequestHandler->mapAlias(array('xml', 'js', 'json'));$/;"	v
result	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^		$result = $this->RequestHandler->requestedWith(array('json', 'xml'));$/;"	v
result	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^		$result = $this->RequestHandler->requestedWith(array('rss', 'atom'));$/;"	v
result	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^		$result = $this->RequestHandler->respondAs('json');$/;"	v
result	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^		$result = $this->RequestHandler->respondAs('text\/xml');$/;"	v
result	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^		$result = $this->RequestHandler->respondAs('xml', array('attachment' => 'myfile.xml'));$/;"	v
result	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^		$result = $this->RequestHandler->viewClassMap('xls', 'Excel.Excel');$/;"	v
result	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^		$result = $this->RequestHandler->viewClassMap();$/;"	v
result	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^		$result = ob_get_clean();$/;"	v
setUp	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function setUp() {$/;"	f
settings	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^		$settings = array($/;"	v
tearDown	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function tearDown() {$/;"	f
testAccepts	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testAccepts() {$/;"	f
testAddInputTypeException	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testAddInputTypeException() {$/;"	f
testAjaxRedirectAsRequestAction	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testAjaxRedirectAsRequestAction() {$/;"	f
testAjaxRedirectAsRequestActionStillRenderingLayout	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testAjaxRedirectAsRequestActionStillRenderingLayout() {$/;"	f
testAjaxRedirectWithNoUrl	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testAjaxRedirectWithNoUrl() {$/;"	f
testAutoAjaxLayout	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testAutoAjaxLayout() {$/;"	f
testBeforeRedirectCallbackWithArrayUrl	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testBeforeRedirectCallbackWithArrayUrl() {$/;"	f
testBeforeRedirectCallingHeader	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testBeforeRedirectCallingHeader() {$/;"	f
testCheckNotModifiedByEtagAndTime	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testCheckNotModifiedByEtagAndTime() {$/;"	f
testCheckNotModifiedByEtagExact	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testCheckNotModifiedByEtagExact() {$/;"	f
testCheckNotModifiedByEtagStar	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testCheckNotModifiedByEtagStar() {$/;"	f
testCheckNotModifiedNoInfo	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testCheckNotModifiedNoInfo() {$/;"	f
testClientProperties	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testClientProperties() {$/;"	f
testConstructorSettings	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testConstructorSettings() {$/;"	f
testCustomContent	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testCustomContent() {$/;"	f
testDisabling	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testDisabling() {$/;"	f
testFlashDetection	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testFlashDetection() {$/;"	f
testInitializeAmbiguousAndroidAccepts	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testInitializeAmbiguousAndroidAccepts() {$/;"	f
testInitializeCallback	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testInitializeCallback() {$/;"	f
testInitializeContentTypeAndExtensionMismatch	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testInitializeContentTypeAndExtensionMismatch() {$/;"	f
testInitializeContentTypeSettingExt	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testInitializeContentTypeSettingExt() {$/;"	f
testInitializeContentTypeWithMultipleAcceptedTypes	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testInitializeContentTypeWithMultipleAcceptedTypes() {$/;"	f
testInitializeContentTypeWithjQueryAccept	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testInitializeContentTypeWithjQueryAccept() {$/;"	f
testInitializeContentTypeWithjQueryAcceptAndMultiplesExtensions	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testInitializeContentTypeWithjQueryAcceptAndMultiplesExtensions() {$/;"	f
testInitializeNoContentTypeWithMultipleAcceptedTypes	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testInitializeNoContentTypeWithMultipleAcceptedTypes() {$/;"	f
testInitializeNoContentTypeWithSingleAccept	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testInitializeNoContentTypeWithSingleAccept() {$/;"	f
testInititalizeFirefoxHeaderNotXml	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testInititalizeFirefoxHeaderNotXml() {$/;"	f
testMapAlias	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testMapAlias() {$/;"	f
testMobileDeviceDetection	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testMobileDeviceDetection() {$/;"	f
testNonAjaxRedirect	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testNonAjaxRedirect() {$/;"	f
testPrefers	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testPrefers() {$/;"	f
testRenderAs	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testRenderAs() {$/;"	f
testRenderAsCalledTwice	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testRenderAsCalledTwice() {$/;"	f
testRenderAsWithAttachment	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testRenderAsWithAttachment() {$/;"	f
testRequestClientTypes	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testRequestClientTypes() {$/;"	f
testRequestContentTypes	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testRequestContentTypes() {$/;"	f
testRequestMethod	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testRequestMethod() {$/;"	f
testRequestProperties	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testRequestProperties() {$/;"	f
testRespondAs	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testRespondAs() {$/;"	f
testRespondAsWithAttachment	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testRespondAsWithAttachment() {$/;"	f
testResponseContentType	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testResponseContentType() {$/;"	f
testStartupCallback	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testStartupCallback() {$/;"	f
testStartupCallbackCharset	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testStartupCallbackCharset() {$/;"	f
testStartupCustomTypeProcess	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testStartupCustomTypeProcess() {$/;"	f
testViewClassMap	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public function testViewClassMap() {$/;"	f
uses	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^	public $uses = null;$/;"	v
viewPath	lib/Cake/Test/Case/Controller/Component/RequestHandlerComponentTest.php	/^		$this->viewPath = 'Posts';$/;"	v
BrokenCallbackController	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^class BrokenCallbackController extends Controller {$/;"	c
Controller	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$this->Controller = new BrokenCallbackController($request);$/;"	v
Controller	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$this->Controller = new SecurityTestController($request);$/;"	v
Controller	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public $Controller;$/;"	v
Security	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$Security = new SecurityComponent($this->Controller->Components, $settings);$/;"	v
Security	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$this->Security = $this->Controller->Security;$/;"	v
SecurityComponentTest	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^class SecurityComponentTest extends CakeTestCase {$/;"	c
SecurityTestController	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^class SecurityTestController extends Controller {$/;"	c
TestSecurityComponent	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^class TestSecurityComponent extends SecurityComponent {$/;"	c
_fail	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	protected function _fail() {$/;"	f
attack	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$attack = 'O:3:"App":1:{s:5:"__map";a:1:{s:3:"foo";s:7:"Hacked!";s:1:"fail"}}';$/;"	v
components	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public $components = array('Session', 'TestSecurity');$/;"	v
csrfExpires	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$csrfExpires = strtotime('+10 minutes');$/;"	v
diff	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^			$diff = $csrfExpires - $expires;$/;"	v
fail	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function fail() {$/;"	f
failed	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$this->failed = true;$/;"	v
failed	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public $failed = false;$/;"	v
fields	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$fields = '01c1f6dbba02ac6f21b229eab1cc666839b14303%3AModel.valid';$/;"	v
fields	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$fields = '216ee717efd1a251a6d6e9efbb96005a9d09f1eb%3An%3A0%3A%7B%7D';$/;"	v
fields	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$fields = '38504e4a341d4e6eadb437217efd91270e558d55%3A';$/;"	v
fields	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$fields = '38dd8a37bbb52e67ee4eb812bf1725a6a18b989b%3AModel.valid%7CModel2.valid%7CModel3.valid';$/;"	v
fields	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$fields = '3be63770e7953c6d2119f5377a9303372040f66f%3An%3A0%3A%7B%7D';$/;"	v
fields	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$fields = '5415d31b4483c1e09ddb58d2a91ba9650b12aa83%3A';$/;"	v
fields	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$fields = '722de3615e63fdff899e86e85e6498b11c50bb66%3A';$/;"	v
fields	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$fields = '7a203edb3d345bbf38fe0dccae960da8842e11d7%3AAddress.0.id%7CAddress.0.primary%7C';$/;"	v
fields	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$fields = '8a764bdb989132c1d46f9a45f64ce2da5f9eebb9%3A';$/;"	v
fields	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$fields = '8b6880fbbd4b69279155f899652ecffdd9b4c5a1%3AAddress.0.id%7CAddress.0.primary%7C';$/;"	v
fields	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$fields = 'a5475372b40f6e3ccbf9f8af191f20e1642fd877%3AModel.valid';$/;"	v
fields	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$fields = 'a5475372b40f6e3ccbf9f8af191f20e1642fd877';$/;"	v
fields	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$fields = 'aa7f254ebd8bf2ef118bc5ca1e191d1ae96857f5%3AModel.hidden';$/;"	v
fields	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$fields = 'b72a99e923687687bb5e64025d3cc65e1cecced4%3AAddresses.0.id%7CAddresses.1.id';$/;"	v
fields	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$fields = 'baaf832a714b39a0618238ac89c7065fc8ec853e%3AModel.hidden%7CModel.other_hidden';$/;"	v
fields	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$fields = 'c5bc49a6c938c820e7e538df3d8ab7bffbc97ef9%3A';$/;"	v
fields	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$fields = 'dcef68de6634c60d2e60484ad0e2faec003456e6%3AModel.0.hidden%7CModel.0.valid';$/;"	v
fields	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$fields = 'efbcf463a2c31e97c85d95eedc41dff9e9c6a026%3A';$/;"	v
fields	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$fields = array('Model.hidden', 'Model.password');$/;"	v
fields	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$fields = array('Model.hidden', 'Model.password', 'Model.username');$/;"	v
fields	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$fields = urlencode($/;"	v
fields	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$fields = urlencode(Security::hash($/;"	v
fields	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$fields = urlencode(Security::hash(serialize($fields) . $unlocked . Configure::read('Security.salt')));$/;"	v
fields	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$fields = urlencode(Security::hash(serialize($fields) . Configure::read('Security.salt')));$/;"	v
hashFields	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$hashFields = array('TaxonomyData');$/;"	v
header	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function header($status) {$/;"	f
index	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function index() {$/;"	f
key	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$key = $this->Controller->params['_Token']['key'];$/;"	v
key	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$key = $this->Controller->request->params['_Token']['key'];$/;"	v
name	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public $name = 'UncallableCallback';$/;"	v
oldSalt	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public $oldSalt;$/;"	v
redirect	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function redirect($url, $status = null, $exit = true) {$/;"	f
request	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$request = $this->Controller->request;$/;"	v
request	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$request = $this->getMock('CakeRequest', array('here'), array('articles\/edit\/1', false));$/;"	v
request	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$request = $this->getMock('CakeRequest', array('here'), array('posts\/index', false));$/;"	v
request	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$request = new CakeRequest('posts\/index', false);$/;"	v
result	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$result = $this->Controller->Security->startup($this->Controller);$/;"	v
result	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$result = $this->Controller->Security->validatePost($this->Controller);$/;"	v
result	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$result = $this->Controller->params['_Token']['key'];$/;"	v
result	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$result = $this->Security->Session->read('_Token.csrfTokens');$/;"	v
setUp	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function setUp() {$/;"	f
settings	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$settings = array($/;"	v
tearDown	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function tearDown() {$/;"	f
testBlackHoleNotDeletingSessionInformation	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testBlackHoleNotDeletingSessionInformation() {$/;"	f
testBlackholeWithBrokenCallback	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testBlackholeWithBrokenCallback() {$/;"	f
testConstructorSettingProperties	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testConstructorSettingProperties() {$/;"	f
testCsrfBlackHoleOnExpiredKey	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testCsrfBlackHoleOnExpiredKey() {$/;"	f
testCsrfBlackHoleOnKeyMismatch	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testCsrfBlackHoleOnKeyMismatch() {$/;"	f
testCsrfLimit	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testCsrfLimit() {$/;"	f
testCsrfNonceConsumption	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testCsrfNonceConsumption() {$/;"	f
testCsrfNonceVacuum	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testCsrfNonceVacuum() {$/;"	f
testCsrfNotUseOnce	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testCsrfNotUseOnce() {$/;"	f
testCsrfNotUseOnceValidationLeavingToken	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testCsrfNotUseOnceValidationLeavingToken() {$/;"	f
testCsrfSettingMultipleNonces	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testCsrfSettingMultipleNonces() {$/;"	f
testCsrfSettings	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testCsrfSettings() {$/;"	f
testCsrfSkipRequestAction	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testCsrfSkipRequestAction() {$/;"	f
testExceptionWhenActionIsBlackholeCallback	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testExceptionWhenActionIsBlackholeCallback() {$/;"	f
testFormDisabledFields	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testFormDisabledFields() {$/;"	f
testGenerateToken	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testGenerateToken() {$/;"	f
testHeaders	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public $testHeaders = array();$/;"	v
testRequireAuthFail	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testRequireAuthFail() {$/;"	f
testRequireAuthSucceed	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testRequireAuthSucceed() {$/;"	f
testRequireDeleteFail	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testRequireDeleteFail() {$/;"	f
testRequireDeleteSucceed	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testRequireDeleteSucceed() {$/;"	f
testRequireDeleteSucceedWrongMethod	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testRequireDeleteSucceedWrongMethod() {$/;"	f
testRequireGetFail	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testRequireGetFail() {$/;"	f
testRequireGetSucceed	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testRequireGetSucceed() {$/;"	f
testRequireGetSucceedWrongMethod	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testRequireGetSucceedWrongMethod() {$/;"	f
testRequirePostFail	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testRequirePostFail() {$/;"	f
testRequirePostSucceed	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testRequirePostSucceed() {$/;"	f
testRequirePostSucceedWrongMethod	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testRequirePostSucceedWrongMethod() {$/;"	f
testRequirePutFail	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testRequirePutFail() {$/;"	f
testRequirePutSucceed	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testRequirePutSucceed() {$/;"	f
testRequirePutSucceedWrongMethod	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testRequirePutSucceedWrongMethod() {$/;"	f
testRequireSecureFail	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testRequireSecureFail() {$/;"	f
testRequireSecureSucceed	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testRequireSecureSucceed() {$/;"	f
testSettingTokenForRequestAction	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testSettingTokenForRequestAction() {$/;"	f
testStartup	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testStartup() {$/;"	f
testUnlockedActions	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testUnlockedActions() {$/;"	f
testValidateHasManyModel	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testValidateHasManyModel() {$/;"	f
testValidateHasManyRecordsFail	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testValidateHasManyRecordsFail() {$/;"	f
testValidateHasManyRecordsPass	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testValidateHasManyRecordsPass() {$/;"	f
testValidateHiddenMultipleModel	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testValidateHiddenMultipleModel() {$/;"	f
testValidateNestedNumericSets	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testValidateNestedNumericSets() {$/;"	f
testValidatePost	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testValidatePost() {$/;"	f
testValidatePostArray	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testValidatePostArray() {$/;"	f
testValidatePostCheckbox	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testValidatePostCheckbox() {$/;"	f
testValidatePostComplex	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testValidatePostComplex() {$/;"	f
testValidatePostDisabledFieldsInData	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testValidatePostDisabledFieldsInData() {$/;"	f
testValidatePostFailDisabledFieldTampering	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testValidatePostFailDisabledFieldTampering() {$/;"	f
testValidatePostFailNoDisabled	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testValidatePostFailNoDisabled() {$/;"	f
testValidatePostFormHacking	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testValidatePostFormHacking() {$/;"	f
testValidatePostHidden	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testValidatePostHidden() {$/;"	f
testValidatePostMultipleSelect	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testValidatePostMultipleSelect() {$/;"	f
testValidatePostNoModel	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testValidatePostNoModel() {$/;"	f
testValidatePostNoSession	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testValidatePostNoSession() {$/;"	f
testValidatePostObjectDeserialize	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testValidatePostObjectDeserialize() {$/;"	f
testValidatePostRadio	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testValidatePostRadio() {$/;"	f
testValidatePostSimple	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testValidatePostSimple() {$/;"	f
testValidatePostUrlAsHashInput	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testValidatePostUrlAsHashInput() {$/;"	f
testValidatePostWithDisabledFields	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function testValidatePostWithDisabledFields() {$/;"	f
time	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$time = strtotime('+10 minutes');$/;"	v
token	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$token = $this->Security->Session->read('_Token');$/;"	v
token	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$token = $this->Security->Session->read('_Token.csrfTokens');$/;"	v
tokenTwo	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$tokenTwo = $this->Security->Session->read('_Token.csrfTokens');$/;"	v
tokens	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$tokens = $this->Security->Session->read('_Token.csrfTokens');$/;"	v
tokens	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$tokens = array($/;"	v
unlocked	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$unlocked = '';$/;"	v
unlocked	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$unlocked = 'Model.username';$/;"	v
unlocked	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^		$unlocked = 'Model.username|Model.password';$/;"	v
validatePost	lib/Cake/Test/Case/Controller/Component/SecurityComponentTest.php	/^	public function validatePost(Controller $controller) {$/;"	f
ComponentCollection	lib/Cake/Test/Case/Controller/Component/SessionComponentTest.php	/^		$this->ComponentCollection = new ComponentCollection();$/;"	v
Object	lib/Cake/Test/Case/Controller/Component/SessionComponentTest.php	/^		$Object = new Object();$/;"	v
OrangeSessionTestController	lib/Cake/Test/Case/Controller/Component/SessionComponentTest.php	/^class OrangeSessionTestController extends Controller {$/;"	c
Session	lib/Cake/Test/Case/Controller/Component/SessionComponentTest.php	/^		$Session = new SessionComponent($this->ComponentCollection);$/;"	v
SessionComponentTest	lib/Cake/Test/Case/Controller/Component/SessionComponentTest.php	/^class SessionComponentTest extends CakeTestCase {$/;"	c
SessionTestController	lib/Cake/Test/Case/Controller/Component/SessionComponentTest.php	/^class SessionTestController extends Controller {$/;"	c
_SESSION	lib/Cake/Test/Case/Controller/Component/SessionComponentTest.php	/^		$_SESSION = null;$/;"	v
_sessionBackup	lib/Cake/Test/Case/Controller/Component/SessionComponentTest.php	/^	protected static $_sessionBackup;$/;"	v
array	lib/Cake/Test/Case/Controller/Component/SessionComponentTest.php	/^		$array = array('key1' => 'val1', 'key2' => 'val2', 'key3' => 'val3');$/;"	v
expected	lib/Cake/Test/Case/Controller/Component/SessionComponentTest.php	/^		$expected = $Session->id();$/;"	v
fixtures	lib/Cake/Test/Case/Controller/Component/SessionComponentTest.php	/^	public $fixtures = array('core.session');$/;"	v
result	lib/Cake/Test/Case/Controller/Component/SessionComponentTest.php	/^		$result = $Object->requestAction('\/orange_session_test\/sessionId');$/;"	v
result	lib/Cake/Test/Case/Controller/Component/SessionComponentTest.php	/^		$result = $Object->requestAction('\/session_test\/sessionId');$/;"	v
sessionId	lib/Cake/Test/Case/Controller/Component/SessionComponentTest.php	/^	public function sessionId() {$/;"	f
setUp	lib/Cake/Test/Case/Controller/Component/SessionComponentTest.php	/^	public function setUp() {$/;"	f
setupBeforeClass	lib/Cake/Test/Case/Controller/Component/SessionComponentTest.php	/^	public static function setupBeforeClass() {$/;"	f
tearDown	lib/Cake/Test/Case/Controller/Component/SessionComponentTest.php	/^	public function tearDown() {$/;"	f
teardownAfterClass	lib/Cake/Test/Case/Controller/Component/SessionComponentTest.php	/^	public static function teardownAfterClass() {$/;"	f
testSessionCheck	lib/Cake/Test/Case/Controller/Component/SessionComponentTest.php	/^	public function testSessionCheck() {$/;"	f
testSessionDelete	lib/Cake/Test/Case/Controller/Component/SessionComponentTest.php	/^	public function testSessionDelete() {$/;"	f
testSessionDestroy	lib/Cake/Test/Case/Controller/Component/SessionComponentTest.php	/^	public function testSessionDestroy() {$/;"	f
testSessionError	lib/Cake/Test/Case/Controller/Component/SessionComponentTest.php	/^	public function testSessionError() {$/;"	f
testSessionFlash	lib/Cake/Test/Case/Controller/Component/SessionComponentTest.php	/^	public function testSessionFlash() {$/;"	f
testSessionId	lib/Cake/Test/Case/Controller/Component/SessionComponentTest.php	/^	public function testSessionId() {$/;"	f
testSessionIdConsistentAcrossRequestAction	lib/Cake/Test/Case/Controller/Component/SessionComponentTest.php	/^	public function testSessionIdConsistentAcrossRequestAction() {$/;"	f
testSessionReadWrite	lib/Cake/Test/Case/Controller/Component/SessionComponentTest.php	/^	public function testSessionReadWrite() {$/;"	f
testSessionValid	lib/Cake/Test/Case/Controller/Component/SessionComponentTest.php	/^	public function testSessionValid() {$/;"	f
uses	lib/Cake/Test/Case/Controller/Component/SessionComponentTest.php	/^	public $uses = array();$/;"	v
ComponentCollectionTest	lib/Cake/Test/Case/Controller/ComponentCollectionTest.php	/^class ComponentCollectionTest extends CakeTestCase {$/;"	c
Components	lib/Cake/Test/Case/Controller/ComponentCollectionTest.php	/^		$this->Components = new ComponentCollection();$/;"	v
CookieAliasComponent	lib/Cake/Test/Case/Controller/ComponentCollectionTest.php	/^class CookieAliasComponent extends CookieComponent {$/;"	c
controller	lib/Cake/Test/Case/Controller/ComponentCollectionTest.php	/^		$controller = $this->getMock('Controller');$/;"	v
result	lib/Cake/Test/Case/Controller/ComponentCollectionTest.php	/^		$result = $this->Components->enabled();$/;"	v
result	lib/Cake/Test/Case/Controller/ComponentCollectionTest.php	/^		$result = $this->Components->getController();$/;"	v
result	lib/Cake/Test/Case/Controller/ComponentCollectionTest.php	/^		$result = $this->Components->load('Cookie');$/;"	v
result	lib/Cake/Test/Case/Controller/ComponentCollectionTest.php	/^		$result = $this->Components->load('Cookie', array('className' => 'CookieAlias', 'somesetting' => true));$/;"	v
result	lib/Cake/Test/Case/Controller/ComponentCollectionTest.php	/^		$result = $this->Components->load('Cookie', array('enabled' => false));$/;"	v
result	lib/Cake/Test/Case/Controller/ComponentCollectionTest.php	/^		$result = $this->Components->load('SomeOther', array('className' => 'TestPlugin.Other'));$/;"	v
result	lib/Cake/Test/Case/Controller/ComponentCollectionTest.php	/^		$result = $this->Components->load('TestPlugin.Other');$/;"	v
result	lib/Cake/Test/Case/Controller/ComponentCollectionTest.php	/^		$result = $this->Components->loaded();$/;"	v
setUp	lib/Cake/Test/Case/Controller/ComponentCollectionTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Controller/ComponentCollectionTest.php	/^	public function tearDown() {$/;"	f
testGetController	lib/Cake/Test/Case/Controller/ComponentCollectionTest.php	/^	public function testGetController() {$/;"	f
testLoad	lib/Cake/Test/Case/Controller/ComponentCollectionTest.php	/^	public function testLoad() {$/;"	f
testLoadMissingComponent	lib/Cake/Test/Case/Controller/ComponentCollectionTest.php	/^	public function testLoadMissingComponent() {$/;"	f
testLoadPluginComponent	lib/Cake/Test/Case/Controller/ComponentCollectionTest.php	/^	public function testLoadPluginComponent() {$/;"	f
testLoadWithAlias	lib/Cake/Test/Case/Controller/ComponentCollectionTest.php	/^	public function testLoadWithAlias() {$/;"	f
testLoadWithEnableFalse	lib/Cake/Test/Case/Controller/ComponentCollectionTest.php	/^	public function testLoadWithEnableFalse() {$/;"	f
testUnload	lib/Cake/Test/Case/Controller/ComponentCollectionTest.php	/^	public function testUnload() {$/;"	f
Apple	lib/Cake/Test/Case/Controller/ComponentTest.php	/^		$Apple = $Collection->load('Apple');$/;"	v
Apple	lib/Cake/Test/Case/Controller/ComponentTest.php	/^		$Apple = new AppleComponent($Collection);$/;"	v
AppleComponent	lib/Cake/Test/Case/Controller/ComponentTest.php	/^class AppleComponent extends Component {$/;"	c
Banana	lib/Cake/Test/Case/Controller/ComponentTest.php	/^		$Banana = $Collection->load('Banana');$/;"	v
BananaComponent	lib/Cake/Test/Case/Controller/ComponentTest.php	/^class BananaComponent extends Component {$/;"	c
Collection	lib/Cake/Test/Case/Controller/ComponentTest.php	/^		$Collection = new ComponentCollection();$/;"	v
Component	lib/Cake/Test/Case/Controller/ComponentTest.php	/^		$Component = new AppleComponent($Collection);$/;"	v
ComponentTest	lib/Cake/Test/Case/Controller/ComponentTest.php	/^class ComponentTest extends CakeTestCase {$/;"	c
ComponentTestController	lib/Cake/Test/Case/Controller/ComponentTest.php	/^class ComponentTestController extends Controller {$/;"	c
Controller	lib/Cake/Test/Case/Controller/ComponentTest.php	/^		$Controller = new ComponentTestController();$/;"	v
Controller	lib/Cake/Test/Case/Controller/ComponentTest.php	/^		$this->Controller = $controller;$/;"	v
MutuallyReferencingOneComponent	lib/Cake/Test/Case/Controller/ComponentTest.php	/^class MutuallyReferencingOneComponent extends Component {$/;"	c
MutuallyReferencingTwoComponent	lib/Cake/Test/Case/Controller/ComponentTest.php	/^class MutuallyReferencingTwoComponent extends Component {$/;"	c
Orange	lib/Cake/Test/Case/Controller/ComponentTest.php	/^		$Orange = $Collection->load('Orange');$/;"	v
OrangeComponent	lib/Cake/Test/Case/Controller/ComponentTest.php	/^class OrangeComponent extends Component {$/;"	c
ParamTestComponent	lib/Cake/Test/Case/Controller/ComponentTest.php	/^class ParamTestComponent extends Component {$/;"	c
SomethingWithEmailComponent	lib/Cake/Test/Case/Controller/ComponentTest.php	/^class SomethingWithEmailComponent extends Component {$/;"	c
_pluginPaths	lib/Cake/Test/Case/Controller/ComponentTest.php	/^		$this->_pluginPaths = App::path('plugins');$/;"	v
components	lib/Cake/Test/Case/Controller/ComponentTest.php	/^	public $components = array('Banana' => array('config' => 'value'));$/;"	v
components	lib/Cake/Test/Case/Controller/ComponentTest.php	/^	public $components = array('Banana');$/;"	v
components	lib/Cake/Test/Case/Controller/ComponentTest.php	/^	public $components = array('Email');$/;"	v
components	lib/Cake/Test/Case/Controller/ComponentTest.php	/^	public $components = array('MutuallyReferencingOne');$/;"	v
components	lib/Cake/Test/Case/Controller/ComponentTest.php	/^	public $components = array('MutuallyReferencingTwo');$/;"	v
components	lib/Cake/Test/Case/Controller/ComponentTest.php	/^	public $components = array('Orange');$/;"	v
initialize	lib/Cake/Test/Case/Controller/ComponentTest.php	/^	public function initialize(Controller $controller) {$/;"	f
result	lib/Cake/Test/Case/Controller/ComponentTest.php	/^		$result = $Collection->enabled();$/;"	v
setUp	lib/Cake/Test/Case/Controller/ComponentTest.php	/^	public function setUp() {$/;"	f
startup	lib/Cake/Test/Case/Controller/ComponentTest.php	/^	public function startup(Controller $controller) {$/;"	f
testField	lib/Cake/Test/Case/Controller/ComponentTest.php	/^	public $testField = 'BananaField';$/;"	v
testInnerComponentConstruction	lib/Cake/Test/Case/Controller/ComponentTest.php	/^	public function testInnerComponentConstruction() {$/;"	f
testInnerComponentsAreNotEnabled	lib/Cake/Test/Case/Controller/ComponentTest.php	/^	public function testInnerComponentsAreNotEnabled() {$/;"	f
testMultipleComponentInitialize	lib/Cake/Test/Case/Controller/ComponentTest.php	/^	public function testMultipleComponentInitialize() {$/;"	f
testName	lib/Cake/Test/Case/Controller/ComponentTest.php	/^		$this->testName = $controller->name;$/;"	v
testName	lib/Cake/Test/Case/Controller/ComponentTest.php	/^	public $testName = null;$/;"	v
testNestedComponentLoading	lib/Cake/Test/Case/Controller/ComponentTest.php	/^	public function testNestedComponentLoading() {$/;"	f
testSomethingReferencingEmailComponent	lib/Cake/Test/Case/Controller/ComponentTest.php	/^	public function testSomethingReferencingEmailComponent() {$/;"	f
uses	lib/Cake/Test/Case/Controller/ComponentTest.php	/^	public $uses = array();$/;"	v
Controller	lib/Cake/Test/Case/Controller/ControllerMergeVarsTest.php	/^		$Controller = new Controller();$/;"	v
Controller	lib/Cake/Test/Case/Controller/ControllerMergeVarsTest.php	/^		$Controller = new MergePostsController();$/;"	v
Controller	lib/Cake/Test/Case/Controller/ControllerMergeVarsTest.php	/^		$Controller = new MergeVariablesController();$/;"	v
Controller	lib/Cake/Test/Case/Controller/ControllerMergeVarsTest.php	/^		$Controller = new MergeVariablescontroller();$/;"	v
ControllerMergeVarsTest	lib/Cake/Test/Case/Controller/ControllerMergeVarsTest.php	/^class ControllerMergeVarsTest extends CakeTestCase {$/;"	c
MergePostsController	lib/Cake/Test/Case/Controller/ControllerMergeVarsTest.php	/^class MergePostsController extends MergeVarPluginAppController {$/;"	c
MergeVarComponent	lib/Cake/Test/Case/Controller/ControllerMergeVarsTest.php	/^class MergeVarComponent extends Object {$/;"	c
MergeVarPluginAppController	lib/Cake/Test/Case/Controller/ControllerMergeVarsTest.php	/^class MergeVarPluginAppController extends MergeVarsAppController {$/;"	c
MergeVariablesController	lib/Cake/Test/Case/Controller/ControllerMergeVarsTest.php	/^class MergeVariablesController extends MergeVarsAppController {$/;"	c
MergeVarsAppController	lib/Cake/Test/Case/Controller/ControllerMergeVarsTest.php	/^class MergeVarsAppController extends Controller {$/;"	c
_mergeParent	lib/Cake/Test/Case/Controller/ControllerMergeVarsTest.php	/^	protected $_mergeParent = 'MergeVarsAppController';$/;"	v
components	lib/Cake/Test/Case/Controller/ControllerMergeVarsTest.php	/^	public $components = array('Auth' => array('setting' => 'val', 'otherVal'));$/;"	v
components	lib/Cake/Test/Case/Controller/ControllerMergeVarsTest.php	/^	public $components = array('MergeVar' => array('flag', 'otherFlag', 'redirect' => false));$/;"	v
expected	lib/Cake/Test/Case/Controller/ControllerMergeVarsTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Controller/ControllerMergeVarsTest.php	/^		$expected = array('MergeVar' => array('flag', 'otherFlag', 'redirect' => false));$/;"	v
expected	lib/Cake/Test/Case/Controller/ControllerMergeVarsTest.php	/^		$expected = array('MergeVar' => array('flag', 'otherFlag', 'redirect' => true, 'remote'));$/;"	v
expected	lib/Cake/Test/Case/Controller/ControllerMergeVarsTest.php	/^		$expected = array('MergeVar' => array('format' => 'html', 'terse'));$/;"	v
helpers	lib/Cake/Test/Case/Controller/ControllerMergeVarsTest.php	/^	public $helpers = array('Js');$/;"	v
helpers	lib/Cake/Test/Case/Controller/ControllerMergeVarsTest.php	/^	public $helpers = array('MergeVar' => array('format' => 'html', 'terse'));$/;"	v
testComponentMergingWithRedeclarations	lib/Cake/Test/Case/Controller/ControllerMergeVarsTest.php	/^	public function testComponentMergingWithRedeclarations() {$/;"	f
testComponentParamMergingNoDuplication	lib/Cake/Test/Case/Controller/ControllerMergeVarsTest.php	/^	public function testComponentParamMergingNoDuplication() {$/;"	f
testHelperOrderPrecedence	lib/Cake/Test/Case/Controller/ControllerMergeVarsTest.php	/^	public function testHelperOrderPrecedence() {$/;"	f
testHelperSettingMergingNoDuplication	lib/Cake/Test/Case/Controller/ControllerMergeVarsTest.php	/^	public function testHelperSettingMergingNoDuplication() {$/;"	f
testMergeVarsModelClass	lib/Cake/Test/Case/Controller/ControllerMergeVarsTest.php	/^	public function testMergeVarsModelClass() {$/;"	f
testMergeVarsNotGreedy	lib/Cake/Test/Case/Controller/ControllerMergeVarsTest.php	/^	public function testMergeVarsNotGreedy() {$/;"	f
testMergeVarsWithPlugin	lib/Cake/Test/Case/Controller/ControllerMergeVarsTest.php	/^	public function testMergeVarsWithPlugin() {$/;"	f
uses	lib/Cake/Test/Case/Controller/ControllerMergeVarsTest.php	/^	public $uses = array();$/;"	v
AnotherTestController	lib/Cake/Test/Case/Controller/ControllerTest.php	/^class AnotherTestController extends ControllerTestAppController {$/;"	c
Controller	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$Controller = $this->getMock('Controller', array('_stop', 'beforeRedirect'));$/;"	v
Controller	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$Controller = $this->getMock('Controller', array('afterFilter'));$/;"	v
Controller	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$Controller = $this->getMock('Controller', array('beforeFilter'));$/;"	v
Controller	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$Controller = $this->getMock('Controller', array('getEventManager'));$/;"	v
Controller	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$Controller = $this->getMock('Controller', array('header', '_stop'));$/;"	v
Controller	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$Controller = new Controller($request);$/;"	v
Controller	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$Controller = new Controller($request, $response);$/;"	v
Controller	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$Controller = new Controller($request, $this->getMock('CakeResponse'));$/;"	v
Controller	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$Controller = new Controller($request, $this->getMock('CakeResponse', array('_sendHeader')));$/;"	v
Controller	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$Controller = new Controller($request, new CakeResponse());$/;"	v
Controller	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$Controller = new Controller($this->getMock('CakeRequest'), new CakeResponse());$/;"	v
Controller	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$Controller = new Controller(null);$/;"	v
Controller	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$Controller = new Controller(null, $response);$/;"	v
Controller	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$Controller = new TestController($request);$/;"	v
Controller	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$Controller = new TestController($request, new CakeResponse());$/;"	v
Controller	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$Controller = new TestController($url, $response);$/;"	v
Controller	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$Controller = new TestPluginController();$/;"	v
Controller	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$Controller = new TestPluginController(new CakeRequest(), new CakeResponse());$/;"	v
ControllerAlias	lib/Cake/Test/Case/Controller/ControllerTest.php	/^class ControllerAlias extends CakeTestModel {$/;"	c
ControllerComment	lib/Cake/Test/Case/Controller/ControllerTest.php	/^class ControllerComment extends CakeTestModel {$/;"	c
ControllerCommentsController	lib/Cake/Test/Case/Controller/ControllerTest.php	/^class ControllerCommentsController extends ControllerTestAppController {$/;"	c
ControllerPost	lib/Cake/Test/Case/Controller/ControllerTest.php	/^class ControllerPost extends CakeTestModel {$/;"	c
ControllerTest	lib/Cake/Test/Case/Controller/ControllerTest.php	/^class ControllerTest extends CakeTestCase {$/;"	c
ControllerTestAppController	lib/Cake/Test/Case/Controller/ControllerTest.php	/^class ControllerTestAppController extends Controller {$/;"	c
NameTest	lib/Cake/Test/Case/Controller/ControllerTest.php	/^class NameTest extends CakeTestModel {$/;"	c
Post	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$Post = new ControllerPost();$/;"	v
Test2Component	lib/Cake/Test/Case/Controller/ControllerTest.php	/^class Test2Component extends TestComponent {$/;"	c
TestComponent	lib/Cake/Test/Case/Controller/ControllerTest.php	/^class TestComponent extends Object {$/;"	c
TestController	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$TestController = new AnotherTestController($request);$/;"	v
TestController	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$TestController = new ControllerCommentsController($request);$/;"	v
TestController	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$TestController = new TestController($request);$/;"	v
TestController	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$TestController = new TestController();$/;"	v
TestController	lib/Cake/Test/Case/Controller/ControllerTest.php	/^class TestController extends ControllerTestAppController {$/;"	c
View	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$View = $Controller->View;$/;"	v
__construct	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function __construct(ComponentCollection $collection, $settings) {$/;"	f
_hidden	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function _hidden() {$/;"	f
_mergeParent	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	protected $_mergeParent = 'ControllerTestAppController';$/;"	v
admin_add	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function admin_add() {$/;"	f
alias	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public $alias = 'ControllerComment';$/;"	v
alias	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public $alias = 'ControllerSomeAlias';$/;"	v
alias	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public $alias = 'Name';$/;"	v
appVars	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$appVars = get_class_vars('ControllerTestAppController');$/;"	v
beforeFind	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function beforeFind($query) {$/;"	f
beforeRedirect	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function beforeRedirect() {$/;"	f
beforeRender	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function beforeRender(Controller $controller) {$/;"	f
comment	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$comment = new ControllerComment($request);$/;"	v
components	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$components = is_array($appVars['components'])$/;"	v
components	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public $components = array('Cookie');$/;"	v
components	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public $components = array('Security');$/;"	v
conditions	lib/Cake/Test/Case/Controller/ControllerTest.php	/^			$conditions = array($this->name . '.' . $this->primaryKey . ' > ' => '1');$/;"	v
controller	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$this->controller = $collection->getController();$/;"	v
data	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$data = array($/;"	v
data	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$data = array();$/;"	v
data	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$this->data = array($/;"	v
data	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public $data = array('name' => 'Some Name');$/;"	v
eventManager	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$eventManager = $this->getMock('CakeEventManager');$/;"	v
expected	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$expected = $Controller->ControllerComment->validationErrors;$/;"	v
expected	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$expected = '<!DOCTYPE html>$/;"	v
expected	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$expected = array('ControllerComment', 'ControllerAlias', 'ControllerPost');$/;"	v
expected	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$expected = array('ModelName' => 'name', 'ModelName2' => 'name2');$/;"	v
expected	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$expected = array('foo');$/;"	v
expected	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$expected = array('page' => 1, 'limit' => 20, 'maxLimit' => 100, 'paramType' => 'named');$/;"	v
expected	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$expected = array('some_field' => array('error_message'), 'some_field2' => array('error_message2'));$/;"	v
expected	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$expected = array('testId' => 1, 'test2Id' => 2);$/;"	v
expected	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$expected = array('title' => array('This field cannot be left blank'));$/;"	v
expected	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$expected = array(3 => 'three', 4 => 'four', 1 => 'one', 2 => 'two');$/;"	v
expected	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$expected = str_replace(array("\\t", "\\r\\n", "\\n"), "", $expected);$/;"	v
expectedModels	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$expectedModels = array($/;"	v
find	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function find($type = 'first', $options = array()) {$/;"	f
fixtures	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public $fixtures = array($/;"	v
helpers	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$helpers = is_array($appVars['helpers'])$/;"	v
helpers	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public $helpers = array('Html');$/;"	v
helpers	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public $helpers = array('Session');$/;"	v
index	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function index($testId, $testTwoId) {$/;"	f
initialize	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function initialize(Controller $controller) {$/;"	f
invalidFields	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public $invalidFields = array('name' => 'error_msg');$/;"	v
lastQuery	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$this->lastQuery = $query;$/;"	v
lastQuery	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public $lastQuery = null;$/;"	v
model	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$this->model = $this->controller->modelClass;$/;"	v
model	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public $model;$/;"	v
name	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public $name = 'Comment';$/;"	v
name	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public $name = 'Name';$/;"	v
ops	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$ops = array($/;"	v
options	lib/Cake/Test/Case/Controller/ControllerTest.php	/^			$options = Hash::merge($options, compact('conditions'));$/;"	v
private_m	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	private function private_m() {$/;"	f
protected_m	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	protected function protected_m() {$/;"	f
request	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$request = $this->getMock('CakeRequest');$/;"	v
request	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$request = new CakeRequest('controller_posts\/index');$/;"	v
request	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$request = new CakeRequest('posts\/index', false);$/;"	v
response	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$response = $this->getMock('CakeResponse');$/;"	v
response	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$response = $this->getMock('CakeResponse', array('httpCodes'));$/;"	v
result	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$result = $Controller->invokeAction($url);$/;"	v
result	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$result = $Controller->loadModel('Comment');$/;"	v
result	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$result = $Controller->loadModel('ControllerPost');$/;"	v
result	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$result = $Controller->postConditions($data);$/;"	v
result	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$result = $Controller->postConditions($data, $ops);$/;"	v
result	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$result = $Controller->referer();$/;"	v
result	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$result = $Controller->referer(array('controller' => 'posts', 'action' => 'index'), true);$/;"	v
result	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$result = $Controller->referer(null, true);$/;"	v
result	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$result = $Controller->render('\/Elements\/test_element');$/;"	v
result	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$result = $Controller->render('index');$/;"	v
result	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$result = $Controller->render();$/;"	v
result	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$result = $Controller->response->body();$/;"	v
result	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$result = $TestController->validateErrors($Post);$/;"	v
result	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$result = $TestController->validateErrors($comment);$/;"	v
result	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$result = str_replace(array("\\t", "\\r\\n", "\\n"), "", $result);$/;"	v
results	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$results = Hash::extract($Controller->paginate('ControllerPost'), '{n}.ControllerPost.id');$/;"	v
return	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$return = array($/;"	v
returner	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function returner() {$/;"	f
setUp	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function setUp() {$/;"	f
shutdown	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function shutdown(Controller $controller) {$/;"	f
startup	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function startup(Controller $controller) {$/;"	f
statusCodeProvider	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public static function statusCodeProvider() {$/;"	f
tearDown	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function tearDown() {$/;"	f
testAliasName	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testAliasName() {$/;"	f
testChildComponentOptionsSupercedeParents	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testChildComponentOptionsSupercedeParents() {$/;"	f
testComponentBeforeRenderChangingViewClass	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testComponentBeforeRenderChangingViewClass() {$/;"	f
testComponentCancelRender	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testComponentCancelRender() {$/;"	f
testConstructClasses	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testConstructClasses() {$/;"	f
testConstructClassesWithComponents	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testConstructClassesWithComponents() {$/;"	f
testControllerHttpCodes	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testControllerHttpCodes() {$/;"	f
testControllerSet	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testControllerSet() {$/;"	f
testFlash	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testFlash() {$/;"	f
testInvokeActionBaseMethods	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testInvokeActionBaseMethods() {$/;"	f
testInvokeActionHidden	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testInvokeActionHidden() {$/;"	f
testInvokeActionMissingAction	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testInvokeActionMissingAction() {$/;"	f
testInvokeActionPrefixProtection	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testInvokeActionPrefixProtection() {$/;"	f
testInvokeActionPrivate	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testInvokeActionPrivate() {$/;"	f
testInvokeActionProtected	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testInvokeActionProtected() {$/;"	f
testInvokeActionReturnValue	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testInvokeActionReturnValue() {$/;"	f
testLoadModel	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testLoadModel() {$/;"	f
testLoadModelInPlugins	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testLoadModelInPlugins() {$/;"	f
testLoadModelUsesTrue	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testLoadModelUsesTrue() {$/;"	f
testMergeVars	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testMergeVars() {$/;"	f
testMergeVarsNotGreedy	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testMergeVarsNotGreedy() {$/;"	f
testPaginateBackwardsCompatibility	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testPaginateBackwardsCompatibility() {$/;"	f
testPostConditions	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testPostConditions() {$/;"	f
testPropertyBackwardsCompatibility	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testPropertyBackwardsCompatibility() {$/;"	f
testPropertyCompatibilityAndModelsComponents	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testPropertyCompatibilityAndModelsComponents() {$/;"	f
testRedirectBeforeRedirectInController	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testRedirectBeforeRedirectInController() {$/;"	f
testRedirectBeforeRedirectInControllerWithArray	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testRedirectBeforeRedirectInControllerWithArray() {$/;"	f
testRedirectBeforeRedirectModifyingParams	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testRedirectBeforeRedirectModifyingParams() {$/;"	f
testRedirectBeforeRedirectModifyingParamsArrayReturn	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testRedirectBeforeRedirectModifyingParamsArrayReturn() {$/;"	f
testRedirectByCode	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testRedirectByCode($code, $msg) {$/;"	f
testRedirectByMessage	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testRedirectByMessage($code, $msg) {$/;"	f
testRedirectTriggeringComponentsReturnNull	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testRedirectTriggeringComponentsReturnNull() {$/;"	f
testReferer	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testReferer() {$/;"	f
testRender	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testRender() {$/;"	f
testSetAction	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testSetAction() {$/;"	f
testShutdownProcess	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testShutdownProcess() {$/;"	f
testShutdownProcessIndirect	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testShutdownProcessIndirect() {$/;"	f
testStartupProcess	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testStartupProcess() {$/;"	f
testStartupProcessIndirect	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testStartupProcessIndirect() {$/;"	f
testToBeInheritedGuardmethods	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testToBeInheritedGuardmethods() {$/;"	f
testValidateErrors	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testValidateErrors() {$/;"	f
testValidateErrorsOnArbitraryModels	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function testValidateErrorsOnArbitraryModels() {$/;"	f
testVars	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$testVars = get_class_vars('AnotherTestController');$/;"	v
testVars	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$testVars = get_class_vars('ControllerCommentsController');$/;"	v
testVars	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$testVars = get_class_vars('TestController');$/;"	v
url	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$url = new CakeRequest('test\/_hidden\/');$/;"	v
url	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$url = new CakeRequest('test\/admin_add\/');$/;"	v
url	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$url = new CakeRequest('test\/missing');$/;"	v
url	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$url = new CakeRequest('test\/private_m\/');$/;"	v
url	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$url = new CakeRequest('test\/protected_m\/');$/;"	v
url	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$url = new CakeRequest('test\/redirect\/');$/;"	v
url	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$url = new CakeRequest('test\/returner\/');$/;"	v
useTable	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public $useTable = 'comments';$/;"	v
useTable	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public $useTable = 'posts';$/;"	v
uses	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$uses = is_array($appVars['uses'])$/;"	v
uses	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public $uses = array('ControllerComment', 'ControllerAlias');$/;"	v
uses	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public $uses = array('ControllerPost');$/;"	v
uses	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public $uses = false;$/;"	v
view	lib/Cake/Test/Case/Controller/ControllerTest.php	/^	public function view($testId, $testTwoId) {$/;"	f
viewVars	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$viewVars = array('ModelName' => 'name');$/;"	v
viewVars	lib/Cake/Test/Case/Controller/ControllerTest.php	/^		$viewVars = array('ModelName' => array('id' => 1, 'name' => 'value'));$/;"	v
Pages	lib/Cake/Test/Case/Controller/PagesControllerTest.php	/^		$Pages = new PagesController(new CakeRequest(null, false), new CakeResponse());$/;"	v
PagesControllerTest	lib/Cake/Test/Case/Controller/PagesControllerTest.php	/^class PagesControllerTest extends CakeTestCase {$/;"	c
testDisplay	lib/Cake/Test/Case/Controller/PagesControllerTest.php	/^	public function testDisplay() {$/;"	f
testMissingView	lib/Cake/Test/Case/Controller/PagesControllerTest.php	/^	public function testMissingView() {$/;"	f
testMissingViewInDebug	lib/Cake/Test/Case/Controller/PagesControllerTest.php	/^	public function testMissingViewInDebug() {$/;"	f
Controller	lib/Cake/Test/Case/Controller/ScaffoldTest.php	/^		$this->Controller = new ScaffoldMockController($request);$/;"	v
Controller	lib/Cake/Test/Case/Controller/ScaffoldTest.php	/^		$this->Controller = new ScaffoldMockControllerWithFields($request);$/;"	v
Controller	lib/Cake/Test/Case/Controller/ScaffoldTest.php	/^	public $Controller;$/;"	v
Scaffold	lib/Cake/Test/Case/Controller/ScaffoldTest.php	/^		$Scaffold = new Scaffold($this->Controller, $this->Controller->request);$/;"	v
Scaffold	lib/Cake/Test/Case/Controller/ScaffoldTest.php	/^		$Scaffold = new TestScaffoldMock($this->Controller, $this->Controller->request);$/;"	v
ScaffoldMockController	lib/Cake/Test/Case/Controller/ScaffoldTest.php	/^class ScaffoldMockController extends Controller {$/;"	c
ScaffoldMockControllerWithFields	lib/Cake/Test/Case/Controller/ScaffoldTest.php	/^class ScaffoldMockControllerWithFields extends Controller {$/;"	c
ScaffoldTest	lib/Cake/Test/Case/Controller/ScaffoldTest.php	/^class ScaffoldTest extends CakeTestCase {$/;"	c
TestScaffoldMock	lib/Cake/Test/Case/Controller/ScaffoldTest.php	/^class TestScaffoldMock extends Scaffold {$/;"	c
_params	lib/Cake/Test/Case/Controller/ScaffoldTest.php	/^		$this->_params = $request;$/;"	v
_scaffold	lib/Cake/Test/Case/Controller/ScaffoldTest.php	/^	protected function _scaffold(CakeRequest $request) {$/;"	f
beforeScaffold	lib/Cake/Test/Case/Controller/ScaffoldTest.php	/^	public function beforeScaffold($method) {$/;"	f
fixtures	lib/Cake/Test/Case/Controller/ScaffoldTest.php	/^	public $fixtures = array('core.article', 'core.user', 'core.comment', 'core.join_thing', 'core.tag');$/;"	v
getParams	lib/Cake/Test/Case/Controller/ScaffoldTest.php	/^	public function getParams() {$/;"	f
name	lib/Cake/Test/Case/Controller/ScaffoldTest.php	/^	public $name = 'ScaffoldMock';$/;"	v
params	lib/Cake/Test/Case/Controller/ScaffoldTest.php	/^		$params = array($/;"	v
request	lib/Cake/Test/Case/Controller/ScaffoldTest.php	/^		$request = new CakeRequest(null, false);$/;"	v
result	lib/Cake/Test/Case/Controller/ScaffoldTest.php	/^		$result = $Scaffold->controller->viewVars;$/;"	v
result	lib/Cake/Test/Case/Controller/ScaffoldTest.php	/^		$result = $Scaffold->getParams();$/;"	v
result	lib/Cake/Test/Case/Controller/ScaffoldTest.php	/^		$result = ob_get_clean();$/;"	v
scaffold	lib/Cake/Test/Case/Controller/ScaffoldTest.php	/^	public $scaffold;$/;"	v
setUp	lib/Cake/Test/Case/Controller/ScaffoldTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Controller/ScaffoldTest.php	/^	public function tearDown() {$/;"	f
testEditScaffoldWithScaffoldFields	lib/Cake/Test/Case/Controller/ScaffoldTest.php	/^	public function testEditScaffoldWithScaffoldFields() {$/;"	f
testHabtmFieldAdditionWithScaffoldForm	lib/Cake/Test/Case/Controller/ScaffoldTest.php	/^	public function testHabtmFieldAdditionWithScaffoldForm() {$/;"	f
testScaffoldChangingViewProperty	lib/Cake/Test/Case/Controller/ScaffoldTest.php	/^	public function testScaffoldChangingViewProperty() {$/;"	f
testScaffoldFlashMessages	lib/Cake/Test/Case/Controller/ScaffoldTest.php	/^	public function testScaffoldFlashMessages() {$/;"	f
testScaffoldParams	lib/Cake/Test/Case/Controller/ScaffoldTest.php	/^	public function testScaffoldParams() {$/;"	f
testScaffoldVariableSetting	lib/Cake/Test/Case/Controller/ScaffoldTest.php	/^	public function testScaffoldVariableSetting() {$/;"	f
AppTest	lib/Cake/Test/Case/Core/AppTest.php	/^class AppTest extends CakeTestCase {$/;"	c
auth	lib/Cake/Test/Case/Core/AppTest.php	/^		$auth = App::core('Controller\/Component\/Auth');$/;"	v
basepath	lib/Cake/Test/Case/Core/AppTest.php	/^		$basepath = CAKE . 'Test' . DS . 'test_app' . DS . 'Plugin' . DS;$/;"	v
classes	lib/Cake/Test/Case/Core/AppTest.php	/^			$classes = array_flip(get_declared_classes());$/;"	v
classes	lib/Cake/Test/Case/Core/AppTest.php	/^		$classes = array_flip(get_declared_classes());$/;"	v
component	lib/Cake/Test/Case/Core/AppTest.php	/^		$component = App::core('Controller\/Component');$/;"	v
controller	lib/Cake/Test/Case/Core/AppTest.php	/^		$controller = App::core('Controller');$/;"	v
datasource	lib/Cake/Test/Case/Core/AppTest.php	/^		$datasource = App::core('Model\/Datasource');$/;"	v
defaults	lib/Cake/Test/Case/Core/AppTest.php	/^		$defaults = App::path('Model');$/;"	v
expected	lib/Cake/Test/Case/Core/AppTest.php	/^		$expected = CAKE . 'Test' . DS . 'test_app' . DS . 'Plugin' . DS . 'TestPlugin' . DS;$/;"	v
expected	lib/Cake/Test/Case/Core/AppTest.php	/^		$expected = CAKE . 'Test' . DS . 'test_app' . DS . 'Plugin' . DS . 'TestPluginTwo' . DS;$/;"	v
expected	lib/Cake/Test/Case/Core/AppTest.php	/^		$expected = CAKE . 'Test' . DS . 'test_app' . DS . 'View' . DS . 'Themed' . DS . 'TestTheme' . DS;$/;"	v
expected	lib/Cake/Test/Case/Core/AppTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Core/AppTest.php	/^		$expected = array('OtherHelperHelper', 'PluggedHelperHelper', 'TestPluginAppHelper');$/;"	v
expected	lib/Cake/Test/Case/Core/AppTest.php	/^		$expected = array();$/;"	v
file	lib/Cake/Test/Case/Core/AppTest.php	/^			$file = App::import('Behavior', 'Containable');$/;"	v
file	lib/Cake/Test/Case/Core/AppTest.php	/^			$file = App::import('Component', 'RequestHandler');$/;"	v
file	lib/Cake/Test/Case/Core/AppTest.php	/^			$file = App::import('Controller', 'Pages');$/;"	v
file	lib/Cake/Test/Case/Core/AppTest.php	/^			$file = App::import('Datasource', 'DboSource');$/;"	v
file	lib/Cake/Test/Case/Core/AppTest.php	/^			$file = App::import('Helper', 'Form');$/;"	v
file	lib/Cake/Test/Case/Core/AppTest.php	/^			$file = App::import('Model', 'NonExistingModel');$/;"	v
file	lib/Cake/Test/Case/Core/AppTest.php	/^		$file = App::import($type);$/;"	v
file	lib/Cake/Test/Case/Core/AppTest.php	/^		$file = App::import('Component', 'Auth', false);$/;"	v
file	lib/Cake/Test/Case/Core/AppTest.php	/^		$file = App::import('Configure', 'PhpReader');$/;"	v
file	lib/Cake/Test/Case/Core/AppTest.php	/^		$file = App::import('Controller', 'Controller', false);$/;"	v
file	lib/Cake/Test/Case/Core/AppTest.php	/^		$file = App::import('File', 'AnotherNewName', false, array(CAKE), 'config.php');$/;"	v
file	lib/Cake/Test/Case/Core/AppTest.php	/^		$file = App::import('File', 'Name', false, array(), CAKE . 'Config' . DS . 'config.php', true);$/;"	v
file	lib/Cake/Test/Case/Core/AppTest.php	/^		$file = App::import('File', 'NewName', false, array(CAKE . 'Config' . DS), 'config.php');$/;"	v
file	lib/Cake/Test/Case/Core/AppTest.php	/^		$file = App::import('File', 'NoFile', false, array(), CAKE . 'Config' . DS . 'cake' . DS . 'config.php');$/;"	v
file	lib/Cake/Test/Case/Core/AppTest.php	/^		$file = App::import('File', 'RealFile', false, array(), CAKE . 'Config' . DS . 'config.php');$/;"	v
file	lib/Cake/Test/Case/Core/AppTest.php	/^		$file = App::import('Model', 'AppModel', false);$/;"	v
file	lib/Cake/Test/Case/Core/AppTest.php	/^		$file = App::import('Model', 'Model', false);$/;"	v
file	lib/Cake/Test/Case/Core/AppTest.php	/^		$file = App::import('Model', 'NonExistingPlugin.NonExistingModel', false);$/;"	v
file	lib/Cake/Test/Case/Core/AppTest.php	/^		$file = App::import('Model', 'SomeRandomModelThatDoesNotExist', false);$/;"	v
file	lib/Cake/Test/Case/Core/AppTest.php	/^		$file = App::import('Model', array('NonExistingPlugin.NonExistingModel'), false);$/;"	v
file	lib/Cake/Test/Case/Core/AppTest.php	/^		$file = App::import('Shell', 'Shell', false);$/;"	v
file	lib/Cake/Test/Case/Core/AppTest.php	/^		$file = App::import('WrongType', null, true, array(), '');$/;"	v
load	lib/Cake/Test/Case/Core/AppTest.php	/^		$load = App::import('Model', $toLoad);$/;"	v
load	lib/Cake/Test/Case/Core/AppTest.php	/^		$load = App::import('Model', array('PersisterOne', 'SomeNotFoundClass', 'PersisterTwo'));$/;"	v
model	lib/Cake/Test/Case/Core/AppTest.php	/^		$model = App::core('Model');$/;"	v
new	lib/Cake/Test/Case/Core/AppTest.php	/^		$new = App::path('Controller');$/;"	v
new	lib/Cake/Test/Case/Core/AppTest.php	/^		$new = App::path('Model');$/;"	v
new	lib/Cake/Test/Case/Core/AppTest.php	/^		$new = App::path('models');$/;"	v
old	lib/Cake/Test/Case/Core/AppTest.php	/^		$old = App::path('Model');$/;"	v
old	lib/Cake/Test/Case/Core/AppTest.php	/^		$old = App::path('models');$/;"	v
path	lib/Cake/Test/Case/Core/AppTest.php	/^		$path = App::pluginPath('TestPlugin');$/;"	v
path	lib/Cake/Test/Case/Core/AppTest.php	/^		$path = App::pluginPath('TestPluginTwo');$/;"	v
path	lib/Cake/Test/Case/Core/AppTest.php	/^		$path = App::themePath('TestTheme');$/;"	v
path	lib/Cake/Test/Case/Core/AppTest.php	/^		$path = App::themePath('test_theme');$/;"	v
path	lib/Cake/Test/Case/Core/AppTest.php	/^		$path = CAKE . 'Test' . DS . 'test_app' . DS . 'Plugin' . DS;$/;"	v
paths	lib/Cake/Test/Case/Core/AppTest.php	/^		$paths = App::path('Service');$/;"	v
pluginPaths	lib/Cake/Test/Case/Core/AppTest.php	/^		$pluginPaths = array($/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::import('Controller', 'TestPlugin.Tests');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::import('Datasource', 'TestPlugin.TestSource');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::import('Helper', 'TestPlugin.OtherHelper');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::import('Helper', 'TestPlugin.TestPluginApp');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::import('Lib', 'Library');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::import('Lib', 'TestPlugin.TestPluginLibrary');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::import('Vendor', 'MyTest', array('file' => 'Test' . DS . 'MyTest.php'));$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::import('Vendor', 'SomeNameInSubfolder', array('file' => 'somename\/some.name.php'));$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::import('Vendor', 'TestHello', array('file' => 'Test' . DS . 'hello.php'));$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::import('Vendor', 'TestPlugin.Welcome');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::import('Vendor', 'TestPlugin.sample\/SamplePlugin');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::import('Vendor', 'Welcome');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::import('Vendor', 'css\/TestAsset', array('ext' => 'css'));$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::import('Vendor', 'sample\/ConfigureTestVendorSample');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::objects('Controller\/Component', null, false);$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::objects('Model', null, false);$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::objects('Model\/Behavior', null, false);$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::objects('NonExistingType');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::objects('TestPlugin.Controller\/Component');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::objects('TestPlugin.Model');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::objects('TestPlugin.Model\/Behavior');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::objects('TestPlugin.View\/Helper');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::objects('TestPlugin.behavior');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::objects('TestPlugin.component');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::objects('TestPlugin.helper');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::objects('TestPlugin.model');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::objects('TestPluginTwo.Model\/Behavior');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::objects('TestPluginTwo.behavior');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::objects('View', null, false);$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::objects('View\/Helper', null, false);$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::objects('behavior', null, false);$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::objects('class', CAKE . 'Routing', false);$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::objects('component', null, false);$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::objects('file');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::objects('file', 'non_existing_configure');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::objects('helper', null, false);$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::objects('model', null, false);$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::objects('plugin', null, false);$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::objects('view', null, false);$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::path('Plugin');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::path('Service');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::path('Vendor', 'TestPlugin');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::path('behaviors');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::path('components');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::path('controllers');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::path('datasources');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::path('helpers');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::path('shells');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::path('views');$/;"	v
result	lib/Cake/Test/Case/Core/AppTest.php	/^		$result = App::paths();$/;"	v
tearDown	lib/Cake/Test/Case/Core/AppTest.php	/^	public function tearDown() {$/;"	f
testBuild	lib/Cake/Test/Case/Core/AppTest.php	/^	public function testBuild() {$/;"	f
testBuildPackage	lib/Cake/Test/Case/Core/AppTest.php	/^	public function testBuildPackage() {$/;"	f
testBuildWithReset	lib/Cake/Test/Case/Core/AppTest.php	/^	public function testBuildWithReset() {$/;"	f
testClassLoading	lib/Cake/Test/Case/Core/AppTest.php	/^	public function testClassLoading() {$/;"	f
testClassLocation	lib/Cake/Test/Case/Core/AppTest.php	/^	public function testClassLocation() {$/;"	f
testCompatibleBuild	lib/Cake/Test/Case/Core/AppTest.php	/^	public function testCompatibleBuild() {$/;"	f
testCore	lib/Cake/Test/Case/Core/AppTest.php	/^	public function testCore() {$/;"	f
testFileLoading	lib/Cake/Test/Case/Core/AppTest.php	/^	public function testFileLoading() {$/;"	f
testFileLoadingReturnValue	lib/Cake/Test/Case/Core/AppTest.php	/^	public function testFileLoadingReturnValue() {$/;"	f
testFileLoadingWithArray	lib/Cake/Test/Case/Core/AppTest.php	/^	public function testFileLoadingWithArray() {$/;"	f
testImportingHelpersFromAlternatePaths	lib/Cake/Test/Case/Core/AppTest.php	/^	public function testImportingHelpersFromAlternatePaths() {$/;"	f
testListObjects	lib/Cake/Test/Case/Core/AppTest.php	/^	public function testListObjects() {$/;"	f
testListObjectsIgnoreDotDirectories	lib/Cake/Test/Case/Core/AppTest.php	/^	public function testListObjectsIgnoreDotDirectories() {$/;"	f
testListObjectsInPlugin	lib/Cake/Test/Case/Core/AppTest.php	/^	public function testListObjectsInPlugin() {$/;"	f
testLoadClassInLibs	lib/Cake/Test/Case/Core/AppTest.php	/^	public function testLoadClassInLibs() {$/;"	f
testLoadingVendor	lib/Cake/Test/Case/Core/AppTest.php	/^	public function testLoadingVendor() {$/;"	f
testLoadingWithSearch	lib/Cake/Test/Case/Core/AppTest.php	/^	public function testLoadingWithSearch() {$/;"	f
testLoadingWithSearchArray	lib/Cake/Test/Case/Core/AppTest.php	/^	public function testLoadingWithSearchArray() {$/;"	f
testMultipleLoading	lib/Cake/Test/Case/Core/AppTest.php	/^	public function testMultipleLoading() {$/;"	f
testPathWithPlugins	lib/Cake/Test/Case/Core/AppTest.php	/^	public function testPathWithPlugins() {$/;"	f
testPaths	lib/Cake/Test/Case/Core/AppTest.php	/^	public function testPaths() {$/;"	f
testPluginImporting	lib/Cake/Test/Case/Core/AppTest.php	/^	public function testPluginImporting() {$/;"	f
testPluginLibClasses	lib/Cake/Test/Case/Core/AppTest.php	/^	public function testPluginLibClasses() {$/;"	f
testPluginPath	lib/Cake/Test/Case/Core/AppTest.php	/^	public function testPluginPath() {$/;"	f
testThemePath	lib/Cake/Test/Case/Core/AppTest.php	/^	public function testThemePath() {$/;"	f
text	lib/Cake/Test/Case/Core/AppTest.php	/^		$text = ob_get_clean();$/;"	v
toLoad	lib/Cake/Test/Case/Core/AppTest.php	/^		$toLoad = array('PersisterOne', 'PersisterTwo');$/;"	v
type	lib/Cake/Test/Case/Core/AppTest.php	/^		$type = array($/;"	v
view	lib/Cake/Test/Case/Core/AppTest.php	/^		$view = App::core('View');$/;"	v
CakePluginTest	lib/Cake/Test/Case/Core/CakePluginTest.php	/^class CakePluginTest extends CakeTestCase {$/;"	c
defaults	lib/Cake/Test/Case/Core/CakePluginTest.php	/^		$defaults = array('bootstrap' => true);$/;"	v
expected	lib/Cake/Test/Case/Core/CakePluginTest.php	/^		$expected = CAKE . 'Test' . DS . 'test_app' . DS . 'Plugin' . DS . 'TestPlugin' . DS;$/;"	v
expected	lib/Cake/Test/Case/Core/CakePluginTest.php	/^		$expected = CAKE . 'Test' . DS . 'test_app' . DS . 'Plugin' . DS . 'TestPluginTwo' . DS;$/;"	v
expected	lib/Cake/Test/Case/Core/CakePluginTest.php	/^		$expected = array('PluginJs', 'TestPlugin', 'TestPluginTwo');$/;"	v
expected	lib/Cake/Test/Case/Core/CakePluginTest.php	/^		$expected = array('TestPlugin');$/;"	v
expected	lib/Cake/Test/Case/Core/CakePluginTest.php	/^		$expected = array('TestPlugin', 'TestPluginTwo');$/;"	v
pluginBootstrap	lib/Cake/Test/Case/Core/CakePluginTest.php	/^	public function pluginBootstrap() {$/;"	f
setUp	lib/Cake/Test/Case/Core/CakePluginTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Core/CakePluginTest.php	/^	public function tearDown() {$/;"	f
testCallbackBootstrap	lib/Cake/Test/Case/Core/CakePluginTest.php	/^	public function testCallbackBootstrap() {$/;"	f
testIgnoreMissingFiles	lib/Cake/Test/Case/Core/CakePluginTest.php	/^	public function testIgnoreMissingFiles() {$/;"	f
testLoadAll	lib/Cake/Test/Case/Core/CakePluginTest.php	/^	public function testLoadAll() {$/;"	f
testLoadAllWithDefaults	lib/Cake/Test/Case/Core/CakePluginTest.php	/^	public function testLoadAllWithDefaults() {$/;"	f
testLoadAllWithDefaultsAndOverride	lib/Cake/Test/Case/Core/CakePluginTest.php	/^	public function testLoadAllWithDefaultsAndOverride() {$/;"	f
testLoadAllWithDefaultsAndOverrideComplex	lib/Cake/Test/Case/Core/CakePluginTest.php	/^	public function testLoadAllWithDefaultsAndOverrideComplex() {$/;"	f
testLoadMultiple	lib/Cake/Test/Case/Core/CakePluginTest.php	/^	public function testLoadMultiple() {$/;"	f
testLoadMultipleWithDefaults	lib/Cake/Test/Case/Core/CakePluginTest.php	/^	public function testLoadMultipleWithDefaults() {$/;"	f
testLoadMultipleWithDefaultsAndOverride	lib/Cake/Test/Case/Core/CakePluginTest.php	/^	public function testLoadMultipleWithDefaultsAndOverride() {$/;"	f
testLoadMultipleWithDefaultsMissingFile	lib/Cake/Test/Case/Core/CakePluginTest.php	/^	public function testLoadMultipleWithDefaultsMissingFile() {$/;"	f
testLoadNotFound	lib/Cake/Test/Case/Core/CakePluginTest.php	/^	public function testLoadNotFound() {$/;"	f
testLoadSingle	lib/Cake/Test/Case/Core/CakePluginTest.php	/^	public function testLoadSingle() {$/;"	f
testLoadSingleWithBootstrap	lib/Cake/Test/Case/Core/CakePluginTest.php	/^	public function testLoadSingleWithBootstrap() {$/;"	f
testLoadSingleWithBootstrapAndRoutes	lib/Cake/Test/Case/Core/CakePluginTest.php	/^	public function testLoadSingleWithBootstrapAndRoutes() {$/;"	f
testMultipleBootstrapFiles	lib/Cake/Test/Case/Core/CakePluginTest.php	/^	public function testMultipleBootstrapFiles() {$/;"	f
testPath	lib/Cake/Test/Case/Core/CakePluginTest.php	/^	public function testPath() {$/;"	f
testPathNotFound	lib/Cake/Test/Case/Core/CakePluginTest.php	/^	public function testPathNotFound() {$/;"	f
testUnload	lib/Cake/Test/Case/Core/CakePluginTest.php	/^	public function testUnload() {$/;"	f
ConfigureTest	lib/Cake/Test/Case/Core/ConfigureTest.php	/^class ConfigureTest extends CakeTestCase {$/;"	c
config	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$config = Configure::read('plugin_load');$/;"	v
config	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$config = Configure::read('plugin_more_load');$/;"	v
configured	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$configured = Configure::configured();$/;"	v
expected	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$expected = '\/test_app\/plugins\/test_plugin\/config\/load.php';$/;"	v
expected	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$expected = '\/test_app\/plugins\/test_plugin\/config\/more.load.php';$/;"	v
expected	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$expected = 'ok';$/;"	v
expected	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$expected = array('One' => array('Two' => array('Three' => array('Four' => array('Five' => 'cool')))));$/;"	v
reader	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$reader = new PhpReader();$/;"	v
reader	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$reader = new StdClass();$/;"	v
result	lib/Cake/Test/Case/Core/ConfigureTest.php	/^			$result = Configure::configured('default');$/;"	v
result	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$result = Configure::dump('config_test.php', 'test_reader');$/;"	v
result	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$result = Configure::dump('config_test.php', 'test_reader', array('Error'));$/;"	v
result	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$result = Configure::load('TestPlugin.load', 'test');$/;"	v
result	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$result = Configure::load('TestPlugin.more.load', 'test');$/;"	v
result	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$result = Configure::load('var_test', 'test');$/;"	v
result	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$result = Configure::load('var_test2', 'test', false);$/;"	v
result	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$result = Configure::load('var_test2', 'test', true);$/;"	v
result	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$result = Configure::read('App');$/;"	v
result	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$result = Configure::read('Key');$/;"	v
result	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$result = Configure::read('Key.One');$/;"	v
result	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$result = Configure::read('Key.One.Two');$/;"	v
result	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$result = Configure::read('Key.One.Two.Three.Four.Five');$/;"	v
result	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$result = Configure::read('SomeName.otherKey');$/;"	v
result	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$result = Configure::read('SomeName.someKey');$/;"	v
result	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$result = Configure::read('debug');$/;"	v
result	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$result = Configure::read('level1.level2.level3_1');$/;"	v
result	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$result = Configure::read('level1.level2.level3_2');$/;"	v
result	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$result = Configure::read('one.two.three.four');$/;"	v
result	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$result = Configure::read('something_I_just_made_up_now');$/;"	v
result	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$result = Configure::read();$/;"	v
result	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$result = Configure::version();$/;"	v
result	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$result = file_get_contents(TMP . 'config_test.php');$/;"	v
result	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$result = ini_get('display_errors');$/;"	v
setUp	lib/Cake/Test/Case/Core/ConfigureTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Core/ConfigureTest.php	/^	public function tearDown() {$/;"	f
testBootstrap	lib/Cake/Test/Case/Core/ConfigureTest.php	/^	public function testBootstrap() {$/;"	f
testCheck	lib/Cake/Test/Case/Core/ConfigureTest.php	/^	public function testCheck() {$/;"	f
testCheckEmpty	lib/Cake/Test/Case/Core/ConfigureTest.php	/^	public function testCheckEmpty() {$/;"	f
testCheckKeyWithSpaces	lib/Cake/Test/Case/Core/ConfigureTest.php	/^	public function testCheckKeyWithSpaces() {$/;"	f
testCheckingSavedEmpty	lib/Cake/Test/Case/Core/ConfigureTest.php	/^	public function testCheckingSavedEmpty() {$/;"	f
testClear	lib/Cake/Test/Case/Core/ConfigureTest.php	/^	public function testClear() {$/;"	f
testDebugSettingDisplayErrors	lib/Cake/Test/Case/Core/ConfigureTest.php	/^	public function testDebugSettingDisplayErrors() {$/;"	f
testDelete	lib/Cake/Test/Case/Core/ConfigureTest.php	/^	public function testDelete() {$/;"	f
testDump	lib/Cake/Test/Case/Core/ConfigureTest.php	/^	public function testDump() {$/;"	f
testDumpNoAdapter	lib/Cake/Test/Case/Core/ConfigureTest.php	/^	public function testDumpNoAdapter() {$/;"	f
testDumpPartial	lib/Cake/Test/Case/Core/ConfigureTest.php	/^	public function testDumpPartial() {$/;"	f
testLoadDefaultConfig	lib/Cake/Test/Case/Core/ConfigureTest.php	/^	public function testLoadDefaultConfig() {$/;"	f
testLoadExceptionOnNonExistantFile	lib/Cake/Test/Case/Core/ConfigureTest.php	/^	public function testLoadExceptionOnNonExistantFile() {$/;"	f
testLoadNoMerge	lib/Cake/Test/Case/Core/ConfigureTest.php	/^	public function testLoadNoMerge() {$/;"	f
testLoadPlugin	lib/Cake/Test/Case/Core/ConfigureTest.php	/^	public function testLoadPlugin() {$/;"	f
testLoadWithMerge	lib/Cake/Test/Case/Core/ConfigureTest.php	/^	public function testLoadWithMerge() {$/;"	f
testRead	lib/Cake/Test/Case/Core/ConfigureTest.php	/^	public function testRead() {$/;"	f
testReaderExceptionOnIncorrectClass	lib/Cake/Test/Case/Core/ConfigureTest.php	/^	public function testReaderExceptionOnIncorrectClass() {$/;"	f
testReaderSetup	lib/Cake/Test/Case/Core/ConfigureTest.php	/^	public function testReaderSetup() {$/;"	f
testStoreAndRestore	lib/Cake/Test/Case/Core/ConfigureTest.php	/^	public function testStoreAndRestore() {$/;"	f
testStoreAndRestoreWithData	lib/Cake/Test/Case/Core/ConfigureTest.php	/^	public function testStoreAndRestoreWithData() {$/;"	f
testVersion	lib/Cake/Test/Case/Core/ConfigureTest.php	/^	public function testVersion() {$/;"	f
testWrite	lib/Cake/Test/Case/Core/ConfigureTest.php	/^	public function testWrite() {$/;"	f
writeResult	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$writeResult = Configure::write('Key', $expected);$/;"	v
writeResult	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$writeResult = Configure::write('SomeName.someKey', 'myvalue');$/;"	v
writeResult	lib/Cake/Test/Case/Core/ConfigureTest.php	/^		$writeResult = Configure::write('SomeName.someKey', null);$/;"	v
ObjectTest	lib/Cake/Test/Case/Core/ObjectTest.php	/^class ObjectTest extends CakeTestCase {$/;"	c
ObjectTestModel	lib/Cake/Test/Case/Core/ObjectTest.php	/^class ObjectTestModel extends CakeTestModel {$/;"	c
RequestActionController	lib/Cake/Test/Case/Core/ObjectTest.php	/^class RequestActionController extends Controller {$/;"	c
RequestActionPost	lib/Cake/Test/Case/Core/ObjectTest.php	/^class RequestActionPost extends CakeTestModel {$/;"	c
TestObject	lib/Cake/Test/Case/Core/ObjectTest.php	/^class TestObject extends Object {$/;"	c
_POST	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$_POST = $_tmp;$/;"	v
_POST	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$_POST = array('data' => array($/;"	v
_tmp	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$_tmp = $_POST;$/;"	v
another_ra_test	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public function another_ra_test($id, $other) {$/;"	f
autoRender	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$this->autoRender = false;$/;"	v
content	lib/Cake/Test/Case/Core/ObjectTest.php	/^			$content = 'return found';$/;"	v
content	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$content = '';$/;"	v
crazyMethod	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public function crazyMethod($param, $paramTwo, $paramThree, $paramFour, $paramFive, $paramSix, $paramSeven = null) {$/;"	f
data	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$data = array($/;"	v
emptyMethod	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public function emptyMethod() {$/;"	f
expected	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$expected = $_POST['data'];$/;"	v
expected	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$expected = 'Hello World';$/;"	v
expected	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$expected = 'This is a test';$/;"	v
expected	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$expected = 'This is the TestsAppsController index view ';$/;"	v
expected	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$expected = 'test plugin index';$/;"	v
expected	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$expected = 12;$/;"	v
expected	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$expected = 25;$/;"	v
expected	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$expected = 5;$/;"	v
expected	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$expected = 7;$/;"	v
expected	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$expected = array('emptyMethod');$/;"	v
expected	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$expected = array('sort' => 'desc', 'limit' => 5);$/;"	v
firstName	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public $firstName = 'Joel';$/;"	v
fiveParamMethod	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public function fiveParamMethod($param, $paramTwo, $paramThree, $paramFour, $paramFive) {$/;"	f
fixtures	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public $fixtures = array('core.post', 'core.test_plugin_comment', 'core.comment');$/;"	v
fourParamMethod	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public function fourParamMethod($param, $paramTwo, $paramThree, $paramFour) {$/;"	f
lastName	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public $lastName = 'Moss';$/;"	v
methodCalls	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public $methodCalls = array();$/;"	v
methodWithOptionalParam	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public function methodWithOptionalParam($param = null) {$/;"	f
normal_request_action	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public function normal_request_action() {$/;"	f
object	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$this->object = new TestObject();$/;"	v
oneParamMethod	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public function oneParamMethod($param) {$/;"	f
paginate_request_action	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public function paginate_request_action() {$/;"	f
param_check	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public function param_check() {$/;"	f
params_pass	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public function params_pass() {$/;"	f
post_pass	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public function post_pass() {$/;"	f
result	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$result = $this->object->requestAction($/;"	v
result	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$result = $this->object->requestAction('');$/;"	v
result	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$result = $this->object->requestAction('\/request_action\/another_ra_test\/2\/5');$/;"	v
result	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$result = $this->object->requestAction('\/request_action\/normal_request_action');$/;"	v
result	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$result = $this->object->requestAction('\/request_action\/paginate_request_action');$/;"	v
result	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$result = $this->object->requestAction('\/request_action\/params_pass');$/;"	v
result	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$result = $this->object->requestAction('\/request_action\/params_pass\/sort:desc\/limit:5');$/;"	v
result	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$result = $this->object->requestAction('\/request_action\/post_pass');$/;"	v
result	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$result = $this->object->requestAction('\/request_action\/test_request_action');$/;"	v
result	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$result = $this->object->requestAction('\/test_plugin\/tests\/index', array('return'));$/;"	v
result	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$result = $this->object->requestAction('\/test_plugin\/tests\/index\/some_param', array('return'));$/;"	v
result	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$result = $this->object->requestAction('\/test_plugin\/tests\/some_method');$/;"	v
result	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$result = $this->object->requestAction('\/tests_apps\/index', array('return'));$/;"	v
result	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$result = $this->object->requestAction('\/tests_apps\/some_method');$/;"	v
result	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$result = $this->object->requestAction(array('controller' => 'request_action', 'action' => 'post_pass'));$/;"	v
result	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$result = $this->object->requestAction(array('controller' => 'tests_apps', 'action' => 'some_method'));$/;"	v
result	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$result = file(LOGS . 'error.log');$/;"	v
result	lib/Cake/Test/Case/Core/ObjectTest.php	/^		$result = strtolower($this->object->toString());$/;"	v
return_here	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public function return_here() {$/;"	f
set	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public function set($properties = array()) {$/;"	f
setUp	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public function tearDown() {$/;"	f
testLog	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public function testLog() {$/;"	f
testMethodDispatching	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public function testMethodDispatching() {$/;"	f
testRequestAction	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public function testRequestAction() {$/;"	f
testRequestActionArray	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public function testRequestActionArray() {$/;"	f
testRequestActionGetParameters	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public function testRequestActionGetParameters() {$/;"	f
testRequestActionNoPostPassing	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public function testRequestActionNoPostPassing() {$/;"	f
testRequestActionParamParseAndPass	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public function testRequestActionParamParseAndPass() {$/;"	f
testRequestActionPlugins	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public function testRequestActionPlugins() {$/;"	f
testRequestActionPostWithData	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public function testRequestActionPostWithData() {$/;"	f
testRequestActionRemoveReturnParam	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public function testRequestActionRemoveReturnParam() {$/;"	f
testSet	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public function testSet() {$/;"	f
testToString	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public function testToString() {$/;"	f
test_request_action	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public function test_request_action() {$/;"	f
threeParamMethod	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public function threeParamMethod($param, $paramTwo, $paramThree) {$/;"	f
twoParamMethod	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public function twoParamMethod($param, $paramTwo) {$/;"	f
useTable	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public $useTable = 'posts';$/;"	v
useTable	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public $useTable = false;$/;"	v
uses	lib/Cake/Test/Case/Core/ObjectTest.php	/^	public $uses = array('RequestActionPost');$/;"	v
ErrorHandlerTest	lib/Cake/Test/Case/Error/ErrorHandlerTest.php	/^class ErrorHandlerTest extends CakeTestCase {$/;"	c
_restoreError	lib/Cake/Test/Case/Error/ErrorHandlerTest.php	/^		$this->_restoreError = true;$/;"	v
_restoreError	lib/Cake/Test/Case/Error/ErrorHandlerTest.php	/^	protected $_restoreError = false;$/;"	v
error	lib/Cake/Test/Case/Error/ErrorHandlerTest.php	/^		$error = new NotFoundException('Kaboom!');$/;"	v
errorProvider	lib/Cake/Test/Case/Error/ErrorHandlerTest.php	/^	public static function errorProvider() {$/;"	f
forbidden	lib/Cake/Test/Case/Error/ErrorHandlerTest.php	/^		$forbidden = new ForbiddenException('Fooled you!');$/;"	v
line	lib/Cake/Test/Case/Error/ErrorHandlerTest.php	/^		$line = __LINE__;$/;"	v
log	lib/Cake/Test/Case/Error/ErrorHandlerTest.php	/^		$log = file(LOGS . 'error.log');$/;"	v
notFound	lib/Cake/Test/Case/Error/ErrorHandlerTest.php	/^		$notFound = new NotFoundException('Kaboom!');$/;"	v
request	lib/Cake/Test/Case/Error/ErrorHandlerTest.php	/^		$request = new CakeRequest(null, false);$/;"	v
result	lib/Cake/Test/Case/Error/ErrorHandlerTest.php	/^		$result = file(LOGS . 'debug.log');$/;"	v
result	lib/Cake/Test/Case/Error/ErrorHandlerTest.php	/^		$result = ob_get_clean();$/;"	v
setUp	lib/Cake/Test/Case/Error/ErrorHandlerTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Error/ErrorHandlerTest.php	/^	public function tearDown() {$/;"	f
testErrorMapping	lib/Cake/Test/Case/Error/ErrorHandlerTest.php	/^	public function testErrorMapping($error, $expected) {$/;"	f
testErrorSuppressed	lib/Cake/Test/Case/Error/ErrorHandlerTest.php	/^	public function testErrorSuppressed() {$/;"	f
testHandleErrorDebugOff	lib/Cake/Test/Case/Error/ErrorHandlerTest.php	/^	public function testHandleErrorDebugOff() {$/;"	f
testHandleErrorDebugOn	lib/Cake/Test/Case/Error/ErrorHandlerTest.php	/^	public function testHandleErrorDebugOn() {$/;"	f
testHandleErrorLoggingTrace	lib/Cake/Test/Case/Error/ErrorHandlerTest.php	/^	public function testHandleErrorLoggingTrace() {$/;"	f
testHandleException	lib/Cake/Test/Case/Error/ErrorHandlerTest.php	/^	public function testHandleException() {$/;"	f
testHandleExceptionLog	lib/Cake/Test/Case/Error/ErrorHandlerTest.php	/^	public function testHandleExceptionLog() {$/;"	f
testHandleExceptionLogSkipping	lib/Cake/Test/Case/Error/ErrorHandlerTest.php	/^	public function testHandleExceptionLogSkipping() {$/;"	f
testHandleFatalErrorLog	lib/Cake/Test/Case/Error/ErrorHandlerTest.php	/^	public function testHandleFatalErrorLog() {$/;"	f
testHandleFatalErrorPage	lib/Cake/Test/Case/Error/ErrorHandlerTest.php	/^	public function testHandleFatalErrorPage() {$/;"	f
testLoadPluginHandler	lib/Cake/Test/Case/Error/ErrorHandlerTest.php	/^	public function testLoadPluginHandler() {$/;"	f
AuthBlueberryUser	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^class AuthBlueberryUser extends CakeTestModel {$/;"	c
BlueberryComponent	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^class BlueberryComponent extends Component {$/;"	c
ExceptionRenderer	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^		$ExceptionRenderer = $this->_mockResponse(new ExceptionRenderer($exception));$/;"	v
ExceptionRenderer	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^		$ExceptionRenderer = $this->_mockResponse(new MyCustomExceptionRenderer($exception));$/;"	v
ExceptionRenderer	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^		$ExceptionRenderer = new ExceptionRenderer($exception);$/;"	v
ExceptionRendererTest	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^class ExceptionRendererTest extends CakeTestCase {$/;"	c
MissingWidgetThingException	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^class MissingWidgetThingException extends NotFoundException {$/;"	c
MyCustomExceptionRenderer	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^class MyCustomExceptionRenderer extends ExceptionRenderer {$/;"	c
TestErrorController	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^class TestErrorController extends Controller {$/;"	c
_mockResponse	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	protected function _mockResponse($error) {$/;"	f
_restoreError	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	protected $_restoreError = false;$/;"	v
autoRender	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^		$this->autoRender = false;$/;"	v
beforeRender	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public function beforeRender() {$/;"	f
components	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public $components = array('Blueberry');$/;"	v
exception	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^		$exception = new Exception('Terrible');$/;"	v
exception	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^		$exception = new InternalErrorException('An Internal Error Has Occurred');$/;"	v
exception	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^		$exception = new MethodNotAllowedException('Only allowing POST and DELETE');$/;"	v
exception	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^		$exception = new MissingActionException('Page not found');$/;"	v
exception	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^		$exception = new MissingActionException(array('controller' => 'PostsController', 'action' => 'index'));$/;"	v
exception	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^		$exception = new MissingControllerException('PostsController');$/;"	v
exception	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^		$exception = new MissingControllerException(array('class' => 'PostsController'));$/;"	v
exception	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^		$exception = new MissingHelperException(array('class' => 'Fail'));$/;"	v
exception	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^		$exception = new MissingWidgetThingException('Widget not found');$/;"	v
exception	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^		$exception = new MissingWidgetThingException('coding fail.');$/;"	v
exception	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^		$exception = new NotFoundException('Custom message');$/;"	v
exception	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^		$exception = new NotFoundException('Not there, sorry');$/;"	v
exception	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^		$exception = new NotFoundException('Page not found');$/;"	v
exception	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^		$exception = new NotFoundException();$/;"	v
exception	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^		$exception = new OutOfBoundsException('foul ball.');$/;"	v
exception	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^		$exception = new OutOfBoundsException('foul ball.', 501);$/;"	v
exception	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^		$exception = new PDOException('There was an error in the SQL query');$/;"	v
exception	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^		$exception = new SocketException('socket exception');$/;"	v
headers	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^		$headers = $ExceptionRenderer->controller->response->header();$/;"	v
index	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public function index() {$/;"	f
initialize	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public function initialize(Controller $controller) {$/;"	f
missingWidgetThing	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public function missingWidgetThing() {$/;"	f
renderer	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^		$renderer = new TestAppsExceptionRenderer($exception);$/;"	v
request	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^		$request = new CakeRequest('pages\/<span id=333>pink<\/span><\/id><script>document.body.style.background = t=document.getElementById(333).innerHTML;window.alert(t);<\/script>', false);$/;"	v
request	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^		$request = new CakeRequest('posts\/view\/1000', false);$/;"	v
request	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^		$request = new CakeRequest(null, false);$/;"	v
response	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^		$response = $this->getMock('CakeResponse');$/;"	v
result	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^		$result = ob_get_clean();$/;"	v
setUp	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public function tearDown() {$/;"	f
testApp	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^		$testApp = CAKE . 'Test' . DS . 'test_app' . DS;$/;"	v
testCakeErrorHelpersNotLost	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public function testCakeErrorHelpersNotLost() {$/;"	f
testCakeExceptionHandling	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public function testCakeExceptionHandling($exception, $patterns, $code) {$/;"	f
testConstruction	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public function testConstruction() {$/;"	f
testError400	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public function testError400() {$/;"	f
testError400NoInjection	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public function testError400NoInjection() {$/;"	f
testError500Message	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public function testError500Message() {$/;"	f
testErrorMethodCoercion	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public function testErrorMethodCoercion() {$/;"	f
testExceptionResponseHeader	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public function testExceptionResponseHeader() {$/;"	f
testMissingController	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public function testMissingController() {$/;"	f
testMissingRenderSafe	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public function testMissingRenderSafe() {$/;"	f
testMissingSubdirRenderSafe	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public function testMissingSubdirRenderSafe() {$/;"	f
testName	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^		$this->testName = 'BlueberryComponent';$/;"	v
testName	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public $testName = null;$/;"	v
testPDOException	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public function testPDOException() {$/;"	f
testProvider	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public static function testProvider() {$/;"	f
testRenderExceptionInBeforeRender	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public function testRenderExceptionInBeforeRender() {$/;"	f
testRenderWithNoRequest	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public function testRenderWithNoRequest() {$/;"	f
testSubclassConvertingFrameworkErrors	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public function testSubclassConvertingFrameworkErrors() {$/;"	f
testSubclassMethodsNotBeingConvertedDebug0	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public function testSubclassMethodsNotBeingConvertedDebug0() {$/;"	f
testSubclassMethodsNotBeingConvertedToError	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public function testSubclassMethodsNotBeingConvertedToError() {$/;"	f
testUnknownExceptionInProduction	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public function testUnknownExceptionInProduction() {$/;"	f
testUnknownExceptionTypeWithCodeHigherThan500	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public function testUnknownExceptionTypeWithCodeHigherThan500() {$/;"	f
testUnknownExceptionTypeWithExceptionThatHasA400Code	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public function testUnknownExceptionTypeWithExceptionThatHasA400Code() {$/;"	f
testUnknownExceptionTypeWithNoCodeIsA500	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public function testUnknownExceptionTypeWithNoCodeIsA500() {$/;"	f
testerror400OnlyChangingCakeException	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public function testerror400OnlyChangingCakeException() {$/;"	f
useTable	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public $useTable = false;$/;"	v
uses	lib/Cake/Test/Case/Error/ExceptionRendererTest.php	/^	public $uses = array();$/;"	v
CakeEventManagerTest	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^class CakeEventManagerTest extends CakeTestCase {$/;"	c
CakeEventTestListener	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^class CakeEventTestListener {$/;"	c
CustomTestEventListener	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^class CustomTestEventListener extends CakeEventTestListener implements CakeEventListener {$/;"	c
anotherListener	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^		$anotherListener = $this->getMock('CakeEventTestListener');$/;"	v
callStack	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^	public $callStack = array();$/;"	v
callback	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^		$callback = array($this, 'onMyEvent');$/;"	v
event	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^		$event = 'fake.event';$/;"	v
event	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^		$event = new CakeEvent('another.event', $this, array('some' => 'data'));$/;"	v
event	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^		$event = new CakeEvent('fake.event');$/;"	v
event	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^		$event = new CakeEvent('fake.event', $this, array('some' => 'data'));$/;"	v
event	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^		$event = new CakeEvent('multiple.handlers');$/;"	v
event	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^		$event = new CakeEvent('my_event', $manager);$/;"	v
expected	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^		$expected = array('listenerFunction');$/;"	v
expected	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^		$expected = array('listenerFunction', 'secondListenerFunction');$/;"	v
expected	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^		$expected = array('listenerFunction', 'secondListenerFunction', 'thirdListenerFunction');$/;"	v
expected	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^		$expected = array('secondListenerFunction');$/;"	v
expected	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^		$expected = array('secondListenerFunction', 'listenerFunction');$/;"	v
expected	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^		$expected = array_merge($/;"	v
generalManager	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^		$generalManager = $this->getMock('CakeEventManager');$/;"	v
generalManager	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^		$generalManager = $this->getMock('CakeEventManager', array('prioritisedListeners'));$/;"	v
implementedEvents	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^	public function implementedEvents() {$/;"	f
listener	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^		$listener = $this->getMock('CakeEventTestListener');$/;"	v
listener	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^		$listener = $this->getMock('CustomTestEventListener', array('listenerFunction', 'thirdListenerFunction'));$/;"	v
listener	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^		$listener = $this->getMock('CustomTestEventListener', array('secondListenerFunction'));$/;"	v
listener	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^		$listener = new CakeEventTestListener();$/;"	v
listener	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^		$listener = new CustomTestEventListener();$/;"	v
listener2	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^		$listener2 = new CakeEventTestListener();$/;"	v
listenerFunction	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^	public function listenerFunction() {$/;"	f
manager	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^		$manager = new CakeEventManager();$/;"	v
onMyEvent	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^	public function onMyEvent($event) {$/;"	f
secondListenerFunction	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^	public function secondListenerFunction() {$/;"	f
stopListener	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^	public function stopListener($event) {$/;"	f
testAttachListeners	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^	public function testAttachListeners() {$/;"	f
testAttachMultipleEventKeys	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^	public function testAttachMultipleEventKeys() {$/;"	f
testAttachSubscriber	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^	public function testAttachSubscriber() {$/;"	f
testDetach	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^	public function testDetach() {$/;"	f
testDetachFromAll	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^	public function testDetachFromAll() {$/;"	f
testDetachSubscriber	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^	public function testDetachSubscriber() {$/;"	f
testDispatch	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^	public function testDispatch() {$/;"	f
testDispatchFalseStopsEvent	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^	public function testDispatchFalseStopsEvent() {$/;"	f
testDispatchGlobalBeforeLocal	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^	public function testDispatchGlobalBeforeLocal() {$/;"	f
testDispatchLocalHandledByGlobal	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^	public function testDispatchLocalHandledByGlobal() {$/;"	f
testDispatchPassingParams	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^	public function testDispatchPassingParams() {$/;"	f
testDispatchPrioritized	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^	public function testDispatchPrioritized() {$/;"	f
testDispatchPrioritizedWithGlobal	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^	public function testDispatchPrioritizedWithGlobal() {$/;"	f
testDispatchReturnValue	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^	public function testDispatchReturnValue() {$/;"	f
testDispatchWithGlobal	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^	public function testDispatchWithGlobal() {$/;"	f
testDispatchWithGlobalAndLocalEvents	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^	public function testDispatchWithGlobalAndLocalEvents() {$/;"	f
testDispatchWithKeyName	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^	public function testDispatchWithKeyName() {$/;"	f
testGlobalDispatcherGetter	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^	public function testGlobalDispatcherGetter() {$/;"	f
testStopPropagation	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^	public function testStopPropagation() {$/;"	f
thirdListenerFunction	lib/Cake/Test/Case/Event/CakeEventManagerTest.php	/^	public function thirdListenerFunction() {$/;"	f
CakeEventTest	lib/Cake/Test/Case/Event/CakeEventTest.php	/^class CakeEventTest extends CakeTestCase {$/;"	c
event	lib/Cake/Test/Case/Event/CakeEventTest.php	/^		$event = new CakeEvent('fake.event');$/;"	v
event	lib/Cake/Test/Case/Event/CakeEventTest.php	/^		$event = new CakeEvent('fake.event', $this);$/;"	v
event	lib/Cake/Test/Case/Event/CakeEventTest.php	/^		$event = new CakeEvent('fake.event', $this, array('some' => 'data'));$/;"	v
testEventData	lib/Cake/Test/Case/Event/CakeEventTest.php	/^	public function testEventData() {$/;"	f
testEventDirectPropertyAccess	lib/Cake/Test/Case/Event/CakeEventTest.php	/^	public function testEventDirectPropertyAccess() {$/;"	f
testName	lib/Cake/Test/Case/Event/CakeEventTest.php	/^	public function testName() {$/;"	f
testPropagation	lib/Cake/Test/Case/Event/CakeEventTest.php	/^	public function testPropagation() {$/;"	f
testSubject	lib/Cake/Test/Case/Event/CakeEventTest.php	/^	public function testSubject() {$/;"	f
I18nTest	lib/Cake/Test/Case/I18n/I18nTest.php	/^class I18nTest extends CakeTestCase {$/;"	c
_category	lib/Cake/Test/Case/I18n/I18nTest.php	/^	protected function _category($category = I18n::LC_MONETARY) {$/;"	f
_domainCategoryPlural	lib/Cake/Test/Case/I18n/I18nTest.php	/^	protected function _domainCategoryPlural($domain = 'test_plugin', $category = 3) {$/;"	f
_domainCategorySingular	lib/Cake/Test/Case/I18n/I18nTest.php	/^	protected function _domainCategorySingular($domain = 'test_plugin', $category = 3) {$/;"	f
_domainPlural	lib/Cake/Test/Case/I18n/I18nTest.php	/^	protected function _domainPlural($domain = 'test_plugin') {$/;"	f
_domainSingular	lib/Cake/Test/Case/I18n/I18nTest.php	/^	protected function _domainSingular($domain = 'test_plugin') {$/;"	f
_plural	lib/Cake/Test/Case/I18n/I18nTest.php	/^	protected function _plural() {$/;"	f
_pluralFromCore	lib/Cake/Test/Case/I18n/I18nTest.php	/^	protected function _pluralFromCore() {$/;"	f
_singular	lib/Cake/Test/Case/I18n/I18nTest.php	/^	protected function _singular() {$/;"	f
_singularFromCore	lib/Cake/Test/Case/I18n/I18nTest.php	/^	protected function _singularFromCore() {$/;"	f
assertRulesEight	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function assertRulesEight() {$/;"	f
assertRulesEleven	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function assertRulesEleven() {$/;"	f
assertRulesFive	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function assertRulesFive() {$/;"	f
assertRulesFour	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function assertRulesFour() {$/;"	f
assertRulesFourteen	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function assertRulesFourteen() {$/;"	f
assertRulesNine	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function assertRulesNine() {$/;"	f
assertRulesOne	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function assertRulesOne() {$/;"	f
assertRulesSeven	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function assertRulesSeven() {$/;"	f
assertRulesSix	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function assertRulesSix() {$/;"	f
assertRulesTen	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function assertRulesTen() {$/;"	f
assertRulesThirteen	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function assertRulesThirteen() {$/;"	f
assertRulesThree	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function assertRulesThree() {$/;"	f
assertRulesTwelve	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function assertRulesTwelve() {$/;"	f
assertRulesTwo	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function assertRulesTwo() {$/;"	f
assertRulesZero	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function assertRulesZero() {$/;"	f
cachedDom1	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$cachedDom1 = Cache::read('dom1_' . $lang, '_cake_core_');$/;"	v
cachedDom2	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$cachedDom2 = Cache::read('dom2_' . $lang, '_cake_core_');$/;"	v
category	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$category = $this->_category();$/;"	v
category	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$category = $this->_category(3);$/;"	v
corePlurals	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$corePlurals = $this->_pluralFromCore();$/;"	v
coreSingular	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$coreSingular = $this->_singularFromCore();$/;"	v
domains	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$domains = I18n::domains();$/;"	v
expected	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$expected = "%Y年%m月%d日";$/;"	v
expected	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$expected = "%d ends in 2-4, not 12-14 (translated)";$/;"	v
expected	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$expected = "%d everything else (translated)";$/;"	v
expected	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$expected = "%d is 1\\n" . $string;$/;"	v
expected	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$expected = "%d is 1\\n" . str_replace("\\r\\n", "\\n", $string);$/;"	v
expected	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$expected = "%d is 2-4\\n" . $string;$/;"	v
expected	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$expected = "%d is 2-4\\n" . str_replace("\\r\\n", "\\n", $string);$/;"	v
expected	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$expected = "This is a multiline translation\\n";$/;"	v
expected	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$expected = "v\\nsecond line";$/;"	v
expected	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$expected = "vs\\nsecond line";$/;"	v
expected	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$expected = '%d is 1 (translated)';$/;"	v
expected	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$expected = '%m\/%d\/%Y';$/;"	v
expected	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$expected = 'Plural Rule 0 (translated)';$/;"	v
expected	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$expected = 'Plural Rule 1 (translated)';$/;"	v
expected	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$expected = 'this is a "quoted string" (translated)';$/;"	v
expected	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$expected = array(" 1月", " 2月", " 3月", " 4月", " 5月", " 6月", " 7月", " 8月", " 9月", "10月", "11月", "12月");$/;"	v
expected	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$expected = array("午前", "午後");$/;"	v
expected	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$expected = array('AM', 'PM');$/;"	v
expected	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$expected = array('Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec');$/;"	v
expected	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$expected = array('zondag', 'maandag', 'dinsdag', 'woensdag', 'donderdag', 'vrijdag', 'zaterdag');$/;"	v
lang	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$lang = Configure::read('Config.language');$/;"	v
path	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$path = current(App::path('locales'));$/;"	v
plural	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$plural = "%d = 0 or > 1\\n" . $string;$/;"	v
plural	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$plural = "%d = 0 or > 1\\r\\n" . $string;$/;"	v
plural	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$plural = "valids\\nsecond line";$/;"	v
plurals	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$plurals = $this->_domainCategoryPlural();$/;"	v
plurals	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$plurals = $this->_domainPlural();$/;"	v
plurals	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$plurals = $this->_plural();$/;"	v
plurals	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$plurals = array();$/;"	v
result	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$result = I18n::loadLocaleDefinition($path . 'nld' . DS . 'LC_TIME');$/;"	v
result	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$result = I18n::translate('Plural Rule 1', null, null, I18n::LC_MESSAGES);$/;"	v
result	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$result = I18n::translate('Plural Rule 1', null, null, I18n::LC_MESSAGES, null, 'rule_1_po');$/;"	v
result	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$result = __($string);$/;"	v
result	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$result = __('No Translation needed');$/;"	v
result	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$result = __c('abmon', 5);$/;"	v
result	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$result = __c('am_pm', 5);$/;"	v
result	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$result = __c('d_fmt', 5);$/;"	v
result	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$result = __n($singular, $plural, 1);$/;"	v
result	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$result = __n($singular, $plural, 2);$/;"	v
result	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$result = __n('%d = 1', '%d = 0 or > 1', (float)1);$/;"	v
result	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$result = __n('%d = 1', '%d = 0 or > 1', (float)2);$/;"	v
result	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$result = __n('%d = 1', '%d = 0 or > 1', (float)5);$/;"	v
setUp	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function setUp() {$/;"	f
singular	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$singular = "%d = 1\\n" . $string;$/;"	v
singular	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$singular = "%d = 1\\r\\n" . $string;$/;"	v
singular	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$singular = "valid\\nsecond line";$/;"	v
singular	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$singular = $this->_domainCategorySingular();$/;"	v
singular	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$singular = $this->_domainSingular();$/;"	v
singular	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$singular = $this->_singular();$/;"	v
singular	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$singular = __('Plural Rule 1 (from core)');$/;"	v
singular	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$singular = __('Plural Rule 1');$/;"	v
singular	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$singular = __c('Plural Rule 1', $category);$/;"	v
singular	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$singular = __d($domain, 'Plural Rule 1');$/;"	v
singular	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$singular = __dc($domain, 'Plural Rule 1', $category);$/;"	v
string	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$string = "This is a multiline translation\\n";$/;"	v
string	lib/Cake/Test/Case/I18n/I18nTest.php	/^		$string = "This is a multiline translation\\r\\n";$/;"	v
tearDown	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function tearDown() {$/;"	f
testCategory	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testCategory() {$/;"	f
testCategoryThenSingular	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testCategoryThenSingular() {$/;"	f
testDefaultStrings	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testDefaultStrings() {$/;"	f
testFloatValue	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testFloatValue() {$/;"	f
testLoadLocaleDefinition	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testLoadLocaleDefinition() {$/;"	f
testMoRulesEight	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testMoRulesEight() {$/;"	f
testMoRulesEleven	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testMoRulesEleven() {$/;"	f
testMoRulesFive	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testMoRulesFive() {$/;"	f
testMoRulesFour	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testMoRulesFour() {$/;"	f
testMoRulesFourteen	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testMoRulesFourteen() {$/;"	f
testMoRulesNine	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testMoRulesNine() {$/;"	f
testMoRulesOne	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testMoRulesOne() {$/;"	f
testMoRulesSeven	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testMoRulesSeven() {$/;"	f
testMoRulesSix	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testMoRulesSix() {$/;"	f
testMoRulesTen	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testMoRulesTen() {$/;"	f
testMoRulesThree	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testMoRulesThree() {$/;"	f
testMoRulesTwelve	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testMoRulesTwelve() {$/;"	f
testMoRulesTwo	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testMoRulesTwo() {$/;"	f
testMoRulesZero	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testMoRulesZero() {$/;"	f
testNoCoreTranslation	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testNoCoreTranslation() {$/;"	f
testPluginCategory	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testPluginCategory() {$/;"	f
testPluginTranslation	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testPluginTranslation() {$/;"	f
testPoMultipleLineTranslation	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testPoMultipleLineTranslation() {$/;"	f
testPoNoTranslationNeeded	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testPoNoTranslationNeeded() {$/;"	f
testPoQuotedString	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testPoQuotedString() {$/;"	f
testPoRulesEight	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testPoRulesEight() {$/;"	f
testPoRulesEleven	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testPoRulesEleven() {$/;"	f
testPoRulesFive	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testPoRulesFive() {$/;"	f
testPoRulesFour	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testPoRulesFour() {$/;"	f
testPoRulesFourteen	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testPoRulesFourteen() {$/;"	f
testPoRulesNine	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testPoRulesNine() {$/;"	f
testPoRulesOne	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testPoRulesOne() {$/;"	f
testPoRulesSeven	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testPoRulesSeven() {$/;"	f
testPoRulesSix	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testPoRulesSix() {$/;"	f
testPoRulesTen	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testPoRulesTen() {$/;"	f
testPoRulesThirteen	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testPoRulesThirteen() {$/;"	f
testPoRulesThree	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testPoRulesThree() {$/;"	f
testPoRulesTwelve	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testPoRulesTwelve() {$/;"	f
testPoRulesTwo	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testPoRulesTwo() {$/;"	f
testPoRulesZero	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testPoRulesZero() {$/;"	f
testSetLanguageWithSession	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testSetLanguageWithSession() {$/;"	f
testTimeDefinition	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testTimeDefinition() {$/;"	f
testTimeDefinitionJapanese	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testTimeDefinitionJapanese() {$/;"	f
testTranslateEmptyDomain	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testTranslateEmptyDomain() {$/;"	f
testTranslateLanguageParam	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testTranslateLanguageParam() {$/;"	f
testTranslationCaching	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testTranslationCaching() {$/;"	f
testmoRulesThirteen	lib/Cake/Test/Case/I18n/I18nTest.php	/^	public function testmoRulesThirteen() {$/;"	f
DEFAULT_LANGUAGE	lib/Cake/Test/Case/I18n/L10nTest.php	/^		define('DEFAULT_LANGUAGE', 'en-us');$/;"	d
L10nTest	lib/Cake/Test/Case/I18n/L10nTest.php	/^class L10nTest extends CakeTestCase {$/;"	c
_SERVER	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$_SERVER = $serverBackup;$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('afr' => 'af', 'af' => 'afr');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('alb' => 'sq', 'sq' => 'sqi');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('ara' => 'ar', 'ar' => 'ara');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('baq' => 'eu', 'eu' => 'eus');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('bel' => 'be', 'be' => 'bel');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('bos' => 'bs', 'bs' => 'bos');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('bul' => 'bg', 'bg' => 'bul');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('cat' => 'ca', 'ca' => 'cat');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('ces' => 'cs', 'cs' => 'ces');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('chi' => 'zh', 'zh' => 'zho');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('cym' => 'cy', 'cy' => 'cym');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('cze' => 'cs', 'cs' => 'ces');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('dan' => 'da', 'da' => 'dan');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('deu' => 'de', 'de' => 'deu');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('dut' => 'nl');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('dut' => 'nl', 'nl' => 'nld');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('ell' => 'el', 'el' => 'gre');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('eng' => 'en', 'en' => 'eng');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('est' => 'et', 'et' => 'est');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('eus' => 'eu', 'eu' => 'eus');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('fao' => 'fo', 'fo' => 'fao');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('fas' => 'fa', 'fa' => 'fas');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('fin' => 'fi', 'fi' => 'fin');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('fra' => 'fr', 'fr' => 'fra');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('fre' => 'fr', 'fr' => 'fra');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('ger' => 'de', 'de' => 'deu');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('gla' => 'gd', 'gd' => 'gla');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('gle' => 'ga', 'ga' => 'gle');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('glg' => 'gl', 'gl' => 'glg');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('gre' => 'el', 'el' => 'gre');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('heb' => 'he', 'he' => 'heb');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('hin' => 'hi', 'hi' => 'hin');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('hrv' => 'hr', 'hr' => 'hrv');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('hun' => 'hu', 'hu' => 'hun');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('hye' => 'hy', 'hy' => 'hye');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('ice' => 'is', 'is' => 'isl');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('ind' => 'id', 'id' => 'ind');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('isl' => 'is', 'is' => 'isl');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('ita' => 'it', 'it' => 'ita');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('jpn' => 'ja', 'ja' => 'jpn');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('kaz' => 'kk', 'kk' => 'kaz');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('kor' => 'ko', 'ko' => 'kor');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('language' => 'Dutch (Standard)', 'locale' => 'nld', 'localeFallback' => 'nld', 'charset' => 'utf-8', 'direction' => 'ltr');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('lav' => 'lv', 'lv' => 'lav');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('lit' => 'lt', 'lt' => 'lit');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('mac' => 'mk', 'mk' => 'mkd');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('may' => 'ms', 'ms' => 'msa');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('mkd' => 'mk', 'mk' => 'mkd');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('mlt' => 'mt', 'mt' => 'mlt');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('msa' => 'ms', 'ms' => 'msa');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('nld' => 'nl');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('nld' => 'nl', 'nl' => 'nld');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('nno' => 'nn', 'nn' => 'nno');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('nob' => 'nb', 'nb' => 'nob');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('nor' => 'no', 'no' => 'nor');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('per' => 'fa', 'fa' => 'fas');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('pol' => 'pl', 'pl' => 'pol');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('por' => 'pt', 'pt' => 'por');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('roh' => 'rm', 'rm' => 'roh');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('ron' => 'ro', 'ro' => 'ron');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('rum' => 'ro', 'ro' => 'ron');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('rus' => 'ru', 'ru' => 'rus');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('slk' => 'sk', 'sk' => 'slk');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('slo' => 'sk', 'sk' => 'slk');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('slv' => 'sl', 'sl' => 'slv');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('sme' => 'se', 'se' => 'sme');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('spa' => 'es', 'es' => 'spa');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('sqi' => 'sq', 'sq' => 'sqi');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('srp' => 'sr', 'sr' => 'srp');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('swe' => 'sv', 'sv' => 'swe');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('tha' => 'th', 'th' => 'tha');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('tsn' => 'tn', 'tn' => 'tsn');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('tso' => 'ts', 'ts' => 'tso');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('tur' => 'tr', 'tr' => 'tur');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('ukr' => 'uk', 'uk' => 'ukr');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('urd' => 'ur', 'ur' => 'urd');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('ven' => 've', 've' => 'ven');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('vie' => 'vi', 'vi' => 'vie');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('wen' => 'sb', 'sb' => 'wen');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('xho' => 'xh', 'xh' => 'xho');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('yid' => 'yi', 'yi' => 'yid');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('zho' => 'zh', 'zh' => 'zho');$/;"	v
expected	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$expected = array('zul' => 'zu', 'zu' => 'zul');$/;"	v
lang	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$lang = $localize->get('en');$/;"	v
lang	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$lang = $localize->get('use_default');$/;"	v
lang	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$lang = $localize->get();$/;"	v
localize	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$localize = new L10n();$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog('dut');$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog('nl');$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog('nld');$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('af'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('ar', 'ar-ae', 'ar-bh', 'ar-dz', 'ar-eg', 'ar-iq', 'ar-jo', 'ar-kw', 'ar-lb', 'ar-ly', 'ar-ma',$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('be'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('bg'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('bs'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('ca'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('cs'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('cy'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('da'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('de', 'de-at', 'de-ch', 'de-de', 'de-li', 'de-lu'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('el'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('en', 'en-au', 'en-bz', 'en-ca', 'en-gb', 'en-ie', 'en-jm', 'en-nz', 'en-tt', 'en-us', 'en-za'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('en-nz', 'es-do', 'ar-lb', 'zh-hk', 'pt-br'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('eng', 'deu', 'zho', 'rum', 'zul', 'yid'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('es', 'es-ar', 'es-bo', 'es-cl', 'es-co', 'es-cr', 'es-do', 'es-ec', 'es-es', 'es-gt', 'es-hn',$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('et'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('eu'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('fa'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('fi'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('fo'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('fr', 'fr-be', 'fr-ca', 'fr-ch', 'fr-fr', 'fr-lu'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('ga'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('gd', 'gd-ie'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('gl'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('he'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('hi'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('hr'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('hu'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('hy'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('id'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('is'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('it', 'it-ch'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('ja'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('kk'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('ko', 'ko-kp', 'ko-kr'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('koi8-r', 'ru', 'ru-mo'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('lt'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('lv'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('mk', 'mk-mk'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('ms'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('mt'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('nb'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('nl', 'nl-be'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('nn', 'no'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('pl'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('pt', 'pt-br'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('rm'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('ro', 'ro-mo'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('sb'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('se'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('sk'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('sl'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('sq'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('sr'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('sv', 'sv-fi'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('th'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('tn'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('tr'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('ts'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('uk'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('ur'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('ve'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('vi'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('xh'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('yi'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('zh', 'zh-cn', 'zh-hk', 'zh-sg', 'zh-tw'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->catalog(array('zu'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('afr', 'af'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('alb', 'sq'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('ara', 'ar'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('baq', 'eu'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('bel', 'be'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('bos', 'bs'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('bul', 'bg'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('cat', 'ca'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('ces', 'cs'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('chi', 'zh'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('cy', 'cym'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('cze', 'cs'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('dan', 'da'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('deu', 'de'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('dut'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('dut', 'nl'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('ell', 'el'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('eng', 'en'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('est', 'et'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('eus', 'eu'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('fao', 'fo'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('fas', 'fa'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('fin', 'fi'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('fra', 'fr'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('fre', 'fr'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('ger', 'de'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('gla', 'gd'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('gle', 'ga'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('glg', 'gl'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('gre', 'el'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('heb', 'he'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('hin', 'hi'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('hrv', 'hr'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('hun', 'hu'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('hye', 'hy'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('ice', 'is'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('ind', 'id'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('isl', 'is'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('ita', 'it'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('jpn', 'ja'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('kaz', 'kk'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('kor', 'ko'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('lav', 'lv'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('lit', 'lt'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('mac', 'mk'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('may', 'ms'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('mkd', 'mk'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('mlt', 'mt'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('msa', 'ms'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('nld'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('nld', 'nl'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('nno', 'nn'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('nob', 'nb'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('nor', 'no'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('per', 'fa'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('pol', 'pl'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('por', 'pt'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('roh', 'rm'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('ron', 'ro'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('rum', 'ro'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('rus', 'ru'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('slk', 'sk'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('slo', 'sk'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('slv', 'sl'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('sme', 'se'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('spa', 'es'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('sqi', 'sq'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('srp', 'sr'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('swe', 'sv'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('tha', 'th'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('tsn', 'tn'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('tso', 'ts'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('tur', 'tr'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('ukr', 'uk'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('urd', 'ur'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('ven', 've'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('vie', 'vi'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('wen', 'sb'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('xho', 'xh'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('yid', 'yi'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('zho', 'zh'));$/;"	v
result	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$result = $localize->map(array('zul', 'zu'));$/;"	v
serverBackup	lib/Cake/Test/Case/I18n/L10nTest.php	/^		$serverBackup = $_SERVER;$/;"	v
setUp	lib/Cake/Test/Case/I18n/L10nTest.php	/^	public function setUp() {$/;"	f
testCatalog	lib/Cake/Test/Case/I18n/L10nTest.php	/^	public function testCatalog() {$/;"	f
testGet	lib/Cake/Test/Case/I18n/L10nTest.php	/^	public function testGet() {$/;"	f
testGetAutoLanguage	lib/Cake/Test/Case/I18n/L10nTest.php	/^	public function testGetAutoLanguage() {$/;"	f
testGetWithDeprecatedConstant	lib/Cake/Test/Case/I18n/L10nTest.php	/^	public function testGetWithDeprecatedConstant() {$/;"	f
testMap	lib/Cake/Test/Case/I18n/L10nTest.php	/^	public function testMap() {$/;"	f
MultibyteTest	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^class MultibyteTest extends CakeTestCase {$/;"	c
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '!"#$%&\\'()*+,-.\/0123456789:;<=>?@';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '!"#$%&\\'()*+,-.\/0123456789:;<=>?@ABCDE';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '!"#$%&\\'()*+,-.\/0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '!"#$%&\\'()*+,-.\/0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcde';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '!"#$%&\\'()*+,-.\/0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '!"#$%&\\'()*+,-.\/0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '%&\\'()*+';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '=?UTF-8?B?0IDQgdCC0IPQhNCF0IbQh9CI0InQitCL0IzQjdCO0I\/QkNCR0JLQk9CU0JU=?=' . "\\r\\n" .$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '=?UTF-8?B?0JzQndCe0J\/QoNCh0KLQo9Ck0KXQptCn0KjQqdCq0KvQrNCt0K7Qr9Cw0LE=?=' . "\\r\\n" .$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '=?UTF-8?B?2YHZgtmD2YTZhdmG2YfZiNmJ2YrZi9mM2Y3ZjtmP?=';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '=?UTF-8?B?4pyw4pyx4pyy4pyz4py04py14py24py34py44py54py64py74py84py94py+?=' . "\\r\\n" .$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '=?UTF-8?B?4r2F4r2G4r2H4r2I4r2J4r2K4r2L4r2M4r2N4r2O4r2P4r2Q4r2R4r2S4r2T?=' . "\\r\\n" .$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '=?UTF-8?B?4rqA4rqB4rqC4rqD4rqE4rqF4rqG4rqH4rqI4rqJ4rqK4rqL4rqM4rqN4rqO?=' . "\\r\\n" .$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '=?UTF-8?B?5LiA5LqM5LiJ5ZGo5rC46b6N?=';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '=?UTF-8?B?5oqK55m+5bqm6K6+5Li66aaW6aG1?=';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '=?UTF-8?B?64ih64ii64ij64ik64il64im64in64io64ip64iq64ir64is64it64iu64iv?=' . "\\r\\n" .$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '=?UTF-8?B?77257726772777287729772+772\/776A776B776C776D776E776F776G776H?=' . "\\r\\n" .$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '=?UTF-8?B?772B772C772D772E772F772G772H772I772J772K772L772M772N772O772P?=' . "\\r\\n" .$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '=?UTF-8?B?772h772i772j772k772l772m772n772o772p772q772r772s772t772u772v?=' . "\\r\\n" .$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '=?UTF-8?B?77mw77mx77my77mz77m077m177m277m377m477m577m677m777m877m977m+?=' . "\\r\\n" .$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '=?UTF-8?B?77qx77qy77qz77q077q177q277q377q477q577q677q777q877q977q+77q\/?=' . "\\r\\n" .$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '=?UTF-8?B?ISIjJCUmJygpKissLS4vMDEyMzQ1Njc4OTo7PD0+P0BBQkNERUZHSElKS0xN?=' . "\\r\\n" .$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '=?UTF-8?B?ZHLFvmF2bmk=?=';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '=?UTF-8?B?bW\/Eh2k=?=';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '=?UTF-8?B?w4DDgcOCw4PDhMOFw4bDh8OIw4nDisOLw4zDjcOOw4\/DkMORw5LDk8OUw5U=?=' . "\\n" .$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '=?UTF-8?B?w4DDgcOCw4PDhMOFw4bDh8OIw4nDisOLw4zDjcOOw4\/DkMORw5LDk8OUw5U=?=' . "\\r\\n" .$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '=?UTF-8?B?w4nDisOLw4zDjcOOw4\/DkMORw5LDk8OUw5XDlsOXw5jDmcOaw5vDnMOdw54=?=' . "\\r\\n" .$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '=?UTF-8?B?wqHCosKjwqTCpcKmwqfCqMKpwqrCq8Kswq3CrsKvwrDCscKywrPCtMK1wrY=?=' . "\\r\\n" .$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '=?UTF-8?B?xI1pbmk=?=';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '=?UTF-8?B?xIDEgsSExIbEiMSKxIzEjsSQxJLElMSWxJjEmsScxJ7EoMSixKTEpsSoxKo=?=' . "\\r\\n" .$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '=?UTF-8?B?xK3ErsSvxLDEscSyxLPEtMS1xLbEt8S4xLnEusS7xLzEvcS+xL\/FgMWBxYI=?=' . "\\r\\n" .$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '=?UTF-8?B?xKTEk8S6xLzFjywgxbTFkcWZxLzEjyE=?=';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '=?UTF-8?B?xpHGksaTxpTGlcaWxpfGmMaZxprGm8acxp3GnsafxqDGocaixqPGpMalxqY=?=' . "\\r\\n" .$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '=?UTF-8?B?yZnJmsmbyZzJncmeyZ\/JoMmhyaLJo8mkyaXJpsmnyajJqcmqyavJrMmtya4=?=' . "\\r\\n" .$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ABCDE';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'EFGHIJK';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'FGHIJKLMNOPQRSTUVWXYZ0123456789';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'FGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'He';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Hell';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Hello, ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Hello, W';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Hello, Wo';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Hello, World!';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'World!';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'dr';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'državni';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'fghijklmnopqrstuvwxyz{|}~';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'i';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'llo, World!';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'lo, ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'mo';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'moći';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ni';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'o, World!';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'orld!';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'oći';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'rld!';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '¡¢£¤¥¦§¨©ª«¬­®¯°±²³´';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '¨';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '¿';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'À';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ÀÁÂÃÄ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝÞ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Á';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Â';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ã';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ä';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ÄÅÆÇÈÉÊ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Å';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝÞ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Æ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ç';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'È';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'É';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüý';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿĀāĂăĄąĆćĈĉĊċČčĎďĐđĒēĔĕĖėĘęĚěĜĝĞğĠġĢģĤĥĦħĨĩĪīĬ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ê';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ë';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ì';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Í';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ÍÎÏÐÑÒÓ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Î';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ï';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ð';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ñ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ò';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ó';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ô';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Õ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ö';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ø';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ù';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ú';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Û';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ü';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ý';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Þ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Þßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿĀāĂăĄąĆćĈĉĊċČčĎďĐđĒēĔĕĖėĘęĚěĜĝĞğĠġĢģĤĥĦħĨĩĪīĬ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'à';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'àáâãäåæçèéêëìíîïðñòóôõöøùúûüýþ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'á';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'â';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ã';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ä';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'å';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'æ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ç';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'è';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'é';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ê';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ë';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ì';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'í';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'î';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ï';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ð';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ñ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ò';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ó';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ô';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'õ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ö';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ø';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ù';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ú';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'û';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ü';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ý';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'þ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'þÿĀāĂăĄąĆćĈĉĊċČčĎďĐđĒēĔĕĖėĘęĚěĜĝĞğĠġĢģĤĥĦħĨĩĪīĬ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ā';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ĀĂĄĆĈ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ĀĂĄĆĈĊČĎĐĒĔĖĘĚĜĞĠĢĤĦĨĪĬĮĲĴĶĹĻĽĿŁŃŅŇŊŌŎŐŒŔŖŘŚŜŞŠŢŤŦŨŪŬŮŰŲŴŶŹŻŽ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ā';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'āăąćĉċčďđēĕėęěĝğġģĥħĩīĭįĳĵķĺļľŀłńņňŋōŏőœŕŗřśŝşšţťŧũūŭůűųŵŷźżž';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ă';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ă';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ą';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ą';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ć';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ć';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ći';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ĉ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ĈĊČĎĐĒĔ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ĉ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ċ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ĊČĎĐĒĔĖĘĚĜĞĠĢĤĦĨĪĬĮĲĴĶĹĻĽĿŁŃŅŇŊŌŎŐŒŔŖŘŚŜŞŠŢŤŦŨŪŬŮŰŲŴŶŹŻŽ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ċ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Č';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'č';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'či';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'čini';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ď';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ď';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Đ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'đ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ē';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ē';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ĕ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ĕ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ė';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ė';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ę';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ę';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ě';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ě';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ĝ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ĝ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ğ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ğ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ġ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ġ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ģ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ģ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ĥ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ĤĒĹĻŎ, ŴŐŘĻĎ!';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ĥē';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ĥēĺļŏ, Ŵ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ĥēĺļŏ, Ŵőřļď!';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ĥ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ĥēĺļŏ, ŵőřļď!';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ħ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ħ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ĩ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ĩ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ī';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ī';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ĭ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ĭ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ĭĮįİıĲĳĴĵĶķĸĹĺĻļĽľĿŀŁłŃń';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ĭĮįİıĲĳĴĵĶķĸĹĺĻļĽľĿŀŁłŃńŅ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ĭĮįİıĲĳĴĵĶķĸĹĺĻļĽľĿŀŁłŃńŅņŇňŉŊŋŌōŎŏŐőŒœŔŕŖŗŘřŚśŜŝŞşŠšŢţŤťŦŧŨũŪūŬŭŮůŰűŲųŴŵŶŷŸŹźŻżŽžſƀƁƂƃƄƅƆƇƈƉƊƋƌƍƎƏƐ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Į';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'į';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ıĲĳĴĵĶķ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ĳ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ĳ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ĵ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ĵ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ķ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ķ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ĺ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ĺ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ļ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ļ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ļŏ, ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ľ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ľ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ŀ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ŀ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ł';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ł';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ń';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ń';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ņ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ŅņŇňŉŊŋŌōŎŏŐőŒœŔŕŖŗŘřŚśŜŝŞşŠšŢţŤťŦŧŨũŪūŬŭŮůŰűŲųŴŵŶŷŸŹźŻżŽžſƀƁƂƃƄƅƆƇƈƉƊƋƌƍƎƏƐ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ņ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ņŇňŉŊŋŌōŎŏŐőŒœŔŕŖŗŘřŚśŜŝŞşŠšŢţŤťŦŧŨũŪūŬŭŮůŰűŲųŴŵŶŷŸŹźŻżŽžſƀƁƂƃƄƅƆƇƈƉƊƋƌƍƎƏƐ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ň';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ň';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ŋ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ŋ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ō';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ō';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ŏ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ŏ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ő';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ő';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'őřļď!';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Œ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'œ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ŕ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ŕ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ŗ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ŗ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ř';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ř';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ś';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ś';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ŝ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ŝ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ş';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ş';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Š';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'š';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ţ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ţ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ť';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ť';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ŧ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ŧ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ũ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ũ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ū';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ū';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ŭ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ŭ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ů';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ů';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ű';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ű';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ų';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ų';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ŵ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ŵ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ŷ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ŷ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ź';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ź';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ż';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ż';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'Ž';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ž';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'žavni';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ƑƒƓƔƕƖƗƘƙƚƛƜƝƞƟƠơƢƣƤƥƦƧƨƩƪƫƬƭƮƯưƱƲƳƴƵƶƷ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ƑƒƓƔƕƖƗƘƙƚƛƜƝƞƟƠơƢƣƤƥƦƧƨƩƪƫƬƭƮƯưƱƲƳƴƵƶƷƸ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ƑƒƓƔƕƖƗƘƙƚƛƜƝƞƟƠơƢƣƤƥƦƧƨƩƪƫƬƭƮƯưƱƲƳƴƵƶƷƸƹƺƻƼƽƾƿǀǁǂǃǄǅǆǇǈǉǊǋǌǍǎǏǐǑǒǓǔǕǖǗǘǙǚǛǜǝǞǟǠǡǢǣǤǥǦǧǨǩǪǫǬǭǮǯǰǱǲǳǴ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ƪƫƬƭƮƯưƱƲƳƴƵƶƷƸƹƺƻƼƽƾƿǀǁǂǃǄǅǆǇǈǉǊǋǌǍǎǏǐǑǒǓǔǕǖǗǘǙǚǛǜǝǞǟǠǡǢǣǤǥǦǧǨǩǪǫǬǭǮǯǰǱǲǳǴ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ƸƹƺƻƼƽƾƿǀǁǂǃǄǅǆǇǈǉǊǋǌǍǎǏǐǑǒǓǔǕǖǗǘǙǚǛǜǝǞǟǠǡǢǣǤǥǦǧǨǩǪǫǬǭǮǯǰǱǲǳǴ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ƹƺƻƼƽƾƿǀǁǂǃǄǅǆǇǈǉǊǋǌǍǎǏǐǑǒǓǔǕǖǗǘǙǚǛǜǝǞǟǠǡǢǣǤǥǦǧǨǩǪǫǬǭǮǯǰǱǲǳǴ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'əɚɛɜɝɞɟɠɡɢɣɤɥɦɧɨɩɪɫɬɭɮɯɰɱɲɳɴɵɶɷɸɹɺɻɼɽɾɿ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'əɚɛɜɝɞɟɠɡɢɣɤɥɦɧɨɩɪɫɬɭɮɯɰɱɲɳɴɵɶɷɸɹɺɻɼɽɾɿʀʁʂʃʄʅʆʇʈʉʊʋʌʍʎʏʐʑʒʓʔʕʖʗʘʙʚʛʜʝʞʟʠʡʢʣʤʥʦʧʨʩʪʫʬʭʮʯʰʱʲʳʴʵʶʷʸʹʺʻʼ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ɜɝɞɟɠɡɢɣɤɥɦɧɨɩɪɫɬɭɮɯɰɱɲɳɴɵɶɷɸɹɺɻɼɽɾɿʀʁʂʃʄʅʆʇʈʉʊʋʌʍʎʏʐʑʒʓʔʕʖʗʘʙʚʛʜʝʞʟʠʡʢʣʤʥʦʧʨʩʪʫʬʭʮʯʰʱʲʳʴʵʶʷʸʹʺʻʼ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ʀʁʂʃʄʅʆʇʈʉʊʋʌʍʎʏʐʑʒʓʔʕʖʗʘʙʚʛʜʝʞʟʠʡʢʣʤʥʦʧʨʩʪʫʬʭʮʯʰʱʲʳʴʵʶʷʸʹʺʻʼ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ΩKÅ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ΩKÅℲ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ωkå';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ωkåⅎ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ЀЁЂЃЄЅІ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ЀЁЂЃЄЅІЇЈЉЊЋЌЍЎЏАБВГДЕЖЗИЙКЛ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ЃЄЅІЇЈЉЊЋЌЍЎЏАБВГДЕЖЗИЙКЛ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ЇЈЉЊЋЌЍЎЏАБВГДЕЖЗИЙКЛ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'МНОП';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'МНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыь';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ПРСТУФХЦЧШЩЪЫЬЭЮ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'РСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыь';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'рстуфхцчшщъыь';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ԀԂԄԆԈԊԌԎԐԒ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ԁԃԅԇԉԋԍԏԐԒ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ԁԃԅԇԉԋԍԏԑԓ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ԱԲԳԴԵԶԷԸԹԺԻԼԽԾԿՀՁՂՃՄՅՆՇՈՉՊՋՌՍՎՏՐՑՒՓՔՕՖև';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'աբգդեզէըթժիլխծկհձղճմյնշոչպջռսվտրցւփքօֆև';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'չպջռսվտ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'فقكلم';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'فقكلمنهوىيًٌٍَُ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'لمنهوى';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'نهوىيًٌٍَُ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ႠႡႢႣႤႥႦႧႨႩႪႫႬႭႮႯႰႱႲႳႴႵႶႷႸႹႺႻႼႽႾႿჀჁჂჃჄჅ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ḀḂḄḆḈḊḌḎḐḒḔḖḘḚḜḞḠḢḤḦḨḪḬḮḰḲḴḶḸḺḼḾṀṂṄṆṈṊṌṎṐṒṔṖṘṚṜṞṠṢṤṦṨṪṬṮṰṲṴṶṸṺṼṾẀẂẄẆẈẊẌẎẐẒẔẖẗẘẙẚẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼẾỀỂỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪỬỮỰỲỴỶỸ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ḁḃḅḇḉḋḍḏḑḓḕḗḙḛḝḟḡḣḥḧḩḫḭḯḱḳḵḷḹḻḽḿṁṃṅṇṉṋṍṏṑṓṕṗṙṛṝṟṡṣṥṧṩṫṭṯṱṳṵṷṹṻṽṿẁẃẅẇẉẋẍẏẑẓẕẖẗẘẙẚạảấầẩẫậắằẳẵặẹẻẽếềểễệỉịọỏốồổỗộớờởỡợụủứừửữựỳỵỷỹ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ἀι';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ἈΙ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ΩKÅℲ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ⅠⅡⅢⅣⅤⅥⅦⅧⅨⅩⅪⅫⅬⅭⅮⅯↃ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ⅰⅱⅲⅳⅴⅵⅶⅷⅸⅹⅺⅻⅼⅽⅾⅿↄ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ⒶⒷⒸⒹⒺⒻⒼⒽⒾⒿⓀⓁⓂⓃⓄⓅⓆⓇⓈⓉⓊⓋⓌⓍⓎⓏ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ⓐⓑⓒⓓⓔⓕⓖⓗⓘⓙⓚⓛⓜⓝⓞⓟⓠⓡⓢⓣⓤⓥⓦⓧⓨⓩ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '✰✱✲✳✴✵✶✷✸✹✺✻✼✽✾';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '✰✱✲✳✴✵✶✷✸✹✺✻✼✽✾✿❀❁❂❃❄❅❆❇❈❉❊❋❌❍❎❏❐❑❒❓❔❕❖❗❘❙❚❛❜❝❞';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '✶✷✸✹✺✻✼✽✾✿❀❁❂❃';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '✿❀❁❂❃❄❅❆❇❈❉❊❋❌❍❎❏❐❑❒❓❔❕❖❗❘❙❚❛❜❝❞';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ⰀⰁⰂⰃⰄⰅⰆⰇⰈⰉⰊⰋⰌⰍⰎⰏⰐⰑⰒⰓⰔⰕⰖⰗⰘⰙⰚⰛⰜⰝⰞⰟⰠⰡⰢⰣⰤⰥⰦⰧⰨⰩⰪⰫⰬⰭⰮ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ⰰⰱⰲⰳⰴⰵⰶⰷⰸⰹⰺⰻⰼⰽⰾⰿⱀⱁⱂⱃⱄⱅⱆⱇⱈⱉⱊⱋⱌⱍⱎⱏⱐⱑⱒⱓⱔⱕⱖⱗⱘⱙⱚⱛⱜⱝⱞ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ⲀⲂⲄⲆⲈⲊⲌⲎⲐⲒⲔⲖⲘⲚⲜⲞⲠⲢⲤⲦⲨⲪⲬⲮⲰⲲⲴⲶⲸⲺⲼⲾⳀⳂⳄⳆⳈⳊⳌⳎⳐⳒⳔⳖⳘⳚⳜⳞⳠⳢ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ⲁⲃⲅⲇⲉⲋⲍⲏⲑⲓⲕⲗⲙⲛⲝⲟⲡⲣⲥⲧⲩⲫⲭⲯⲱⲳⲵⲷⲹⲻⲽⲿⳁⳃⳅⳇⳉⳋⳍⳏⳑⳓⳕⳗⳙⳛⳝⳟⳡⳣ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '⺀⺁⺂⺃⺄⺅⺆⺇⺈⺉⺊⺋⺌⺍⺎⺏';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '⺀⺁⺂⺃⺄⺅⺆⺇⺈⺉⺊⺋⺌⺍⺎⺏⺐⺑⺒⺓⺔⺕⺖⺗⺘⺙⺛⺜⺝⺞⺟⺠⺡⺢⺣⺤⺥⺦⺧⺨⺩⺪⺫⺬⺭⺮⺯⺰⺱⺲⺳⺴⺵⺶⺷⺸⺹⺺⺻⺼⺽⺾⺿⻀⻁⻂⻃⻄⻅⻆⻇⻈⻉⻊⻋⻌⻍⻎⻏⻐⻑⻒⻓⻔⻕⻖⻗⻘⻙⻚⻛⻜⻝⻞⻟⻠';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '⺈⺉⺊⺋⺌⺍⺎⺏⺐⺑⺒⺓⺔';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '⺐⺑⺒⺓⺔⺕⺖⺗⺘⺙⺛⺜⺝⺞⺟⺠⺡⺢⺣⺤⺥⺦⺧⺨⺩⺪⺫⺬⺭⺮⺯⺰⺱⺲⺳⺴⺵⺶⺷⺸⺹⺺⺻⺼⺽⺾⺿⻀⻁⻂⻃⻄⻅⻆⻇⻈⻉⻊⻋⻌⻍⻎⻏⻐⻑⻒⻓⻔⻕⻖⻗⻘⻙⻚⻛⻜⻝⻞⻟⻠';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '⽅⽆⽇⽈⽉⽊⽋⽌⽍⽎⽏⽐⽑⽒⽓⽔⽕⽖⽗⽘⽙⽚⽛⽜⽝⽞⽟⽠⽡⽢⽣';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '⽅⽆⽇⽈⽉⽊⽋⽌⽍⽎⽏⽐⽑⽒⽓⽔⽕⽖⽗⽘⽙⽚⽛⽜⽝⽞⽟⽠⽡⽢⽣⽤⽥⽦⽧⽨⽩⽪⽫⽬⽭⽮⽯⽰⽱⽲⽳⽴⽵⽶⽷⽸⽹⽺⽻⽼⽽⽾⽿';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '⽑⽒⽓⽔⽕⽖⽗⽘⽙⽚⽛⽜⽝⽞⽟⽠⽡⽢⽣⽤⽥⽦⽧⽨';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '⽤⽥⽦⽧⽨⽩⽪⽫⽬⽭⽮⽯⽰⽱⽲⽳⽴⽵⽶⽷⽸⽹⽺⽻⽼⽽⽾⽿';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '一';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '一二三';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '一二三周永龍';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '周永龍';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '把百度';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '把百度设为首页';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '设为首';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '设为首页';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '눡눢눣눤눥눦눧눨눩눪눫눬눭눮눯눰눱눲눳눴눵눶눷눸눹눺';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '눡눢눣눤눥눦눧눨눩눪눫눬눭눮눯눰눱눲눳눴눵눶눷눸눹눺눻눼눽눾눿뉀뉁뉂뉃뉄뉅뉆뉇뉈뉉뉊뉋뉌뉍뉎뉏뉐뉑뉒뉓뉔뉕뉖뉗뉘뉙뉚뉛뉜뉝뉞뉟뉠뉡뉢뉣뉤뉥뉦뉧뉨뉩뉪뉫뉬뉭뉮뉯뉰뉱뉲뉳뉴뉵뉶뉷뉸뉹뉺뉻뉼뉽뉾뉿늀늁늂늃늄';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '눭눮눯눰눱눲눳눴눵눶눷눸눹눺눻눼눽눾눿뉀뉁뉂뉃뉄';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '눻눼눽눾눿뉀뉁뉂뉃뉄뉅뉆뉇뉈뉉뉊뉋뉌뉍뉎뉏뉐뉑뉒뉓뉔뉕뉖뉗뉘뉙뉚뉛뉜뉝뉞뉟뉠뉡뉢뉣뉤뉥뉦뉧뉨뉩뉪뉫뉬뉭뉮뉯뉰뉱뉲뉳뉴뉵뉶뉷뉸뉹뉺뉻뉼뉽뉾뉿늀늁늂늃늄';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ﬀﬁﬂﬃﬄﬅﬆﬓﬔﬕﬖﬗ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ﹰﹱﹲﹳﹴ﹵ﹶﹷﹸﹹﹺﹻﹼﹽﹾﹿﺀﺁﺂﺃﺄﺅﺆﺇﺈﺉﺊﺋﺌﺍﺎﺏﺐﺑﺒﺓﺔﺕﺖﺗﺘﺙﺚﺛﺜﺝ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ﹰﹱﹲﹳﹴ﹵ﹶﹷﹸﹹﹺﹻﹼﹽﹾﹿﺀﺁﺂﺃﺄﺅﺆﺇﺈﺉﺊﺋﺌﺍﺎﺏﺐﺑﺒﺓﺔﺕﺖﺗﺘﺙﺚﺛﺜﺝﺞﺟﺠﺡﺢﺣﺤﺥﺦﺧﺨﺩﺪﺫﺬﺭﺮﺯﺰ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ﹼﹽﹾﹿﺀﺁﺂﺃﺄﺅﺆﺇﺈﺉﺊﺋﺌﺍﺎﺏﺐﺑﺒﺓﺔﺕﺖﺗﺘﺙﺚﺛﺜﺝﺞﺟﺠﺡﺢﺣﺤﺥﺦﺧﺨﺩﺪﺫﺬﺭﺮﺯﺰ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ﺞﺟﺠﺡﺢﺣﺤﺥﺦﺧﺨﺩﺪﺫﺬﺭﺮﺯﺰ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ﺱﺲﺳﺴﺵﺶﺷﺸﺹﺺﺻﺼﺽﺾﺿﻀﻁﻂﻃﻄﻅﻆﻇﻈﻉﻊﻋﻌﻍﻎﻏﻐﻑﻒﻓﻔﻕﻖﻗﻘﻙﻚﻛﻜﻝ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ﺱﺲﺳﺴﺵﺶﺷﺸﺹﺺﺻﺼﺽﺾﺿﻀﻁﻂﻃﻄﻅﻆﻇﻈﻉﻊﻋﻌﻍﻎﻏﻐﻑﻒﻓﻔﻕﻖﻗﻘﻙﻚﻛﻜﻝﻞﻟﻠﻡﻢﻣﻤﻥﻦﻧﻨﻩﻪﻫﻬﻭﻮﻯﻰﻱﻲﻳﻴﻵﻶﻷﻸﻹﻺﻻﻼ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ﻉﻊﻋﻌﻍﻎﻏﻐﻑﻒﻓﻔ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ﻞﻟﻠﻡﻢﻣﻤﻥﻦﻧﻨﻩﻪﻫﻬﻭﻮﻯﻰﻱﻲﻳﻴﻵﻶﻷﻸﻹﻺﻻﻼ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ａｂｃｄｅｆｇｈｉｊ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ａｂｃｄｅｆｇｈｉｊｋｌｍｎｏｐｑｒｓｔｕｖｗｘｙｚ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ｋｌｍｎｏｐｑｒｓｔｕｖｗｘｙｚ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ｌｍ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '｡｢｣､･ｦｧｨｩｪｫｬｭｮｯｰ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = '｡｢｣､･ｦｧｨｩｪｫｬｭｮｯｰｱｲｳｴｵｶｷｸ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ｨｩｪｫｬｭｮｯｰｱｲ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ｱｲｳｴｵｶｷｸ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ｹｺｻｼｽｾｿﾀﾁﾂﾃﾄﾅﾆﾇﾈﾉ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ｹｺｻｼｽｾｿﾀﾁﾂﾃﾄﾅﾆﾇﾈﾉﾊﾋﾌﾍﾎﾏﾐﾑﾒﾓﾔﾕﾖﾗﾘﾙﾚﾛﾜﾝﾞ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ﾆﾇﾈﾉﾊﾋﾌﾍﾎﾏﾐﾑﾒ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 'ﾊﾋﾌﾍﾎﾏﾐﾑﾒﾓﾔﾕﾖﾗﾘﾙﾚﾛﾜﾝﾞ';$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 0;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 100;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 10;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 13;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 15;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 16;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 17;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 19;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 1;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 20;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 24;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 25;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 26;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 28;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 2;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 30;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 31;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 32;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 36;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 37;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 38;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 39;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 3;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 40;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 45;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 46;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 47;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 49;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 4;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 59;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 5;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 61;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 65;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 69;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 6;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 76;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 7;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 8;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 94;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = 96;$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(100, 114, 382, 97, 118, 110, 105);$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(10032, 10033, 10034, 10035, 10036, 10037, 10038, 10039, 10040, 10041, 10042, 10043, 10044,$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041,$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069,$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(109, 111, 263, 105);$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(11264, 11265, 11266, 11267, 11268, 11269, 11270, 11271, 11272, 11273, 11274, 11275, 11276, 11277, 11278,$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(11312, 11313, 11314, 11315, 11316, 11317, 11318, 11319, 11320, 11321, 11322, 11323, 11324, 11325, 11326, 11327,$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(11392, 11394, 11396, 11398, 11400, 11402, 11404, 11406, 11408, 11410, 11412, 11414, 11416, 11418, 11420,$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(11393, 11395, 11397, 11399, 11401, 11403, 11405, 11407, 11409, 11411, 11413, 11415, 11417, 11419, 11421, 11423,$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(11904, 11905, 11906, 11907, 11908, 11909, 11910, 11911, 11912, 11913, 11914, 11915, 11916, 11917, 11918, 11919,$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(12101, 12102, 12103, 12104, 12105, 12106, 12107, 12108, 12109, 12110, 12111, 12112, 12113, 12114, 12115, 12116,$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(1280, 1282, 1284, 1286, 1288, 1290, 1292, 1294, 1296, 1298);$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(1281, 1283, 1285, 1287, 1289, 1291, 1293, 1295, 1296, 1298);$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346,$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(1401, 1402, 1403, 1404, 1405, 1406, 1407);$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615);$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181,$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(168);$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(191);$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(19968, 20108, 19977, 21608, 27704, 40845);$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221,$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(25226, 30334, 24230, 35774, 20026, 39318, 39029);$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(269, 105, 110, 105);$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(292, 275, 314, 316, 335, 44, 32, 372, 337, 345, 316, 271, 33);$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321,$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57,$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421,$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273,$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(45601, 45602, 45603, 45604, 45605, 45606, 45607, 45608, 45609, 45610, 45611, 45612, 45613, 45614, 45615, 45616,$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621,$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(64256, 64257, 64258, 64259, 64260, 64261, 64262, 64275, 64276, 64277, 64278, 64279);$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(65136, 65137, 65138, 65139, 65140, 65141, 65142, 65143, 65144, 65145, 65146, 65147, 65148, 65149, 65150, 65151,$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(65201, 65202, 65203, 65204, 65205, 65206, 65207, 65208, 65209, 65210, 65211, 65212, 65213, 65214, 65215, 65216,$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(65345, 65346, 65347, 65348, 65349, 65350, 65351, 65352, 65353, 65354, 65355, 65356, 65357, 65358, 65359, 65360,$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(65377, 65378, 65379, 65380, 65381, 65382, 65383, 65384, 65385, 65386, 65387, 65388, 65389, 65390, 65391, 65392,$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(65401, 65402, 65403, 65404, 65405, 65406, 65407, 65408, 65409, 65410, 65411, 65412, 65413, 65414, 65415, 65416,$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(72, 101, 108, 108, 111, 44, 32, 87, 111, 114, 108, 100, 33);$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(7680, 7682, 7684, 7686, 7688, 7690, 7692, 7694, 7696, 7698, 7700, 7702, 7704, 7706, 7708, 7710, 7712, 7714,$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(7681, 7683, 7685, 7687, 7689, 7691, 7693, 7695, 7697, 7699, 7701, 7703, 7705, 7707, 7709, 7711, 7713, 7715,$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(8486, 8490, 8491, 8498);$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(8544, 8545, 8546, 8547, 8548, 8549, 8550, 8551, 8552, 8553, 8554, 8555, 8556, 8557, 8558, 8559, 8579);$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(8560, 8561, 8562, 8563, 8564, 8565, 8566, 8567, 8568, 8569, 8570, 8571, 8572, 8573, 8574, 8575, 8580);$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(9398, 9399, 9400, 9401, 9402, 9403, 9404, 9405, 9406, 9407, 9408, 9409, 9410, 9411, 9412, 9413, 9414,$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(9424, 9425, 9426, 9427, 9428, 9429, 9430, 9431, 9432, 9433, 9434, 9435, 9436, 9437, 9438, 9439, 9440, 9441,$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = array(969, 107, 229, 8526);$/;"	v
expected	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$expected = false;$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'DŽ';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'F';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'H';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'N';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'O';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'Wo';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'dž';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'f';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'll';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'n';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'o';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'rl';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'rld';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'µ';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'Å';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'É';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'ÓÔ';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'ÕÖ';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'ÙÚ';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'Þ';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'å';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'é';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'þ';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'Ć';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'ć';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'ći';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'Ċ';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'ċ';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'ĵĶķĸĹ';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'ĺļ';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'Ņ';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'Ő';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'ő';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'őř';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'Ž';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'ž';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'Ʀ';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'Ƹ';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'ƹ';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'ʀ';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'Μ';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'Ї';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'Р';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'р';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'ї';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'ن';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = '✿';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = '⺐';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = '⽤';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = '一周';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = '二周';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = '周';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = '周龍';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = '百设';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = '设';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = '눺눻눼';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = '눻';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'ﺞ';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'ﺞﺟﺠﺡ';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'ﻞ';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'Ｋ';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'ｋ';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'ｋｌｍ';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'ｐｐ';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'ｐｐｅ';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'ｱ';$/;"	v
find	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$find = 'ﾊ';$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(100, 114, 382, 97, 118, 110, 105);$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(10032, 10033, 10034, 10035, 10036, 10037, 10038, 10039, 10040, 10041, 10042, 10043, 10044,$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041,$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069,$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(109, 111, 263, 105);$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(11264, 11265, 11266, 11267, 11268, 11269, 11270, 11271, 11272, 11273, 11274, 11275, 11276, 11277, 11278, 11279,$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(11312, 11313, 11314, 11315, 11316, 11317, 11318, 11319, 11320, 11321, 11322, 11323, 11324, 11325, 11326, 11327,$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(11392, 11394, 11396, 11398, 11400, 11402, 11404, 11406, 11408, 11410, 11412, 11414, 11416, 11418, 11420,$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(11393, 11395, 11397, 11399, 11401, 11403, 11405, 11407, 11409, 11411, 11413, 11415, 11417, 11419, 11421, 11423,$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(11904, 11905, 11906, 11907, 11908, 11909, 11910, 11911, 11912, 11913, 11914, 11915, 11916, 11917, 11918, 11919,$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(12101, 12102, 12103, 12104, 12105, 12106, 12107, 12108, 12109, 12110, 12111, 12112, 12113, 12114, 12115, 12116,$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(1280, 1282, 1284, 1286, 1288, 1290, 1292, 1294, 1296, 1298);$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(1281, 1283, 1285, 1287, 1289, 1291, 1293, 1295, 1296, 1298);$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347,$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(1401, 1402, 1403, 1404, 1405, 1406, 1407);$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615);$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181,$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(168);$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(191);$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(19968, 20108, 19977, 21608, 27704, 40845);$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221,$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(25226, 30334, 24230, 35774, 20026, 39318, 39029);$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(269, 105, 110, 105);$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(292, 275, 314, 316, 335, 44, 32, 372, 337, 345, 316, 271, 33);$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321,$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57,$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421,$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274,$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(45601, 45602, 45603, 45604, 45605, 45606, 45607, 45608, 45609, 45610, 45611, 45612, 45613, 45614, 45615, 45616,$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621,$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(64256, 64257, 64258, 64259, 64260, 64261, 64262, 64275, 64276, 64277, 64278, 64279);$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(65136, 65137, 65138, 65139, 65140, 65141, 65142, 65143, 65144, 65145, 65146, 65147, 65148, 65149, 65150, 65151,$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(65201, 65202, 65203, 65204, 65205, 65206, 65207, 65208, 65209, 65210, 65211, 65212, 65213, 65214, 65215, 65216,$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(65345, 65346, 65347, 65348, 65349, 65350, 65351, 65352, 65353, 65354, 65355, 65356, 65357, 65358, 65359, 65360,$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(65377, 65378, 65379, 65380, 65381, 65382, 65383, 65384, 65385, 65386, 65387, 65388, 65389, 65390, 65391, 65392,$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(65401, 65402, 65403, 65404, 65405, 65406, 65407, 65408, 65409, 65410, 65411, 65412, 65413, 65414, 65415, 65416,$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(72, 101, 108, 108, 111, 44, 32, 87, 111, 114, 108, 100, 33);$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(7680, 7682, 7684, 7686, 7688, 7690, 7692, 7694, 7696, 7698, 7700, 7702, 7704, 7706, 7708, 7710, 7712, 7714,$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(7681, 7683, 7685, 7687, 7689, 7691, 7693, 7695, 7697, 7699, 7701, 7703, 7705, 7707, 7709, 7711, 7713, 7715,$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(8486, 8490, 8491, 8498);$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(8544, 8545, 8546, 8547, 8548, 8549, 8550, 8551, 8552, 8553, 8554, 8555, 8556, 8557, 8558, 8559, 8579);$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(8560, 8561, 8562, 8563, 8564, 8565, 8566, 8567, 8568, 8569, 8570, 8571, 8572, 8573, 8574, 8575, 8580);$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(9398, 9399, 9400, 9401, 9402, 9403, 9404, 9405, 9406, 9407, 9408, 9409, 9410, 9411, 9412, 9413, 9414,$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(9424, 9425, 9426, 9427, 9428, 9429, 9430, 9431, 9432, 9433, 9434, 9435, 9436, 9437, 9438, 9439, 9440, 9441,$/;"	v
input	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$input = array(969, 107, 229, 8526);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::ascii($input);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::mimeEncode($string);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::mimeEncode($string, null, "\\n");$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::stripos($string, $find);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::stripos($string, $find, 40);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::stripos($string, $find, 5);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::stripos($string, $find, 6);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::stristr($string, $find);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::stristr($string, $find, true);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::strlen($string);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::strpos($string, $find);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::strpos($string, $find, 5);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::strpos($string, $find, 6);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::strrchr($string, $find);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::strrchr($string, $find, true);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::strrichr($string, $find);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::strrichr($string, $find, true);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::strripos($string, $find);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::strripos($string, $find, 5);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::strripos($string, $find, 6);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::strrpos($string, $find);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::strrpos($string, $find, 5);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::strrpos($string, $find, 6);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::strstr($string, $find);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::strstr($string, $find, true);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::strtolower($string);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::strtoupper($string);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::substr($string, 0);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::substr($string, 0, 1);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::substr($string, 0, 2);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::substr($string, 1);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::substr($string, 11, 2);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::substr($string, 12);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::substr($string, 12, 24);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::substr($string, 13, 13);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::substr($string, 24, 12);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::substr($string, 25);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::substr($string, 3);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::substr($string, 3, 16);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::substr($string, 3, 3);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::substr($string, 3, 4);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::substr($string, 3, 6);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::substr($string, 4);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::substr($string, 4, 7);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::substr($string, 6);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::substr($string, 6, 14);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::substr($string, 7, 11);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::substr($string, 8, 13);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::substrCount($string, $find);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = Multibyte::utf8($string);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_stripos($string, $find);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_stripos($string, $find, 40);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_stripos($string, $find, 5);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_stripos($string, $find, 6);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_stristr($string, $find);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_stristr($string, $find, true);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_strlen($string);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_strpos($string, $find);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_strpos($string, $find, 5);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_strpos($string, $find, 6);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_strrchr($string, $find);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_strrchr($string, $find, true);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_strrichr($string, $find);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_strrichr($string, $find, true);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_strripos($string, $find);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_strripos($string, $find, 5);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_strripos($string, $find, 6);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_strrpos($string, $find);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_strrpos($string, $find, 5);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_strrpos($string, $find, 6);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_strstr($string, $find);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_strstr($string, $find, true);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_strtolower($string);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_strtoupper($string);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_substr($string, 0);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_substr($string, 0, 1);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_substr($string, 0, 2);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_substr($string, 1);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_substr($string, 11, 2);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_substr($string, 12);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_substr($string, 12, 24);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_substr($string, 13, 13);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_substr($string, 24, 12);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_substr($string, 25);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_substr($string, 3);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_substr($string, 3, 16);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_substr($string, 3, 3);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_substr($string, 3, 4);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_substr($string, 3, 6);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_substr($string, 4);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_substr($string, 4, 7);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_substr($string, 6);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_substr($string, 6, 14);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_substr($string, 7, 11);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_substr($string, 8, 13);$/;"	v
result	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$result = mb_substr_count($string, $find);$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = '!"#$%&\\'()*+,-.\/0123456789:;<=>?@';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = '!"#$%&\\'()*+,-.\/0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = '!"#$%&\\'()*+,-.\/0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = '!"#$%&\\'()*+,-.\/012F34567F89:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghiFjklmnopqFrstuvwFxyz{|}~';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ABCDEFGHIJKLMNOPQFRSFTUVWXYZ0F12345F6789';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ABCDEFGHIJKLMNOPQFRSTUVWXYZ0123456789';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Hello, World!';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'državni';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'moći';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'moćimoćimoćmćioći';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ničiničiini';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = '¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = '¡¢£¤¥µ¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁµÂÃµÄÅÆÇµÈ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = '¨';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = '¿';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'À';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ÀÁÂÃÄÅÆÇÈÉÅÊËÌÍÎÏÐÑÒÓÔÅÕÖØÅÙÚÛÅÜÝÞ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ÀÁÂÃÄÅÆÇÈÉÊÅËÌÍÎÏÐÑÒÓÔÕÅÖØÅÙÚÅÛÜÅÝÞÅ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÅÙÚÛÜÝÞ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝÞ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ÀÁÙÚÂÃÄÅÆÇÈÙÚÉÊËÌÍÎÏÐÑÒÓÔÕÖØÅÙÚÛÜÝÞÙÚ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Á';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Â';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ã';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ä';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Å';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Æ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ç';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'È';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'É';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôÕÖõö÷øùúûüýþÿĀāĂăĄąĆćĈĉÕÖĊċČčĎďĐđĒēĔĕĖėĘęĚěĜĝÕÖĞğĠġĢģĤĥĦÕÖħĨĩĪīĬ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿĀāĂăĄąĆćĈĉĊċČčĎďĐđĒēĔĕĖėĘęĚěĜĝĞğĠġĢģĤĥĦħĨĩĪīĬ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ê';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ë';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ì';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Í';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Î';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ï';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ð';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ñ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ò';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ó';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ô';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Õ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ö';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ø';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ù';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ú';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Û';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ü';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ý';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Þ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'à';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'àáâãäåæçèéêëìíîïðñòóôõöøùúûüýþ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'á';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'â';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ã';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ä';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'å';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'æ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ç';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'è';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'é';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ê';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ë';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ì';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'í';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'î';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ï';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ð';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ñ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ò';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ó';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ô';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'õ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ö';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ø';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ù';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ú';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'û';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ü';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ý';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'þ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ā';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ĀĂĄĆĈĊČĎĐĒĔĖĘĚĜĊĞĠĢĤĦĨĪĬĮĲĴĶĹĻĽĿŁĊŃŅĊŇŊŌŎŐŒŔŖĊŘŚŜŞŠŢŤŦŨŪŬŮŰŲŴŶŹŻŽ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ĀĂĄĆĈĊČĎĐĒĔĖĘĚĜĞĠĢĤĦĨĪĬĮĲĴĶĹĻĽĿŁĊŃŅŇŊŌŎŐŒŔŖŘŚŜŞŠŢŤŦŨŪŬŮŰŲŴŶŹŻŽ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ĀĂĄĆĈĊČĎĐĒĔĖĘĚĜĞĠĢĤĦĨĪĬĮĲĴĶĹĻĽĿŁŃŅŇŊŌŎŐŒŔŖŘŚŜŞŠŢŤŦŨŪŬŮŰŲŴŶŹŻŽ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ā';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'āăąćĉċčďđēĕėęěĝğġģĥħĩīĭįĳĵķĺļľŀłńņňŋōŏőœŕŗřśŝşšţťŧũūŭůűųŵŷźżž';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ă';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ă';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ą';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ą';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ć';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ć';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ĉ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ĉ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ċ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ĊĀĂĄĆĈĊČĎĐĒĔĖĊĘĚĜĞĠĢĤĦĨĪĬĮĊĲĴĶĹĻĽĿŁŃŅŇŊŌĊŎŐŒŔŖŘŚŜŞŠŢĊŤŦŨŪŬŮŰĊŲŴŶŹŻŽ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ċ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Č';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'č';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'čini';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ď';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ď';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Đ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'đ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ē';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ē';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ĕ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ĕ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ė';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ė';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ę';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ę';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ě';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ě';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ĝ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ĝ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ğ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ğ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ġ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ġ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ģ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ģ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ĥ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ĤĒĹĻŎ, ŴŐŘĻĎ!';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ĥēĺļŏ, Ŵőřļď!';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ĥ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ĥēĺļŏ, ŵőřļď!';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ħ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ħ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ĩ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ĩ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ī';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ī';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ĭ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ĭ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ĭĮįİıĲĳĴĵĶķĸĹĺĻļĽľĿŀŁłŃńŅņŇňŉŊŋŌōĵĶķĸĹŎŏŐőŒœŔŕŖŗŘřŚśŜŝŞşŠšĵĶķĸĹŢţŤťŦŧŨũŪūŬŭŮůŰűŲųĵĶķĸĹŴŵŶŷŸŹźŻżŽžſƀƁƂƃƄƅƆƇƈƉƊƋƌƍƎƏƐ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ĭĮįİıĲĳĴĵĶķĸĹĺĻļĽľĿŀŁłŃńŅņŇňŉŊŋŌōŎŏŐőŒœŔŕŖŗŘřŚśŜŝŞşŠšŢţŤťŦŧŨũŪūŬŭŮůŰűŲųŴŵŶŷŸŹźŻżŽžſƀƁƂƃƄƅƆƇƈƉƊƋƌƍƎƏƐ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Į';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'į';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ĳ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ĳ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ĵ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ĵ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ķ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ķ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ĺ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ĺ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ļ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ļ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ľ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ľ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ŀ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ŀ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ł';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ł';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ń';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ń';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ņ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ņ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ň';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ň';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ŋ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ŋ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ō';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ō';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ŏ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ŏ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ő';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ő';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Œ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'œ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ŕ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ŕ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ŗ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ŗ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ř';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ř';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ś';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ś';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ŝ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ŝ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ş';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ş';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Š';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'š';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ţ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ţ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ť';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ť';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ŧ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ŧ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ũ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ũ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ū';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ū';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ŭ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ŭ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ů';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ů';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ű';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ű';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ų';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ų';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ŵ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ŵ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ŷ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ŷ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ź';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ź';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ż';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ż';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'Ž';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ž';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ƑƒƓƔƕƖƗƘƙƚƛƜƝƞƟƠơƢƣƤƥƦƧƨƩƪƫƬƭƮƯưƱƲƳƴƵƶƷƸƹƺƻƼƽƾƿǀǁǂǃǄǅǆǇǈǉǊǋǌǍǎǏǐǑǒǓǔǕǖǗǘǙǚǛǜǝǞǟǠǡǢǣǤǥǦǧǨǩǪǫǬǭǮǯǰǱǲǳǴ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ƑƒƓƔƕƖƗƘƙƚƛƜƝƞƟƹƠơƢƣƤƥƦƧƨƩƹƪƫƬƭƮƯưƱƲƳƴƹƵƶƷƸƹƺƻƼƽƾƿǀǁǂƹǃǄǅǆǇǈǉǊǋǌǍǎǏǐǑǒǓǔǕǖǗǘǙǚǛǜǝǞǟǠǡǢǣǤǥǦǧǨǩǪǫǬǭǮǯǰǱǲǳǴ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ƑƒƓƔƕƖƸƗƘƙƚƛƜƝƞƟƠơƢƣƤƥƦƧƨƩƪƫƬƭƮƯưƱƲƳƴƵƶƷƸƹƺƻƼƽƾƿǀǁǂǃǄǅǆǇǈǉǊƸǋǌǍǎǏǐǑǒǓƸǔǕǖǗǘǙǚƸǛǜǝǞǟǠǡǢǣǤǥǦǧǨǩǪǫǬǭǮǯǰǱǲǳǴ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'əɚɛɜɝɞɟɠɡɢɣɤɥɦɧɨɩɪɫɬɭɮɯɰɱɲɳɴɵɶɷɸɹɺɻɼɽɾɿʀʁʂʃʄʅʆʇʈʉʊʋʌʍʎʏʐʑʒʓʔʕʖʗʘʙʚʛʜʝʞʟʠʡʢʣʤʥʦʧʨʩʪʫʬʭʮʯʰʱʲʳʴʵʶʷʸʹʺʻʼ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'əɚɛɜɝɞʀɟɠɡɢɣɤɥɦɧɨɩɪɫɬɭɮɯɰɱɲɳɴɵɶɷɸɹɺɻɼɽɾɿʀʁʂʃʄʅʆʀʇʈʉʊʋʌʍʎʏʐʑʒʓʔʕʖʗʘʙʚʛʜʝʞʟʠʡʢʣʤʥʦʧʀʨʩʪʫʬʭʮʯʰʱʲʳʴʵʶʷʸʹʺʀʻʼ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ΩKÅ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ωkå';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ωkåⅎ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ЀЁЂЃЄЅІЇЈЉЊЋЌЍЇЎЏАБВГДЕЖЗИЙКЛ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ЀЁЂЃЄЅІЇЈЉЊЋЌЍЎЏАБВГДЕЖЗИЙКЛ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'МНОПРСРТУФХЦЧШЩЪЫЬРЭЮЯабРвгдежзийклРмнопрстуфхцчшщъыь';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'МНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'МНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыь';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'МНОПРСрТУФХЦЧШЩЪЫрЬЭЮЯабвгдежзийклмнопррстуфхцчшщъыь';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ԀԂԄԆԈԊԌԎԐԒ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ԁԃԅԇԉԋԍԏԐԒ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ԱԲԳԴԵԶԷԸԹԺԻԼԽԾԿՀՁՂՃՄՅՆՇՈՉՊՋՌՍՎՏՐՑՒՓՔՕՖև';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'աբգդեզէըթժիլխծկհձղճմյնշոչպջռսվտրցւփքօֆև';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'չպջռսվտ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'فقكلمنهوىيًٌٍَُ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'فنقكلنمنهونىينًٌٍَُ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ႠႡႢႣႤႥႦႧႨႩႪႫႬႭႮႯႰႱႲႳႴႵႶႷႸႹႺႻႼႽႾႿჀჁჂჃჄჅ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ḀḂḄḆḈḊḌḎḐḒḔḖḘḚḜḞḠḢḤḦḨḪḬḮḰḲḴḶḸḺḼḾṀṂṄṆṈṊṌṎṐṒṔṖṘṚṜṞṠṢṤṦṨṪṬṮṰṲṴṶṸṺṼṾẀẂẄẆẈẊẌẎẐẒẔẖẗẘẙẚẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼẾỀỂỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪỬỮỰỲỴỶỸ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ḁḃḅḇḉḋḍḏḑḓḕḗḙḛḝḟḡḣḥḧḩḫḭḯḱḳḵḷḹḻḽḿṁṃṅṇṉṋṍṏṑṓṕṗṙṛṝṟṡṣṥṧṩṫṭṯṱṳṵṷṹṻṽṿẁẃẅẇẉẋẍẏẑẓẕẖẗẘẙẚạảấầẩẫậắằẳẵặẹẻẽếềểễệỉịọỏốồổỗộớờởỡợụủứừửữựỳỵỷỹ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ἀι';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ἈΙ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ΩKÅ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ΩKÅℲ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ⅠⅡⅢⅣⅤⅥⅦⅧⅨⅩⅪⅫⅬⅭⅮⅯↃ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ⅰⅱⅲⅳⅴⅵⅶⅷⅸⅹⅺⅻⅼⅽⅾⅿↄ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ⒶⒷⒸⒹⒺⒻⒼⒽⒾⒿⓀⓁⓂⓃⓄⓅⓆⓇⓈⓉⓊⓋⓌⓍⓎⓏ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ⓐⓑⓒⓓⓔⓕⓖⓗⓘⓙⓚⓛⓜⓝⓞⓟⓠⓡⓢⓣⓤⓥⓦⓧⓨⓩ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = '✰✱✲✳✴✵✶✷✸✹✺✻✼✽✾✿❀❁❂❃❄❅❆❇❈❉❊❋❌❍❎❏❐❑❒❓❔❕❖❗❘❙❚❛❜❝❞';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = '✰✱✲✳✿✴✵✶✷✸✿✹✺✻✼✽✾✿❀❁❂❃❄❅❆✿❇❈❉❊❋❌❍❎❏❐❑❒❓❔❕❖❗❘❙❚❛❜❝❞';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ⰀⰁⰂⰃⰄⰅⰆⰇⰈⰉⰊⰋⰌⰍⰎⰏⰐⰑⰒⰓⰔⰕⰖⰗⰘⰙⰚⰛⰜⰝⰞⰟⰠⰡⰢⰣⰤⰥⰦⰧⰨⰩⰪⰫⰬⰭⰮ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ⰰⰱⰲⰳⰴⰵⰶⰷⰸⰹⰺⰻⰼⰽⰾⰿⱀⱁⱂⱃⱄⱅⱆⱇⱈⱉⱊⱋⱌⱍⱎⱏⱐⱑⱒⱓⱔⱕⱖⱗⱘⱙⱚⱛⱜⱝⱞ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ⲀⲂⲄⲆⲈⲊⲌⲎⲐⲒⲔⲖⲘⲚⲜⲞⲠⲢⲤⲦⲨⲪⲬⲮⲰⲲⲴⲶⲸⲺⲼⲾⳀⳂⳄⳆⳈⳊⳌⳎⳐⳒⳔⳖⳘⳚⳜⳞⳠⳢ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ⲁⲃⲅⲇⲉⲋⲍⲏⲑⲓⲕⲗⲙⲛⲝⲟⲡⲣⲥⲧⲩⲫⲭⲯⲱⲳⲵⲷⲹⲻⲽⲿⳁⳃⳅⳇⳉⳋⳍⳏⳑⳓⳕⳗⳙⳛⳝⳟⳡⳣ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = '⺀⺁⺂⺃⺄⺅⺆⺇⺈⺉⺊⺋⺌⺍⺎⺏⺐⺑⺒⺓⺔⺕⺖⺗⺘⺙⺛⺜⺝⺞⺟⺠⺡⺢⺣⺤⺥⺦⺧⺨⺩⺪⺫⺬⺭⺮⺯⺰⺱⺲⺳⺴⺵⺶⺷⺸⺹⺺⺻⺼⺽⺾⺿⻀⻁⻂⻃⻄⻅⻆⻇⻈⻉⻊⻋⻌⻍⻎⻏⻐⻑⻒⻓⻔⻕⻖⻗⻘⻙⻚⻛⻜⻝⻞⻟⻠';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = '⺀⺁⺂⺃⺄⺅⺆⺇⺈⺉⺐⺊⺋⺌⺍⺎⺏⺐⺑⺒⺓⺔⺕⺖⺗⺘⺙⺛⺜⺝⺞⺟⺠⺡⺢⺣⺤⺥⺦⺧⺨⺐⺩⺪⺫⺬⺭⺮⺯⺰⺱⺲⺳⺴⺵⺶⺷⺸⺹⺺⺻⺼⺽⺾⺿⻀⻁⻂⻃⻄⻅⻆⻇⻈⻉⺐⻊⻋⻌⻍⻎⻏⻐⻑⻒⻓⻔⻕⻖⻗⻘⻙⻚⻛⻜⻝⻞⻟⻠';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = '⽅⽆⽇⽈⽉⽊⽋⽌⽍⽎⽏⽐⽑⽒⽓⽔⽕⽖⽗⽘⽙⽚⽛⽜⽝⽞⽟⽠⽡⽢⽣⽤⽥⽦⽧⽨⽩⽪⽫⽬⽭⽮⽯⽰⽱⽲⽳⽴⽵⽶⽷⽸⽹⽺⽻⽼⽽⽾⽿';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = '⽅⽆⽇⽈⽉⽊⽋⽌⽍⽎⽏⽐⽑⽒⽓⽔⽕⽖⽤⽗⽘⽙⽚⽛⽜⽝⽞⽟⽠⽡⽢⽣⽤⽥⽦⽧⽨⽩⽪⽫⽬⽭⽮⽯⽰⽱⽲⽳⽴⽵⽤⽶⽷⽸⽹⽺⽻⽼⽽⽾⽿';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = '一二三周永龍';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = '把百度设为首页';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = '눡눢눣눤눥눦눧눨눩눪눫눬눭눮눯눰눱눲눳눴눵눶눷눸눹눺눻눼눽눾눿뉀뉁뉂뉃뉄뉅뉆뉇뉈뉉뉊뉋뉌뉍뉎뉏뉐뉑뉒뉓뉔뉕뉖뉗뉘뉙뉚뉛뉜뉝뉞뉟뉠뉡뉢뉣뉤뉥뉦뉧뉨뉩뉪뉫뉬뉭뉮뉯뉰뉱뉲뉳뉴뉵뉶뉷뉸뉹뉺뉻뉼뉽뉾뉿늀늁늂늃늄';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = '눡눢눣눤눥눦눺눻눼눧눨눩눪눫눬눭눮눯눰눱눲눳눴눵눶눷눸눹눺눻눼눽눾눿뉀뉁뉂뉃뉄뉅뉆뉇뉈뉉뉊뉋뉌뉍뉎뉏뉐뉑뉒뉓뉔뉕눺눻눼뉖뉗뉘뉙뉚뉛뉜뉝눺눻눼뉞뉟뉠뉡뉢뉣뉤뉥뉦뉧뉨뉩뉪뉫뉬뉭뉮뉯뉰뉱뉲뉳뉴뉵뉶뉷뉸뉹뉺뉻뉼뉽뉾뉿늀늁늂늃늄';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ﬀﬁﬂﬃﬄﬅﬆﬓﬔﬕﬖﬗ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ﹰﹱﹲﹳﹴ﹵ﹶﹷﹸﹹﹺﹻﹼﹽﹾﹿﺀﺁﺂﺃﺄﺅﺆﺇﺈﺉﺊﺋﺌﺍﺎﺏﺐﺑﺒﺓﺔﺕﺖﺗﺘﺙﺚﺛﺜﺝﺞﺟﺠﺡﺢﺣﺤﺥﺦﺧﺨﺩﺪﺫﺬﺭﺮﺯﺰ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ﺞﺟﺠﺡﹰﹱﹲﹳﹴ﹵ﹶﹷﹸﹹﹺﹻﹼﹽﹾﹿﺀﺁﺂﺃﺄﺅﺞﺟﺠﺡﺆﺇﺞﺟﺠﺡﺈﺉﺊﺋﺌﺍﺎﺏﺐﺑﺒﺓﺔﺕﺖﺗﺘﺙﺚﺛﺜﺝﺞﺟﺠﺡﺢﺣﺤﺥﺦﺧﺨﺩﺪﺫﺬﺭﺮﺯﺰ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ﺱﺲﺳﺴﺵﺶﺷﺸﺹﺺﺻﺼﺽﺾﺿﻀﻁﻂﻃﻄﻅﻆﻇﻈﻉﻊﻋﻌﻍﻎﻏﻐﻑﻒﻓﻔﻕﻖﻗﻘﻙﻚﻛﻜﻝﻞﻟﻠﻡﻢﻣﻤﻥﻦﻧﻨﻩﻪﻫﻬﻭﻮﻯﻰﻱﻲﻳﻴﻵﻶﻷﻸﻹﻺﻻﻼ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ﺱﺲﺳﺴﺵﺶﺷﺸﺹﺺﺻﺼﻞﺽﺾﺿﻀﻁﻂﻃﻄﻅﻆﻇﻈﻉﻊﻋﻌﻍﻎﻏﻐﻑﻒﻓﻔﻞﻕﻖﻗﻘﻙﻚﻛﻜﻝﻞﻟﻠﻡﻢﻣﻤﻥﻦﻧﻨﻩﻪﻫﻬﻭﻮﻯﻰﻱﻲﻳﻴﻵﻶﻷﻞﻸﻹﻺﻞﻻﻼ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ａｂｃｄｅｆｇｈｉｊｋｌｍｎｏｐｐｑｒｓｔｕｖｗｘｙｚ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ａｂｃｄｅｆｇｈｉｊｋｌｍｎｏｐｑｒｓｔｕｖｗｘｙｚ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ａｂｃｄｋｅｆｇｈｉｊｋｌｍｎｏｐｑｒｓｔｕｖｗｘｋｙｚ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ａｂｃｄｐｐｅｆｇｈｉｊｋｌｍｎｏｐｐｑｒｓｔｕｖｗｘｙｚ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ａｂｋｌｍｃｄｅｆｇｈｉｊｋｌｍｎｏｐｑｒｓｔｕｖｋｌｍｗｘｙｚ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = '｡｢｣､･ｦｧｨｩｪｫｬｭｮｯｰｱｲｳｴｵｶｷｸ';$/;"	v
string	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^		$string = 'ｹｺｻｼｽｾｿﾀﾁﾂﾃﾄﾅﾆﾇﾈﾉﾊﾋﾌﾍﾎﾏﾐﾑﾒﾓﾔﾕﾖﾗﾘﾙﾚﾛﾜﾝﾞ';$/;"	v
testAscii	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^	public function testAscii() {$/;"	f
testMultibyteMimeEncode	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^	public function testMultibyteMimeEncode() {$/;"	f
testMultibyteStripos	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^	public function testMultibyteStripos() {$/;"	f
testMultibyteStristr	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^	public function testMultibyteStristr() {$/;"	f
testMultibyteStrlen	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^	public function testMultibyteStrlen() {$/;"	f
testMultibyteStrpos	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^	public function testMultibyteStrpos() {$/;"	f
testMultibyteStrrchr	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^	public function testMultibyteStrrchr() {$/;"	f
testMultibyteStrrichr	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^	public function testMultibyteStrrichr() {$/;"	f
testMultibyteStrripos	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^	public function testMultibyteStrripos() {$/;"	f
testMultibyteStrrpos	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^	public function testMultibyteStrrpos() {$/;"	f
testMultibyteStrstr	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^	public function testMultibyteStrstr() {$/;"	f
testMultibyteStrtolower	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^	public function testMultibyteStrtolower() {$/;"	f
testMultibyteStrtoupper	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^	public function testMultibyteStrtoupper() {$/;"	f
testMultibyteSubstr	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^	public function testMultibyteSubstr() {$/;"	f
testMultibyteSubstrCount	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^	public function testMultibyteSubstrCount() {$/;"	f
testUsingMbStripos	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^	public function testUsingMbStripos() {$/;"	f
testUsingMbStristr	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^	public function testUsingMbStristr() {$/;"	f
testUsingMbStrlen	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^	public function testUsingMbStrlen() {$/;"	f
testUsingMbStrpos	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^	public function testUsingMbStrpos() {$/;"	f
testUsingMbStrrchr	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^	public function testUsingMbStrrchr() {$/;"	f
testUsingMbStrrichr	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^	public function testUsingMbStrrichr() {$/;"	f
testUsingMbStrripos	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^	public function testUsingMbStrripos() {$/;"	f
testUsingMbStrrpos	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^	public function testUsingMbStrrpos() {$/;"	f
testUsingMbStrstr	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^	public function testUsingMbStrstr() {$/;"	f
testUsingMbStrtolower	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^	public function testUsingMbStrtolower() {$/;"	f
testUsingMbStrtoupper	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^	public function testUsingMbStrtoupper() {$/;"	f
testUsingMbSubstr	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^	public function testUsingMbSubstr() {$/;"	f
testUsingMbSubstrCount	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^	public function testUsingMbSubstrCount() {$/;"	f
testUtf8	lib/Cake/Test/Case/I18n/MultibyteTest.php	/^	public function testUtf8() {$/;"	f
CakeLogTest	lib/Cake/Test/Case/Log/CakeLogTest.php	/^class CakeLogTest extends CakeTestCase {$/;"	c
_deleteLogs	lib/Cake/Test/Case/Log/CakeLogTest.php	/^	protected function _deleteLogs() {$/;"	f
_resetLogConfig	lib/Cake/Test/Case/Log/CakeLogTest.php	/^	protected function _resetLogConfig() {$/;"	f
contents	lib/Cake/Test/Case/Log/CakeLogTest.php	/^		$contents = file_get_contents(LOGS . 'debug.log');$/;"	v
contents	lib/Cake/Test/Case/Log/CakeLogTest.php	/^		$contents = file_get_contents(LOGS . 'eggs.log');$/;"	v
contents	lib/Cake/Test/Case/Log/CakeLogTest.php	/^		$contents = file_get_contents(LOGS . 'error.log');$/;"	v
contents	lib/Cake/Test/Case/Log/CakeLogTest.php	/^		$contents = file_get_contents(LOGS . 'spam.log');$/;"	v
levels	lib/Cake/Test/Case/Log/CakeLogTest.php	/^		$levels = CakeLog::defaultLevels();$/;"	v
levels	lib/Cake/Test/Case/Log/CakeLogTest.php	/^		$levels = CakeLog::levels(array('foo', 'bar'));$/;"	v
levels	lib/Cake/Test/Case/Log/CakeLogTest.php	/^		$levels = CakeLog::levels(array('ham', 9 => 'spam', '12' => 'fam'), false);$/;"	v
levels	lib/Cake/Test/Case/Log/CakeLogTest.php	/^		$levels = CakeLog::levels(array(11 => 'spam', 'bar' => 'eggs'));$/;"	v
levels	lib/Cake/Test/Case/Log/CakeLogTest.php	/^		$levels = CakeLog::levels(array(11 => 'spam', 'bar' => 'eggs'), false);$/;"	v
res	lib/Cake/Test/Case/Log/CakeLogTest.php	/^		$res = CakeLog::write(LOG_WARNING, 'Test warning');$/;"	v
result	lib/Cake/Test/Case/Log/CakeLogTest.php	/^		$result = CakeLog::config('libtest', array($/;"	v
result	lib/Cake/Test/Case/Log/CakeLogTest.php	/^		$result = CakeLog::config('plugintest', array($/;"	v
result	lib/Cake/Test/Case/Log/CakeLogTest.php	/^		$result = CakeLog::configured();$/;"	v
result	lib/Cake/Test/Case/Log/CakeLogTest.php	/^		$result = CakeLog::write(LOG_WARNING, 'Test warning');$/;"	v
result	lib/Cake/Test/Case/Log/CakeLogTest.php	/^		$result = array_keys($levels);$/;"	v
result	lib/Cake/Test/Case/Log/CakeLogTest.php	/^		$result = file_get_contents(LOGS . 'error.log');$/;"	v
setUp	lib/Cake/Test/Case/Log/CakeLogTest.php	/^	public function setUp() {$/;"	f
stream	lib/Cake/Test/Case/Log/CakeLogTest.php	/^		$stream = CakeLog::stream('valid');$/;"	v
streams	lib/Cake/Test/Case/Log/CakeLogTest.php	/^		$streams = CakeLog::configured();$/;"	v
testBogusTypeAndScope	lib/Cake/Test/Case/Log/CakeLogTest.php	/^	public function testBogusTypeAndScope() {$/;"	f
testConfig	lib/Cake/Test/Case/Log/CakeLogTest.php	/^	public function testConfig() {$/;"	f
testConvenienceMethods	lib/Cake/Test/Case/Log/CakeLogTest.php	/^	public function testConvenienceMethods() {$/;"	f
testConvenienceScopedLogging	lib/Cake/Test/Case/Log/CakeLogTest.php	/^	public function testConvenienceScopedLogging() {$/;"	f
testCustomLevelWrites	lib/Cake/Test/Case/Log/CakeLogTest.php	/^	public function testCustomLevelWrites() {$/;"	f
testDrop	lib/Cake/Test/Case/Log/CakeLogTest.php	/^	public function testDrop() {$/;"	f
testImportingLoggerFailure	lib/Cake/Test/Case/Log/CakeLogTest.php	/^	public function testImportingLoggerFailure() {$/;"	f
testImportingLoggers	lib/Cake/Test/Case/Log/CakeLogTest.php	/^	public function testImportingLoggers() {$/;"	f
testInvalidKeyName	lib/Cake/Test/Case/Log/CakeLogTest.php	/^	public function testInvalidKeyName() {$/;"	f
testLevelCustomization	lib/Cake/Test/Case/Log/CakeLogTest.php	/^	public function testLevelCustomization() {$/;"	f
testLogFileWriting	lib/Cake/Test/Case/Log/CakeLogTest.php	/^	public function testLogFileWriting() {$/;"	f
testMessage	lib/Cake/Test/Case/Log/CakeLogTest.php	/^		$testMessage = 'alert message';$/;"	v
testMessage	lib/Cake/Test/Case/Log/CakeLogTest.php	/^		$testMessage = 'critical message';$/;"	v
testMessage	lib/Cake/Test/Case/Log/CakeLogTest.php	/^		$testMessage = 'debug message';$/;"	v
testMessage	lib/Cake/Test/Case/Log/CakeLogTest.php	/^		$testMessage = 'egg message';$/;"	v
testMessage	lib/Cake/Test/Case/Log/CakeLogTest.php	/^		$testMessage = 'emergency message';$/;"	v
testMessage	lib/Cake/Test/Case/Log/CakeLogTest.php	/^		$testMessage = 'error message';$/;"	v
testMessage	lib/Cake/Test/Case/Log/CakeLogTest.php	/^		$testMessage = 'info message';$/;"	v
testMessage	lib/Cake/Test/Case/Log/CakeLogTest.php	/^		$testMessage = 'notice message';$/;"	v
testMessage	lib/Cake/Test/Case/Log/CakeLogTest.php	/^		$testMessage = 'selective logging';$/;"	v
testMessage	lib/Cake/Test/Case/Log/CakeLogTest.php	/^		$testMessage = 'spam message';$/;"	v
testMessage	lib/Cake/Test/Case/Log/CakeLogTest.php	/^		$testMessage = 'warning message';$/;"	v
testNoStreamListenting	lib/Cake/Test/Case/Log/CakeLogTest.php	/^	public function testNoStreamListenting() {$/;"	f
testNotImplementingInterface	lib/Cake/Test/Case/Log/CakeLogTest.php	/^	public function testNotImplementingInterface() {$/;"	f
testScopedLogging	lib/Cake/Test/Case/Log/CakeLogTest.php	/^	public function testScopedLogging() {$/;"	f
testScopedLoggingBC	lib/Cake/Test/Case/Log/CakeLogTest.php	/^	public function testScopedLoggingBC() {$/;"	f
testScopedLoggingExclusive	lib/Cake/Test/Case/Log/CakeLogTest.php	/^	public function testScopedLoggingExclusive() {$/;"	f
testSelectiveLoggingByLevel	lib/Cake/Test/Case/Log/CakeLogTest.php	/^	public function testSelectiveLoggingByLevel() {$/;"	f
testStreamDisable	lib/Cake/Test/Case/Log/CakeLogTest.php	/^	public function testStreamDisable() {$/;"	f
testStreamDisableInvalid	lib/Cake/Test/Case/Log/CakeLogTest.php	/^	public function testStreamDisableInvalid() {$/;"	f
testStreamEnable	lib/Cake/Test/Case/Log/CakeLogTest.php	/^	public function testStreamEnable() {$/;"	f
testStreamEnabledInvalid	lib/Cake/Test/Case/Log/CakeLogTest.php	/^	public function testStreamEnabledInvalid() {$/;"	f
testValidKeyName	lib/Cake/Test/Case/Log/CakeLogTest.php	/^	public function testValidKeyName() {$/;"	f
testValidKeyNameLogSuffix	lib/Cake/Test/Case/Log/CakeLogTest.php	/^	public function testValidKeyNameLogSuffix() {$/;"	f
ConsoleLogTest	lib/Cake/Test/Case/Log/Engine/ConsoleLogTest.php	/^class ConsoleLogTest extends CakeTestCase {$/;"	c
TestCakeLog	lib/Cake/Test/Case/Log/Engine/ConsoleLogTest.php	/^class TestCakeLog extends CakeLog {$/;"	c
TestConsoleLog	lib/Cake/Test/Case/Log/Engine/ConsoleLogTest.php	/^class TestConsoleLog extends ConsoleLog {$/;"	c
config	lib/Cake/Test/Case/Log/Engine/ConsoleLogTest.php	/^		$config = $stream->config();$/;"	v
expected	lib/Cake/Test/Case/Log/Engine/ConsoleLogTest.php	/^			$expected = ConsoleOutput::COLOR;$/;"	v
expected	lib/Cake/Test/Case/Log/Engine/ConsoleLogTest.php	/^			$expected = ConsoleOutput::PLAIN;$/;"	v
logOutput	lib/Cake/Test/Case/Log/Engine/ConsoleLogTest.php	/^		$logOutput = file_get_contents(LOGS . 'debug.log');$/;"	v
logOutput	lib/Cake/Test/Case/Log/Engine/ConsoleLogTest.php	/^		$logOutput = file_get_contents(LOGS . 'error.log');$/;"	v
message	lib/Cake/Test/Case/Log/Engine/ConsoleLogTest.php	/^		$message = 'Test error message';$/;"	v
message	lib/Cake/Test/Case/Log/Engine/ConsoleLogTest.php	/^		$message = 'Test info message';$/;"	v
mock	lib/Cake/Test/Case/Log/Engine/ConsoleLogTest.php	/^		$mock = $this->getMock('TestConsoleLog', array('write'), array($/;"	v
replace	lib/Cake/Test/Case/Log/Engine/ConsoleLogTest.php	/^	public static function replace($key, &$engine) {$/;"	f
setUp	lib/Cake/Test/Case/Log/Engine/ConsoleLogTest.php	/^	public function setUp() {$/;"	f
stream	lib/Cake/Test/Case/Log/Engine/ConsoleLogTest.php	/^		$stream = TestCakeLog::stream('test_console_log');$/;"	v
tearDown	lib/Cake/Test/Case/Log/Engine/ConsoleLogTest.php	/^	public function tearDown() {$/;"	f
testCombinedLogWriting	lib/Cake/Test/Case/Log/Engine/ConsoleLogTest.php	/^	public function testCombinedLogWriting() {$/;"	f
testConsoleOutputWrites	lib/Cake/Test/Case/Log/Engine/ConsoleLogTest.php	/^	public function testConsoleOutputWrites() {$/;"	f
testDefaultOutputAs	lib/Cake/Test/Case/Log/Engine/ConsoleLogTest.php	/^	public function testDefaultOutputAs() {$/;"	f
FileLogTest	lib/Cake/Test/Case/Log/Engine/FileLogTest.php	/^class FileLogTest extends CakeTestCase {$/;"	c
_deleteLogs	lib/Cake/Test/Case/Log/Engine/FileLogTest.php	/^	protected function _deleteLogs($dir) {$/;"	f
expected	lib/Cake/Test/Case/Log/Engine/FileLogTest.php	/^		$expected = '0640';$/;"	v
expected	lib/Cake/Test/Case/Log/Engine/FileLogTest.php	/^		$expected = '0644';$/;"	v
expected	lib/Cake/Test/Case/Log/Engine/FileLogTest.php	/^		$expected = '0666';$/;"	v
files	lib/Cake/Test/Case/Log/Engine/FileLogTest.php	/^		$files = array_merge(glob($dir . '*.log'), glob($dir . '*.log.*'));$/;"	v
files	lib/Cake/Test/Case/Log/Engine/FileLogTest.php	/^		$files = glob($path . 'error.log.*');$/;"	v
log	lib/Cake/Test/Case/Log/Engine/FileLogTest.php	/^		$log = new FileLog();$/;"	v
log	lib/Cake/Test/Case/Log/Engine/FileLogTest.php	/^		$log = new FileLog(array($/;"	v
log	lib/Cake/Test/Case/Log/Engine/FileLogTest.php	/^		$log = new FileLog(array('path' => $path, 'mask' => 0640));$/;"	v
log	lib/Cake/Test/Case/Log/Engine/FileLogTest.php	/^		$log = new FileLog(array('path' => $path, 'mask' => 0644));$/;"	v
log	lib/Cake/Test/Case/Log/Engine/FileLogTest.php	/^		$log = new FileLog(array('path' => $path, 'mask' => 0666));$/;"	v
log	lib/Cake/Test/Case/Log/Engine/FileLogTest.php	/^		$log = new FileLog(compact('path'));$/;"	v
path	lib/Cake/Test/Case/Log/Engine/FileLogTest.php	/^		$path = TMP . 'tests' . DS;$/;"	v
result	lib/Cake/Test/Case/Log/Engine/FileLogTest.php	/^		$result = file_get_contents($files[0]);$/;"	v
result	lib/Cake/Test/Case/Log/Engine/FileLogTest.php	/^		$result = file_get_contents($files[1]);$/;"	v
result	lib/Cake/Test/Case/Log/Engine/FileLogTest.php	/^		$result = file_get_contents($path . 'debug.log');$/;"	v
result	lib/Cake/Test/Case/Log/Engine/FileLogTest.php	/^		$result = file_get_contents($path . 'error.log');$/;"	v
result	lib/Cake/Test/Case/Log/Engine/FileLogTest.php	/^		$result = file_get_contents(LOGS . 'debug.log');$/;"	v
result	lib/Cake/Test/Case/Log/Engine/FileLogTest.php	/^		$result = file_get_contents(LOGS . 'error.log');$/;"	v
result	lib/Cake/Test/Case/Log/Engine/FileLogTest.php	/^		$result = file_get_contents(LOGS . 'random.log');$/;"	v
result	lib/Cake/Test/Case/Log/Engine/FileLogTest.php	/^		$result = file_get_contents(array_pop($files));$/;"	v
result	lib/Cake/Test/Case/Log/Engine/FileLogTest.php	/^		$result = substr(sprintf('%o', fileperms($path . 'error.log')), -4);$/;"	v
testLogFileWriting	lib/Cake/Test/Case/Log/Engine/FileLogTest.php	/^	public function testLogFileWriting() {$/;"	f
testMaskSetting	lib/Cake/Test/Case/Log/Engine/FileLogTest.php	/^	public function testMaskSetting() {$/;"	f
testPathSetting	lib/Cake/Test/Case/Log/Engine/FileLogTest.php	/^	public function testPathSetting() {$/;"	f
testRotation	lib/Cake/Test/Case/Log/Engine/FileLogTest.php	/^	public function testRotation() {$/;"	f
SyslogLogTest	lib/Cake/Test/Case/Log/Engine/SyslogLogTest.php	/^class SyslogLogTest extends CakeTestCase {$/;"	c
log	lib/Cake/Test/Case/Log/Engine/SyslogLogTest.php	/^		$log = $this->getMock('SyslogLog', array('_open', '_write'));$/;"	v
testOpenLog	lib/Cake/Test/Case/Log/Engine/SyslogLogTest.php	/^	public function testOpenLog() {$/;"	f
testWriteMultiLine	lib/Cake/Test/Case/Log/Engine/SyslogLogTest.php	/^	public function testWriteMultiLine() {$/;"	f
testWriteOneLine	lib/Cake/Test/Case/Log/Engine/SyslogLogTest.php	/^	public function testWriteOneLine($type, $expected) {$/;"	f
typesProvider	lib/Cake/Test/Case/Log/Engine/SyslogLogTest.php	/^	public function typesProvider() {$/;"	f
Collection	lib/Cake/Test/Case/Log/LogEngineCollectionTest.php	/^		$this->Collection = new LogEngineCollection();$/;"	v
Collection	lib/Cake/Test/Case/Log/LogEngineCollectionTest.php	/^	public $Collection;$/;"	v
LogEngineCollectionTest	lib/Cake/Test/Case/Log/LogEngineCollectionTest.php	/^class LogEngineCollectionTest extends CakeTestCase {$/;"	c
LoggerEngineLog	lib/Cake/Test/Case/Log/LogEngineCollectionTest.php	/^class LoggerEngineLog extends FileLog {$/;"	c
result	lib/Cake/Test/Case/Log/LogEngineCollectionTest.php	/^		$result = $this->Collection->load('key', array('engine' => 'File'));$/;"	v
result	lib/Cake/Test/Case/Log/LogEngineCollectionTest.php	/^		$result = $this->Collection->load('key', array('engine' => 'FileLog'));$/;"	v
result	lib/Cake/Test/Case/Log/LogEngineCollectionTest.php	/^		$result = $this->Collection->load('key', array('engine' => 'ImaginaryFile'));$/;"	v
result	lib/Cake/Test/Case/Log/LogEngineCollectionTest.php	/^		$result = $this->Collection->load('key', array('engine' => 'LoggerEngine'));$/;"	v
setUp	lib/Cake/Test/Case/Log/LogEngineCollectionTest.php	/^	public function setUp() {$/;"	f
testLoad	lib/Cake/Test/Case/Log/LogEngineCollectionTest.php	/^	public function testLoad() {$/;"	f
testLoadInvalid	lib/Cake/Test/Case/Log/LogEngineCollectionTest.php	/^	public function testLoadInvalid() {$/;"	f
testLoadWithSuffix	lib/Cake/Test/Case/Log/LogEngineCollectionTest.php	/^	public function testLoadWithSuffix() {$/;"	f
testLoadWithSuffixAtBeginning	lib/Cake/Test/Case/Log/LogEngineCollectionTest.php	/^	public function testLoadWithSuffixAtBeginning() {$/;"	f
AclNodeTest	lib/Cake/Test/Case/Model/AclNodeTest.php	/^class AclNodeTest extends CakeTestCase {$/;"	c
Aco	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$Aco = ClassRegistry::init('DbAcoTest');$/;"	v
Aco	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$Aco = new DbAcoTest();$/;"	v
Aco	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$this->Aco = new DbAcoTest();$/;"	v
Aro	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$Aro = new DbAroTest();$/;"	v
Aro	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$this->Aro = new DbAroTest();$/;"	v
DbAclNodeTestBase	lib/Cake/Test/Case/Model/AclNodeTest.php	/^class DbAclNodeTestBase extends AclNode {$/;"	c
DbAcoActionTest	lib/Cake/Test/Case/Model/AclNodeTest.php	/^class DbAcoActionTest extends CakeTestModel {$/;"	c
DbAcoTest	lib/Cake/Test/Case/Model/AclNodeTest.php	/^class DbAcoTest extends DbAclNodeTestBase {$/;"	c
DbAroTest	lib/Cake/Test/Case/Model/AclNodeTest.php	/^class DbAroTest extends DbAclNodeTestBase {$/;"	c
DbAroUserTest	lib/Cake/Test/Case/Model/AclNodeTest.php	/^class DbAroUserTest extends CakeTestModel {$/;"	c
DbPermissionTest	lib/Cake/Test/Case/Model/AclNodeTest.php	/^class DbPermissionTest extends CakeTestModel {$/;"	c
Model	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$Model = new DbAroUserTest();$/;"	v
TestDbAcl	lib/Cake/Test/Case/Model/AclNodeTest.php	/^class TestDbAcl extends DbAcl {$/;"	c
__construct	lib/Cake/Test/Case/Model/AclNodeTest.php	/^	public function __construct() {$/;"	f
belongsTo	lib/Cake/Test/Case/Model/AclNodeTest.php	/^	public $belongsTo = array('DbAcoTest' => array('foreignKey' => 'aco_id'));$/;"	v
belongsTo	lib/Cake/Test/Case/Model/AclNodeTest.php	/^	public $belongsTo = array('DbAroTest' => array('foreignKey' => 'aro_id'), 'DbAcoTest' => array('foreignKey' => 'aco_id'));$/;"	v
bindNode	lib/Cake/Test/Case/Model/AclNodeTest.php	/^	public function bindNode($ref = null) {$/;"	f
cacheQueries	lib/Cake/Test/Case/Model/AclNodeTest.php	/^	public $cacheQueries = false;$/;"	v
cacheSources	lib/Cake/Test/Case/Model/AclNodeTest.php	/^	public $cacheSources = false;$/;"	v
db	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$db = $Aco->getDataSource();$/;"	v
expected	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$expected = $Aro->id;$/;"	v
expected	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$expected = 5;$/;"	v
expected	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$expected = array(2, 1);$/;"	v
expected	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$expected = array(3, 2, 1);$/;"	v
expected	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$expected = array(4);$/;"	v
expected	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$expected = array(4, 2, 1);$/;"	v
expected	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$expected = array(4, 3, 2, 1);$/;"	v
expected	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$expected = array(5, 2, 1);$/;"	v
expected	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$expected = array(7, 6, 1);$/;"	v
expected	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$expected = array(8, 7, 6, 1);$/;"	v
fixtures	lib/Cake/Test/Case/Model/AclNodeTest.php	/^	public $fixtures = array('core.aro', 'core.aco', 'core.aros_aco', 'core.aco_action', 'core.auth_user');$/;"	v
hasAndBelongsToMany	lib/Cake/Test/Case/Model/AclNodeTest.php	/^	public $hasAndBelongsToMany = array('DbAcoTest' => array('with' => 'DbPermissionTest'));$/;"	v
hasAndBelongsToMany	lib/Cake/Test/Case/Model/AclNodeTest.php	/^	public $hasAndBelongsToMany = array('DbAroTest' => array('with' => 'DbPermissionTest'));$/;"	v
name	lib/Cake/Test/Case/Model/AclNodeTest.php	/^	public $name = 'AuthUser';$/;"	v
node	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$node = $Aro->node(array('TestPlugin.TestPluginAuthUser' => array('id' => 1, 'user' => 'mariano')));$/;"	v
nodes	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$nodes = $Aco->node('ROOT\/Users');$/;"	v
result	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$result = $Aco->find('all');$/;"	v
result	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$result = $Aco->node('');$/;"	v
result	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$result = $Aro->id;$/;"	v
result	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$result = Hash::extract($Aco->node('Controller1'), '{n}.DbAcoTest.id');$/;"	v
result	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$result = Hash::extract($Aco->node('Controller1\/action1'), '{n}.DbAcoTest.id');$/;"	v
result	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$result = Hash::extract($Aco->node('Controller1\/action1\/record1'), '{n}.DbAcoTest.id');$/;"	v
result	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$result = Hash::extract($Aco->node('Controller1\/action2'), '{n}.DbAcoTest.id');$/;"	v
result	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$result = Hash::extract($Aco->node('Controller2\/action1'), '{n}.DbAcoTest.id');$/;"	v
result	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$result = Hash::extract($Aco->node('Controller2\/action1\/record1'), '{n}.DbAcoTest.id');$/;"	v
result	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$result = Hash::extract($Aro->node($Model), '{n}.DbAroTest.id');$/;"	v
result	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$result = Hash::extract($Aro->node(array('DbAroUserTest' => array('id' => '1', 'foreign_key' => '1'))), '{n}.DbAroTest.id');$/;"	v
result	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$result = Hash::extract($Aro->node(array('DbAroUserTest' => array('id' => 4, 'foreign_key' => 2))), '{n}.DbAroTest.id');$/;"	v
result	lib/Cake/Test/Case/Model/AclNodeTest.php	/^		$result = Hash::get($node, '0.DbAroTest.id');$/;"	v
setUp	lib/Cake/Test/Case/Model/AclNodeTest.php	/^	public function setUp() {$/;"	f
testNode	lib/Cake/Test/Case/Model/AclNodeTest.php	/^	public function testNode() {$/;"	f
testNodeActionAuthorize	lib/Cake/Test/Case/Model/AclNodeTest.php	/^	public function testNodeActionAuthorize() {$/;"	f
testNodeAliasParenting	lib/Cake/Test/Case/Model/AclNodeTest.php	/^	public function testNodeAliasParenting() {$/;"	f
testNodeArrayFind	lib/Cake/Test/Case/Model/AclNodeTest.php	/^	public function testNodeArrayFind() {$/;"	f
testNodeObjectFind	lib/Cake/Test/Case/Model/AclNodeTest.php	/^	public function testNodeObjectFind() {$/;"	f
testNodeWithDuplicatePathSegments	lib/Cake/Test/Case/Model/AclNodeTest.php	/^	public function testNodeWithDuplicatePathSegments() {$/;"	f
useDbConfig	lib/Cake/Test/Case/Model/AclNodeTest.php	/^	public $useDbConfig = 'test';$/;"	v
useTable	lib/Cake/Test/Case/Model/AclNodeTest.php	/^	public $useTable = 'aco_actions';$/;"	v
useTable	lib/Cake/Test/Case/Model/AclNodeTest.php	/^	public $useTable = 'acos';$/;"	v
useTable	lib/Cake/Test/Case/Model/AclNodeTest.php	/^	public $useTable = 'aros';$/;"	v
useTable	lib/Cake/Test/Case/Model/AclNodeTest.php	/^	public $useTable = 'aros_acos';$/;"	v
useTable	lib/Cake/Test/Case/Model/AclNodeTest.php	/^	public $useTable = 'auth_users';$/;"	v
AclBehaviorTest	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^class AclBehaviorTest extends CakeTestCase {$/;"	c
AclPerson	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^class AclPerson extends CakeTestModel {$/;"	c
AclPost	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^class AclPost extends CakeTestModel {$/;"	c
AclUser	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^class AclUser extends CakeTestModel {$/;"	c
Aco	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^		$this->Aco = new Aco();$/;"	v
Aco	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^	public $Aco;$/;"	v
Aro	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^		$this->Aro = new Aro();$/;"	v
Aro	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^	public $Aro;$/;"	v
Person	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^		$Person = new AclPerson();$/;"	v
Post	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^		$Post = new AclPost();$/;"	v
User	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^		$User = new AclPerson();$/;"	v
User	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^		$User = new AclUser();$/;"	v
acoData	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^		$acoData = array($/;"	v
actsAs	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^	public $actsAs = array('Acl' => 'both');$/;"	v
actsAs	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^	public $actsAs = array('Acl' => array('type' => 'Controlled'));$/;"	v
actsAs	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^	public $actsAs = array('Acl' => array('type' => 'requester'));$/;"	v
aroData	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^		$aroData = array($/;"	v
belongsTo	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^	public $belongsTo = array($/;"	v
data	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^		$data = array($/;"	v
fixtures	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^	public $fixtures = array('core.person', 'core.user', 'core.post', 'core.aco', 'core.aro', 'core.aros_aco');$/;"	v
hasMany	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^	public $hasMany = array($/;"	v
id	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^		$id = $Person->id;$/;"	v
motherId	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^			$motherId = $this->data['AclPerson']['mother_id'];$/;"	v
motherId	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^			$motherId = $this->field('mother_id');$/;"	v
name	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^	public $name = 'Post';$/;"	v
name	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^	public $name = 'User';$/;"	v
node	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^		$node = $Person->node(array('model' => 'AclPerson', 'foreign_key' => 8), 'Aro');$/;"	v
node	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^		$node = $Person->node(null, 'Aro');$/;"	v
parentNode	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^	public function parentNode() {$/;"	f
result	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^		$result = $Person->node(null, 'Aro');$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^		$result = $this->Aco->find('first', array($/;"	v
result	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^		$result = $this->Aro->find('first', array($/;"	v
setUp	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^	public function tearDown() {$/;"	f
testAfterDelete	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^	public function testAfterDelete() {$/;"	f
testAfterSave	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^	public function testAfterSave() {$/;"	f
testAfterSaveUpdateParentIdNotNull	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^	public function testAfterSaveUpdateParentIdNotNull() {$/;"	f
testNode	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^	public function testNode() {$/;"	f
testSetup	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^	public function testSetup() {$/;"	f
testSetupMulti	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^	public function testSetupMulti() {$/;"	f
useTable	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^	public $useTable = 'people';$/;"	v
useTable	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^	public $useTable = 'posts';$/;"	v
useTable	lib/Cake/Test/Case/Model/Behavior/AclBehaviorTest.php	/^	public $useTable = 'users';$/;"	v
Article	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$this->Article = ClassRegistry::init('Article');$/;"	v
ContainableBehaviorTest	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^class ContainableBehaviorTest extends CakeTestCase {$/;"	c
JoinA	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$this->JoinA = ClassRegistry::init('JoinA');$/;"	v
JoinB	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$this->JoinB = ClassRegistry::init('JoinB');$/;"	v
JoinC	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$this->JoinC = ClassRegistry::init('JoinC');$/;"	v
Tag	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$this->Tag = ClassRegistry::init('Tag');$/;"	v
User	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$this->User = ClassRegistry::init('User');$/;"	v
_assertBindings	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	protected function _assertBindings(Model $Model, $expected = array()) {$/;"	f
_containments	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	protected function _containments($Model, $contain = array()) {$/;"	f
articleHabtm	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$articleHabtm = array($/;"	v
associated	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$associated = $this->Article->getAssociated();$/;"	v
binding	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$binding = array($/;"	v
config	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$config = new DATABASE_CONFIG();$/;"	v
db	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$db = ConnectionManager::getDataSource('test2');$/;"	v
exceptions	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^			$exceptions = true;$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^			$expected = array($/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$expected = $this->Article->User->hasOne;$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$expected = $this->Article->hasAndBelongsToMany;$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$expected = 2;$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$expected = 3;$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$expected = array('Article', 'ArticlesTag');$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$expected = array(array($/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$expected = array_merge(array($/;"	v
findOptions	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$findOptions = array($/;"	v
firstResult	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$firstResult = $this->Article->Comment->find('all', $options);$/;"	v
fixtures	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public $fixtures = array($/;"	v
ids	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$ids = $descIds = Hash::extract($r, 'Comment[1].id');$/;"	v
initialModels	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$initialModels = $this->Article->Comment->find('all', $initialOptions);$/;"	v
initialOptions	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$initialOptions = array($/;"	v
options	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$options = array($/;"	v
orders	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$orders = array($/;"	v
r	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$r = $this->Article->find('all');$/;"	v
r	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$r = $this->Article->find('all', array($/;"	v
r	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$r = $this->Article->find('all', array('contain' => 'Comment'));$/;"	v
r	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$r = $this->Article->find('all', array('contain' => 'Comment.User'));$/;"	v
r	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$r = $this->Article->find('all', array('contain' => 'Comment.created'));$/;"	v
r	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$r = $this->Article->find('all', array('contain' => 'Comment.id DESC'));$/;"	v
r	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$r = $this->Article->find('all', array('contain' => array('Comment' => array('User', 'Article'))));$/;"	v
r	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$r = $this->Article->find('all', array('contain' => array('Comment' => array('comment', 'updated'))));$/;"	v
r	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$r = $this->Article->find('all', array('contain' => array('Comment' => array('conditions' => array('Comment.user_id' => 2)))));$/;"	v
r	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$r = $this->Article->find('all', array('contain' => array('Comment' => array('fields' => 'comment'))));$/;"	v
r	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$r = $this->Article->find('all', array('contain' => array('Comment' => array('fields' => array('comment', 'updated')))));$/;"	v
r	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$r = $this->Article->find('all', array('contain' => array('Comment')));$/;"	v
r	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$r = $this->Article->find('all', array('contain' => array('Comment(comment)', 'User(user)'), 'fields' => array('title')));$/;"	v
r	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$r = $this->Article->find('all', array('contain' => array('Comment(comment,updated)')));$/;"	v
r	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$r = $this->Article->find('all', array('contain' => array('Comment.user_id = 2')));$/;"	v
r	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$r = $this->Article->find('all', array('contain' => array('User.Article(title)', 'Comment(comment)')));$/;"	v
r	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$r = $this->Article->find('all', array('contain' => array()));$/;"	v
r	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$r = $this->User->find('all', array('contain' => array($/;"	v
r	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$r = $this->_containments($this->Article, array($/;"	v
r	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$r = $this->_containments($this->Article, array('Comment' => array('conditions' => array('Comment.user_id' => 2))));$/;"	v
r	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$r = $this->_containments($this->Article, array('Comment' => array('limit' => 1)));$/;"	v
r	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$r = $this->_containments($this->Article, array('Comment(comment, published)' => 'Attachment(attachment)', 'User(user)'));$/;"	v
r	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$r = $this->_containments($this->Article, array('Comment.User'));$/;"	v
r	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$r = $this->_containments($this->Tag, array('Article' => array('User' => array('Comment' => array($/;"	v
r	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$r = $this->_containments($this->User, array($/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^			$result = $Model->containments($contain);$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^			$result = $this->User->find('all', array('contain' => array($/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $Model;$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->Article->Comment->find('all', $findOptions);$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->Article->Comment->find('all', $initialOptions);$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->Article->Comment->find('all', $options);$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->Article->field('title', array('Article.title' => 'First Article'));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->Article->find('all');$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->Article->find('all', array($/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->Article->find('all', array('contain' => array('Comment' => 'User')));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->Article->find('all', array('contain' => array('User' => 'ArticleFeatured')));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->Article->find('all', array('contain' => array('User' => 'ArticleFeatured', 'Tag', 'Comment' => 'Attachment')));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->Article->find('all', array('contain' => array('User' => array('ArticleFeatured', 'Comment'))));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->Article->find('all', array('contain' => array('User')));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->Article->find('all', array('contain' => array('User', 'Comment')));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->Article->find('all', array('contain' => false));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->Article->find('all', array('fields' => array('title'), 'limit' => 1, 'page' => 1, 'order' => 'Article.id ASC'));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->Article->find('all', array('fields' => array('title'), 'order' => array('Article.id' => 'ASC')));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->Article->find('all', array('fields' => array('title', 'User.id', 'User.user'), 'limit' => 1, 'page' => 2, 'order' => 'Article.id ASC'));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->Article->find('all', array('fields' => array('title', 'User.id', 'User.user'), 'limit' => 1, 'page' => 3, 'order' => 'Article.id ASC'));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->Article->find('all', array('limit' => 1, 'contain' => array('ArticlesTag', 'Tag')));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->Article->find('all', array('recursive' => 1));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->Article->find('all', array('recursive' => 2));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->Article->find('count');$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->Article->find('count', array('conditions' => array('Article.id >' => '1')));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->Article->find('count', array('contain' => array()));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->Article->find('first', array($/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->Article->find('first', array('fields' => array('title')));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->Article->find('list');$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->Article->find('list', array($/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->Article->find('list', array('fields' => array('Article.id', 'User.id'), 'contain' => array('User')));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->JoinA->hasOne;$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->User->find('all', array('contain' => array($/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->User->find('all', array('contain' => array('ArticleFeatured' => array('Featured' => 'Category'))));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->User->find('all', array('contain' => array('ArticleFeatured' => array('Featured' => 'Category', 'Comment' => 'Attachment'), 'Article')));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->User->find('all', array('contain' => array('ArticleFeatured' => array('Featured' => 'Category', 'Comment' => array('Article', 'Attachment')))));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->User->find('all', array('contain' => array('ArticleFeatured' => array('Featured' => 'Category', 'Comment' => array('Article', 'Attachment')), false)));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->User->find('all', array('contain' => array('ArticleFeatured' => array('Featured' => array('Category' => array('id', 'name'))))));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->User->find('all', array('recursive' => 3));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->User->find('all', array('reset' => false, 'contain' => array('ArticleFeatured' => array('Featured' => 'Category'))));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->User->find('all', array('reset' => false, 'contain' => array('ArticleFeatured' => array('Featured' => 'Category', 'Comment' => 'Attachment'), 'Article')));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = $this->User->find('all', array('reset' => false, 'contain' => array('ArticleFeatured' => array('Featured' => 'Category', 'Comment' => array('Article', 'Attachment')))));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = Hash::extract($r, 'Article.keep');$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = Hash::extract($r, 'Article[keep]');$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = Hash::extract($r, 'Comment[keep]');$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$result = Hash::extract($r, 'User[keep]');$/;"	v
resultAfter	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$resultAfter = $this->JoinA->hasOne;$/;"	v
setUp	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function tearDown() {$/;"	f
testAutoFieldsWithMultipleDatabases	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function testAutoFieldsWithMultipleDatabases() {$/;"	f
testAutoFieldsWithRecursiveNegativeOne	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function testAutoFieldsWithRecursiveNegativeOne() {$/;"	f
testBeforeFind	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function testBeforeFind() {$/;"	f
testBeforeFindWithNonExistingBinding	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function testBeforeFindWithNonExistingBinding() {$/;"	f
testBindMultipleTimesWithFind	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function testBindMultipleTimesWithFind() {$/;"	f
testContain	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function testContain() {$/;"	f
testContainAndContainOption	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function testContainAndContainOption() {$/;"	f
testContainFindList	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function testContainFindList() {$/;"	f
testContainments	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function testContainments() {$/;"	f
testEmbeddedFindFields	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function testEmbeddedFindFields() {$/;"	f
testFindAllReturn	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function testFindAllReturn() {$/;"	f
testFindConditionalBinding	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function testFindConditionalBinding() {$/;"	f
testFindEmbeddedFirstLevel	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function testFindEmbeddedFirstLevel() {$/;"	f
testFindEmbeddedNoBindings	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function testFindEmbeddedNoBindings() {$/;"	f
testFindEmbeddedSecondLevel	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function testFindEmbeddedSecondLevel() {$/;"	f
testFindEmbeddedThirdLevel	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function testFindEmbeddedThirdLevel() {$/;"	f
testFindEmbeddedThirdLevelNonReset	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function testFindEmbeddedThirdLevelNonReset() {$/;"	f
testFindFirstLevel	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function testFindFirstLevel() {$/;"	f
testFindSecondLevel	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function testFindSecondLevel() {$/;"	f
testFindThirdLevel	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function testFindThirdLevel() {$/;"	f
testFindThirdLevelNonReset	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function testFindThirdLevelNonReset() {$/;"	f
testHasOneFieldsInContain	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function testHasOneFieldsInContain() {$/;"	f
testInvalidContainments	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function testInvalidContainments() {$/;"	f
testInvalidContainmentsNoNotices	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function testInvalidContainmentsNoNotices() {$/;"	f
testLazyLoad	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function testLazyLoad() {$/;"	f
testOriginalAssociations	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function testOriginalAssociations() {$/;"	f
testOtherFinds	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function testOtherFinds() {$/;"	f
testResetAddedAssociation	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function testResetAddedAssociation() {$/;"	f
testResetAssociation	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function testResetAssociation() {$/;"	f
testResetDeeperHasOneAssociations	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function testResetDeeperHasOneAssociations() {$/;"	f
testResetMultipleHabtmAssociations	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function testResetMultipleHabtmAssociations() {$/;"	f
testSettingsThirdLevel	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^	public function testSettingsThirdLevel() {$/;"	f
userHasOne	lib/Cake/Test/Case/Model/Behavior/ContainableBehaviorTest.php	/^		$userHasOne = array('hasOne' => array('ArticleFeatured', 'Comment'));$/;"	v
Behavior	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$Behavior = $TestModel->Behaviors->Translate;$/;"	v
I18nModel	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$I18nModel = ClassRegistry::getObject('TranslateTestModel');$/;"	v
Model	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$Model = new TranslatedArticle();$/;"	v
Model	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$Model = new TranslatedItem();$/;"	v
TestModel	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$TestModel = new Tag();$/;"	v
TestModel	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$TestModel = new TranslatedArticle();$/;"	v
TestModel	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$TestModel = new TranslatedItem();$/;"	v
TestModel	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$TestModel = new TranslatedItem(array('alias' => 'SomethingElse'));$/;"	v
TestModel	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$TestModel = new TranslatedItem2;$/;"	v
TestModel	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$TestModel = new TranslatedItemWithTable();$/;"	v
TestModel	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$TestModel = new User();$/;"	v
Translate	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$Translate = $TestModel->translateModel();$/;"	v
TranslateBehaviorTest	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^class TranslateBehaviorTest extends CakeTestCase {$/;"	c
autoFixtures	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public $autoFixtures = false;$/;"	v
data	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$data = array($/;"	v
data	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$data = array('TranslatedItem' => array($/;"	v
debug	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^			$debug = Configure::read('debug');$/;"	v
delete	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$delete = array(array('locale' => 'deu'), array('field' => 'content', 'locale' => 'eng'));$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$expected = 'Title #1';$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$expected = 1;$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$expected = array($TestModel->alias => array_merge($data, array('id' => $id, 'locale' => 'spa')));$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$expected = array('Title', 'Content');$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$expected = array('TranslatedItem' => array($/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$expected = array('TranslatedItem' => array_merge($data, array('id' => $TestModel->id, 'locale' => 'spa')));$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$expected = array('TranslatedItem' => array_merge($oldData, $newData, array('locale' => 'spa')));$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$expected = array();$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$expected = array(1 => 'Titel #1', 2 => 'Titel #2', 3 => 'Titel #3');$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$expected = array(1 => null, 2 => null, 3 => null);$/;"	v
fixtures	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public $fixtures = array($/;"	v
id	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$id = $TestModel->id;$/;"	v
model	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$model = new TranslatedItem();$/;"	v
newData	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$newData = array('id' => $id, 'content' => 'Contenido #4');$/;"	v
oldData	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$oldData = array('slug' => 'fourth_translated', 'title' => 'Leyenda #4', 'translated_article_id' => 1);$/;"	v
recursive	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$recursive = $TestModel->recursive;$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^			$result = $TestModel->find('list', array('recursive' => 1, 'callbacks' => 'after'));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^			$result = $TestModel->find('list', array('recursive' => 1, 'callbacks' => false));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = $Model->Behaviors->Translate->settings['TranslatedItem'];$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = $Model->TranslatedItem->find('all', array($/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = $Model->find('count', array($/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = $Model->saveAll($data);$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = $TestModel->field('title', array('TranslatedItem.id' => 1));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = $TestModel->find('all');$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = $TestModel->find('all', array($/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = $TestModel->find('all', array('conditions' => "TranslatedItem.slug = 'first_translated'"));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = $TestModel->find('all', array('conditions' => array('slug' => 'first_translated')));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = $TestModel->find('all', array('fields' => array('TranslatedItem.slug')));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = $TestModel->find('all', array('fields' => array('TranslatedItem.slug', 'content')));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = $TestModel->find('all', array('fields' => array('TranslatedItem.title')));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = $TestModel->find('all', array('fields' => array('slug')));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = $TestModel->find('all', array('fields' => array('slug', 'TranslatedItem.content')));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = $TestModel->find('all', array('fields' => array('slug', 'title', 'content')));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = $TestModel->find('all', array('fields' => array('title', 'content')));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = $TestModel->find('all', array('recursive' => -1));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = $TestModel->find('count', array($/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = $TestModel->find('first');$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = $TestModel->find('list', array('recursive' => 1));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = $TestModel->find('list', array('recursive' => 1, 'callbacks' => 'before'));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = $TestModel->read('id, title', 1);$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = $TestModel->read('title', 1);$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = $TestModel->read();$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = $TestModel->read(null, $TestModel->id);$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = $TestModel->read(null, $id);$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = $TestModel->read(null, 1);$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = $TestModel->save($data);$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = $TestModel->translateModel()->find('count', array($/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = $TestModel->unbindTranslation();$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = $model->read(null, 1);$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = array_keys($TestModel->hasMany);$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = isset($Behavior->runtime[$TestModel->alias]);$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = isset($Behavior->settings[$TestModel->alias]);$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$result = isset($TestModel->Behaviors->Translate);$/;"	v
results	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$results = $Translate->find('all', array($/;"	v
testAnotherTranslateTable	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testAnotherTranslateTable() {$/;"	f
testAttachDetach	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testAttachDetach() {$/;"	f
testCountWithConditions	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testCountWithConditions() {$/;"	f
testExceptionOnNameTranslation	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testExceptionOnNameTranslation() {$/;"	f
testFetchTranslationsWithZero	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testFetchTranslationsWithZero() {$/;"	f
testFieldsRestoreAfterBind	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testFieldsRestoreAfterBind() {$/;"	f
testLocaleFalseAssociations	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testLocaleFalseAssociations() {$/;"	f
testLocaleFalsePlain	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testLocaleFalsePlain() {$/;"	f
testLocaleMultiple	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testLocaleMultiple() {$/;"	f
testLocaleSingle	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testLocaleSingle() {$/;"	f
testLocaleSingleAssociations	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testLocaleSingleAssociations() {$/;"	f
testLocaleSingleCountWithConditions	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testLocaleSingleCountWithConditions() {$/;"	f
testLocaleSingleWithConditions	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testLocaleSingleWithConditions() {$/;"	f
testMissingTranslation	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testMissingTranslation() {$/;"	f
testMixedCreateUpdateWithArrayLocale	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testMixedCreateUpdateWithArrayLocale() {$/;"	f
testMultipleCreate	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testMultipleCreate() {$/;"	f
testMultipleUpdate	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testMultipleUpdate() {$/;"	f
testNoExtraRowsForAssociatedTranslations	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testNoExtraRowsForAssociatedTranslations() {$/;"	f
testReadSelectedFields	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testReadSelectedFields() {$/;"	f
testSaveAllTranslatedAssociations	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testSaveAllTranslatedAssociations() {$/;"	f
testSaveAssociatedMultipleLocale	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testSaveAssociatedMultipleLocale() {$/;"	f
testSaveCreate	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testSaveCreate() {$/;"	f
testSaveDeleteIgnoreAlias	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testSaveDeleteIgnoreAlias() {$/;"	f
testSaveMultipleLocales	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testSaveMultipleLocales() {$/;"	f
testSavePartialFieldMultipleLocales	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testSavePartialFieldMultipleLocales() {$/;"	f
testSavePartialFields	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testSavePartialFields() {$/;"	f
testSaveUpdate	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testSaveUpdate() {$/;"	f
testTranslateModel	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testTranslateModel() {$/;"	f
testTranslateTableWithPrefix	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testTranslateTableWithPrefix() {$/;"	f
testTranslateWithAssociations	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testTranslateWithAssociations() {$/;"	f
testTranslatedFindList	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testTranslatedFindList() {$/;"	f
testUnbindTranslation	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testUnbindTranslation() {$/;"	f
testUnbindTranslationInfinteLoop	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testUnbindTranslationInfinteLoop() {$/;"	f
testValidation	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^	public function testValidation() {$/;"	f
translateModel	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$translateModel = $TestModel->Behaviors->Translate->translateModel($TestModel);$/;"	v
translateModel	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$translateModel = $model->translateModel();$/;"	v
translations	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$translations = array('title' => 'Title');$/;"	v
translations	lib/Cake/Test/Case/Model/Behavior/TranslateBehaviorTest.php	/^		$translations = array('title' => 'Title', 'content' => 'Content');$/;"	v
Tree	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorAfterTest.php	/^		$this->Tree = new AfterTree();$/;"	v
TreeBehaviorAfterTest	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorAfterTest.php	/^class TreeBehaviorAfterTest extends CakeTestCase {$/;"	c
backupGlobals	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorAfterTest.php	/^	public $backupGlobals = false;$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorAfterTest.php	/^		$expected = array('AfterTree' => array('name' => 'Six and One Half Changed in AfterTree::afterSave() but not in database', 'parent_id' => 6, 'lft' => 11, 'rght' => 12));$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorAfterTest.php	/^		$expected = array('AfterTree' => array('name' => 'Six and One Half', 'parent_id' => 6, 'lft' => 11, 'rght' => 12, 'id' => 8));$/;"	v
fixtures	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorAfterTest.php	/^	public $fixtures = array('core.after_tree');$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorAfterTest.php	/^		$result = $this->Tree->find('all');$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorAfterTest.php	/^		$result = $this->Tree->save(array('AfterTree' => array('name' => 'Six and One Half', 'parent_id' => 6)));$/;"	v
settings	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorAfterTest.php	/^	public $settings = array($/;"	v
testAftersaveCallback	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorAfterTest.php	/^	public function testAftersaveCallback() {$/;"	f
Model	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$Model = new Person();$/;"	v
Tree	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$this->Tree = new $modelClass();$/;"	v
TreeBehaviorNumberTest	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^class TreeBehaviorNumberTest extends CakeTestCase {$/;"	c
after	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$after = $this->Tree->read(null, $data[$modelClass]['id']);$/;"	v
backupGlobals	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public $backupGlobals = false;$/;"	v
before	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$before = $this->Tree->read(null, $data[$modelClass]['id']);$/;"	v
children	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$children = $this->Tree->children($data[$modelClass]['id'], true, array('name'));$/;"	v
children	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$children = $this->Tree->children($result[$modelClass][$parentField], true, array('name'));$/;"	v
children	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$children = $this->Tree->children($result[$modelClass][$parentField], true, array('name'), $leftField . ' asc');$/;"	v
count	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$count = $this->Tree->find('count');$/;"	v
data	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$data = $this->Tree->find('first', array($/;"	v
data	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$data = $this->Tree->find('first', array('conditions' => array($modelClass . '.name' => '1. Root')));$/;"	v
data	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$data = $this->Tree->find('first', array('conditions' => array($modelClass . '.name' => '1.1')));$/;"	v
data	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$data = $this->Tree->find('first', array('conditions' => array($modelClass . '.name' => '1.2')));$/;"	v
data	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$data = $this->Tree->find('first', array('conditions' => array($modelClass . '.name' => '1.2.2')));$/;"	v
data	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$data = $this->Tree->find('first', array('fields' => array('id'), 'conditions' => array($modelClass . '.name' => '1.1')));$/;"	v
data	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$data = $this->Tree->find('first', array('fields' => array('id'), 'conditions' => array($modelClass . '.name' => '1.1.1')));$/;"	v
data	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$data = $this->Tree->find('first', array('fields' => array('id'), 'conditions' => array($modelClass . '.name' => '1.2')));$/;"	v
data	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$data = $this->Tree->find('first', array('fields' => array('id'), 'conditions' => array($modelClass . '.name' => '1.2.1')));$/;"	v
data	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$data = $this->Tree->find('first', array('fields' => array('id'), 'conditions' => array($modelClass . '.name' => '1.3.2.2')));$/;"	v
data	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$data = $this->Tree->find('first', array('fields' => array('id'), 'conditions' => array($modelClass . '.name' => '1.5')));$/;"	v
data	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$data = $this->Tree->findByName('1.1');$/;"	v
direct	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$direct = $this->Tree->childCount(null, true);$/;"	v
direct	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$direct = $this->Tree->children($parentId, true, array('id', 'name', $parentField, $leftField, $rightField));$/;"	v
direct	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$direct = $this->Tree->children(null, true, array('id', 'name', $parentField, $leftField, $rightField));$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$expected = $this->Tree->find('all');$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$expected = array($modelClass => array('name' => '1.2'));$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$expected = array($modelClass => array('name' => 'testAddNotIndexed', $parentField => null));$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$expected = array($modelClass => array('name' => 'testAddOrphan', $parentField => null));$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$expected = array('name' => 'testAddOrphan', $parentField => null, $leftField => '15', $rightField => 16);$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$expected = array(1 => '1. Root', 2 => '_1.1', 3 => '__1.1.1', 4 => '__1.1.2', 5 => '_1.2', 6 => '__1.2.1', 7 => '__1.2.2');$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$expected = array(array($modelClass => array('id' => 2, 'name' => '1.1', $parentField => 1, $leftField => 2, $rightField => 5)),$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$expected = array(array($modelClass => array('id' => 2, 'name' => '1.1', $parentField => 1, $leftField => 2, $rightField => 7)),$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$expected = array(array($modelClass => array('name' => '1. Root')));$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$expected = array(array($modelClass => array('name' => '1. Root')),$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$expected = array(array($modelClass => array('name' => '1.1')),$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$expected = array(array($modelClass => array('name' => '1.1.1')),$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$expected = array(array($modelClass => array('name' => '1.2')),$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$expected = array(array($modelClass => array('name' => '1.2.1')),$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$expected = array_merge($/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$expected = array_merge(array($modelClass => array('name' => 'testAddMiddle', $parentField => '2')), $result);$/;"	v
fixtures	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public $fixtures = array('core.number_tree', 'core.person');$/;"	v
id	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$id = $this->Tree->field('id', array($modelClass . '.name' => '1.2'));$/;"	v
initialCount	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$initialCount = $this->Tree->find('count');$/;"	v
initialTopNodes	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$initialTopNodes = $this->Tree->childCount(false);$/;"	v
laterCount	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$laterCount = $this->Tree->find('count');$/;"	v
laterTopNodes	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$laterTopNodes = $this->Tree->childCount(false);$/;"	v
leftField	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^				$leftField => 1,$/;"	v
modelClass	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^			$modelClass => array($/;"	v
node1	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$node1 = $this->Tree->id;$/;"	v
node11	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$node11 = $this->Tree->id;$/;"	v
node12	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$node12 = $this->Tree->id;$/;"	v
nodes	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$nodes = $this->Tree->find('list', array('order' => $leftField));$/;"	v
original	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$original = $this->Tree->cacheQueries;$/;"	v
parent	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$parent = $this->Tree->find('first', array('conditions' => array($modelClass . '.name' => '1. Root')));$/;"	v
parent	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$parent = $this->Tree->find('first', array('conditions' => array($modelClass . '.name' => '1.1')));$/;"	v
parent	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$parent = $this->Tree->find('first', array('conditions' => array($modelClass . '.name' => '1.2')));$/;"	v
parent	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$parent = $this->Tree->findByName('1. Root', array('id'));$/;"	v
parentField	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^				$parentField => null,$/;"	v
parentField	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^			$parentField => $data[$modelClass]['id'])$/;"	v
parentId	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$parentId = $parent[$modelClass]['id'];$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$result = $Model->find('threaded');$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$result = $this->Tree->children($parentId, true, array('id', 'name', $parentField, $leftField, $rightField));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$result = $this->Tree->children($parentId, true, array('name'));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$result = $this->Tree->children(null, true, array('name'));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$result = $this->Tree->find('all', array('fields' => 'name', 'order' => $modelClass . '.' . $leftField . ' ASC'));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$result = $this->Tree->find('count');$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$result = $this->Tree->find('first', array($/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$result = $this->Tree->find('first', array('fields' => array('name', $parentField), 'order' => $modelClass . '.' . $leftField . ' desc'));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$result = $this->Tree->findByName('1. Root');$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$result = $this->Tree->findByName('1.1');$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$result = $this->Tree->findByName('1.1.1');$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$result = $this->Tree->findByName('testAddOrphan', array('name', $parentField, $leftField, $rightField));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$result = $this->Tree->generateTreeList($/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$result = $this->Tree->generateTreeList();$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$result = $this->Tree->getParentNode(null, array('name'));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$result = $this->Tree->getPath(null, array('name'));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$result = $this->Tree->recover('MPTT');$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$result = $this->Tree->recover('parent', 'delete');$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$result = $this->Tree->recover();$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$result = $this->Tree->save(array($modelClass => array($/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$result = $this->Tree->save(array($modelClass => array('name' => 'testAddMiddle', $parentField => $data[$modelClass]['id'])));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$result = $this->Tree->verify();$/;"	v
results	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$results = $this->Tree->find('all');$/;"	v
return	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$return = $this->Tree->delete($result[$modelClass]['id']);$/;"	v
rightField	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^				$rightField => 10$/;"	v
saveSuccess	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$saveSuccess = $this->Tree->save(array($modelClass => array('name' => 'testAddInvalid', $parentField => 99999)));$/;"	v
saveSuccess	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$saveSuccess = $this->Tree->saveField($parentField, $this->Tree->id);$/;"	v
settings	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public $settings = array($/;"	v
sortedNodes	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$sortedNodes = $this->Tree->find('list', array('order' => $leftField));$/;"	v
testAddInvalid	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testAddInvalid() {$/;"	f
testAddMiddle	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testAddMiddle() {$/;"	f
testAddNotIndexedByModel	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testAddNotIndexedByModel() {$/;"	f
testAddOrphan	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testAddOrphan() {$/;"	f
testAddWithPreSpecifiedId	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testAddWithPreSpecifiedId() {$/;"	f
testArraySyntax	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testArraySyntax() {$/;"	f
testChildren	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testChildren() {$/;"	f
testCountChildren	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testCountChildren() {$/;"	f
testDelete	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testDelete() {$/;"	f
testDeleteDoesNotExist	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testDeleteDoesNotExist() {$/;"	f
testDetectEqualLftsRghts	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testDetectEqualLftsRghts() {$/;"	f
testDetectInvalidLeft	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testDetectInvalidLeft() {$/;"	f
testDetectInvalidLftsRghts	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testDetectInvalidLftsRghts() {$/;"	f
testDetectInvalidParent	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testDetectInvalidParent() {$/;"	f
testDetectInvalidParents	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testDetectInvalidParents() {$/;"	f
testDetectInvalidRight	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testDetectInvalidRight() {$/;"	f
testDetectNoneExistentParent	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testDetectNoneExistentParent() {$/;"	f
testFindThreaded	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testFindThreaded() {$/;"	f
testGenerateTreeListFormatting	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testGenerateTreeListFormatting() {$/;"	f
testGenerateTreeListWithSelfJoin	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testGenerateTreeListWithSelfJoin() {$/;"	f
testGetParentNode	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testGetParentNode() {$/;"	f
testGetPath	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testGetPath() {$/;"	f
testInitialize	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testInitialize() {$/;"	f
testInsertWithWhitelist	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testInsertWithWhitelist() {$/;"	f
testMoveAfter	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testMoveAfter() {$/;"	f
testMoveBefore	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testMoveBefore() {$/;"	f
testMoveDemoteInvalid	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testMoveDemoteInvalid() {$/;"	f
testMoveDown2	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testMoveDown2() {$/;"	f
testMoveDownFail	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testMoveDownFail() {$/;"	f
testMoveDownLast	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testMoveDownLast() {$/;"	f
testMoveDownSuccess	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testMoveDownSuccess() {$/;"	f
testMoveInvalid	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testMoveInvalid() {$/;"	f
testMovePromote	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testMovePromote() {$/;"	f
testMoveSelfInvalid	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testMoveSelfInvalid() {$/;"	f
testMoveToRootAndMoveUp	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testMoveToRootAndMoveUp() {$/;"	f
testMoveUp2	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testMoveUp2() {$/;"	f
testMoveUpFail	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testMoveUpFail() {$/;"	f
testMoveUpFirst	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testMoveUpFirst() {$/;"	f
testMoveUpSuccess	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testMoveUpSuccess() {$/;"	f
testMoveWithWhitelist	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testMoveWithWhitelist() {$/;"	f
testNoAmbiguousColumn	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testNoAmbiguousColumn() {$/;"	f
testRecoverFromMissingParent	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testRecoverFromMissingParent() {$/;"	f
testRecoverUsingParentMode	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testRecoverUsingParentMode() {$/;"	f
testRecoverUsingParentModeAndDelete	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testRecoverUsingParentModeAndDelete() {$/;"	f
testRemove	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testRemove() {$/;"	f
testRemoveAndDelete	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testRemoveAndDelete() {$/;"	f
testRemoveAndDeleteNoChildren	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testRemoveAndDeleteNoChildren() {$/;"	f
testRemoveLastTopParent	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testRemoveLastTopParent() {$/;"	f
testRemoveNoChildren	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testRemoveNoChildren() {$/;"	f
testReorderBigTreeWithQueryCaching	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testReorderBigTreeWithQueryCaching() {$/;"	f
testReorderTree	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testReorderTree() {$/;"	f
testSaveNoMove	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^	public function testSaveNoMove() {$/;"	f
topNodes	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$topNodes = $this->Tree->children(false, true, array('name'));$/;"	v
total	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$total = $this->Tree->childCount($id);$/;"	v
total	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$total = $this->Tree->childCount();$/;"	v
total	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$total = $this->Tree->children(null, null, array('id', 'name', $parentField, $leftField, $rightField));$/;"	v
unsortedNodes	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$unsortedNodes = $this->Tree->find('list', array('order' => $leftField));$/;"	v
validTree	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorNumberTest.php	/^		$validTree = $this->Tree->verify();$/;"	v
Ad	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^		$this->Ad = new Ad();$/;"	v
Tree	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^		$this->Tree = new $modelClass();$/;"	v
Tree	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^		$this->Tree = new FlagTree();$/;"	v
TreeBehaviorScopedTest	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^class TreeBehaviorScopedTest extends CakeTestCase {$/;"	c
TreeTwo	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^		$this->TreeTwo = new NumberTreeTwo();$/;"	v
backupGlobals	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^	public $backupGlobals = false;$/;"	v
data	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^		$data = $this->Tree->create(array($/;"	v
data	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^		$data = array($/;"	v
data	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^		$data = array('FlagTree' => array($/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^		$expected = array('NumberTreeTwo' => array($/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^		$expected = array(array('FlagTree' => array($/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^		$expected = array(array('FlagTree' => array('id' => '2', 'name' => '1.1', 'parent_id' => '1', 'lft' => '2', 'rght' => '9', 'flag' => '1')));$/;"	v
fixtures	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^	public $fixtures = array('core.flag_tree', 'core.ad', 'core.campaign', 'core.translate', 'core.number_tree_two');$/;"	v
leftField	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^				$leftField => 1,$/;"	v
modelClass	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^			$modelClass => array($/;"	v
node1	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^		$node1 = $this->Tree->id;$/;"	v
node11	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^		$node11 = $this->Tree->id;$/;"	v
node12	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^		$node12 = $this->Tree->id;$/;"	v
parentField	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^				$parentField => null,$/;"	v
record	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^		$record = $this->Tree->find('first');$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^		$result = $this->Ad->children();$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^		$result = $this->Tree->children();$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^		$result = $this->Tree->find('all');$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^		$result = $this->Tree->find('first', array($/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^		$result = $this->Tree->findByName('1.1');$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^		$result = $this->Tree->generateTreeList();$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^		$result = $this->Tree->generateTreeList(array('FlagTree.id >' => 1));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^		$result = $this->Tree->read();$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^		$result = $this->Tree->recover();$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^		$result = $this->Tree->save($tree);$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^		$result = $this->Tree->verify();$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^		$result = $this->TreeTwo->find('first');$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^		$result = $this->TreeTwo->save($data);$/;"	v
rightField	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^				$rightField => 10,$/;"	v
settings	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^	public $settings = array($/;"	v
testAliasesWithScopeInTwoTreeAssociations	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^	public function testAliasesWithScopeInTwoTreeAssociations() {$/;"	f
testArrayScope	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^	public function testArrayScope() {$/;"	f
testDetectEqualLftsRghts	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^	public function testDetectEqualLftsRghts() {$/;"	f
testDetectInvalidLftsRghts	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^	public function testDetectInvalidLftsRghts() {$/;"	f
testDetectInvalidParents	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^	public function testDetectInvalidParents() {$/;"	f
testGenerateTreeListWithScope	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^	public function testGenerateTreeListWithScope() {$/;"	f
testMoveDownWithScope	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^	public function testMoveDownWithScope() {$/;"	f
testMoveUpWithScope	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^	public function testMoveUpWithScope() {$/;"	f
testRecoverFromMissingParent	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^	public function testRecoverFromMissingParent() {$/;"	f
testRecoverUsingParentMode	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^	public function testRecoverUsingParentMode() {$/;"	f
testSaveWithParentAndInvalidScope	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^	public function testSaveWithParentAndInvalidScope() {$/;"	f
testStringScope	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^	public function testStringScope() {$/;"	f
testTranslatingTree	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^	public function testTranslatingTree() {$/;"	f
translations	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^		$translations = array('title' => 'Title');$/;"	v
tree	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorScopedTest.php	/^		$tree = $this->Tree->save($data);$/;"	v
TreeBehaviorTest	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorTest.php	/^class TreeBehaviorTest extends PHPUnit_Framework_TestSuite {$/;"	c
suite	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorTest.php	/^		$suite = new CakeTestSuite('TreeBehavior tests');$/;"	v
suite	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorTest.php	/^	public static function suite() {$/;"	f
Tree	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^		$this->Tree = new $modelClass();$/;"	v
TreeBehaviorUuidTest	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^class TreeBehaviorUuidTest extends CakeTestCase {$/;"	c
backupGlobals	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^	public $backupGlobals = false;$/;"	v
data	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^		$data = $this->Tree->find('first', array($/;"	v
data	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^		$data = $this->Tree->find('first', array('conditions' => array($modelClass . '.name' => '1. Root')));$/;"	v
data	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^		$data = $this->Tree->find('first', array('fields' => array('id'), 'conditions' => array($modelClass . '.name' => '1.1.1')));$/;"	v
direct	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^		$direct = $this->Tree->children($parentId, true, array('name', $leftField, $rightField));$/;"	v
direct	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^		$direct = $this->Tree->children(null, true, array('name', $leftField, $rightField));$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^		$expected = array('1. Root', '_1.1', '__1.1.1', '__1.1.2', '_1.2', '__1.2.1', '__1.2.2');$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^		$expected = array(array($modelClass => array('name' => '1.1', $leftField => 2, $rightField => 5)),$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^		$expected = array(array($modelClass => array('name' => '1.1', $leftField => 2, $rightField => 7)),$/;"	v
expected	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^		$expected = array_merge($/;"	v
fixtures	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^	public $fixtures = array('core.uuid_tree');$/;"	v
id	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^		$id = String::uuid();$/;"	v
initialCount	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^		$initialCount = $this->Tree->find('count');$/;"	v
laterCount	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^		$laterCount = $this->Tree->find('count');$/;"	v
nodes	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^		$nodes = $this->Tree->find('list', array('order' => $leftField));$/;"	v
parent	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^		$parent = $this->Tree->find('first', array('conditions' => array($modelClass . '.name' => '1. Root')));$/;"	v
parentField	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^			$parentField => $data[$modelClass]['id'])$/;"	v
parentId	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^		$parentId = $parent[$modelClass]['id'];$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^		$result = $this->Tree->children($parentId, true, array('name', $leftField, $rightField));$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^		$result = $this->Tree->findByName('1.1.1');$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^		$result = $this->Tree->generateTreeList();$/;"	v
result	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^		$result = $this->Tree->save(array($modelClass => array($/;"	v
settings	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^	public $settings = array($/;"	v
testAddWithPreSpecifiedId	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^	public function testAddWithPreSpecifiedId() {$/;"	f
testChildren	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^	public function testChildren() {$/;"	f
testGenerateTreeListWithSelfJoin	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^	public function testGenerateTreeListWithSelfJoin() {$/;"	f
testMovePromote	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^	public function testMovePromote() {$/;"	f
testMoveWithWhitelist	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^	public function testMoveWithWhitelist() {$/;"	f
testNoAmbiguousColumn	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^	public function testNoAmbiguousColumn() {$/;"	f
testRemoveAndDeleteNoChildren	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^	public function testRemoveAndDeleteNoChildren() {$/;"	f
testRemoveNoChildren	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^	public function testRemoveNoChildren() {$/;"	f
total	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^		$total = $this->Tree->children(null, null, array('name', $leftField, $rightField));$/;"	v
validTree	lib/Cake/Test/Case/Model/Behavior/TreeBehaviorUuidTest.php	/^		$validTree = $this->Tree->verify();$/;"	v
Apple	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$Apple = new Apple();$/;"	v
Article	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$Article = new Article();$/;"	v
BehaviorCollectionTest	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^class BehaviorCollectionTest extends CakeTestCase {$/;"	c
Collection	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$Collection = new BehaviorCollection();$/;"	v
Comment	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$Comment = new Comment();$/;"	v
FirstBehavior	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^class FirstBehavior extends ModelBehavior {$/;"	c
Orangutan	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^class Orangutan extends Monkey {$/;"	c
Sample	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$Sample = new Sample();$/;"	v
SecondBehavior	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^class SecondBehavior extends FirstBehavior {$/;"	c
Test2Behavior	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^class Test2Behavior extends TestBehavior {$/;"	c
Test3Behavior	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^class Test3Behavior extends TestBehavior {$/;"	c
Test4Behavior	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^class Test4Behavior extends ModelBehavior {$/;"	c
Test5Behavior	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^class Test5Behavior extends ModelBehavior {$/;"	c
Test6Behavior	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^class Test6Behavior extends ModelBehavior {$/;"	c
Test7Behavior	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^class Test7Behavior extends ModelBehavior {$/;"	c
TestAliasBehavior	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^class TestAliasBehavior extends TestBehavior {$/;"	c
TestBehavior	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^class TestBehavior extends ModelBehavior {$/;"	c
ThirdBehavior	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^class ThirdBehavior extends FirstBehavior {$/;"	c
afterDelete	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function afterDelete(Model $model) {$/;"	f
afterFind	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function afterFind(Model $model, $results, $primary = false) {$/;"	f
afterSave	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function afterSave(Model $model, $created, $options = array()) {$/;"	f
afterValidate	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function afterValidate(Model $model) {$/;"	f
beforeDelete	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function beforeDelete(Model $model, $cascade = true) {$/;"	f
beforeFind	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function beforeFind(Model $model, $query = array()) {$/;"	f
beforeFind	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function beforeFind(Model $model, $query) {$/;"	f
beforeSave	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function beforeSave(Model $model, $options = array()) {$/;"	f
beforeTest	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function beforeTest(Model $model) {$/;"	f
beforeValidate	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function beforeValidate(Model $model, $options = array()) {$/;"	f
called	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public $called = array();$/;"	v
conditions	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$conditions = array('order' => 'Apple.id ASC');$/;"	v
current	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$current = $Apple->Behaviors->Test->settings['Apple'];$/;"	v
expected	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$expected = "Item.name = 'THE REMOTE' AND Location.name = 'the couch'";$/;"	v
expected	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$expected = "Item.name = 'the remote' AND Location.name = 'the couch'";$/;"	v
expected	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$expected = $Apple->find('all');$/;"	v
expected	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$expected = $Apple->find('all', $conditions);$/;"	v
expected	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$expected = $record;$/;"	v
expected	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$expected = 'working';$/;"	v
expected	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$expected = Hash::insert($record, 'Sample.name', 'sample99 modified before');$/;"	v
expected	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$expected = Hash::merge($record, array('Sample' => array('aftersave' => 'modified after on create')));$/;"	v
expected	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$expected = Hash::merge($record, array('Sample' => array('name' => 'sample99 modified before modified after on create')));$/;"	v
expected	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$expected = Hash::merge($record2, array('Sample' => array('aftersave' => 'modified after')));$/;"	v
expected	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$expected = Hash::merge($record2, array('Sample' => array('name' => 'sample1 modified after')));$/;"	v
expected	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$expected = array('Test', 'testMethod');$/;"	v
expected	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$expected = array('Test2', 'mapped', 'mappingRobotOnTheRoof');$/;"	v
expected	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$expected = array('Test2', 'resolveMethod');$/;"	v
expected	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$expected = array('beforeFind' => 'on', 'afterFind' => 'off', 'key' => 'value');$/;"	v
expected	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$expected = array_merge($current, array('mangle' => 'trigger mangled mangled'));$/;"	v
expected	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$expected = array_merge($current, array('mangle' => 'trigger mangled'));$/;"	v
expected2	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$expected2 = array($/;"	v
fixtures	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public $fixtures = array($/;"	v
mapMethods	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public $mapMethods = array('\/mappingRobot(\\w+)\/' => 'mapped');$/;"	v
mapMethods	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public $mapMethods = array('\/test(\\w+)\/' => 'testMethod', '\/look for\\s+(.+)\/' => 'speakEnglish');$/;"	v
mapped	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function mapped(Model $model, $method, $query) {$/;"	f
method	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$method = preg_replace('\/look for\\s+\/', 'Item.name = \\'', $method);$/;"	v
model	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$model = ClassRegistry::init('Orangutan');$/;"	v
onError	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function onError(Model $model, $error) {$/;"	f
query	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$query = preg_replace('\/^in\\s+\/', 'Location.name = \\'', $query);$/;"	v
record	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$record = array('Sample' => array('apple_id' => 6, 'name' => 'sample99'));$/;"	v
record2	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$record2 = $Sample->read(null, 1);$/;"	v
resolveMethod	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function resolveMethod(Model $model, $stuff) {$/;"	f
result	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$result = $Apple->Behaviors->dispatchMethod($Apple, 'wtf');$/;"	v
result	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$result = $Apple->Behaviors->loaded();$/;"	v
result	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$result = $Apple->find('all');$/;"	v
result	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$result = $Apple->find('all', $conditions);$/;"	v
result	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$result = $Apple->find('all', array('conditions' => array('Apple.id <' => '4')));$/;"	v
result	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$result = $Apple->find('all', array('fields' => array('Apple.id'), 'conditions' => array('Apple.id <' => '4')));$/;"	v
result	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$result = $Apple->save(array('name' => 'Genetically Modified Apple', 'color' => 'Orange'));$/;"	v
result	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$result = $Apple->save(array('name' => 'Regular Apple', 'color' => 'Red'));$/;"	v
result	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$result = $Apple->{'look for THE REMOTE'}('in the couch');$/;"	v
result	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$result = $Apple->{'look for the remote'}('in the couch');$/;"	v
result	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$result = $Article->find('first');$/;"	v
result	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$result = $Collection->hasMethod('mappingRobotOnTheRoof', true);$/;"	v
result	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$result = $Collection->hasMethod('resolveMethod', true);$/;"	v
result	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$result = $Collection->hasMethod('testMethod', true);$/;"	v
result	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$result = $Comment->find('first');$/;"	v
result	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$result = $Sample->save($record);$/;"	v
result2	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$result2 = $Apple->find('all', array($/;"	v
results	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$results = $Apple->delete(2, false);$/;"	v
results	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$results = $Apple->delete(3, false);$/;"	v
results	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$results = $Apple->delete(4);$/;"	v
settings	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$settings = $this->settings[$model->alias];$/;"	v
setup	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function setup(Model $model, $config = array()) {$/;"	f
setup	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function setup(Model $model, $config = null) {$/;"	f
speakEnglish	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function speakEnglish(Model $model, $method, $query) {$/;"	f
string	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$string = 'modified after';$/;"	v
testBehaviorAttachAndDetach	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function testBehaviorAttachAndDetach() {$/;"	f
testBehaviorBelongsToFindCallbacks	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function testBehaviorBelongsToFindCallbacks() {$/;"	f
testBehaviorBinding	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function testBehaviorBinding() {$/;"	f
testBehaviorDeleteCallbacks	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function testBehaviorDeleteCallbacks() {$/;"	f
testBehaviorFindCallbacks	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function testBehaviorFindCallbacks() {$/;"	f
testBehaviorHasManyFindCallbacks	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function testBehaviorHasManyFindCallbacks() {$/;"	f
testBehaviorHasOneFindCallbacks	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function testBehaviorHasOneFindCallbacks() {$/;"	f
testBehaviorMethodDispatching	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function testBehaviorMethodDispatching() {$/;"	f
testBehaviorMethodDispatchingWithData	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function testBehaviorMethodDispatchingWithData() {$/;"	f
testBehaviorOnErrorCallback	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function testBehaviorOnErrorCallback() {$/;"	f
testBehaviorOrderCallbacks	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function testBehaviorOrderCallbacks() {$/;"	f
testBehaviorSaveCallbacks	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function testBehaviorSaveCallbacks() {$/;"	f
testBehaviorToggling	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function testBehaviorToggling() {$/;"	f
testBehaviorValidateAfterCallback	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function testBehaviorValidateAfterCallback() {$/;"	f
testBehaviorValidateCallback	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function testBehaviorValidateCallback() {$/;"	f
testBehaviorValidateMethods	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function testBehaviorValidateMethods() {$/;"	f
testBindModelCallsInBehaviors	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function testBindModelCallsInBehaviors() {$/;"	f
testData	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function testData(Model $model) {$/;"	f
testDetachWithPluginNames	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function testDetachWithPluginNames() {$/;"	f
testHasMethodAsCallback	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function testHasMethodAsCallback() {$/;"	f
testHasMethodBasic	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function testHasMethodBasic() {$/;"	f
testHasMethodMappedMethods	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function testHasMethodMappedMethods() {$/;"	f
testInvalidBehaviorCausingCakeError	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function testInvalidBehaviorCausingCakeError() {$/;"	f
testLoadAlias	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function testLoadAlias() {$/;"	f
testLoadDisabled	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function testLoadDisabled() {$/;"	f
testMethod	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function testMethod(Model $model, $param = true) {$/;"	f
validateField	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^	public function validateField(Model $model, $field) {$/;"	f
wellBehaved	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$wellBehaved = $Apple->find('all');$/;"	v
wellBehaved	lib/Cake/Test/Case/Model/BehaviorCollectionTest.php	/^		$wellBehaved = $Apple->find('all', $conditions);$/;"	v
CakeSchemaTest	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^class CakeSchemaTest extends CakeTestCase {$/;"	c
MyAppSchema	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^class MyAppSchema extends CakeSchema {$/;"	c
New	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$New = new MyAppSchema();$/;"	v
One	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$One = new CakeSchema(array($/;"	v
Other	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$Other = $this->Schema->load(array('name' => 'MyOtherApp', 'path' => TMP . 'tests'));$/;"	v
Other	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$Other = $this->Schema->load(array('name' => 'TestPluginApp', 'plugin' => 'TestPlugin'));$/;"	v
OtherSchema	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$OtherSchema = new MyOtherAppSchema();$/;"	v
Schema	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$Schema = new CakeSchema();$/;"	v
Schema	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$Schema = new CakeSchema(array($/;"	v
Schema	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$this->Schema = new TestAppSchema();$/;"	v
SchemaComment	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^class SchemaComment extends CakeTestModel {$/;"	c
SchemaCrossDatabase	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^class SchemaCrossDatabase extends CakeTestModel {$/;"	c
SchemaCrossDatabaseFixture	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^class SchemaCrossDatabaseFixture extends CakeTestFixture {$/;"	c
SchemaDatatype	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^class SchemaDatatype extends CakeTestModel {$/;"	c
SchemaPost	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$SchemaPost = ClassRegistry::init('SchemaPost');$/;"	v
SchemaPost	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^class SchemaPost extends CakeTestModel {$/;"	c
SchemaPrefixAuthUser	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^class SchemaPrefixAuthUser extends CakeTestModel {$/;"	c
SchemaTag	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^class SchemaTag extends CakeTestModel {$/;"	c
TestAppSchema	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^class TestAppSchema extends CakeSchema {$/;"	c
Testdescribe	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^class Testdescribe extends CakeTestModel {$/;"	c
Two	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$Two = new CakeSchema(array($/;"	v
_foo	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	protected $_foo = array('bar');$/;"	v
belongsTo	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public $belongsTo = array('SchemaPost');$/;"	v
col	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$col = $Schema->tables['testdescribes']['int_not_null'];$/;"	v
col	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$col = $Schema->tables['testdescribes']['int_null'];$/;"	v
column	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$column = $this->db->buildColumn($col);$/;"	v
comments	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public $comments = array($/;"	v
compare	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$compare = $New->compare($this->Schema);$/;"	v
compare	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$compare = $New->compare($this->Schema, $tables);$/;"	v
compare	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$compare = $One->compare($Two);$/;"	v
compare	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$compare = $this->Schema->compare($old, $new);$/;"	v
config	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$config = $db->config;$/;"	v
config	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$config = ConnectionManager::enumConnectionObjects();$/;"	v
config	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$config = ConnectionManager::getDataSource('test')->config;$/;"	v
connection	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public $connection = 'test';$/;"	v
connections	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$connections = ConnectionManager::enumConnectionObjects();$/;"	v
datatypes	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public $datatypes = array($/;"	v
db	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$db = ConnectionManager::getDataSource('test');$/;"	v
db	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$db = ConnectionManager::getDataSource('test2');$/;"	v
expected	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$expected = array('comments', 'datatypes', 'posts', 'posts_tags', 'tags');$/;"	v
fields	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public $fields = array($/;"	v
file	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$file = file_get_contents(TMP . 'tests' . DS . 'schema.php');$/;"	v
fixture	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$fixture = new SchemaCrossDatabaseFixture();$/;"	v
fixtures	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public $fixtures = array($/;"	v
getVar	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public function getVar($var) {$/;"	f
hasAndBelongsToMany	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public $hasAndBelongsToMany = array('SchemaPost');$/;"	v
hasAndBelongsToMany	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public $hasAndBelongsToMany = array('SchemaTag');$/;"	v
hasMany	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public $hasMany = array('SchemaComment');$/;"	v
name	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public $name = 'CrossDatabase';$/;"	v
name	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public $name = 'MyApp';$/;"	v
new	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$new = array($/;"	v
old	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$old = array($/;"	v
posts	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$posts = array($/;"	v
posts	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public $posts = array($/;"	v
posts_tags	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public $posts_tags = array($/;"	v
read	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$read = $Schema->read(array($/;"	v
read	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$read = $this->Schema->read(array($/;"	v
read	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$read = $this->Schema->read(array('connection' => 'schema_prefix', 'models' => false));$/;"	v
records	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public $records = array($/;"	v
result	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$result = $this->Schema->generateTable('fields', $posts);$/;"	v
result	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$result = $this->Schema->generateTable('posts', $posts);$/;"	v
setUp	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public function setUp() {$/;"	f
setup	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public function setup($version) {$/;"	f
sql	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$sql = $db->createSchema($Schema);$/;"	v
table	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public $table = 'cross_database';$/;"	v
tablePrefix	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public $tablePrefix = 'auth_';$/;"	v
tables	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$tables = array($/;"	v
tags	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public $tags = array($/;"	v
tearDown	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public function tearDown() {$/;"	f
teardown	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public function teardown($version) {$/;"	f
testCompareEmptyStringAndNull	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public function testCompareEmptyStringAndNull() {$/;"	f
testCompareVarcharToDatetime	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public function testCompareVarcharToDatetime() {$/;"	f
testGenerateTable	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public function testGenerateTable() {$/;"	f
testSchemaComparison	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public function testSchemaComparison() {$/;"	f
testSchemaCreateTable	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public function testSchemaCreateTable() {$/;"	f
testSchemaLoading	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public function testSchemaLoading() {$/;"	f
testSchemaLoadingFromPlugin	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public function testSchemaLoadingFromPlugin() {$/;"	f
testSchemaName	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public function testSchemaName() {$/;"	f
testSchemaRead	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public function testSchemaRead() {$/;"	f
testSchemaReadWithAppModel	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public function testSchemaReadWithAppModel() {$/;"	f
testSchemaReadWithConfigPrefix	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public function testSchemaReadWithConfigPrefix() {$/;"	f
testSchemaReadWithCrossDatabase	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public function testSchemaReadWithCrossDatabase() {$/;"	f
testSchemaReadWithOddTablePrefix	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public function testSchemaReadWithOddTablePrefix() {$/;"	f
testSchemaReadWithPlugins	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public function testSchemaReadWithPlugins() {$/;"	f
testSchemaReadWithTablePrefix	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public function testSchemaReadWithTablePrefix() {$/;"	f
testSchemaWrite	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public function testSchemaWrite() {$/;"	f
testTableParametersAndIndexComparison	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public function testTableParametersAndIndexComparison() {$/;"	f
useDbConfig	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public $useDbConfig = 'test2';$/;"	v
useTable	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public $useTable = 'comments';$/;"	v
useTable	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public $useTable = 'cross_database';$/;"	v
useTable	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public $useTable = 'datatypes';$/;"	v
useTable	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public $useTable = 'posts';$/;"	v
useTable	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public $useTable = 'tags';$/;"	v
useTable	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^	public $useTable = 'users';$/;"	v
write	lib/Cake/Test/Case/Model/CakeSchemaTest.php	/^		$write = $this->Schema->write(array($/;"	v
ConnectionManagerTest	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^class ConnectionManagerTest extends CakeTestCase {$/;"	c
config	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^		$config = $source->config;$/;"	v
config	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^		$config = array('classname' => 'DboMysql', 'filename' => 'dbo' . DS . 'dbo_mysql');$/;"	v
config	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^		$config = array('datasource' => 'Database\/TestLocalDriver');$/;"	v
config	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^		$config = array('datasource' => 'Test2Source');$/;"	v
config	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^		$config = array('datasource' => 'TestPlugin.Database\/DboDummy');$/;"	v
config	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^		$config = array('datasource' => 'TestPlugin.Database\/TestDriver');$/;"	v
config	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^		$config = array('datasource' => 'TestPlugin.TestSource');$/;"	v
connection	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^		$connection = ConnectionManager::create($name, $config);$/;"	v
connection	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^		$connection = array('classname' => 'NonExistentDataSource', 'filename' => 'non_existent');$/;"	v
connections	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^		$connections = ConnectionManager::enumConnectionObjects();$/;"	v
connections	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^		$connections = array($/;"	v
connections	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^		$connections = array('default', 'test', 'test');$/;"	v
exists	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^			$exists = class_exists($connection['classname']);$/;"	v
expected	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^		$expected = array($/;"	v
loaded	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^			$loaded = ConnectionManager::loadDataSource($connection);$/;"	v
name	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^		$name = 'test_created_connection';$/;"	v
name	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^		$name = 'test_get_datasource';$/;"	v
name	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^		$name = 'test_local_source_and_plugin_driver';$/;"	v
name	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^		$name = 'test_plugin_source_and_driver';$/;"	v
name	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^		$name = 'test_plugin_source_and_local_driver';$/;"	v
name	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^		$name = 'test_source';$/;"	v
result	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^		$result = ConnectionManager::getSourceName($source);$/;"	v
source	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^		$source = ConnectionManager::create('another_test', array());$/;"	v
source	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^		$source = ConnectionManager::create(null, $config);$/;"	v
source	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^		$source = ConnectionManager::create(null, array());$/;"	v
source	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^		$source = ConnectionManager::getDataSource('test');$/;"	v
source	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^		$source = ConnectionManager::getDataSource('test_get_datasource');$/;"	v
source	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^		$source = new StdClass();$/;"	v
sources	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^		$sources = ConnectionManager::enumConnectionObjects();$/;"	v
sources	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^		$sources = ConnectionManager::sourceList();$/;"	v
tearDown	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^	public function tearDown() {$/;"	f
testConnectionData	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^	public function testConnectionData() {$/;"	f
testCreateDataSourceWithIntegrationTests	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^	public function testCreateDataSourceWithIntegrationTests() {$/;"	f
testDrop	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^	public function testDrop() {$/;"	f
testEnumConnectionObjects	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^	public function testEnumConnectionObjects() {$/;"	f
testGetDataSource	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^	public function testGetDataSource() {$/;"	f
testGetDataSourceException	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^	public function testGetDataSourceException() {$/;"	f
testGetLocalDataSourceAndPluginDriver	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^	public function testGetLocalDataSourceAndPluginDriver() {$/;"	f
testGetPluginDataSource	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^	public function testGetPluginDataSource() {$/;"	f
testGetPluginDataSourceAndLocalDriver	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^	public function testGetPluginDataSourceAndLocalDriver() {$/;"	f
testGetPluginDataSourceAndPluginDriver	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^	public function testGetPluginDataSourceAndPluginDriver() {$/;"	f
testGetSourceName	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^	public function testGetSourceName() {$/;"	f
testLoadDataSource	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^	public function testLoadDataSource() {$/;"	f
testLoadDataSourceException	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^	public function testLoadDataSourceException() {$/;"	f
testSourceList	lib/Cake/Test/Case/Model/ConnectionManagerTest.php	/^	public function testSourceList() {$/;"	f
CakeSessionTest	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^class CakeSessionTest extends CakeTestCase {$/;"	c
TestCacheSession	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^class TestCacheSession extends CacheSession {$/;"	c
TestCakeSession	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^class TestCakeSession extends CakeSession {$/;"	c
TestDatabaseSession	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^class TestDatabaseSession extends DatabaseSession {$/;"	c
_SESSION	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^		$_SESSION = null;$/;"	v
_gcDivisor	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	protected static $_gcDivisor;$/;"	v
_writeSession	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	protected function _writeSession() {$/;"	f
agent	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^		$agent = md5('http:\/\/randomdomainname.com' . Configure::read('Security.salt'));$/;"	v
data	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^		$data = $_SESSION;$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^		$expected = session_id();$/;"	v
fixtures	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public $fixtures = array('core.session');$/;"	v
id	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^		$id = TestCakeSession::id();$/;"	v
key	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^		$key = "a'] = 1; phpinfo(); \\$_SESSION['a";$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^		$result = TestCakeSession::id();$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^		$result = TestCakeSession::read($key);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^		$result = TestCakeSession::read('This.is.a.deep.array.my.friend');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^		$result = TestCakeSession::read('testing');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^		$result = TestCakeSession::read('testing.1');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^		$result = TestCakeSession::read();$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^		$result = TestCakeSession::write($key, 'haxored');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^		$result = TestCakeSession::write(array($/;"	v
setHost	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public static function setHost($host) {$/;"	f
setUp	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function setUp() {$/;"	f
setUserAgent	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public static function setUserAgent($value) {$/;"	f
setupBeforeClass	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public static function setupBeforeClass() {$/;"	f
tearDown	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function tearDown() {$/;"	f
teardownAfterClass	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public static function teardownAfterClass() {$/;"	f
testCakeSessionPathContainsQuestion	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testCakeSessionPathContainsQuestion() {$/;"	f
testCakeSessionPathEmpty	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testCakeSessionPathEmpty() {$/;"	f
testCheck	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testCheck() {$/;"	f
testCheckEmpty	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testCheckEmpty() {$/;"	f
testCheckKeyWithSpaces	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testCheckKeyWithSpaces() {$/;"	f
testCheckUserAgentFalse	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testCheckUserAgentFalse() {$/;"	f
testCheckUserAgentTrue	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testCheckUserAgentTrue() {$/;"	f
testCheckingSavedEmpty	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testCheckingSavedEmpty() {$/;"	f
testCookieTimeoutFallback	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testCookieTimeoutFallback() {$/;"	f
testDelete	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testDelete() {$/;"	f
testDestroy	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testDestroy() {$/;"	f
testId	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testId() {$/;"	f
testInvalidSessionRenew	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testInvalidSessionRenew() {$/;"	f
testKeyExploit	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testKeyExploit() {$/;"	f
testReadAndWriteWithCacheStorage	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testReadAndWriteWithCacheStorage() {$/;"	f
testReadAndWriteWithCakeStorage	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testReadAndWriteWithCakeStorage() {$/;"	f
testReadAndWriteWithCustomCacheConfig	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testReadAndWriteWithCustomCacheConfig() {$/;"	f
testReadAndWriteWithDatabaseStorage	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testReadAndWriteWithDatabaseStorage() {$/;"	f
testReadingSavedEmpty	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testReadingSavedEmpty() {$/;"	f
testReadyEmpty	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testReadyEmpty() {$/;"	f
testSessionConfigIniSetting	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testSessionConfigIniSetting() {$/;"	f
testSessionPath	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testSessionPath() {$/;"	f
testSessionTimeout	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testSessionTimeout() {$/;"	f
testSetHost	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testSetHost() {$/;"	f
testSetHostWithPort	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testSetHostWithPort() {$/;"	f
testSimpleRead	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testSimpleRead() {$/;"	f
testStarted	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testStarted() {$/;"	f
testUsingAppLibsHandler	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testUsingAppLibsHandler() {$/;"	f
testUsingPluginHandler	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testUsingPluginHandler() {$/;"	f
testValidBogusUserAgent	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testValidBogusUserAgent() {$/;"	f
testValidTimeExpiry	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testValidTimeExpiry() {$/;"	f
testWriteArray	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testWriteArray() {$/;"	f
testWriteEmptyKey	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testWriteEmptyKey() {$/;"	f
testWriteOverwriteStringValue	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^	public function testWriteOverwriteStringValue() {$/;"	f
timeoutSeconds	lib/Cake/Test/Case/Model/Datasource/CakeSessionTest.php	/^		$timeoutSeconds = Configure::read('Session.timeout') * 60;$/;"	v
DataSourceTest	lib/Cake/Test/Case/Model/Datasource/DataSourceTest.php	/^class DataSourceTest extends CakeTestCase {$/;"	c
Model	lib/Cake/Test/Case/Model/Datasource/DataSourceTest.php	/^		$this->Model = $this->getMock($/;"	v
Source	lib/Cake/Test/Case/Model/Datasource/DataSourceTest.php	/^		$this->Source = $this->getMock($/;"	v
TestSource	lib/Cake/Test/Case/Model/Datasource/DataSourceTest.php	/^class TestSource extends DataSource {$/;"	c
_schema	lib/Cake/Test/Case/Model/Datasource/DataSourceTest.php	/^	protected $_schema = array($/;"	v
calculate	lib/Cake/Test/Case/Model/Datasource/DataSourceTest.php	/^	public function calculate(Model $Model, $func, $params = array()) {$/;"	f
data	lib/Cake/Test/Case/Model/Datasource/DataSourceTest.php	/^		$data = array($/;"	v
describe	lib/Cake/Test/Case/Model/Datasource/DataSourceTest.php	/^	public function describe(Model $Model) {$/;"	f
expected	lib/Cake/Test/Case/Model/Datasource/DataSourceTest.php	/^		$expected = array($/;"	v
listSources	lib/Cake/Test/Case/Model/Datasource/DataSourceTest.php	/^	public function listSources() {$/;"	f
setUp	lib/Cake/Test/Case/Model/Datasource/DataSourceTest.php	/^	public function setUp() {$/;"	f
sourceName	lib/Cake/Test/Case/Model/Datasource/DataSourceTest.php	/^	public $sourceName = 'myapitest';$/;"	v
tearDown	lib/Cake/Test/Case/Model/Datasource/DataSourceTest.php	/^	public function tearDown() {$/;"	f
testCreate	lib/Cake/Test/Case/Model/Datasource/DataSourceTest.php	/^	public function testCreate() {$/;"	f
testDelete	lib/Cake/Test/Case/Model/Datasource/DataSourceTest.php	/^	public function testDelete() {$/;"	f
testRead	lib/Cake/Test/Case/Model/Datasource/DataSourceTest.php	/^	public function testRead() {$/;"	f
testUpdate	lib/Cake/Test/Case/Model/Datasource/DataSourceTest.php	/^	public function testUpdate() {$/;"	f
Apple	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$Apple = ClassRegistry::init('Apple');$/;"	v
Article	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$Article = ClassRegistry::init('Article');$/;"	v
Article	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$Article = ClassRegistry::init('Article', 'Comment', 'Tag');$/;"	v
Article	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$Article = new Article();$/;"	v
DataTest	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$DataTest = ClassRegistry::init('DataTest');$/;"	v
Dbo	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$this->Dbo = $this->getMock('Mysql', array('connect', '_execute', 'execute'));$/;"	v
Dbo	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$this->Dbo = $this->getMock('Mysql', array('connect', '_execute', 'execute', 'value'));$/;"	v
Dbo	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$this->Dbo = $this->getMock('Mysql', array('execute'), array($db->config));$/;"	v
Dbo	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$this->Dbo = $this->getMock('Mysql', array('execute'), array($test->config));$/;"	v
Dbo	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$this->Dbo = ConnectionManager::getDataSource('test');$/;"	v
Dbo	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public $Dbo = null;$/;"	v
Featured2	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$this->Featured2 = new Featured2();$/;"	v
Model	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$Model = ClassRegistry::init('Model');$/;"	v
Model	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$this->Model = $this->getMock('Article2', array('getDataSource'));$/;"	v
Model	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$this->Model = $this->getMock('TestModel', array('getDataSource'));$/;"	v
Model	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$this->Model = $this->getMock('TestModel9', array('getDataSource'));$/;"	v
Model	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$this->Model = new Article2();$/;"	v
Model	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$this->Model = new TestModel();$/;"	v
Model	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$this->Model = new TestModel4();$/;"	v
Model	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$this->Model = new TestModel5();$/;"	v
Model	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$this->Model = new TestModel8();$/;"	v
Model	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$this->Model = new TestModel9();$/;"	v
Model	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$this->Model = new TestModel;$/;"	v
MysqlTest	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^class MysqlTest extends CakeTestCase {$/;"	c
Schema	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$Schema = new CakeSchema();$/;"	v
_buildRelatedModels	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	protected function _buildRelatedModels(Model $model) {$/;"	f
_debug	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$this->_debug = Configure::read('debug');$/;"	v
_prepareAssociationQuery	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	protected function &_prepareAssociationQuery(Model $model, &$queryData, $binding) {$/;"	f
_queryData	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$_queryData = $queryData;$/;"	v
_scrubQueryData	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	protected function _scrubQueryData($data) {$/;"	f
assoc	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$assoc = $binding['model'];$/;"	v
assocData	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$assocData = $model->{$type}[$assoc];$/;"	v
assocTable	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$assocTable = $this->Dbo->fullTableName($this->Model->TestModel4TestModel7, true, true);$/;"	v
autoFixtures	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public $autoFixtures = false;$/;"	v
backup	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$backup = $this->Model->hasAndBelongsToMany['TestModel7'];$/;"	v
backup	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$backup = $this->Model->hasMany['TestModel6'];$/;"	v
base	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^			$base = array_fill_keys(array('conditions', 'fields', 'joins', 'order', 'limit', 'offset', 'group'), array());$/;"	v
base	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		static $base = null;$/;"	v
binding	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$binding = array('type' => 'belongsTo', 'model' => 'ArticleFeatured2');$/;"	v
binding	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$binding = array('type' => 'belongsTo', 'model' => 'TestModel4');$/;"	v
binding	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$binding = array('type' => 'belongsTo', 'model' => 'TestModel4Parent');$/;"	v
binding	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$binding = array('type' => 'belongsTo', 'model' => 'TestModel8');$/;"	v
binding	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$binding = array('type' => 'hasAndBelongsToMany', 'model' => 'TestModel7');$/;"	v
binding	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$binding = array('type' => 'hasMany', 'model' => 'TestModel6');$/;"	v
binding	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$binding = array('type' => 'hasOne', 'model' => 'TestModel5');$/;"	v
binding	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$binding = array('type' => 'hasOne', 'model' => 'TestModel9');$/;"	v
buildColumnUnsignedProvider	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function buildColumnUnsignedProvider() {$/;"	f
className	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^					$className = $assocData;$/;"	v
className	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^					$className = $assocData['className'];$/;"	v
className	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$className = $assocData['className'];$/;"	v
columnData	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$columnData = array($/;"	v
commentTable	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$commentTable = $this->Dbo->fullTableName('comments');$/;"	v
commentsTable	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$commentsTable = $this->Dbo->fullTableName('comments', false, false);$/;"	v
conditions	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$conditions = array($/;"	v
conditions	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$conditions = array('Artist.name' => 'JUDY AND MARY');$/;"	v
conditions	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$conditions = array('Artist.name' => 'JUDY and MARY');$/;"	v
conditions	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$conditions = array('Company.name like ' => $letter . '%');$/;"	v
conditions	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$conditions = array('Company.name similar to ' => 'a word');$/;"	v
conditions	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$conditions = array('MysqlModel.id' => '');$/;"	v
conditions	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$conditions = array('NOT' => array('two' => 2));$/;"	v
conditions	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$conditions = array('`Correction`.`source` collate utf8_bin' => array('kiwi', 'pear'));$/;"	v
conditions	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$conditions = array('comment_count >' => 2);$/;"	v
conditions	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$conditions = array('comment_count >' => 5);$/;"	v
conditions	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$conditions = array('distance >=' => 20);$/;"	v
conditions	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$conditions = array('id NOT' => array(1));$/;"	v
conditions	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$conditions = array('id' => array(1));$/;"	v
conditions	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$conditions = array('id' => array(2, 5, 6, 9, 12, 45, 78, 43, 76));$/;"	v
conditions	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$conditions = array('this_moment BETWEEN ? AND ?' => array(1, 2));$/;"	v
conditions	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$conditions = array('title' => 'user(s) data');$/;"	v
conditions	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$conditions = array('title' => 'user(s)');$/;"	v
conditions	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$conditions = array('title' => 'user(s,arg) data');$/;"	v
conditions	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$conditions = array('two' => 2);$/;"	v
data	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$data = array($/;"	v
data	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$data = array('2');$/;"	v
data	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$data = array('2.2');$/;"	v
data	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$data = array('2.2', '0stringme');$/;"	v
data	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$data = array('2.2', 3);$/;"	v
data	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$data = array('string one', 'string two');$/;"	v
data	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$data = array('string');$/;"	v
data	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$data = array(2);$/;"	v
data	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$data = array(2, '2');$/;"	v
data	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$data = array(2, '2.2');$/;"	v
data	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$data = array(2, '2.2', 'stringgme');$/;"	v
data	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$data = array(2, 'stringme');$/;"	v
data	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$data = array(2, 2.2);$/;"	v
data	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$data = array(2.2);$/;"	v
data	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$data = array(2.2, '0stringme');$/;"	v
data	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$data = array(2.2, '2.2');$/;"	v
data	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$data = array(2.2, 3);$/;"	v
data	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$data = file_get_contents(CAKE . 'Test' . DS . 'test_app' . DS . 'webroot' . DS . 'img' . DS . 'cake.power.gif');$/;"	v
date	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$date = date('Y-m-d H:i');$/;"	v
date	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$date = date('Y-m-d H:i:s');$/;"	v
db	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$db = $test->config['database'];$/;"	v
db	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$db = $this->Dbo->config['database'];$/;"	v
db	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$db = $this->getMock('Mysql', array('connect', '_execute'));$/;"	v
db	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$db = $this->getMock('Mysql', array('connect', '_execute', 'getVersion'));$/;"	v
db	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$db = ConnectionManager::getDatasource('test');$/;"	v
encoding	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$encoding = $db->getEncoding();$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " GROUP BY (YEAR(`Article`.`created`))";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " ORDER BY ADDTIME(`Event`.`time_begin`, '-06:00:00') ASC";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " ORDER BY `Dealer`.`id` = 7 desc, `Dealer`.`id` = 3 desc, `Dealer`.`title` asc";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE '2009-03-04' BETWEEN Model.field1 AND Model.field2";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE ((`User`.`user` = 'mariano') OR (`User`.`user` = 'nate'))";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE ((`Usergroup`.`permissions`) & 4) = 4";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE ((`score` BETWEEN '4' AND '5') AND (`score` > '20'))";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE ((`score` BETWEEN '4' AND '5') OR (`rating` > '20'))";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE ((`score` BETWEEN '4' AND '5') OR (`score` > '20'))";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE (`Post`.`created` < '" . $date . "') GROUP BY YEAR(`Post`.`created`), MONTH(`Post`.`created`)";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE (`Stats`.`clicks` * 100) \/ `Stats`.`views` > 50";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE (`Usergroup`.`permissions`) & 4 = 4";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE CAST(`Book`.`created` AS DATE) <= '2008-08-02'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE CAST(`Book`.`created` AS DATE) = '2008-08-02'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE DATEDIFF(NOW(),`Article`.`published`) < 1 && `Article`.`live`=1";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE MAX(`Post`.`rating`) > '50'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE MD5(CONCAT(`Reg`.`email`,`Reg`.`id`)) = 'blah'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE MD5(CONCAT(`Reg`.`email`,`Reg`.`id`)) IN ('blah', 'blahblah')";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE NOT (`Listing`.`expiration` BETWEEN '1' AND '100') AND" .$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE NOT (id = (1))";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE SUM(`Post`.`comments_count`) > '500'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE SUM(`Post`.`comments_count`) > 500";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `Aro`.`rght` = `Aro`.`lft` + 1.1";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `Article2`.`rate_sum` BETWEEN 0 AND 10";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `Article2`.`rate_sum` BETWEEN 1 AND 10";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `Article2`.`viewed` >= 0";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `Article2`.`viewed` >= 1";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `Artist`.`name` = 'JUDY AND MARY'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `Artist`.`name` = 'JUDY and MARY'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `Book`.`book_name` = 'Java(TM) '";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `Book`.`book_name` = 'Java(TM)'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `Book`.`id` = 0";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `Book`.`id` IS NULL";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `Candy`.`name` LIKE 'a' AND `HardCandy`.`name` LIKE 'c'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `Comment`.`id` = 'a'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `Company`.`name` like 'd.a%'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `Company`.`name` similar to 'a word'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `Correction`.`source` collate utf8_bin IN ('kiwi', 'pear')";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `HardCandy`.`name` LIKE 'a%' AND `Candy`.`name` LIKE '%c%'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `HardCandy`.`name` LIKE 'a' AND `Candy`.`name` LIKE 'c'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `HardCandy`.`name` LIKE 'to be or%' AND `Candy`.`name` LIKE '%not to be%'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `Listing`.`beds` >= 0";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `MysqlModel`.`id` IS NULL";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `Person`.`name` || ' ' || `Person`.`surname` ILIKE '%mark%'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `Post`.`modified` >= 'DATE_SUB(NOW(), INTERVAL 7 DAY)'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `Post`.`modified` >= DATE_SUB(NOW(), INTERVAL 7 DAY)";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `Post`.`name` = 'mad(g)ik'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `Post`.`title` = '1.1'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `Post`.`title` = 1.1";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `ProjectBid`.`project_id` = `Project`.`id`";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `Project`.`removed` = '0'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `Project`.`removed` = '1'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `Project`.`removed` IS NOT NULL";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `Project`.`removed` IS NULL";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `TestModel`.`field` = 'gribe$@()lu'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `User`.`first_name` = 'Firstname' AND `User`.`last_name` = 'Lastname'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `User`.`id` != 0 AND `User`.`user` LIKE '%arr%'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `client_id` > 20";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `id` IN (2, 5, 6, 9, 12, 45, 78, 43, 76)";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `published` = 1 AND ((`score` > '2') OR (`score` > '20'))";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `score` != '20'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `score` > '20'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `score` BETWEEN 90.1 AND 95.7";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `score` IN (1, 2, 10)";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `score` IS NOT NULL";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `score` IS NULL";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `title` = 'user(s) data'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `title` = 'user(s)'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `title` = 'user(s,arg) data'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE `title` LIKE '%hello'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE file = 'index.html'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE id = (1)";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE lower(`Article`.`title`) = 'secrets'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE lower(`Article`.`title`) LIKE 'a%'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = " WHERE score BETWEEN 90.1 AND 95.7";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = "'0'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = "'00010010001'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = "'1,2'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = "'4713e29446'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = "(SELECT COUNT(*) FROM $commentsTable WHERE `Article`.`id` = `$commentsTable`.`article_id`) > 5";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = "MAX(SELECT COUNT(*) FROM $commentsTable WHERE `Article`.`id` = `$commentsTable`.`article_id`) AS `comment_count`";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = ' LEFT JOIN ' . $testModel4Table . ' AS `TestModel4` ON (`TestModel5`.`test_model4_id` = `TestModel4`.`id`)';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = ' LEFT JOIN ' . $testModel5Table . ' AS `TestModel5` ON (`TestModel5`.`test_model4_id` = `TestModel4`.`id`)';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = ' ORDER BY 3963.191 * id ASC';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = ' ORDER BY `Anuncio`.`destaque` & 2 DESC';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = ' ORDER BY `Property`.`sale_price` IS NULL ASC';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = ' WHERE ((MATCH(`Video`.`title`) AGAINST(\\'My Search*\\' IN BOOLEAN MODE) * 2) + (MATCH(`Video`.`description`) AGAINST(\\'My Search*\\' IN BOOLEAN MODE) * 0.4) + (MATCH(`Video`.`tags`) AGAINST(\\'My Search*\\' IN BOOLEAN MODE) * 1.5))';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = ' WHERE ASCII(SUBSTRING(keyword, 1, 1)) BETWEEN 65 AND 90';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = ' WHERE NOT `Post`.`extended_title` IS NULL AND NOT `Post`.`title` IS NULL AND `Post`.`title` != "" AND SPOON(SUM(`Post`.`comments_count`) + 1.1) > 500';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = ' WHERE NOT `Post`.`title_extended` IS NULL AND NOT `Post`.`title` IS NULL AND `Post`.`title_extended` != `Post`.`title`';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = ' WHERE NOT `Post`.`title` IS NULL AND NOT `Post`.`extended_title` IS NULL AND SUM(`Post`.`comments_count`) > 500';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = ' WHERE SUM(`Post`.`comments_count`) > 500 AND NOT `Post`.`title` IS NULL AND NOT `Post`.`extended_title` IS NULL';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = ' WHERE `Member`.`email` = "mariano@cricava.com" AND `Member`.`user` LIKE "mariano.iglesias%"';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = ' WHERE `Member`.`email` = "mariano@cricava.com"';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = ' WHERE `Member`.`email` = \\'mariano@cricava.com\\' AND `Member`.`user` LIKE \\'mariano.iglesias%\\'';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = ' WHERE `Member`.`email` = \\'mariano@cricava.com\\'';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = ' WHERE `Sportstaette`.`sportstaette` LIKE "%ru%" AND `Sportstaette`.`sportstaettenart_id` = 2';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = ' WHERE `Sportstaette`.`sportstaettenart_id` = 2 AND `Sportstaette`.`sportstaette` LIKE "%ru%"';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = ' WHERE file = "index.html"';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = '(1 + 1) = 2';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = '5,2';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = '5,3';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = 'COUNT(NOW()) AS `count`';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = 'NOT ((1 + 1) = 2)';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = 'NOW() BETWEEN 1 AND 2';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = 'NULL';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = '`created` timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = '`created` timestamp DEFAULT CURRENT_TIMESTAMP';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = '`int_field` int(11) COLLATE GOOD NOT NULL';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = '`int_field` int(11) NOT NULL';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = '`modified` timestamp NULL';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = '`testName`  CHARACTER SET utf8 COLLATE utf8_unicode_ci DEFAULT NULL';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = '`testName`  DEFAULT NULL COMMENT \\'test\\'';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = '`testName` varchar(255) DEFAULT NULL';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = 'biginteger';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = 'boolean';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = 'decimal';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = 'float';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = 'integer';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = 'string';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = 'text';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = 1.2;$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = 10010001;$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = 11;$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = 255;$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = 2;$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = 4;$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = array("(`Provider`.`star_total` \/ `Provider`.`total_ratings`) as `rating`");$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = array("CONCAT(REPEAT(' ', COUNT(`Parent`.`name`) - 1), Node.name) AS name", "`Node`.`created`");$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = array("`Node`.`created`", "CONCAT(REPEAT(' ', COUNT(`Parent`.`name`) - 1), Node.name) AS name");$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = array($this->Dbo->fullTableName('apples', false, false) => array($/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = array('COUNT(*)');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = array('DISTINCT `Vendor`.`id`', '`Vendor`.`name`');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = array('FULLTEXT KEY `MyFtIndex` (`name`, `description`)');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = array('KEY `MyMultiTextIndex` (`text_field1`(20), `text_field2`(20))');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = array('KEY `MyTextIndex` (`text_field`(20))');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = array('MAX(`Model`.`field`) As Max');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = array('PRIMARY KEY  (`id`)');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = array('PRIMARY' => array('column' => 'id', 'unique' => 1));$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = array('SUM(`Thread`.`unread_buyer`) AS `sum_unread_buyer`');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = array('UNIQUE KEY `MyIndex` (`id`)');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = array('UNIQUE KEY `MyIndex` (`id`, `name`)');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = array('`BinaryTest`.`data`', '(SUM(id)) AS  `BinaryTest_$_other__field`');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = array('`Model`.`field` AS `AnotherName`');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = array('`TestModel`.`field` AS `AnotherName`');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = array('`TestModel`.`name`', 'count(*)');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = array('`Vendor`.`id`', 'COUNT(`Model`.`vendor_id`) AS `Vendor`.`count`');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = array('`field` AS `AnotherName`');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = array('count(*)', '`TestModel`.`name`');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = array('dayofyear(now())');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = array('id', 'client_id', 'name', 'login', 'passwd', 'addr_1', 'addr_2', 'zip_code', 'city', 'country', 'phone', 'fax', 'url', 'email', 'comments', 'last_login', 'created', 'updated');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = array(array($/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expected = null;$/;"	v
expression	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$expression = $this->Dbo->expression("CASE Sample.id WHEN 1 THEN 'Id One' ELSE 'Other Id' END AS case_col");$/;"	v
external	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^				$external = isset($assocData['external']);$/;"	v
external	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$external = isset($assocData['external']);$/;"	v
fields	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$fields = array('id', 'distance');$/;"	v
fixtures	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public $fixtures = array($/;"	v
letter	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$letter = $letter = 'd.a';$/;"	v
linkModel	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^				$linkModel = $this->Model->Category2->{$assoc};$/;"	v
linkModel	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$linkModel = $model->{$className};$/;"	v
mockDbo	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$mockDbo = $this->getMock('Mysql', array('connect', '_execute', 'getVersion'));$/;"	v
model	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$model = ClassRegistry::init('Inno');$/;"	v
model	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$model = new Apple();$/;"	v
model	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$model = new CakeTestModel(array('name' => 'BinaryTest', 'ds' => 'test'));$/;"	v
model	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$model = new CakeTestModel(array('table' => 'binary_tests', 'ds' => 'test', 'name' => 'BinaryTest'));$/;"	v
model	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$model = new CakeTestModel(array('table' => 'testdescribes', 'name' => 'Testdescribes'));$/;"	v
model	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$this->model = ClassRegistry::init('MysqlTestModel');$/;"	v
model	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$this->model = new CakeTestModel(array($/;"	v
model8Table	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$model8Table = $test->fullTableName($this->Model->TestModel8);$/;"	v
modelTable	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$modelTable = $this->Dbo->fullTableName($this->Model);$/;"	v
name	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$name = $this->Dbo->fullTableName('bigint');$/;"	v
name	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$name = $this->Dbo->fullTableName('simple');$/;"	v
name	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$name = $this->Dbo->fullTableName('with_a_key');$/;"	v
name	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$name = $this->Dbo->fullTableName('with_compound_keys');$/;"	v
name	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$name = $this->Dbo->fullTableName('with_compound_text_index');$/;"	v
name	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$name = $this->Dbo->fullTableName('with_fulltext');$/;"	v
name	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$name = $this->Dbo->fullTableName('with_multiple_compound_keys');$/;"	v
name	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$name = $this->Dbo->fullTableName('with_text_index');$/;"	v
name	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$name = $this->Dbo->fullTableName('with_two_keys');$/;"	v
nested	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$nested = $this->Dbo->useNestedTransactions;$/;"	v
params	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$params = $this->_prepareAssociationQuery($this->Model, $queryData, $binding);$/;"	v
params	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$params = &$this->_prepareAssociationQuery($this->Featured2, $queryData, $binding);$/;"	v
params	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$params = &$this->_prepareAssociationQuery($this->Model, $queryData, $binding);$/;"	v
qe	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$qe = $this->Dbo->endQuote;$/;"	v
qs	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$qs = $this->Dbo->startQuote;$/;"	v
query	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$query = $this->Dbo->buildAssociationQuery($this->Model->Category2, $queryData);$/;"	v
query	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$query = $this->Dbo->getConnection()->prepare($result);$/;"	v
query	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$query = 'SELECT ' . implode(',', $this->Dbo->fields($Article, null, array('id', 'comment_count'))) .$/;"	v
query	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$query = 'SELECT * FROM ' . $this->Dbo->fullTableName('articles') . ' WHERE 1 = 1';$/;"	v
queryData	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$queryData = $this->_scrubQueryData($queryData);$/;"	v
queryData	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$queryData = array('conditions' => array('TestModel4.name !=' => 'mariano'));$/;"	v
queryData	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$queryData = array('conditions' => array('TestModel4Parent.name !=' => 'mariano'));$/;"	v
queryData	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$queryData = array('conditions' => array('TestModel5.name !=' => 'mariano'));$/;"	v
queryData	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$queryData = array('conditions' => array());$/;"	v
queryData	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$queryData = array('fields' => array('MIN(`TestModel5`.`test_model4_id`)'));$/;"	v
queryData	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$queryData = array('fields' => array('`TestModel5`.`id`', '`TestModel5`.`name`'));$/;"	v
queryData	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$queryData = array('fields' => array('`TestModel5`.`id`, `TestModel5`.`name`'));$/;"	v
queryData	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$queryData = array('fields' => array('`TestModel5`.`name`'));$/;"	v
queryData	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$queryData = array('fields' => array('`TestModel5`.`name`', '`TestModel5`.`created`'));$/;"	v
queryData	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$queryData = array();$/;"	v
queryResult	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$queryResult = $this->getMock('PDOStatement');$/;"	v
restore	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$restore = $this->Dbo->columns;$/;"	v
restore	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$restore = setlocale(LC_NUMERIC, 0);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^						$result = $this->Dbo->generateAssociationQuery($this->Model->Category2, $linkModel, $type, $assoc, $assocData, $queryData, $external);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^					$result = $this->Dbo->generateAssociationQuery($this->Model->Category2, $linkModel, $type, $assoc, $assocData, $queryData, $external);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $Article->find('all');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $DataTest->find('all');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $db->getCharsetName('utf8_unicode_ci');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $mockDbo->index($name, false);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $model->find('first');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $model->getDataSource()->describe($model);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $test->fields($this->Model, null, $this->Model->escapeField());$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $test->read($this->Model, array($/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->alterSchema($schema2->compare($schema1));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->alterSchema($schemaA->compare($schemaC));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->alterSchema($schemaB->compare($schemaA));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->alterSchema($schemaC->compare($schemaB));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->buildAssociationQuery($this->Featured2, $queryData);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->buildAssociationQuery($this->Model, $queryData);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->buildColumn($data);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->buildIndex($data);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->buildJoinStatement($queryData['joins'][0]);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->buildTableParameters($data);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->calculate($/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->calculate($Article, 'count', array('this_moment'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->calculate($Article, 'max', array('comment_count'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->calculate($this->Model, 'count');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->calculate($this->Model, 'count', array('Model.id', 'id_count'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->calculate($this->Model, 'count', array('id'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->calculate($this->Model, 'count', array('id', 'id_count'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->calculate($this->Model, 'max', array('Model.id', 'id'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->calculate($this->Model, 'max', array('`Model`.`id`', 'id'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->calculate($this->Model, 'max', array('id'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->calculate($this->Model, 'min', 'left');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->calculate($this->Model, 'min', array('`Model`.`id`', 'id'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->column('bigint(20)');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->column('boolean');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->column('decimal');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->column('decimal(14,7) unsigned');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->column('double unsigned');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->column('float unsigned');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->column('float');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->column('int(11) unsigned');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->column('int(11)');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->column('numeric');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->column('text');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->column('tinyint(1)');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->column('varchar(50)');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions("(Post.created < '" . $date . "') GROUP BY YEAR(Post.created), MONTH(Post.created)");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions("Aro.rght = Aro.lft + 1.1");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions("Candy.name LIKE 'a' AND HardCandy.name LIKE 'c'");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions("Comment.id = 'a'");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions("HardCandy.name LIKE 'a' AND Candy.name LIKE 'c'");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions("Post.title = '1.1'");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions("ProjectBid.project_id = Project.id");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions("SUM(Post.comments_count) > 500");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions("User.id != 0 AND User.user LIKE '%arr%'");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions("file = 'index.html'");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions("lower(Article.title) LIKE 'a%'");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions("score BETWEEN 90.1 AND 95.7");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions($conditions);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions($conditions, true, false, $Article);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions($conditions, true, true, $Article);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions($conditions, true, true, $this->model);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions('((MATCH(Video.title) AGAINST(\\'My Search*\\' IN BOOLEAN MODE) * 2) + (MATCH(Video.description) AGAINST(\\'My Search*\\' IN BOOLEAN MODE) * 0.4) + (MATCH(Video.tags) AGAINST(\\'My Search*\\' IN BOOLEAN MODE) * 1.5))');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions('DATEDIFF(NOW(),Article.published) < 1 && Article.live=1');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions('I18n__title_pt-br.content = "test"');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions('Member.email = "mariano@cricava.com" AND Member.user LIKE "mariano.iglesias%"');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions('Member.email = "mariano@cricava.com"');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions('Member.email = \\'mariano@cricava.com\\' AND Member.user LIKE \\'mariano.iglesias%\\'');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions('Member.email = \\'mariano@cricava.com\\'');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions('Member.name = \\'(lu\\'');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions('Member.name = \\'(mariano word) iglesias\\'');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions('Member.name = \\'(mariano) iglesias\\'');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions('Member.name = \\'(mariano)\\'');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions('Member.name = \\'(mariano)iglesias\\'');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions('Member.name = \\'(mariano.iglesias) CakePHP\\'');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions('Member.name = \\'(mariano.iglesias)\\'');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions('Member.name = \\')lu\\'');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions('Member.name = \\'Mariano Iglesias (mariano.iglesias) CakePHP\\'');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions('Member.name = \\'Mariano Iglesias (mariano.iglesias)\\'');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions('Member.name = \\'va(lu)\\'');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions('Member.name = \\'va(lu)e\\'');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions('Member.name = \\'va(lu\\'');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions('Member.name = \\'va)lu\\'');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions('Model.field=NOW()-3600');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions('NOT Post.extended_title IS NULL AND NOT Post.title IS NULL AND Post.title != "" AND SPOON(SUM(Post.comments_count) + 1.1) > 500');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions('NOT Post.title IS NULL AND NOT Post.extended_title IS NULL AND SUM(Post.comments_count) > 500');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions('NOT Post.title_extended IS NULL AND NOT Post.title IS NULL AND Post.title_extended != Post.title');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions('NOW() - Model.created < 7200');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions('NOW()-Model.created < 7200');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions('SUM(Post.comments_count) > 500 AND NOT Post.title IS NULL AND NOT Post.extended_title IS NULL');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions('Sportstaette.sportstaette LIKE "%ru%" AND Sportstaette.sportstaettenart_id = 2');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions('Sportstaette.sportstaettenart_id = 2 AND Sportstaette.sportstaette LIKE "%ru%"');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions('file = "index.html"');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array("Book.book_name" => 'Java(TM) '));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array("Book.book_name" => 'Java(TM)'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array("Book.id" => 0));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array("Book.id" => null));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array($/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('((Usergroup.permissions) & 4)' => 4));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('(Usergroup.permissions) & 4' => 4));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('Article2.rate_sum BETWEEN ? AND ?' => array('0', '10')), true, true, $this->Model);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('Article2.rate_sum BETWEEN ? AND ?' => array('1', '10')), true, true, $this->Model);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('Article2.rate_sum BETWEEN ? AND ?' => array(0, 10)), true, true, $this->Model);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('Article2.viewed >=' => '0'), true, true, $this->Model);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('Article2.viewed >=' => '1'), true, true, $this->Model);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('Article2.viewed >=' => 0), true, true, $this->Model);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('Candy.name LIKE' => 'a', 'HardCandy.name LIKE' => 'c'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('HardCandy.name LIKE' => 'a%', 'Candy.name LIKE' => '%c%'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('HardCandy.name LIKE' => 'a', 'Candy.name LIKE' => 'c'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('HardCandy.name LIKE' => 'to be or%', 'Candy.name LIKE' => '%not to be%'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('Listing.beds >=' => 0));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('MAX(Post.rating) >' => '50'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('MD5(CONCAT(Reg.email,Reg.id))' => 'blah'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('Member.name' => '(lu'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('Member.name' => '(mariano word) iglesias'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('Member.name' => '(mariano) iglesias'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('Member.name' => '(mariano)'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('Member.name' => '(mariano)iglesias'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('Member.name' => '(mariano.iglesias) CakePHP'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('Member.name' => '(mariano.iglesias)'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('Member.name' => ')lu'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('Member.name' => 'Mariano Iglesias (mariano.iglesias) CakePHP'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('Member.name' => 'Mariano Iglesias (mariano.iglesias)'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('Member.name' => 'Mariano'), true, false);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('Member.name' => 'va(lu'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('Member.name' => 'va(lu)'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('Member.name' => 'va(lu)e'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('Member.name' => 'va)lu'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('OR' => array($/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('Post.modified >= DATE_SUB(NOW(), INTERVAL 7 DAY)'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('Post.modified >=' => 'DATE_SUB(NOW(), INTERVAL 7 DAY)'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('Post.name' => 'mad(g)ik'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('Post.title' => 1.1));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('Post.title' => 1.1), true, true, new Post());$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('SUM(Post.comments_count) >' => '500'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('Stereo.type' => 'in dash speakers'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('TestModel.field =' => 'gribe$@()lu'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('and' => array($/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('client_id >' => '20'), true, true, new TestModel());$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('id <>' => '8'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('lower(Article.title)' => 'secrets'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('or' => array($/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('score !=' => '20'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('score !=' => array()));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('score >' => '20'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('score BETWEEN ? AND ?' => array(90.1, 95.7)));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('score' => array()));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('score' => array(1, 2, 10)));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('score' => array(2 => 1, 2, 10)));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array('title LIKE' => '%hello'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array(), true, false);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array(array('Project.removed !=' => null)));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array(array('Project.removed' => false)));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array(array('Project.removed' => null)));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->conditions(array(array('Project.removed' => true)));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->createSchema($schema);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->createSchema($schema, 'no_indexes');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->createSchema($schema, 'primary_flag_has_index');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->createSchema($schema, 'primary_index');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->createSchema($schemaA);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->describe($model);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->describe($model->useTable);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->dropSchema($Schema, 'non_existing');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->dropSchema($Schema, 'table');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->execute($query);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->execute($query, array('log' => false));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fetchAll($query);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fetchAll('SELECT name FROM ' . $this->Dbo->fullTableName('apples') . ' ORDER BY id');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fetchRow($result);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->field($this->Dbo->fullTableName('apples', false, false), 'SELECT color, name FROM ' . $this->Dbo->fullTableName('apples') . ' ORDER BY id');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($Article);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($Article, $Article->alias, $result);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($Article, null, $fields);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($Article, null, array('*'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($Article, null, array('Article.*'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($Article, null, array('Article.this_moment', 'Article.title'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($Article, null, array('Article.title', 'Article.this_moment'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($Article, null, array('this_moment', 'title'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($Article, null, array());$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($model, null, array('data', 'other__field'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($this->Model, 'Foo', array($/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($this->Model, 'Other');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($this->Model, 'Post');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($this->Model, 'Post', "2.2,COUNT(*), SUM(Something.else) as sum, Node.created, CONCAT(REPEAT(' ', COUNT(Parent.name) - 1), Node.name) AS name,Post.title,Post.1,1.1");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($this->Model, 'Post', "CONCAT(REPEAT(' ', COUNT(Parent.name) - 1), Node.name) AS name, Node.created");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($this->Model, 'Post', "Node.created, CONCAT(REPEAT(' ', COUNT(Parent.name) - 1), Node.name) AS name");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($this->Model, 'Vendor', "DISTINCT Vendor.id, Vendor.name");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($this->Model, 'Vendor', "Vendor.id, COUNT(Model.vendor_id) AS `Vendor`.`count`");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($this->Model, 'Vendor', "`Vendor`.`id`, COUNT(`Model`.`vendor_id`) AS `Vendor`.`count`");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($this->Model, null, "(`Provider`.`star_total` \/ `Provider`.`total_ratings`) as `rating`");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($this->Model, null, 'COUNT(*)');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($this->Model, null, 'ROUND(Rating.rate_total \/ Rating.rate_count,2) AS rating');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($this->Model, null, 'ROUND(`Rating`.`rate_total` \/ `Rating`.`rate_count`,2) AS rating');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($this->Model, null, 'SUM(Thread.unread_buyer) AS ' . $this->Dbo->name('sum_unread_buyer'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($this->Model, null, 'count(*), name');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($this->Model, null, 'name, count(*)');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($this->Model, null, 'round( (3.55441 * fooField), 3 ) AS test');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($this->Model, null, array("id", $expression));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($this->Model, null, array($/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($this->Model, null, array('MAX(Model.field) As Max'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($this->Model, null, array('Model.field AS AnotherName'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($this->Model, null, array('dayofyear(now())'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($this->Model, null, array('field AS AnotherName'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($this->Model, null, array(), false);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->fields($this->model);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->generateAssociationQuery($this->Featured2, $params['linkModel'], $params['type'], $params['assoc'], $params['assocData'], $queryData, $params['external']);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->generateAssociationQuery($this->Model, $params['linkModel'], $params['type'], $params['assoc'], $params['assocData'], $_queryData, $params['external']);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->generateAssociationQuery($this->Model, $params['linkModel'], $params['type'], $params['assoc'], $params['assocData'], $queryData, $params['external']);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->getCharsetName('cp1250_general_ci');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->getCharsetName('utf8_unicode_ci');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->group('this_year', $Article);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->index('bigint', false);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->index('simple', false);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->index('with_a_key', false);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->index('with_compound_keys', false);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->index('with_compound_text_index', false);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->index('with_fulltext', false);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->index('with_multiple_compound_keys', false);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->index('with_text_index', false);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->index('with_two_keys', false);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->lastAffected();$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->length("enum('test','me','now')");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->length("set('a','b','cd')");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->length('datetime');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->length('decimal(5,2)');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->length('float(5,3)');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->length('int(11)');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->length('text');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->length('varchar(255)');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->length(false);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->listDetailedSources($this->Dbo->fullTableName('altertest', false, false));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->listDetailedSources('imaginary');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->listDetailedSources();$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->order("(Model.field1 + Model.field2) * Model.field3");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->order("(Post.views) * Post.views");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->order("(Post.views)");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->order("(Post.views)*Post.views");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->order("3963.191 * id");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->order("ADDTIME(Event.time_begin, '-06:00:00') ASC");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->order("Anuncio.destaque & 2 DESC");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->order("Dealer.id = 7 desc, Dealer.id = 3 desc, Dealer.title asc");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->order("Model.name+0 ASC");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->order("Page.name = 'view' DESC");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->order("title desc, id desc");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->order("title, id");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->order(array("Page.name" => "='test' DESC"));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->order(array("Post.title" => 'asc', "Post.id" => 'desc'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->order(array("title desc, id desc"));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->order(array("title"));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->order(array("title", "id"));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->order(array('(Model.field > 100) DESC', 'Model.field ASC'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->order(array('Property.sale_price IS NULL'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->order(array(array("Post.title" => 'asc', "Post.id" => 'desc')));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->order(array(array("title")));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->order(array(array('title'), array('id')));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->rawQuery('SELECT color, name FROM ' . $this->Dbo->fullTableName('apples'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->read($Apple, array($/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->read($Article, array($/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->readTableParameters($this->Dbo->fullTableName($tableName, false, false));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->renderStatement('delete', array('fields' => 'value=2', 'table' => 'table', 'conditions' => 'WHERE 1=1', 'alias' => ''));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->renderStatement('delete', array('fields' => 'value=2', 'table' => 'table', 'conditions' => 'WHERE 1=1', 'alias' => 'alias', 'joins' => ''));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->renderStatement('select', array($/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->renderStatement('update', array('fields' => 'value=2', 'table' => 'table', 'conditions' => 'WHERE 1=1', 'alias' => ''));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->renderStatement('update', array('fields' => 'value=2', 'table' => 'table', 'conditions' => 'WHERE 1=1', 'alias' => 'alias', 'joins' => ''));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value(' 1.234 ', 'float');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value(' abc ', 'string');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value('', 'boolean');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value('', 'integer');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value('00010010001');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value('0123', 'integer');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value('0x123', 'integer');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value('0x123ABC', 'integer');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value('1,2', 'float');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value('1,234', 'float');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value('1.234', 'float');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value('1.234e+5', 'float');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value('1.234e05', 'boolean');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value('1.234e05', 'float');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value('123', 'integer');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value('123', 'string');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value('4713e29446');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value('FFF', 'integer');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value('a bc', 'string');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value('abc', 'boolean');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value('abc', 'integer');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value('abc', 'string');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value('false', 'boolean');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value('true', 'boolean');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value(0, 'boolean');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value(1, 'boolean');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value(1.2, 'float');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value(1.234, 'boolean');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value(1.234, 'float');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value(1.234, 'string');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value(10010001);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value(123, 'integer');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value(123, 'string');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value(3.141593);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value(false, 'boolean');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value(null, 'boolean');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->Dbo->value(true, 'boolean');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->db->value(0.987654321, 'float');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->db->value(123456.45464748, 'float');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->db->value(1234567.11, 'float');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->db->value(2.2E-54);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->db->value(2.2E-54, 'float');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->db->value(3.141593, 'float');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->model->find('first');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = $this->model->schema();$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = array_merge(array('linkModel' => &$linkModel), compact('type', 'assoc', 'assocData', 'external'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$result = new StdClass;$/;"	v
resultMock	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$resultMock = $this->getMock('PDOStatement', array('fetch'));$/;"	v
schema	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$schema = $Model->schema();$/;"	v
schema	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$schema = $db->config['database'];$/;"	v
schema	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$schema = new CakeSchema();$/;"	v
schema	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$schema = new CakeSchema(array($/;"	v
schema1	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$schema1 = new CakeSchema(array($/;"	v
schema2	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$schema2 = new CakeSchema(array($/;"	v
schemaA	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$schemaA = new CakeSchema(array($/;"	v
schemaB	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$schemaB = new CakeSchema(array($/;"	v
schemaC	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$schemaC = new CakeSchema(array($/;"	v
search	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$search = "LEFT JOIN $model8Table AS `TestModel8` ON " .$/;"	v
setUp	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function setUp() {$/;"	f
startTime	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$this->startTime = microtime(true);$/;"	v
table	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$table = $this->Dbo->fullTableName($tableName);$/;"	v
table	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$table = $this->Dbo->fullTableName('altertest');$/;"	v
tableName	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$tableName = $this->Dbo->fullTableName('apples', false, false);$/;"	v
tableName	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$tableName = 'tinyint_' . uniqid();$/;"	v
tables	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$tables = $db->listSources();$/;"	v
tearDown	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function tearDown() {$/;"	f
test	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$test = $this->getMock('Mysql', array('connect', '_execute', 'execute'));$/;"	v
test	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$test = ConnectionManager::getDatasource('test');$/;"	v
testAlterSchemaIndexes	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testAlterSchemaIndexes() {$/;"	f
testAlteringTableParameters	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testAlteringTableParameters() {$/;"	f
testAlteringTwoTables	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testAlteringTwoTables() {$/;"	f
testArrayConditionsOneElement	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testArrayConditionsOneElement() {$/;"	f
testArrayConditionsParsing	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testArrayConditionsParsing() {$/;"	f
testArrayConditionsParsingComplexKeys	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testArrayConditionsParsingComplexKeys() {$/;"	f
testBlobSaving	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testBlobSaving() {$/;"	f
testBuildColumn	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testBuildColumn() {$/;"	f
testBuildColumn2	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testBuildColumn2() {$/;"	f
testBuildColumnBadType	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testBuildColumnBadType() {$/;"	f
testBuildColumnUnsigned	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testBuildColumnUnsigned($data, $expected) {$/;"	f
testBuildIndex	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testBuildIndex() {$/;"	f
testBuildTableParameters	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testBuildTableParameters() {$/;"	f
testCalculations	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testCalculations() {$/;"	f
testColumn	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testColumn() {$/;"	f
testComplexSortExpression	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testComplexSortExpression() {$/;"	f
testConditionsOptionalArguments	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testConditionsOptionalArguments() {$/;"	f
testConditionsWithComplexVirtualFields	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testConditionsWithComplexVirtualFields() {$/;"	f
testConditionsWithModel	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testConditionsWithModel() {$/;"	f
testConditionsWithReplacements	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testConditionsWithReplacements() {$/;"	f
testCreateSchemaAutoPrimaryKey	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testCreateSchemaAutoPrimaryKey() {$/;"	f
testDeleteStatements	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testDeleteStatements() {$/;"	f
testDescribe	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testDescribe() {$/;"	f
testDescribeGettingFieldParameters	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testDescribeGettingFieldParameters() {$/;"	f
testDropSchemaNoSchema	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testDropSchemaNoSchema() {$/;"	f
testExceptionOnBrokenConnection	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testExceptionOnBrokenConnection() {$/;"	f
testExecute	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testExecute() {$/;"	f
testFieldDoubleEscaping	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testFieldDoubleEscaping() {$/;"	f
testFieldParsing	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testFieldParsing() {$/;"	f
testFieldsWithComplexVirtualFields	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testFieldsWithComplexVirtualFields() {$/;"	f
testFieldsWithExpression	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testFieldsWithExpression() {$/;"	f
testGenerateAssociationQueryBelongsTo	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testGenerateAssociationQueryBelongsTo() {$/;"	f
testGenerateAssociationQueryBelongsToWithConditions	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testGenerateAssociationQueryBelongsToWithConditions() {$/;"	f
testGenerateAssociationQueryHasAndBelongsToMany	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testGenerateAssociationQueryHasAndBelongsToMany() {$/;"	f
testGenerateAssociationQueryHasAndBelongsToManyWithConditions	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testGenerateAssociationQueryHasAndBelongsToManyWithConditions() {$/;"	f
testGenerateAssociationQueryHasAndBelongsToManyWithOffsetAndLimit	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testGenerateAssociationQueryHasAndBelongsToManyWithOffsetAndLimit() {$/;"	f
testGenerateAssociationQueryHasAndBelongsToManyWithPageAndLimit	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testGenerateAssociationQueryHasAndBelongsToManyWithPageAndLimit() {$/;"	f
testGenerateAssociationQueryHasMany	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testGenerateAssociationQueryHasMany() {$/;"	f
testGenerateAssociationQueryHasManyAndAggregateFunction	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testGenerateAssociationQueryHasManyAndAggregateFunction() {$/;"	f
testGenerateAssociationQueryHasManyWithConditions	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testGenerateAssociationQueryHasManyWithConditions() {$/;"	f
testGenerateAssociationQueryHasManyWithFields	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testGenerateAssociationQueryHasManyWithFields() {$/;"	f
testGenerateAssociationQueryHasManyWithLimit	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testGenerateAssociationQueryHasManyWithLimit() {$/;"	f
testGenerateAssociationQueryHasManyWithOffsetAndLimit	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testGenerateAssociationQueryHasManyWithOffsetAndLimit() {$/;"	f
testGenerateAssociationQueryHasManyWithPageAndLimit	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testGenerateAssociationQueryHasManyWithPageAndLimit() {$/;"	f
testGenerateAssociationQueryHasOne	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testGenerateAssociationQueryHasOne() {$/;"	f
testGenerateAssociationQueryHasOneWithConditions	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testGenerateAssociationQueryHasOneWithConditions() {$/;"	f
testGenerateAssociationQuerySelfJoin	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testGenerateAssociationQuerySelfJoin() {$/;"	f
testGenerateAssociationQuerySelfJoinWithConditions	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testGenerateAssociationQuerySelfJoinWithConditions() {$/;"	f
testGenerateAssociationQuerySelfJoinWithConditionsInBelongsToBinding	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testGenerateAssociationQuerySelfJoinWithConditionsInBelongsToBinding() {$/;"	f
testGenerateAssociationQuerySelfJoinWithConditionsInHasOneBinding	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testGenerateAssociationQuerySelfJoinWithConditionsInHasOneBinding() {$/;"	f
testGenerateInnerJoinAssociationQuery	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testGenerateInnerJoinAssociationQuery() {$/;"	f
testGetCharsetName	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testGetCharsetName() {$/;"	f
testGetCharsetNameCaching	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testGetCharsetNameCaching() {$/;"	f
testGetEncoding	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testGetEncoding() {$/;"	f
testGetVersion	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testGetVersion() {$/;"	f
testHasAny	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testHasAny() {$/;"	f
testHypenInStringConditionsAndFieldNames	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testHypenInStringConditionsAndFieldNames() {$/;"	f
testIndexDetection	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testIndexDetection() {$/;"	f
testIndexOnMySQL4Output	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testIndexOnMySQL4Output() {$/;"	f
testIntrospectType	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testIntrospectType() {$/;"	f
testLastAffected	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testLastAffected() {$/;"	f
testLength	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testLength() {$/;"	f
testListDetailedSourcesNamed	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testListDetailedSourcesNamed() {$/;"	f
testListSources	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testListSources() {$/;"	f
testLocalizedFloats	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testLocalizedFloats() {$/;"	f
testMixedConditionsParsing	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testMixedConditionsParsing() {$/;"	f
testModel4Table	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$testModel4Table = $this->Dbo->fullTableName($this->Model->TestModel4, true, true);$/;"	v
testModel5Table	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$testModel5Table = $this->Dbo->fullTableName($this->Model->TestModel5);$/;"	v
testModel8Table	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$testModel8Table = $this->Model->TestModel8->getDataSource()->fullTableName($this->Model->TestModel8);$/;"	v
testNestedTransaction	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testNestedTransaction() {$/;"	f
testOrderParsing	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testOrderParsing() {$/;"	f
testParenthesisInArrayConditions	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testParenthesisInArrayConditions() {$/;"	f
testParenthesisInStringConditions	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testParenthesisInStringConditions() {$/;"	f
testQuotesInStringConditions	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testQuotesInStringConditions() {$/;"	f
testQuoting	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testQuoting() {$/;"	f
testReadCustomJoinsAfterGeneratedJoins	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testReadCustomJoinsAfterGeneratedJoins() {$/;"	f
testReadTableParameters	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testReadTableParameters() {$/;"	f
testReadVirtualFieldsWithNewLines	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testReadVirtualFieldsWithNewLines() {$/;"	f
testRealQueries	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testRealQueries() {$/;"	f
testRenderStatement	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testRenderStatement() {$/;"	f
testSchema	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testSchema() {$/;"	f
testSchemaUnsigned	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testSchemaUnsigned() {$/;"	f
testScientificNotation	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testScientificNotation() {$/;"	f
testSelectDistict	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testSelectDistict() {$/;"	f
testStringConditionsParsing	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testStringConditionsParsing() {$/;"	f
testTinyintCasting	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testTinyintCasting() {$/;"	f
testTruncateStatements	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testTruncateStatements() {$/;"	f
testTwoColumnsWithPrimaryKey	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testTwoColumnsWithPrimaryKey() {$/;"	f
testUpdateStatements	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testUpdateStatements() {$/;"	f
testVirtualFieldSeparators	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testVirtualFieldSeparators() {$/;"	f
testVirtualFields	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testVirtualFields() {$/;"	f
testVirtualFieldsComplexRead	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testVirtualFieldsComplexRead() {$/;"	f
testVirtualFieldsFetch	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testVirtualFieldsFetch() {$/;"	f
testVirtualFieldsInCalculate	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testVirtualFieldsInCalculate() {$/;"	f
testVirtualFieldsInConditions	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testVirtualFieldsInConditions() {$/;"	f
testVirtualFieldsInGroup	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^	public function testVirtualFieldsInGroup() {$/;"	f
type	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$type = $binding['type'];$/;"	v
types	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$types = $this->Dbo->fieldParameters['unsigned']['types'];$/;"	v
usersTable	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$usersTable = $test->fullTableName('users');$/;"	v
version	lib/Cake/Test/Case/Model/Datasource/Database/MysqlTest.php	/^		$version = $this->Dbo->getVersion();$/;"	v
Article	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$Article = ClassRegistry::init('Article');$/;"	v
Article	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$Article = new Article();$/;"	v
Article	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$Article = new Article;$/;"	v
Dbo	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$this->Dbo = $this->getMock('Postgres', array('execute'), array($db->config));$/;"	v
Dbo	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$this->Dbo = ConnectionManager::getDataSource('test');$/;"	v
Dbo	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public $Dbo = null;$/;"	v
Dbo2	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$this->Dbo2 = new DboPostgresTestDb($this->Dbo->config, false);$/;"	v
Dbo2	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public $Dbo2 = null;$/;"	v
DboPostgresTestDb	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^class DboPostgresTestDb extends Postgres {$/;"	c
New	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$New = new CakeSchema($modified);$/;"	v
New	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$New = new CakeSchema(array($/;"	v
Old	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$Old = new CakeSchema($default);$/;"	v
Old	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$Old = new CakeSchema(array($/;"	v
PostgresClientTestModel	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^class PostgresClientTestModel extends Model {$/;"	c
PostgresTest	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^class PostgresTest extends CakeTestCase {$/;"	c
PostgresTestModel	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^class PostgresTestModel extends Model {$/;"	c
_execute	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	protected function _execute($sql, $params = array(), $prepareOptions = array()) {$/;"	f
autoFixtures	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public $autoFixtures = false;$/;"	v
belongsTo	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public $belongsTo = array($/;"	v
config2	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$config2 = $this->Dbo->config;$/;"	v
data	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$data = '%PDF-1.3$/;"	v
db	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$db = $this->Dbo;$/;"	v
db	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$db = ConnectionManager::getDatasource('test');$/;"	v
db1	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$db1 = ConnectionManager::getDataSource('test');$/;"	v
dbo2	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$dbo2 = new Postgres($config2, true);$/;"	v
default	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$default = array($/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$expected = $fields;$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$expected = ' ORDER BY "title" DESC NULLS FIRST, "body" DESC';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$expected = '"foo" text DEFAULT \\'FOO\\'';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$expected = '"foo" varchar(100) DEFAULT \\'FOO\\'';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$expected = 'biginteger';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$expected = array('COUNT(DISTINCT "Article"."id")');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$expected = array('COUNT(DISTINCT "id")');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$expected = array('COUNT(DISTINCT FUNC("id"))');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$expected = array(array('r' => date('d\/m\/Y')));$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$expected = array_merge($fields, array($/;"	v
fields	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$fields = array($/;"	v
find	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function find($conditions = null, $fields = null, $order = null, $recursive = null) {$/;"	f
findAll	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function findAll($conditions = null, $fields = null, $order = null, $recursive = null) {$/;"	f
fixtures	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public $fixtures = array('core.user', 'core.binary_test', 'core.comment', 'core.article',$/;"	v
getLastQuery	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function getLastQuery() {$/;"	f
indexes	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$indexes = $this->Dbo->index('altertest');$/;"	v
model	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$model = new AppModel(array('name' => 'BinaryTest', 'ds' => 'test'));$/;"	v
model	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$model = new Article();$/;"	v
model	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$model = new CakeTestModel(array('table' => 'alter_posts', 'ds' => 'test'));$/;"	v
model	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$model = new Model(array('name' => 'Datatype', 'table' => 'datatypes', 'ds' => 'test'));$/;"	v
model	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$this->model = new PostgresTestModel();$/;"	v
modified	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$modified = $default;$/;"	v
name	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$name = $this->Dbo->fullTableName('index_test', false, false);$/;"	v
name	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$name = $this->Dbo->fullTableName('index_test_2', false, false);$/;"	v
new	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$new = $result->fetch(PDO::FETCH_ASSOC);$/;"	v
original	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$original = $result->fetch(PDO::FETCH_ASSOC);$/;"	v
password	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$password = '5f4dcc3b5aa765d61d8327deb882cf99';$/;"	v
query	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$query = $this->Dbo->alterSchema($New->compare($Old));$/;"	v
query	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$query = $this->Dbo->alterSchema(array($/;"	v
r	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$r = $dbo2->fetchRow('SELECT now()::date AS "r"');$/;"	v
restore	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$restore = setlocale(LC_NUMERIC, 0);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $Article->find('count', array($/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $Article->find('first');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $Article->updateAll(array('title' => "'Awesome'"), array('title' => 'Third Article'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $db->limit('0');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $db->limit('10');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $db->limit('FARTS', 'BOOGERS');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $db->limit(10, 300000000000000000000000000000);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $db->limit(20, 10);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $db1->createSchema($schema, 'bigserial_tests');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $db1->createSchema($schema, 'datatype_tests');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $model->find('first');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $model->schema();$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $schema->read(array($/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $this->Dbo->alterSchema($New->compare($Old), 'alter_posts');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $this->Dbo->createSchema($schema);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $this->Dbo->fields($Article, null, array('COUNT(DISTINCT Article.id)'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $this->Dbo->fields($Article, null, array('COUNT(DISTINCT FUNC(id))'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $this->Dbo->fields($Article, null, array('COUNT(DISTINCT id)'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $this->Dbo->fields($this->model);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $this->Dbo->fields($this->model, null, 'PostgresTestModel.*');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $this->Dbo->fields($this->model, null, array('*', 'AnotherModel.id', 'AnotherModel.name'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $this->Dbo->fields($this->model, null, array('*', 'PostgresClientTestModel.*'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $this->Dbo->getEncoding();$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $this->Dbo->index($name);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $this->Dbo->order(array('title' => 'DESC NULLS FIRST', 'body' => 'DESC'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $this->Dbo->query($query);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $this->Dbo->query($this->Dbo->createSchema($Old));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $this->Dbo->rawQuery("SELECT currval('$sequence')");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $this->Dbo->rawQuery("SELECT nextval('$sequence')");$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $this->Dbo->setEncoding('EUC_JP'); \/* 'EUC_JP' is right character code name in PostgreSQL *\/$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $this->Dbo->setEncoding('UTF8');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $this->Dbo2->column('bigint');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $this->db->alterSchema($schema2->compare($schema1));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $this->db->value(3.14);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = $this->db->value(3.141593, 'float');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = array('name' => 'foo', 'type' => 'string', 'length' => 100, 'default' => 'FOO');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result = array('name' => 'foo', 'type' => 'text', 'length' => 100, 'default' => 'FOO');$/;"	v
result2	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result2 = $db1->createSchema($schema, 'datatype_tests');$/;"	v
result2	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$result2 = $schema->read(array($/;"	v
schema	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$schema = $db->config['schema'];$/;"	v
schema	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$schema = new CakeSchema();$/;"	v
schema	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$schema = new CakeSchema(array('connection' => 'test'));$/;"	v
schema	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function schema($field = false) {$/;"	f
schema1	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$schema1 = new CakeSchema(array($/;"	v
schema2	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$schema2 = new CakeSchema(array($/;"	v
schema3	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$schema3 = new CakeSchema(array($/;"	v
scientificNotation	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$scientificNotation = sprintf('%.1E', 300000000000000000000000000000);$/;"	v
sequence	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$sequence = $this->Dbo->getSequence($table);$/;"	v
setUp	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function setUp() {$/;"	f
simulated	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public $simulated = array();$/;"	v
table	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$table = $db1->fullTableName('users', false);$/;"	v
table	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$table = $this->Dbo->fullTableName($model, false);$/;"	v
tearDown	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function tearDown() {$/;"	f
testAlterIndexes	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function testAlterIndexes() {$/;"	f
testAlterSchema	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function testAlterSchema() {$/;"	f
testAlterSchemaBooleanToIntegerField	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function testAlterSchemaBooleanToIntegerField() {$/;"	f
testAlterSchemaRenameTo	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function testAlterSchemaRenameTo() {$/;"	f
testAlteringTwoTables	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function testAlteringTwoTables() {$/;"	f
testBinaryDataIntegrity	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function testBinaryDataIntegrity() {$/;"	f
testBooleanDefaultFalseInSchema	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function testBooleanDefaultFalseInSchema() {$/;"	f
testBooleanNormalization	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function testBooleanNormalization() {$/;"	f
testCakeSchema	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function testCakeSchema() {$/;"	f
testCakeSchemaBigserial	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function testCakeSchemaBigserial() {$/;"	f
testColumnParsing	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function testColumnParsing() {$/;"	f
testColumnUseLength	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function testColumnUseLength() {$/;"	f
testDateAndTimeAsNull	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function testDateAndTimeAsNull() {$/;"	f
testEncoding	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function testEncoding() {$/;"	f
testFieldQuoting	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function testFieldQuoting() {$/;"	f
testIndexGeneration	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function testIndexGeneration() {$/;"	f
testLastInsertIdMultipleInsert	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function testLastInsertIdMultipleInsert() {$/;"	f
testLimit	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function testLimit() {$/;"	f
testLocalizedFloats	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function testLocalizedFloats() {$/;"	f
testNestedTransaction	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function testNestedTransaction() {$/;"	f
testOrderAdditionalParams	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function testOrderAdditionalParams() {$/;"	f
testQuoteDistinctInFunction	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function testQuoteDistinctInFunction() {$/;"	f
testRegexpOperatorConditionsParsing	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function testRegexpOperatorConditionsParsing() {$/;"	f
testResetSequence	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function testResetSequence() {$/;"	f
testSchemaIndexSyntax	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function testSchemaIndexSyntax() {$/;"	f
testSettings	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function testSettings() {$/;"	f
testTruncateStatements	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function testTruncateStatements() {$/;"	f
testUpdateAllWithNonQualifiedConditions	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function testUpdateAllWithNonQualifiedConditions() {$/;"	f
testValueQuoting	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function testValueQuoting() {$/;"	f
testVirtualFieldAsAConstant	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function testVirtualFieldAsAConstant() {$/;"	f
testVirtualFields	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public function testVirtualFields() {$/;"	f
useTable	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^	public $useTable = false;$/;"	v
values	lib/Cake/Test/Case/Model/Datasource/Database/PostgresTest.php	/^		$values = array($/;"	v
Dbo	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$this->Dbo = ConnectionManager::getDataSource('test');$/;"	v
Dbo	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^	public $Dbo = null;$/;"	v
DboSqliteTestDb	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^class DboSqliteTestDb extends Sqlite {$/;"	c
Model	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$Model = ClassRegistry::init('Uuid');$/;"	v
Model	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$Model = new Model(array($/;"	v
Model	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$Model = new Model(array('name' => 'UuidTest', 'ds' => 'test', 'table' => 'uuid_tests'));$/;"	v
SqliteTest	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^class SqliteTest extends CakeTestCase {$/;"	c
User	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$User = ClassRegistry::init('User');$/;"	v
_execute	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^	protected function _execute($sql, $params = array(), $prepareOptions = array()) {$/;"	f
autoFixtures	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^	public $autoFixtures = false;$/;"	v
data	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$data = array($/;"	v
db	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$db = $this->Dbo;$/;"	v
db	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$db = new Sqlite(array_merge($this->Dbo->config, array('database' => TMP . $dbName)));$/;"	v
dbName	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$dbName = 'db' . rand() . '$(*%&).db';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$expected = '"huge" bigint(20) NOT NULL';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$expected = '"id" bigint(20) NOT NULL PRIMARY KEY';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$expected = '"int_field" integer NOT NULL';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$expected = '"name" varchar(20) NOT NULL';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$expected = '"testName" integer(10) DEFAULT 10 NOT NULL';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$expected = '"testName" varchar(20) DEFAULT NULL COLLATE NOCASE';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$expected = '"testName" varchar(20) DEFAULT \\'test-value\\' NOT NULL';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$expected = array($/;"	v
fileName	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$fileName = '_' . preg_replace('\/[^A-Za-z0-9_\\-+]\/', '_', TMP . $dbName) . '_list';$/;"	v
fixtures	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^	public $fixtures = array('core.user', 'core.uuid', 'core.datatype');$/;"	v
getLastQuery	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^	public function getLastQuery() {$/;"	f
model	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$model = new User();$/;"	v
name	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$name = $this->Dbo->fullTableName('with_a_key', false, false);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$result = $Model->read();$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$result = $User->find('first', array($/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$result = $db->limit('0');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$result = $db->limit('10');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$result = $db->limit('FARTS', 'BOOGERS');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$result = $db->limit(10, 300000000000000000000000000000);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$result = $db->limit(20, 10);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$result = $this->Dbo->buildColumn($data);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$result = $this->Dbo->describe($Model);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$result = $this->Dbo->describe($Model->useTable);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$result = $this->Dbo->index($name);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$result = Cache::read($fileName, '_cake_model_');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$result = Cache::read('test_users', '_cake_model_');$/;"	v
scientificNotation	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$scientificNotation = sprintf('%.1E', 300000000000000000000000000000);$/;"	v
setUp	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^	public function setUp() {$/;"	f
simulated	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^	public $simulated = array();$/;"	v
tableName	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^		$tableName = 'uuid_tests';$/;"	v
tearDown	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^	public function tearDown() {$/;"	f
testBuildColumn	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^	public function testBuildColumn() {$/;"	f
testCacheKeyName	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^	public function testCacheKeyName() {$/;"	f
testDatatypes	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^	public function testDatatypes() {$/;"	f
testDescribe	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^	public function testDescribe() {$/;"	f
testDescribeWithUuidPrimaryKey	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^	public function testDescribeWithUuidPrimaryKey() {$/;"	f
testIndex	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^	public function testIndex() {$/;"	f
testLimit	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^	public function testLimit() {$/;"	f
testNestedTransaction	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^	public function testNestedTransaction() {$/;"	f
testTableListCacheDisabling	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^	public function testTableListCacheDisabling() {$/;"	f
testUuidPrimaryKeyInsertion	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^	public function testUuidPrimaryKeyInsertion() {$/;"	f
testVirtualFieldWithFunction	lib/Cake/Test/Case/Model/Datasource/Database/SqliteTest.php	/^	public function testVirtualFieldWithFunction() {$/;"	f
Dbo	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$this->Dbo = ConnectionManager::getDataSource('test');$/;"	v
SqlserverClientTestModel	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^class SqlserverClientTestModel extends CakeTestModel {$/;"	c
SqlserverTableDescription	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$SqlserverTableDescription = new SqlserverTestResultIterator(array($/;"	v
SqlserverTest	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^class SqlserverTest extends CakeTestCase {$/;"	c
SqlserverTestDb	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^class SqlserverTestDb extends Sqlserver {$/;"	c
SqlserverTestModel	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^class SqlserverTestModel extends CakeTestModel {$/;"	c
SqlserverTestResultIterator	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^class SqlserverTestResultIterator extends ArrayIterator {$/;"	c
User	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$User = ClassRegistry::init('User');$/;"	v
_execute	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^	protected function _execute($sql, $params = array(), $prepareOptions = array()) {$/;"	f
_fieldMappings	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$this->_fieldMappings = array();$/;"	v
_matchRecords	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^	protected function _matchRecords(Model $model, $conditions = null) {$/;"	f
_schema	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^	protected $_schema = array($/;"	v
autoFixtures	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^	public $autoFixtures = false;$/;"	v
belongsTo	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^	public $belongsTo = array($/;"	v
clearFieldMappings	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^	public function clearFieldMappings() {$/;"	f
closeCursor	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^	public function closeCursor() {$/;"	f
column	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$column = array($/;"	v
column	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$column = array('name' => 'body', 'type' => 'text');$/;"	v
column	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$column = array('name' => 'client_id', 'type' => 'integer', 'null' => false, 'default' => '0', 'length' => '11');$/;"	v
column	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$column = array('name' => 'client_id', 'type' => 'integer', 'null' => true);$/;"	v
column	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$column = array('name' => 'id', 'type' => 'integer', 'null' => false, 'default' => '', 'length' => '8', 'key' => 'primary');$/;"	v
column	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$column = array('name' => 'name', 'type' => 'string', 'null' => false, 'default' => '', 'length' => '255');$/;"	v
column	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$column = array('name' => 'name', 'type' => 'string', 'null' => false, 'default' => null, 'length' => '255');$/;"	v
column	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$column = array('name' => 'name', 'type' => 'string', 'null' => false, 'length' => '255');$/;"	v
column	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$column = array('name' => 'name', 'type' => 'string', 'null' => true, 'default' => '', 'length' => '255');$/;"	v
column	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$column = array('name' => 'name', 'type' => 'string', 'null' => true, 'default' => null, 'length' => '255');$/;"	v
column	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$column = array('type' => 'integer', 'name' => 'client_id');$/;"	v
column	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$column = array('type' => 'string', 'name' => 'name');$/;"	v
conditions	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$conditions = array('SqlserverTestModel.updated <' => date('2009-01-01 00:00:00'));$/;"	v
current	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$current = $this->current();$/;"	v
db	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$this->db = new SqlserverTestDb($this->Dbo->config);$/;"	v
db	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^	public $db = null;$/;"	v
describe	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^	public function describe($model) {$/;"	f
dummyModel	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$dummyModel = $this->model;$/;"	v
executeResultsStack	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^	public $executeResultsStack = array();$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$expected = "''";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$expected = "'1,2'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$expected = "1.2";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$expected = "[checked] bit DEFAULT '1'";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$expected = "[huge] bigint";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$expected = $fields;$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$expected = 'NULL';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$expected = '[body] nvarchar(MAX)';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$expected = '[client_id] int DEFAULT 0 NOT NULL';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$expected = '[client_id] int NULL';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$expected = '[id] int IDENTITY (1, 1) NOT NULL';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$expected = '[name] nvarchar(255) DEFAULT \\'\\' NOT NULL';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$expected = '[name] nvarchar(255) DEFAULT \\'\\'';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$expected = '[name] nvarchar(255) NOT NULL';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$expected = '[name] nvarchar(255) NULL';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$expected = array('ALTER TABLE items ADD CONSTRAINT client_id UNIQUE([client_id], [period_id]);');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$expected = array('DISTINCT [Car].[country_code] AS [Car__country_code]');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$expected = array_merge($fields, array($/;"	v
fetch	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^	public function fetch() {$/;"	f
fields	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$fields = array($/;"	v
fields	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$fields = array('SqlserverTestModel.client_id' => '[SqlserverTestModel].[client_id] + 1');$/;"	v
find	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^	public function find($conditions = null, $fields = null, $order = null, $recursive = null) {$/;"	f
fixtures	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^	public $fixtures = array('core.user', 'core.category', 'core.author', 'core.post');$/;"	v
getLastQuery	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^	public function getLastQuery() {$/;"	f
getPrimaryKey	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^	public function getPrimaryKey($model) {$/;"	f
indexes	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$indexes = array($/;"	v
indexes	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$indexes = array('client_id' => array('column' => 'client_id'));$/;"	v
indexes	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$indexes = array('client_id' => array('column' => array('client_id', 'period_id'), 'unique' => 1));$/;"	v
model	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$this->model = new SqlserverTestModel();$/;"	v
query	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$query = $this->Dbo->execute($sql);$/;"	v
query	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$query = array($/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$result = $query->fetch();$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$result = $this->db->buildColumn($column);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$result = $this->db->buildIndex($indexes, 'items');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$result = $this->db->describe($dummyModel);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$result = $this->db->fields($this->model);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$result = $this->db->fields($this->model, null, 'DISTINCT Car.country_code');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$result = $this->db->fields($this->model, null, 'SqlserverTestModel.*');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$result = $this->db->fields($this->model, null, array('*', 'AnotherModel.id', 'AnotherModel.name'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$result = $this->db->fields($this->model, null, array('*', 'SqlserverClientTestModel.*'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$result = $this->db->fields($this->model, null, array('DISTINCT Car.country_code'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$result = $this->db->getLastQuery();$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$result = $this->db->getPrimaryKey($this->model);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$result = $this->db->value('', 'binary');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$result = $this->db->value('', 'float');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$result = $this->db->value('', 'integer');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$result = $this->db->value('1,2', 'float');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$result = $this->db->value(1.2, 'float');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$result = $this->db->value(null, 'string');$/;"	v
results	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$results = $User->find('all', $query);$/;"	v
schema	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$schema = $this->model->schema();$/;"	v
setUp	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^	public function setUp() {$/;"	f
simulated	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^	public $simulated = array();$/;"	v
sql	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^		$sql = <<<SQL$/;"	v
tearDown	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^	public function tearDown() {$/;"	f
testBuildColumn	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^	public function testBuildColumn() {$/;"	f
testBuildIndex	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^	public function testBuildIndex() {$/;"	f
testDescribe	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^	public function testDescribe() {$/;"	f
testDistinctFields	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^	public function testDistinctFields() {$/;"	f
testDistinctWithLimit	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^	public function testDistinctWithLimit() {$/;"	f
testFields	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^	public function testFields() {$/;"	f
testGetPrimaryKey	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^	public function testGetPrimaryKey() {$/;"	f
testLimitOffsetHack	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^	public function testLimitOffsetHack() {$/;"	f
testQuoting	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^	public function testQuoting() {$/;"	f
testStoredProcedureReturn	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^	public function testStoredProcedureReturn() {$/;"	f
testUpdateAllSyntax	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^	public function testUpdateAllSyntax() {$/;"	f
useTable	lib/Cake/Test/Case/Model/Datasource/Database/SqlserverTest.php	/^	public $useTable = false;$/;"	v
Article	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$Article = ClassRegistry::init('Article');$/;"	v
Comment	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$Comment = ClassRegistry::init('Comment');$/;"	v
DboSecondTestSource	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^class DboSecondTestSource extends DboSource {$/;"	c
DboSourceTest	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^class DboSourceTest extends CakeTestCase {$/;"	c
DboTestSource	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^class DboTestSource extends DboSource {$/;"	c
MockDataSource	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^class MockDataSource extends DataSource {$/;"	c
MockPDO	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^class MockPDO extends PDO {$/;"	c
Model	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$this->Model = new TestModel();$/;"	v
__construct	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function __construct() {$/;"	f
_connection	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$this->_connection = $conn;$/;"	v
_runTransactions	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	protected function _runTransactions($db) {$/;"	f
autoFixtures	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public $autoFixtures = false;$/;"	v
conditions	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$conditions = array('Article.extra' => 'just text');$/;"	v
conditions	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$conditions = array('Article.extra' => array('just text', 'other text'));$/;"	v
conditions	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$conditions = array('Article.name' => 'just text');$/;"	v
conditions	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$conditions = array('Article.name' => array('just text', 'other text'));$/;"	v
config	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$this->config = $config;$/;"	v
conn	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$conn = $this->getMock('MockPDO');$/;"	v
conn	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$conn = $this->getMock('MockPDO', array('quote'));$/;"	v
connect	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function connect($config = array()) {$/;"	f
connected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$this->connected = true;$/;"	v
contents	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$contents = ob_get_clean();$/;"	v
data	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$data = array($/;"	v
data	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$data = array('Article2' => array($/;"	v
datetime	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$datetime = date('Y-m-d H:i:s');$/;"	v
db	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$db = $Article->getDatasource();$/;"	v
db	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$db = $this->getMock('DboTestSource', array('getSchemaName'));$/;"	v
db	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$db = new DboTestSource();$/;"	v
ds	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$ds = $Article->getDataSource();$/;"	v
endQuote	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public $endQuote = '_';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = " ORDER BY CASE Sample.id WHEN 1 THEN 'Id One' ELSE 'Other Id' END AS case_col";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = "(" . $Article->virtualFields['extra'] . ") = just text";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = "(" . $Article->virtualFields['extra'] . ") IN (just text, other text)";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = "Article.name = just text";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = "Article.name IN (just text, other text)";$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = ' ORDER BY (1 + 1) ASC, (NOW()) ASC';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = '(sm)';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = 'Function(SubFunction(`Something`.`foo`))';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = 'Function(`Something`.`foo`) AS `x`';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = 'Function(`Something`.`foo`)';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = 'MTD()';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = 'SELECT DISTINCT(AssetsTag.asset_id) FROM assets_tags AS AssetsTag   WHERE Tag.name = foo bar  GROUP BY AssetsTag.asset_id';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = '`I18n__title__pt-br`.`locale`';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = '`Model`.`fieldkhdfjmelarbqnzsogcpi`';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = '`Model`.`name` AS `x`';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = '`Model`.`name` AS `y`';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = '`name-with-minus`';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = '`name` AS `x`';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = '`name`';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = 'something: bad';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = array('Query 1', 'Query 2');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = array('\\'first\\'', 2, '\\'third\\'');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = array('`Team`.`P%`', '`Team`.`G\/G`');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = array('`my-name`', '`Foo-Model`.*');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = array('`name`', '`Model`.*');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = array('all', array($/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = array('first', array($/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = array('query' => 'BEGIN', 'params' => array(), 'affected' => '', 'numRows' => '', 'took' => '');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = array('query' => 'COMMIT', 'params' => array(), 'affected' => '', 'numRows' => '', 'took' => '');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = array('query' => 'Error 1', 'affected' => '', 'numRows' => '', 'took' => '');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = array('query' => 'Query 1', 'params' => array(), 'affected' => '', 'numRows' => '', 'took' => '');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = array('query' => 'Query 1', 'params' => array(1, 2, 'abc'), 'affected' => '', 'numRows' => '', 'took' => '');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = array('query' => 'Query 2', 'params' => array('field1' => 1, 'field2' => 'abc'), 'affected' => '', 'numRows' => '', 'took' => '');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = array('query' => 'Query 2', 'params' => array(), 'affected' => '', 'numRows' => '', 'took' => '');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = array('query' => 'ROLLBACK', 'params' => array(), 'affected' => '', 'numRows' => '', 'took' => '');$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expected = false;$/;"	v
expression	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$expression = $this->testDb->expression("CASE Sample.id WHEN 1 THEN 'Id One' ELSE 'Other Id' END AS case_col");$/;"	v
first	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$first = $ds->fields($Article);$/;"	v
first	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$first = $ds->fields($Article, null, array('title', 'body', 'published'));$/;"	v
fixtures	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public $fixtures = array($/;"	v
fullDebug	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$fullDebug = $this->db->fullDebug;$/;"	v
joinStatements	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public static function joinStatements() {$/;"	f
joinStatementsWithPrefix	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public static function joinStatementsWithPrefix($schema) {$/;"	f
log	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$log = $db->getLog();$/;"	v
log	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$log = $this->db->getLog();$/;"	v
log	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$log = $this->testDb->getLog();$/;"	v
log	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$log = $this->testDb->getLog(false, false);$/;"	v
merge	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$merge = array($/;"	v
merge	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$merge = array('Topic' => array(array($/;"	v
merge	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$merge = array('User2' => array(array($/;"	v
merge	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$merge = array(array('Comment' => false));$/;"	v
mergeAssociation	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function mergeAssociation(&$data, &$merge, $association, $type, $selfJoin = false) {$/;"	f
name	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$name = $this->db->fullTableName('test_query');$/;"	v
nestedSupport	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public $nestedSupport = false;$/;"	v
nestedTransactionSupported	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function nestedTransactionSupported() {$/;"	f
noschema	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$noschema = ConnectionManager::create('noschema', array($/;"	v
oldDebug	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$oldDebug = Configure::read('debug');$/;"	v
order	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$order = array('Article.two', 'Article.this_moment');$/;"	v
order	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$order = array('two', 'this_moment');$/;"	v
query	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$query = "CREATE TABLE {$name} (name varchar(10));";$/;"	v
query	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$query = "DROP TABLE {$name};";$/;"	v
queryData	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$queryData = array($/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $Article->find('all');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $db->buildJoinStatement($join);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $db->conditionKeysToString($conditions, true, $Article);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $db->insertMulti('articles', array_keys($data[0]), $data);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $db->limit('0');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $db->limit('10');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $db->limit('FARTS', 'BOOGERS');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $db->limit(10, 300000000000000000000000000000);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $db->limit(20, 10);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $noschema->fullTableName($Article, false, true);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $testdb->fullTableName($Article, false, true);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->db->generateAssociationQuery($Article, null, null, null, null, $queryData, false);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->db->group('created');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->db->lastError($stmt);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->db->order($order, 'ASC', $Article);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->db->query($query);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->db->query('findAllByFieldName', array('value'), $this->Model);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->db->query('findAllById', array('a'), $this->Model);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->db->query('findByFieldName', array('= a'), $this->Model);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->db->query('findByFieldName', array('value'), $this->Model);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->db->query('findByFieldName', array(), $this->Model);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->db->query('findByFieldName', array(array('value1', 'value2', 'value3')), $this->Model);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->db->query('findByFieldName', array(null), $this->Model);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->db->query('findByFindBy', array('value'), $this->Model);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->db->value('{$__cakeForeignKey__$}');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->db->value(array('first', 2, 'third'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->testDb->cacheMethod('conditions', 'some-key');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->testDb->cacheMethod('name', 'other-key');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->testDb->cacheMethod('name', 'some-key');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->testDb->cacheMethod('name', 'some-key', 'stuff');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->testDb->conditions(' ', '"  " conditions failed %s');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->testDb->conditions('');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->testDb->conditions(array('OR' => array('OR' => array())));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->testDb->conditions(array('OR' => array()));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->testDb->conditions(array());$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->testDb->conditions(false);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->testDb->conditions(null);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->testDb->conditions(true);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->testDb->fullTableName($Article, false, false);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->testDb->fullTableName($Article, true, false);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->testDb->fullTableName('post_tag', false, false);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->testDb->name('(sm)');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->testDb->name('Function(Something.foo) AS x');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->testDb->name('Function(Something.foo)');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->testDb->name('Function(SubFunction(Something.foo))');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->testDb->name('I18n__title__pt-br.locale');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->testDb->name('MTD()');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->testDb->name('Model.fieldkhdfjmelarbqnzsogcpi');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->testDb->name('Model.name AS x');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->testDb->name('Model.name as y');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->testDb->name('name AS x');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->testDb->name('name');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->testDb->name('name-with-minus');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->testDb->name(array('Team.P%', 'Team.G\/G'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->testDb->name(array('my-name', 'Foo-Model.*'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->testDb->name(array('name', 'Model.*'));$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = $this->testDb->order($expression);$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$result = Hash::extract($log['log'], '{n}.query');$/;"	v
scientificNotation	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$scientificNotation = sprintf('%.1E', 300000000000000000000000000000);$/;"	v
second	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$second = $ds->fields($Article);$/;"	v
second	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$second = $ds->fields($Article, null, array('title', 'body', 'published'));$/;"	v
setConfig	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function setConfig($config = array()) {$/;"	f
setConnection	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function setConnection($conn) {$/;"	f
setUp	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function setUp() {$/;"	f
startQuote	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public $startQuote = '_';$/;"	v
stmt	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$stmt = $this->getMock('PDOStatement');$/;"	v
subQuery	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$subQuery = $db->buildStatement($/;"	v
tearDown	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function tearDown() {$/;"	f
testBooleanEmptyConditionsParsing	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testBooleanEmptyConditionsParsing() {$/;"	f
testBooleanNullConditionsParsing	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testBooleanNullConditionsParsing() {$/;"	f
testBuildJoinStatement	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testBuildJoinStatement($join, $expected) {$/;"	f
testBuildJoinStatementWithTablePrefix	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testBuildJoinStatementWithTablePrefix($join, $expected) {$/;"	f
testBuildStatementDefaults	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testBuildStatementDefaults() {$/;"	f
testCacheMethod	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testCacheMethod() {$/;"	f
testConditionKeysToString	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testConditionKeysToString() {$/;"	f
testConditionKeysToStringVirtualField	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testConditionKeysToStringVirtualField() {$/;"	f
testDb	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$this->testDb = new DboTestSource();$/;"	v
testDirectCallThrowsException	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testDirectCallThrowsException() {$/;"	f
testFetchAllBooleanReturns	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testFetchAllBooleanReturns() {$/;"	f
testFieldsCacheKeyWithDatasourceChange	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testFieldsCacheKeyWithDatasourceChange() {$/;"	f
testFieldsCacheKeyWithSchemanameChange	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testFieldsCacheKeyWithSchemanameChange() {$/;"	f
testFieldsUsingMethodCache	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testFieldsUsingMethodCache() {$/;"	f
testFlushMethodCache	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testFlushMethodCache() {$/;"	f
testFullTablePermutations	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testFullTablePermutations() {$/;"	f
testGenerateAssociationQuery	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testGenerateAssociationQuery() {$/;"	f
testGetLog	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testGetLog() {$/;"	f
testGetLogParams	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testGetLogParams() {$/;"	f
testGroupNoModel	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testGroupNoModel() {$/;"	f
testInsertMultiId	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testInsertMultiId() {$/;"	f
testLastError	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testLastError() {$/;"	f
testLimit	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testLimit() {$/;"	f
testLog	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testLog() {$/;"	f
testMagicMethodQuerying	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testMagicMethodQuerying() {$/;"	f
testMergeAssociations	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testMergeAssociations() {$/;"	f
testName	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testName() {$/;"	f
testNameMethodCacheCollisions	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testNameMethodCacheCollisions() {$/;"	f
testOrderWithExpression	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testOrderWithExpression() {$/;"	f
testQueryAssociationUnneededQueries	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testQueryAssociationUnneededQueries() {$/;"	f
testReadOnlyCallingQueryAssociationWhenDefined	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testReadOnlyCallingQueryAssociationWhenDefined() {$/;"	f
testReconnect	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testReconnect() {$/;"	f
testTransactionLogging	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testTransactionLogging() {$/;"	f
testTransactionNested	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testTransactionNested() {$/;"	f
testTransactionNestedDisabled	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testTransactionNestedDisabled() {$/;"	f
testTransactionNestedWithoutSupport	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testTransactionNestedWithoutSupport() {$/;"	f
testValue	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testValue() {$/;"	f
testVirtualFieldsInOrder	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^	public function testVirtualFieldsInOrder() {$/;"	f
testdb	lib/Cake/Test/Case/Model/Datasource/DboSourceTest.php	/^		$testdb = $Article->getDataSource();$/;"	v
CacheSessionTest	lib/Cake/Test/Case/Model/Datasource/Session/CacheSessionTest.php	/^class CacheSessionTest extends CakeTestCase {$/;"	c
_sessionBackup	lib/Cake/Test/Case/Model/Datasource/Session/CacheSessionTest.php	/^	protected static $_sessionBackup;$/;"	v
setUp	lib/Cake/Test/Case/Model/Datasource/Session/CacheSessionTest.php	/^	public function setUp() {$/;"	f
setupBeforeClass	lib/Cake/Test/Case/Model/Datasource/Session/CacheSessionTest.php	/^	public static function setupBeforeClass() {$/;"	f
storage	lib/Cake/Test/Case/Model/Datasource/Session/CacheSessionTest.php	/^		$this->storage = new CacheSession();$/;"	v
tearDown	lib/Cake/Test/Case/Model/Datasource/Session/CacheSessionTest.php	/^	public function tearDown() {$/;"	f
teardownAfterClass	lib/Cake/Test/Case/Model/Datasource/Session/CacheSessionTest.php	/^	public static function teardownAfterClass() {$/;"	f
testDestroy	lib/Cake/Test/Case/Model/Datasource/Session/CacheSessionTest.php	/^	public function testDestroy() {$/;"	f
testOpen	lib/Cake/Test/Case/Model/Datasource/Session/CacheSessionTest.php	/^	public function testOpen() {$/;"	f
testRead	lib/Cake/Test/Case/Model/Datasource/Session/CacheSessionTest.php	/^	public function testRead() {$/;"	f
testWrite	lib/Cake/Test/Case/Model/Datasource/Session/CacheSessionTest.php	/^	public function testWrite() {$/;"	f
DatabaseSessionTest	lib/Cake/Test/Case/Model/Datasource/Session/DatabaseSessionTest.php	/^class DatabaseSessionTest extends CakeTestCase {$/;"	c
SessionTestModel	lib/Cake/Test/Case/Model/Datasource/Session/DatabaseSessionTest.php	/^class SessionTestModel extends Model {$/;"	c
_sessionBackup	lib/Cake/Test/Case/Model/Datasource/Session/DatabaseSessionTest.php	/^	protected static $_sessionBackup;$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Session/DatabaseSessionTest.php	/^		$expected = 'Some value';$/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Session/DatabaseSessionTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Model/Datasource/Session/DatabaseSessionTest.php	/^		$expected = time() + (Configure::read('Session.timeout') * 60);$/;"	v
expires	lib/Cake/Test/Case/Model/Datasource/Session/DatabaseSessionTest.php	/^		$expires = $result['Session']['expires'];$/;"	v
fixtures	lib/Cake/Test/Case/Model/Datasource/Session/DatabaseSessionTest.php	/^	public $fixtures = array('core.session');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Session/DatabaseSessionTest.php	/^		$result = $this->storage->read('foo');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Session/DatabaseSessionTest.php	/^		$result = $this->storage->read('made up value');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Session/DatabaseSessionTest.php	/^		$result = $this->storage->write('', 'This is a Test');$/;"	v
result	lib/Cake/Test/Case/Model/Datasource/Session/DatabaseSessionTest.php	/^		$result = $this->storage->write('foo', 'Some value');$/;"	v
session	lib/Cake/Test/Case/Model/Datasource/Session/DatabaseSessionTest.php	/^		$session = ClassRegistry::getObject('session');$/;"	v
setUp	lib/Cake/Test/Case/Model/Datasource/Session/DatabaseSessionTest.php	/^	public function setUp() {$/;"	f
setupBeforeClass	lib/Cake/Test/Case/Model/Datasource/Session/DatabaseSessionTest.php	/^	public static function setupBeforeClass() {$/;"	f
storage	lib/Cake/Test/Case/Model/Datasource/Session/DatabaseSessionTest.php	/^		$storage = new DatabaseSession();$/;"	v
storage	lib/Cake/Test/Case/Model/Datasource/Session/DatabaseSessionTest.php	/^		$this->storage = new DatabaseSession();$/;"	v
tearDown	lib/Cake/Test/Case/Model/Datasource/Session/DatabaseSessionTest.php	/^	public function tearDown() {$/;"	f
teardownAfterClass	lib/Cake/Test/Case/Model/Datasource/Session/DatabaseSessionTest.php	/^	public static function teardownAfterClass() {$/;"	f
testConstructionSettings	lib/Cake/Test/Case/Model/Datasource/Session/DatabaseSessionTest.php	/^	public function testConstructionSettings() {$/;"	f
testDestroy	lib/Cake/Test/Case/Model/Datasource/Session/DatabaseSessionTest.php	/^	public function testDestroy() {$/;"	f
testGc	lib/Cake/Test/Case/Model/Datasource/Session/DatabaseSessionTest.php	/^	public function testGc() {$/;"	f
testOpen	lib/Cake/Test/Case/Model/Datasource/Session/DatabaseSessionTest.php	/^	public function testOpen() {$/;"	f
testRead	lib/Cake/Test/Case/Model/Datasource/Session/DatabaseSessionTest.php	/^	public function testRead() {$/;"	f
testWrite	lib/Cake/Test/Case/Model/Datasource/Session/DatabaseSessionTest.php	/^	public function testWrite() {$/;"	f
testWriteEmptySessionId	lib/Cake/Test/Case/Model/Datasource/Session/DatabaseSessionTest.php	/^	public function testWriteEmptySessionId() {$/;"	f
useTable	lib/Cake/Test/Case/Model/Datasource/Session/DatabaseSessionTest.php	/^	public $useTable = 'sessions';$/;"	v
ModelCrossSchemaHabtmTest	lib/Cake/Test/Case/Model/ModelCrossSchemaHabtmTest.php	/^class ModelCrossSchemaHabtmTest extends BaseModelTest {$/;"	c
Player	lib/Cake/Test/Case/Model/ModelCrossSchemaHabtmTest.php	/^		$Player = ClassRegistry::init('Player');$/;"	v
_checkConfigs	lib/Cake/Test/Case/Model/ModelCrossSchemaHabtmTest.php	/^	protected function _checkConfigs() {$/;"	f
autoFixtures	lib/Cake/Test/Case/Model/ModelCrossSchemaHabtmTest.php	/^	public $autoFixtures = false;$/;"	v
config	lib/Cake/Test/Case/Model/ModelCrossSchemaHabtmTest.php	/^		$config = ConnectionManager::enumConnectionObjects();$/;"	v
count	lib/Cake/Test/Case/Model/ModelCrossSchemaHabtmTest.php	/^		$count = $Player->GuildsPlayer->find('count');$/;"	v
count	lib/Cake/Test/Case/Model/ModelCrossSchemaHabtmTest.php	/^		$count = $Player->find('count');$/;"	v
dropTables	lib/Cake/Test/Case/Model/ModelCrossSchemaHabtmTest.php	/^	public $dropTables = false;$/;"	v
expected	lib/Cake/Test/Case/Model/ModelCrossSchemaHabtmTest.php	/^		$expected = array($/;"	v
fixtures	lib/Cake/Test/Case/Model/ModelCrossSchemaHabtmTest.php	/^	public $fixtures = array($/;"	v
player	lib/Cake/Test/Case/Model/ModelCrossSchemaHabtmTest.php	/^		$player = $Player->create(array($/;"	v
player	lib/Cake/Test/Case/Model/ModelCrossSchemaHabtmTest.php	/^		$player = $Player->findByName('rchavik');$/;"	v
players	lib/Cake/Test/Case/Model/ModelCrossSchemaHabtmTest.php	/^		$players = $Player->find('all', array($/;"	v
players	lib/Cake/Test/Case/Model/ModelCrossSchemaHabtmTest.php	/^		$players = $Player->find('count');$/;"	v
rangers	lib/Cake/Test/Case/Model/ModelCrossSchemaHabtmTest.php	/^		$rangers = Hash::extract($players, '{n}.Guild.{n}[name=Rangers]');$/;"	v
result	lib/Cake/Test/Case/Model/ModelCrossSchemaHabtmTest.php	/^		$result = $Player->save($spongebob);$/;"	v
results	lib/Cake/Test/Case/Model/ModelCrossSchemaHabtmTest.php	/^		$results = $Player->saveAll($player, array('validate' => 'first'));$/;"	v
setUp	lib/Cake/Test/Case/Model/ModelCrossSchemaHabtmTest.php	/^	public function setUp() {$/;"	f
spongeBobsArmors	lib/Cake/Test/Case/Model/ModelCrossSchemaHabtmTest.php	/^		$spongeBobsArmors = Hash::extract($spongebob, '{n}.Armor.{n}');$/;"	v
spongebob	lib/Cake/Test/Case/Model/ModelCrossSchemaHabtmTest.php	/^		$spongebob = $Player->create(array($/;"	v
spongebob	lib/Cake/Test/Case/Model/ModelCrossSchemaHabtmTest.php	/^		$spongebob = $Player->find('all', array($/;"	v
testHabtmFind	lib/Cake/Test/Case/Model/ModelCrossSchemaHabtmTest.php	/^	public function testHabtmFind() {$/;"	f
testHabtmSave	lib/Cake/Test/Case/Model/ModelCrossSchemaHabtmTest.php	/^	public function testHabtmSave() {$/;"	f
testHabtmWithThreeDatabases	lib/Cake/Test/Case/Model/ModelCrossSchemaHabtmTest.php	/^	public function testHabtmWithThreeDatabases() {$/;"	f
testModelDatasources	lib/Cake/Test/Case/Model/ModelCrossSchemaHabtmTest.php	/^	public function testModelDatasources() {$/;"	f
wizards	lib/Cake/Test/Case/Model/ModelCrossSchemaHabtmTest.php	/^		$wizards = Hash::extract($players, '{n}.Guild.{n}');$/;"	v
wizards	lib/Cake/Test/Case/Model/ModelCrossSchemaHabtmTest.php	/^		$wizards = Hash::extract($players, '{n}.Guild.{n}[name=Wizards]');$/;"	v
Article	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$Article = ClassRegistry::init('Article');$/;"	v
Article	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$Article = new Article();$/;"	v
Bidding	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$Bidding = new Bidding();$/;"	v
Book	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$Book = new Book();$/;"	v
Cd	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$Cd = new Cd();$/;"	v
Comment	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$Comment = new BeforeDeleteComment();$/;"	v
JoinA	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$JoinA = new JoinA();$/;"	v
Model	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$Model = new CallbackPostTestModel();$/;"	v
ModelDeleteTest	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^class ModelDeleteTest extends BaseModelTest {$/;"	c
OverallFavorite	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$OverallFavorite = new OverallFavorite();$/;"	v
Portfolio	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$Portfolio = new Portfolio();$/;"	v
Tag	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$Tag = ClassRegistry::init('Tag');$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$TestModel = $this->getMock('Article', array('find'));$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$TestModel = new Article();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$TestModel = new Article10();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$TestModel = new ArticleB();$/;"	v
ThePaper	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$ThePaper = new ThePaper();$/;"	v
User	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$User = new CounterCacheUser();$/;"	v
Uuid	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$Uuid = new Uuid();$/;"	v
after	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$after = $Article->find("all", array($/;"	v
before	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$before = $Article->find("all", array($/;"	v
data	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$data = array($/;"	v
data	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$data = array('Article' => array($/;"	v
data	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$data = array('Article.user_id' => array(2, 3));$/;"	v
exists	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$exists = $Model->findById(1);$/;"	v
expected	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$expected = array();$/;"	v
joinedBs	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$joinedBs = $JoinA->JoinAsJoinB->find('count', array($/;"	v
joinedBs	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$joinedBs = $JoinA->JoinAsJoinC->find('count', array($/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $Article->Comment->find('count', array($/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $Article->delete(1, true);$/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $Bidding->BiddingMessage->find('all', array('order' => array('BiddingMessage.name' => 'ASC')));$/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $Bidding->find('all', array('order' => array('Bidding.id' => 'ASC')));$/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $Comment->find('count');$/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $JoinA->delete(1);$/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $Model->delete(1);$/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $OverallFavorite->find('all', array($/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $Portfolio->ItemsPortfolio->find('all', array($/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $Portfolio->find('first', array($/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $TestModel->ArticlesTag->find('all');$/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $TestModel->Comment->Attachment->find('count');$/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $TestModel->Comment->Attachment->read(null, 1);$/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $TestModel->Comment->find('count');$/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $TestModel->Comment->read(null, 5);$/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $TestModel->Comment->read(null, 6);$/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $TestModel->delete(2);$/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $TestModel->delete(3);$/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $TestModel->deleteAll($/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $TestModel->deleteAll($data, true, true);$/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $TestModel->deleteAll(array('Article.non_existent_field' => 999));$/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $TestModel->deleteAll(array('Article.published' => 'N'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $TestModel->deleteAll(array('Article.user_id' => 999));$/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $TestModel->find('all');$/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $TestModel->find('all', array($/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $TestModel->find('count');$/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $TestModel->read(null, 2);$/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $TestModel->read(null, 3);$/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $TestModel->set($data) && $TestModel->save();$/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $ThePaper->findById(1);$/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $ThePaper->findById(2);$/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $User->read(null, 301);$/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $User->read(null, 66);$/;"	v
result	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$result = $Uuid->find('all', array($/;"	v
submittedData	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^		$submittedData = array($/;"	v
testBeforeDeleteDeleteAbortion	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^	public function testBeforeDeleteDeleteAbortion() {$/;"	f
testBeforeDeleteWipingTable	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^	public function testBeforeDeleteWipingTable() {$/;"	f
testBeforeDeleteWipingTableWithDuplicateDelete	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^	public function testBeforeDeleteWipingTableWithDuplicateDelete() {$/;"	f
testDelete	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^	public function testDelete() {$/;"	f
testDeleteAll	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^	public function testDeleteAll() {$/;"	f
testDeleteAllFailedFind	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^	public function testDeleteAllFailedFind() {$/;"	f
testDeleteAllMultipleRowsPerId	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^	public function testDeleteAllMultipleRowsPerId() {$/;"	f
testDeleteAllUnknownColumn	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^	public function testDeleteAllUnknownColumn() {$/;"	f
testDeleteAllWithOrderProperty	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^	public function testDeleteAllWithOrderProperty() {$/;"	f
testDeleteArticleBLinks	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^	public function testDeleteArticleBLinks() {$/;"	f
testDeleteDependent	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^	public function testDeleteDependent() {$/;"	f
testDeleteDependentWithConditions	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^	public function testDeleteDependentWithConditions() {$/;"	f
testDeleteHabtmPostgresFailure	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^	public function testDeleteHabtmPostgresFailure() {$/;"	f
testDeleteHabtmReferenceWithConditions	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^	public function testDeleteHabtmReferenceWithConditions() {$/;"	f
testDeleteLinks	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^	public function testDeleteLinks() {$/;"	f
testDeleteLinksWithMultipleHabtmAssociations	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^	public function testDeleteLinksWithMultipleHabtmAssociations() {$/;"	f
testDeleteLinksWithPLuginJoinModel	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^	public function testDeleteLinksWithPLuginJoinModel() {$/;"	f
testDeleteUpdatingCounterCacheCorrectly	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^	public function testDeleteUpdatingCounterCacheCorrectly() {$/;"	f
testDependentExclusiveDelete	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^	public function testDependentExclusiveDelete() {$/;"	f
testHabtmDeleteLinksWhenNoPrimaryKeyInJoinTable	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^	public function testHabtmDeleteLinksWhenNoPrimaryKeyInJoinTable() {$/;"	f
testRecursiveDel	lib/Cake/Test/Case/Model/ModelDeleteTest.php	/^	public function testRecursiveDel() {$/;"	f
Article	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$Article = ClassRegistry::init('Article');$/;"	v
Article	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$Article = new Article();$/;"	v
Article	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$Article = new ArticleB();$/;"	v
Article	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$Article = new ArticleB(false, uniqid());$/;"	v
Article	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$Article = new ArticleFeatured();$/;"	v
Comment	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$Comment = ClassRegistry::init('TestPluginComment');$/;"	v
Comment	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$Comment = new Comment();$/;"	v
DboMock	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^class DboMock extends DboSource {$/;"	c
FeaturedModel	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$FeaturedModel = new Featured();$/;"	v
ModelIntegrationTest	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^class ModelIntegrationTest extends BaseModelTest {$/;"	c
NewVoid	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$NewVoid = new TheVoid(null, false, 'other');$/;"	v
Person	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$Person = new Person();$/;"	v
Player	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$Player = ClassRegistry::init('Player');$/;"	v
Post	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$Post = new Post();$/;"	v
Site	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$Site = new Site();$/;"	v
TestFakeModel	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$TestFakeModel = new ArticleFeatured(array('table' => false));$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$TestModel = ClassRegistry::init('MergeVarPluginComment');$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$TestModel = ClassRegistry::init('MergeVarPluginPost');$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$TestModel = ClassRegistry::init('Test');$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$TestModel = ClassRegistry::init('TestPlugin.TestPluginComment');$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$TestModel = ClassRegistry::init(array($/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$TestModel = new Apple();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$TestModel = new Article();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$TestModel = new ArticleB();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$TestModel = new ArticleFeatured();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$TestModel = new AssociationTest1();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$TestModel = new Content();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$TestModel = new JoinA();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$TestModel = new Person();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$TestModel = new Portfolio();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$TestModel = new Something();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$TestModel = new Test();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$TestModel = new Test(array('alias' => 'AnotherTest'));$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$TestModel = new TestAlias();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$TestModel = new TestPluginArticle();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$TestModel = new User();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$TestModel = new ValidationTest1();$/;"	v
TestUser	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$TestUser = new User();$/;"	v
UuidTag	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$UuidTag = new UuidTag();$/;"	v
activated	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$activated = $Site->DomainsSite->findByDomainId(3);$/;"	v
armorsPlayers	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$armorsPlayers = $Player->ArmorsPlayer->find('all', array('recursive' => -1));$/;"	v
assocTypes	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$assocTypes = array('hasMany', 'hasOne', 'belongsTo', 'hasAndBelongsToMany');$/;"	v
columns	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$columns = array('id', 'author_id', 'title', 'body', 'published', 'created', 'updated');$/;"	v
config	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$config = ConnectionManager::enumConnectionObjects();$/;"	v
connect	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function connect() {$/;"	f
data	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$data = $Site->findById(1);$/;"	v
data	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$data = array($/;"	v
data	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$data = array();$/;"	v
db	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$db = $TestModel->getDataSource();$/;"	v
db	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$db = ConnectionManager::getDataSource('test');$/;"	v
db1	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$db1 = ConnectionManager::getDataSource('database1');$/;"	v
db2	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$db2 = ConnectionManager::getDataSource('database2');$/;"	v
db2	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$db2 = ConnectionManager::getDataSource('test2');$/;"	v
expected	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$expected = $TestModel->findById(1);$/;"	v
expected	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$expected = $db->name('Domain.DomainHandle');$/;"	v
expected	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$expected = $db->name('Test.TestField');$/;"	v
expected	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$expected = $db->name('Test.test_field');$/;"	v
expected	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$expected = 'AnotherTest';$/;"	v
expected	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$expected = 'Test';$/;"	v
expected	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$expected = 'TestAlias';$/;"	v
expected	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$expected = 'TestPlugin';$/;"	v
expected	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$expected = 1; \/\/ only 1 domain left belonging to rchavik$/;"	v
expected	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$expected = 2; \/\/ 2 domains belonging to markstory$/;"	v
expected	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$expected = 2; \/\/ 2 domains belonging to rchavik$/;"	v
expected	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$expected = 2;$/;"	v
expected	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$expected = 3; \/\/ 3 domains belonging to cakephp$/;"	v
expected	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$expected = 3;$/;"	v
expected	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$expected = 5;$/;"	v
expected	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$expected = 6;$/;"	v
expected	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$expected = array('Apple' => array('created' => ''));$/;"	v
expected	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$expected = array('Apple' => array('created' => '', 'date' => ''));$/;"	v
expected	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$expected = array('Apple' => array('created' => '', 'date' => '2006-12-25'));$/;"	v
expected	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$expected = array('Apple' => array('created' => '2007-08-20 00:00:00'));$/;"	v
expected	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$expected = array('Apple' => array('created' => '2007-08-20 10:12:00'));$/;"	v
expected	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$expected = array('Apple' => array('date' => ''));$/;"	v
expected	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$expected = array('Apple' => array('date' => '2006-12-25'));$/;"	v
expected	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$expected = array('Apple' => array('mytime' => $result));$/;"	v
expected	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$expected = array('Article' => array('published' => 'N'));$/;"	v
expected	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$expected = array('AssociationTest2' => array($/;"	v
expected	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$expected = array('Containable' => array('some_settings'));$/;"	v
expected	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$expected = array('Test' => array('notes' => 'write some notes here'));$/;"	v
expected	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$expected = null;$/;"	v
guilds	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$guilds = $Player->Guild->find('all', array('recursive' => -1));$/;"	v
guildsPlayers	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$guildsPlayers = $Player->GuildsPlayer->find('all', array('recursive' => -1));$/;"	v
intLength	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^			$intLength = $this->db->columns['integer']['length'];$/;"	v
intLength	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^			$intLength = $this->db->columns['primary_key']['length'];$/;"	v
intLength	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^			$intLength = 11;$/;"	v
larry	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$larry = $Player->findByName('larry');$/;"	v
larrysArmor	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$larrysArmor = Hash::extract($larry, 'Armor.{n}.ArmorsPlayer');$/;"	v
larrysCloak	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$larrysCloak = Hash::extract($larry, 'Armor.{n}.ArmorsPlayer[armor_id=3]', $larry);$/;"	v
larrysGuild	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$larrysGuild = Hash::extract($larry, 'Guild.{n}.GuildsPlayer');$/;"	v
model	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$model = $this->getMock('Article', array('getDataSource'));$/;"	v
model	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$model = new Article();$/;"	v
model	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$model = new Item();$/;"	v
model	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$model = new ModelA();$/;"	v
model	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$model = new Test();$/;"	v
model	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$model = new TheVoid();$/;"	v
name	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function name($field) {$/;"	f
now	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$now = $db->expression('NOW()');$/;"	v
options	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$options = array($/;"	v
players	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$players = $Player->find('all');$/;"	v
players	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$players = $Player->find('all', array('recursive' => -1));$/;"	v
playersArmors	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$playersArmors = Hash::extract($players, '{n}.Armor.{n}.ArmorsPlayer');$/;"	v
playersGuilds	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$playersGuilds = Hash::extract($players, '{n}.Guild.{n}.GuildsPlayer');$/;"	v
result	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$result = $Article->exists();$/;"	v
result	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$result = $Article->getAssociated('Category');$/;"	v
result	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$result = $Article->read(null, 2);$/;"	v
result	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$result = $Post->schema('body');$/;"	v
result	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$result = $Post->schema();$/;"	v
result	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$result = $Site->DomainsSite->find('all', array($/;"	v
result	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$result = $TestModel->SomethingElse->find('all');$/;"	v
result	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$result = $TestModel->alias;$/;"	v
result	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$result = $TestModel->create();$/;"	v
result	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$result = $TestModel->escapeField('DomainHandle', 'Domain');$/;"	v
result	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$result = $TestModel->escapeField('TestField');$/;"	v
result	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$result = $TestModel->escapeField('test_field');$/;"	v
result	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$result = $TestModel->find('all');$/;"	v
result	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$result = $TestModel->findById(1);$/;"	v
result	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$result = $TestModel->getID();$/;"	v
result	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$result = $TestModel->getID(2);$/;"	v
result	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$result = $TestModel->hasAndBelongsToMany;$/;"	v
result	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$result = $TestModel->read(null, 1);$/;"	v
result	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$result = $TestModel->schema();$/;"	v
result	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$result = $TestUser->find('all', $options);$/;"	v
result	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$result = $model->create();$/;"	v
result	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$result = $model->schema();$/;"	v
result	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$result = Hash::extract($TestModel->User->find('all'), '{n}.User.id');$/;"	v
results	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$results = $Article->getAssociated();$/;"	v
results	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$results = $Site->Domain->DomainsSite->find('count', array($/;"	v
results	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$results = $Site->DomainsSite->find('count', array($/;"	v
results	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$results = $Site->find('count');$/;"	v
results	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$results = $Site->read();$/;"	v
results	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$results = array_keys($results);$/;"	v
skip	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$skip = (!isset($config['test']) || !isset($config['test2']));$/;"	v
testAssociationLazyLoadWithBindModel	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testAssociationLazyLoadWithBindModel() {$/;"	f
testAssociationLazyLoadWithHABTM	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testAssociationLazyLoadWithHABTM() {$/;"	f
testAssociationLazyLoading	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testAssociationLazyLoading() {$/;"	f
testAutoConstructAssociations	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testAutoConstructAssociations() {$/;"	f
testAutoConstructPluginAssociations	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testAutoConstructPluginAssociations() {$/;"	f
testCacheSourcesRestored	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testCacheSourcesRestored() {$/;"	f
testColumnTypeFetching	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testColumnTypeFetching() {$/;"	f
testConstruct	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testConstruct() {$/;"	f
testConstructWithAlternateDataSource	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testConstructWithAlternateDataSource() {$/;"	f
testCreation	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testCreation() {$/;"	f
testCrossDatabaseJoins	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testCrossDatabaseJoins() {$/;"	f
testDeconstructFieldsDateTime	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testDeconstructFieldsDateTime() {$/;"	f
testDeconstructFieldsTime	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testDeconstructFieldsTime($input, $result) {$/;"	f
testDisplayField	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testDisplayField() {$/;"	f
testDynamicAssociations	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testDynamicAssociations() {$/;"	f
testDynamicBehaviorAttachment	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testDynamicBehaviorAttachment() {$/;"	f
testEscapeField	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testEscapeField() {$/;"	f
testFindSelfAssociations	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testFindSelfAssociations() {$/;"	f
testFindWithJoinsOption	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testFindWithJoinsOption() {$/;"	f
testGetAssociated	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testGetAssociated() {$/;"	f
testGetID	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testGetID() {$/;"	f
testHABTMKeepExisting	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testHABTMKeepExisting() {$/;"	f
testHABTMKeepExistingAlternateDataFormat	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testHABTMKeepExistingAlternateDataFormat() {$/;"	f
testHABTMKeepExistingWithThreeDbs	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testHABTMKeepExistingWithThreeDbs() {$/;"	f
testHabtmUniqueKey	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testHabtmUniqueKey() {$/;"	f
testHasMethod	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testHasMethod() {$/;"	f
testIdentity	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testIdentity() {$/;"	f
testInvalidAssociation	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testInvalidAssociation() {$/;"	f
testLoadModelSecondIteration	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testLoadModelSecondIteration() {$/;"	f
testMissingTable	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testMissingTable() {$/;"	f
testMultischemaFixture	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testMultischemaFixture() {$/;"	f
testMultischemaFixtureWithThreeDatabases	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testMultischemaFixtureWithThreeDatabases() {$/;"	f
testPkInHabtmLinkModel	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testPkInHabtmLinkModel() {$/;"	f
testPkInHabtmLinkModelArticleB	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testPkInHabtmLinkModelArticleB() {$/;"	f
testPluginAssociations	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testPluginAssociations() {$/;"	f
testResetOfExistsOnCreate	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testResetOfExistsOnCreate() {$/;"	f
testSchema	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testSchema() {$/;"	f
testSchemaNoDB	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testSchemaNoDB() {$/;"	f
testSchemaUseTableFalse	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testSchemaUseTableFalse() {$/;"	f
testTablePrefixSwitching	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testTablePrefixSwitching() {$/;"	f
testUseTableFalseExistsCheck	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testUseTableFalseExistsCheck() {$/;"	f
testWithAssociation	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public function testWithAssociation() {$/;"	f
time	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$time = date('Y-m-d H:i:s');$/;"	v
timeProvider	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^	public static function timeProvider() {$/;"	f
types	lib/Cake/Test/Case/Model/ModelIntegrationTest.php	/^		$types = array('integer', 'integer', 'string', 'text', 'string', 'datetime', 'datetime');$/;"	v
Apple	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$Apple = new Apple();$/;"	v
Article	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$Article = new Article();$/;"	v
Article	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$Article = new CustomArticle();$/;"	v
Author	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$Author = ClassRegistry::init('Author');$/;"	v
Author	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$Author = new Author();$/;"	v
Comment	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$Comment = new AgainModifiedComment();$/;"	v
DeviceType	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$DeviceType = new DeviceType();$/;"	v
Featured	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$Featured = new Featured();$/;"	v
JoinThing	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$JoinThing = new JoinThing();$/;"	v
Model	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$Model = ClassRegistry::init('StoriesTag');$/;"	v
Model	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$Model = new Person();$/;"	v
ModelReadTest	lib/Cake/Test/Case/Model/ModelReadTest.php	/^class ModelReadTest extends BaseModelTest {$/;"	c
MyUser	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$MyUser = new MyUser();$/;"	v
NumericArticle	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$NumericArticle = new NumericArticle();$/;"	v
Portfolio	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$Portfolio = new Portfolio();$/;"	v
Post	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$Post = ClassRegistry::init('Post');$/;"	v
Post	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$Post = new Post();$/;"	v
Product	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$Product = new Product();$/;"	v
Project	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$Project = new Project();$/;"	v
Something	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$Something = new Something();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$TestModel = new Apple();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$TestModel = new Article();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$TestModel = new Article10();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$TestModel = new Basket();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$TestModel = new Category();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$TestModel = new CategoryThread();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$TestModel = new Comment();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$TestModel = new Home();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$TestModel = new ModifiedAuthor();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$TestModel = new Post();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$TestModel = new Project();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$TestModel = new Thread();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$TestModel = new User();$/;"	v
TestModel2	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$TestModel2 = new DeviceType();$/;"	v
Thread	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$Thread = new Thread();$/;"	v
Writing	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$Writing = ClassRegistry::init(array('class' => 'Post', 'alias' => 'Writing'));$/;"	v
afterFindData	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$afterFindData = $afterFindModel->find('all');$/;"	v
afterFindModel	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$afterFindModel = new NodeAfterFind();$/;"	v
comments	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$comments = $Comment->find('all');$/;"	v
comments	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$comments = $Comment->find('first');$/;"	v
conditions	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$conditions = array('id' => array('1', 2));$/;"	v
conditions	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$conditions = array('id' => array('1', 2, '3.0'));$/;"	v
data	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$data = array('conditions' => array('title' => '12345'));$/;"	v
data	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$data = array('conditions' => array('title' => '12345abcde'));$/;"	v
data	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$data = array('user_id' => 3, 'title' => 'Fourth Article', 'body' => 'Article Body, unpublished', 'published' => 'N');$/;"	v
data	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$data = array();$/;"	v
db	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$db = ConnectionManager::getDataSource('test');$/;"	v
dbo	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$dbo = $Post->getDataSource();$/;"	v
doomed	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$doomed = Hash::extract($result['SomethingElse'], '{n}.JoinThing.doomed');$/;"	v
duplicateModel	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$duplicateModel = new NodeAfterFind();$/;"	v
expectation	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$expectation = array($/;"	v
expected	lib/Cake/Test/Case/Model/ModelReadTest.php	/^			$expected = array($/;"	v
expected	lib/Cake/Test/Case/Model/ModelReadTest.php	/^			$expected = array();$/;"	v
expected	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$expected = $TestModel->save($data);$/;"	v
expected	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$expected = array('Article');$/;"	v
expected	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$expected = array('Article', 'User');$/;"	v
expected	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$expected = array('Comment', 'Article');$/;"	v
expected	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$expected = array('User' => array($/;"	v
expected	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$expected = array('User' => array('id' => '2', 'user' => 'nate'));$/;"	v
expected	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$expected = array('User');$/;"	v
expected	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$expected = array('mariano (CakePHP)', 'nate (CakePHP)', 'larry (CakePHP)', 'garrett (CakePHP)');$/;"	v
expected	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$expected = array('mariano', 'nate', 'larry', 'garrett');$/;"	v
expected	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$expected = array('prev' => $one, 'next' => $three);$/;"	v
expected	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$expected = array('prev' => $two, 'next' => null);$/;"	v
expected	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$expected = array('prev' => null, 'next' => $two);$/;"	v
expected	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$expected = array();$/;"	v
expected	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$expected = array(1, 3, 6);$/;"	v
expected	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$expected = array(1, 6, 3);$/;"	v
expected	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$expected = array(6, 3, 1);$/;"	v
expected	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$expected = array(array(), array(), array(), array(), array(), array(), array());$/;"	v
expected	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$expected = count($Article->find('all', array($/;"	v
fullDebug	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$fullDebug = $this->db->fullDebug;$/;"	v
ids	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$ids = array(4 => 1, 5 => 3);$/;"	v
isStrictGroupBy	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$isStrictGroupBy = $this->db instanceof Postgres || $this->db instanceof Sqlite || $this->db instanceof Oracle || $this->db instanceof Sqlserver;$/;"	v
joinThingData	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$joinThingData = array($/;"	v
log	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$log = $this->db->getLog();$/;"	v
message	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$message = 'Postgres, Oracle, SQLite and SQL Server have strict GROUP BY and are incompatible with this test.';$/;"	v
model	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$model = new CustomArticle();$/;"	v
noAfterFindData	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$noAfterFindData = $noAfterFindModel->find('all');$/;"	v
noAfterFindModel	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$noAfterFindModel = new NodeNoAfterFind();$/;"	v
one	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$one = $TestModel->read();$/;"	v
order	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$order = 'Article.id ASC';$/;"	v
orderBy	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$orderBy = 'ArticleFeatured.id ASC';$/;"	v
param	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$param = array($/;"	v
params	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$params = array('%First%');$/;"	v
params	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$params = array('First Article');$/;"	v
params	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$params = array('First? Article', 'Y');$/;"	v
params	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$params = array('Y');$/;"	v
params	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$params = array(1, 'Y');$/;"	v
query	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$query = 'SELECT * FROM ' . $this->db->fullTableName('articles');$/;"	v
query	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$query = 'SELECT * FROM ? WHERE ? = ? AND ? = ?';$/;"	v
query	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$query = 'SELECT id, created FROM ';$/;"	v
query	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$query = 'SELECT title FROM ';$/;"	v
query	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$query = 'SELECT title, body FROM ';$/;"	v
query	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$query = 'SELECT title, id FROM ';$/;"	v
query	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$query = 'SELECT title, published FROM ';$/;"	v
recursive	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$recursive = -1;$/;"	v
recursive	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$recursive = 3;$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^			$result = $Post->find('first');$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^			$result = $TestModel->find('all', array('limit' => 3, 'page' => 2));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^			$result = $TestModel->find('all', array('limit' => 3, 'page' => 3));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^			$result = $TestModel->find('list', array($/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Apple->find('threaded');$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Article->find($/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Article->find('count', array($/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Article->find('count', array('group' => array('Article.user_id')));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Article->find('first');$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Article->find('neighbors', array($/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Article->find('published');$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Article->find('unPublished');$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Article->query($query, $params);$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Article->query($query, $params, false);$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Author->find('all', array($/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Author->find('first', array($/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $DeviceType->read(null, 1);$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Featured->find('all', array($/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Model->find('all');$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Model->find('threaded');$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Model->find('threaded', array('parent' => 'mother_id'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $MyUser->find('all', array($/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $NumericArticle->find('first', $data);$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Portfolio->find('first', array('conditions' => array('id' => 2), 'recursive' => 3));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Post->field('other_field');$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Post->field('two');$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Post->find('all', array($/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Post->find('all', array('order' => array('Author.joined' => 'ASC')));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Post->find('all', array('order' => array('Author.joined' => 'DESC')));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Post->find('first');$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Post->find('first', array($/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Post->find('first', array('fields' => array('author_id')));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Post->find('first', array('fields' => array('author_id', 'two')));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Post->find('first', array('fields' => array('two')));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Post->find('list', array('order' => array('Post.other_field' => 'ASC')));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Post->find('list', array('order' => array('Post.other_field' => 'DESC')));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Product->find('all', array($/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Project->find('all', array($/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Project->find('first');$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Something->JoinThing->find('all', array('conditions' => array('something_else_id' => 2)));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Something->find('first');$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->Parent->unbindModel(array('belongsTo' => array('Parent')));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->Parent->unbindModel(array('hasOne' => array('Sample')));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->Sample->unbindModel(array('belongsTo' => 'Apple'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->bindModel($/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->bindModel(array($/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->bindModel(array('hasMany' => array($/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->bindModel(array('hasMany' => array('Article')));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->bindModel(array('hasMany' => array('Article')), false);$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->bindModel(array('hasMany' => array('Comment')));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->bindModel(array('hasMany' => array('Comment')), false);$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->buildQuery('all', array('returnQuery' => true, 'conditions' => array('user' => 'larry')));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->field('COUNT(*) AS count', true);$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->field('COUNT(*)', true);$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->field('User.user');$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->field('user');$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->field('user', array($/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->find('all');$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->find('all', array($/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->find('all', array('conditions' => 'User.id > 2'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->find('all', array('conditions' => array('Article.user_id' => 1)));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->find('all', array('conditions' => array('User.id' => '0')));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->find('all', array('fields' => 'User.id, User.user'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->find('all', array('fields' => 'User.user', 'order' => 'User.user ASC'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->find('all', array('fields' => 'User.user', 'order' => 'User.user DESC'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->find('all', array('limit' => 3, 'page' => 1));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->find('all', compact('conditions', 'recursive', 'order'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->find('all', compact('recursive'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->find('all', compact('recursive', 'conditions', 'order'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->find('count');$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->find('count', array('conditions' => array($/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->find('count', array('fields' => 'DISTINCT name'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->find('first', array('conditions' => array('CategoryThread.id' => 7)));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->find('list', array($/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->find('neighbors');$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->find('neighbors', array($/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->find('neighbors', array('fields' => array('id')));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->find('neighbors', array('recursive' => -1));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->find('neighbors', array('recursive' => 2));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->find('threaded');$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->find('threaded', array($/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->find('threaded', array('order' => 'id DESC'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->findByPassword('5f4dcc3b5aa765d61d8327deb882cf99');$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->findByUser('mariano');$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->hasMany;$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->read('id, user');$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->read('id, user', 1);$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->read('id, user', 2);$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->read('id, user', 3);$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->read();$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->read(array('id', 'user'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->read(null, 2);$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->unbindModel($/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->unbindModel(array($/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->unbindModel(array('hasMany' => 'Child'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->unbindModel(array('hasMany' => array('Child')));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->unbindModel(array('hasMany' => array('Comment')));$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $TestModel->unbindModel(array('hasMany' => array('Comment')), false);$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Thread->find('all', array($/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $Writing->find('first');$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $model->find('all');$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $this->db->getQueryCache($query);$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = $this->db->getQueryCache($query, $params);$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = Hash::combine($/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = Hash::extract($TestModel->find('all'), '{n}.Author.user');$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = Hash::extract($TestModel->find('all', array('callbacks' => 'after')), '{n}.Author.user');$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = Hash::extract($TestModel->find('all', array('callbacks' => 'before')), '{n}.Author.user');$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = Hash::extract($TestModel->find('all', array('callbacks' => false)), '{n}.Author.user');$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = Hash::extract($result, '{n}.Author.joined');$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = Hash::extract($result, '{n}.children');$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = array();$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = array_keys($TestModel->belongsTo);$/;"	v
result	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$result = array_keys($TestModel->hasMany);$/;"	v
results	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$results = $Article->query($query);$/;"	v
results	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$results = $Article->query($query, false);$/;"	v
results	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$results = $Article->query($query, true);$/;"	v
results	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$results = $JoinThing->find('all');$/;"	v
results	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$results = $Something->find('all');$/;"	v
rows	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$rows = $Thread->find('all', array($/;"	v
sql	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$sql = $this->db->buildStatement($/;"	v
testAfterFindUnset	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testAfterFindUnset() {$/;"	f
testAssociationAfterFind	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testAssociationAfterFind() {$/;"	f
testAssociationAfterFindCalbacksDisabled	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testAssociationAfterFindCalbacksDisabled() {$/;"	f
testBindModelMultipleTimesResetCorrectly	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testBindModelMultipleTimesResetCorrectly() {$/;"	f
testBindMultipleTimes	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testBindMultipleTimes() {$/;"	f
testBindMultipleTimesWithDifferentResetSettings	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testBindMultipleTimesWithDifferentResetSettings() {$/;"	f
testBindUnbind	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testBindUnbind() {$/;"	f
testBindWithCustomPrimaryKey	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testBindWithCustomPrimaryKey() {$/;"	f
testBuildQuery	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testBuildQuery() {$/;"	f
testCallbackDisabling	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testCallbackDisabling() {$/;"	f
testCallbackSourceChange	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testCallbackSourceChange() {$/;"	f
testCallbackSourceChangeUnknownDatasource	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testCallbackSourceChangeUnknownDatasource() {$/;"	f
testConditionalNumerics	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testConditionalNumerics() {$/;"	f
testDeeperAssociationAfterFind	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testDeeperAssociationAfterFind() {$/;"	f
testExists	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testExists() {$/;"	f
testFetchingNonUniqueFKJoinTableRecords	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testFetchingNonUniqueFKJoinTableRecords() {$/;"	f
testFindAll	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testFindAll() {$/;"	f
testFindAllFakeThread	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testFindAllFakeThread() {$/;"	f
testFindAllRecursiveSelfJoin	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testFindAllRecursiveSelfJoin() {$/;"	f
testFindAllRecursiveWithHabtm	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testFindAllRecursiveWithHabtm() {$/;"	f
testFindAllThreaded	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testFindAllThreaded() {$/;"	f
testFindAllWithConditionInChildQuery	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testFindAllWithConditionInChildQuery() {$/;"	f
testFindAllWithConditionsHavingMixedDataTypes	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testFindAllWithConditionsHavingMixedDataTypes() {$/;"	f
testFindCombinedRelations	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testFindCombinedRelations() {$/;"	f
testFindCount	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testFindCount() {$/;"	f
testFindCountDistinct	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testFindCountDistinct() {$/;"	f
testFindCountWithDbExpressions	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testFindCountWithDbExpressions() {$/;"	f
testFindFakeThread	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testFindFakeThread() {$/;"	f
testFindField	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testFindField() {$/;"	f
testFindFirstNoIdUsed	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testFindFirstNoIdUsed() {$/;"	f
testFindMagic	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testFindMagic() {$/;"	f
testFindNeighbors	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testFindNeighbors() {$/;"	f
testFindNeighborsNoPrev	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testFindNeighborsNoPrev() {$/;"	f
testFindQueryTypeInCallbacks	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testFindQueryTypeInCallbacks() {$/;"	f
testFindThreaded	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testFindThreaded() {$/;"	f
testFindThreadedNoParent	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testFindThreadedNoParent() {$/;"	f
testFindUnique	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testFindUnique() {$/;"	f
testGenerateFindList	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testGenerateFindList() {$/;"	f
testGetVirtualField	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testGetVirtualField() {$/;"	f
testGroupBy	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testGroupBy() {$/;"	f
testHabtmFinderQuery	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testHabtmFinderQuery() {$/;"	f
testHabtmLimitOptimization	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testHabtmLimitOptimization() {$/;"	f
testHabtmRecursiveBelongsTo	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testHabtmRecursiveBelongsTo() {$/;"	f
testHasManyLimitOptimization	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testHasManyLimitOptimization() {$/;"	f
testIsVirtualField	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testIsVirtualField() {$/;"	f
testMultipleBelongsToWithSameClass	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testMultipleBelongsToWithSameClass() {$/;"	f
testNonNumericHabtmJoinKey	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testNonNumericHabtmJoinKey() {$/;"	f
testNotEqualsInArrayWithOneValue	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testNotEqualsInArrayWithOneValue() {$/;"	f
testNotInArrayWithOneValue	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testNotInArrayWithOneValue() {$/;"	f
testOldQuery	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testOldQuery() {$/;"	f
testParameterMismatch	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testParameterMismatch() {$/;"	f
testPreparedQuery	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testPreparedQuery() {$/;"	f
testRead	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testRead() {$/;"	f
testReadFakeThread	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testReadFakeThread() {$/;"	f
testRecursiveFindAll	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testRecursiveFindAll() {$/;"	f
testRecursiveFindAllWithLimit	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testRecursiveFindAllWithLimit() {$/;"	f
testRecursiveRead	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testRecursiveRead() {$/;"	f
testRecursiveUnbind	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testRecursiveUnbind() {$/;"	f
testRelatedAfterFindCallback	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testRelatedAfterFindCallback() {$/;"	f
testSaveEmpty	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testSaveEmpty() {$/;"	f
testSelfAssociationAfterFind	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testSelfAssociationAfterFind() {$/;"	f
testUnBindMultipleTimesWithDifferentResetSettings	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testUnBindMultipleTimesWithDifferentResetSettings() {$/;"	f
testUnbindMultipleTimesResetCorrectly	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testUnbindMultipleTimesResetCorrectly() {$/;"	f
testVeryStrangeUseCase	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testVeryStrangeUseCase() {$/;"	f
testVirtualFieldAsAString	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testVirtualFieldAsAString() {$/;"	f
testVirtualFields	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testVirtualFields() {$/;"	f
testVirtualFieldsMysql	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testVirtualFieldsMysql() {$/;"	f
testVirtualFieldsOrder	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testVirtualFieldsOrder() {$/;"	f
testfindCustom	lib/Cake/Test/Case/Model/ModelReadTest.php	/^	public function testfindCustom() {$/;"	f
three	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$three = $TestModel->read();$/;"	v
two	lib/Cake/Test/Case/Model/ModelReadTest.php	/^		$two = $TestModel->read();$/;"	v
ModelTest	lib/Cake/Test/Case/Model/ModelTest.php	/^class ModelTest extends PHPUnit_Framework_TestSuite {$/;"	c
suite	lib/Cake/Test/Case/Model/ModelTest.php	/^		$suite = new PHPUnit_Framework_TestSuite('All Model related class tests');$/;"	v
suite	lib/Cake/Test/Case/Model/ModelTest.php	/^	public static function suite() {$/;"	f
BaseModelTest	lib/Cake/Test/Case/Model/ModelTestBase.php	/^abstract class BaseModelTest extends CakeTestCase {$/;"	c
autoFixtures	lib/Cake/Test/Case/Model/ModelTestBase.php	/^	public $autoFixtures = false;$/;"	v
backupGlobals	lib/Cake/Test/Case/Model/ModelTestBase.php	/^	public $backupGlobals = false;$/;"	v
debug	lib/Cake/Test/Case/Model/ModelTestBase.php	/^		$this->debug = Configure::read('debug');$/;"	v
fixtures	lib/Cake/Test/Case/Model/ModelTestBase.php	/^	public $fixtures = array($/;"	v
setUp	lib/Cake/Test/Case/Model/ModelTestBase.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Model/ModelTestBase.php	/^	public function tearDown() {$/;"	f
Article	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$Article = ClassRegistry::init('Article');$/;"	v
Article	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$Article = new Article();$/;"	v
Attachment	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$Attachment = ClassRegistry::init('Attachment');$/;"	v
Author	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$Author = new Author();$/;"	v
JoinThing	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$JoinThing = $Something->JoinThing;$/;"	v
ModelValidationTest	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^class ModelValidationTest extends BaseModelTest {$/;"	c
Post	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$Post = $Author->Post;$/;"	v
Something	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$Something = new Something();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$TestModel = $this->getMock('Article', array('beforeValidate', 'afterValidate'));$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$TestModel = new Article();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$TestModel = new Comment();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$TestModel = new TestValidate();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$TestModel = new ValidationTest1();$/;"	v
ValidationRuleBehavior	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^class ValidationRuleBehavior extends ModelBehavior {$/;"	c
Validator	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$Validator = $TestModel->validator();$/;"	v
ValidatorA	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$ValidatorA = new ModelValidator($TestModel);$/;"	v
ValidatorB	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$ValidatorB = new ModelValidator($TestModel);$/;"	v
articles	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$articles = array($/;"	v
beforeValidate	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function beforeValidate(Model $Model, $options = array()) {$/;"	f
count	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$count = $Author->find('count', array('conditions' => array('Author.id' => $id)));$/;"	v
count	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$count = $Post->find('count', array($/;"	v
count	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$count = $Something->find('count', array('conditions' => array('Something.id' => $data['Something']['id'])));$/;"	v
data	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$data = array($/;"	v
data	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$data = array('TestValidate' => array($/;"	v
data	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$data = array('TestValidate' => array('modified' => ''));$/;"	v
data	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$data = array('TestValidate' => array('modified' => false));$/;"	v
data	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$data = array('TestValidate' => array('modified' => null));$/;"	v
data	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$data = array('TestValidate' => array('title' => ''));$/;"	v
data	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$data = array('TestValidate' => array('title' => 'My Article Title'));$/;"	v
data	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$data = array('TestValidate' => array('title' => 'new title'));$/;"	v
data	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$data = array('TestValidate' => array('title' => 'title-new'));$/;"	v
data	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$data = array('title' => 'notatitle');$/;"	v
data	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$data = array('title' => 'title-is-good');$/;"	v
expected	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$expected = array('Comment' => array($/;"	v
expected	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$expected = array('body' => array('This field cannot be left blank'));$/;"	v
expected	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$expected = array('name' => array('This field cannot be left blank'));$/;"	v
expected	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$expected = array('title' => array('This field cannot be left blank'), 'name' => array('This field cannot be left blank'));$/;"	v
expected	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$expected = array('user_id', 'title', 'body');$/;"	v
expected	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$expected = array();$/;"	v
expected	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$expected = array(0 => 'That aint right');$/;"	v
expected	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$expected = array_map('strtolower', get_class_methods('Article'));$/;"	v
expectedError	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$expectedError = array('doomed' => array('This field cannot be left blank'));$/;"	v
fieldList	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$fieldList = array($/;"	v
fields	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$fields = $this->settings[$Model->alias]['fields'];$/;"	v
i	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$i = 0;$/;"	v
id	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$id = $Author->id;$/;"	v
joinRecords	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$joinRecords = $JoinThing->find('count', array($/;"	v
lang	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$lang = Configure::read('Config.language');$/;"	v
model	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$model = $this->getMock('Article', array('isLegit'));$/;"	v
model	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$model = new Article;$/;"	v
model	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$model = new Comment();$/;"	v
model	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$model = new CustomArticle();$/;"	v
newList	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$newList = array($/;"	v
record	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$record = array($/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $Article->validationErrors;$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $Attachment->validateAssociated($data, array('atomic' => false, 'deep' => true));$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $Attachment->validationErrors;$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $Author->saveAll($data, array('validate' => 'first'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $Author->saveAll($data, array('validate' => 'only'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $Author->validateAssociated($data);$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $Something->save($data);$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $Something->saveAll($data, array('validate' => 'first'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $Something->saveAll($data, array('validate' => 'only'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $Something->validateAssociated($data);$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $Something->validator()->validateAssociated($data);$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->Comment->Attachment->saveAll($data, array('validate' => 'only', 'atomic' => false, 'deep' => false));$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->Comment->Attachment->saveAll($data, array('validate' => 'only', 'atomic' => false, 'deep' => true));$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->Comment->Attachment->saveAll($data, array('validate' => 'only', 'deep' => false));$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->Comment->Attachment->saveAll($data, array('validate' => 'only', 'deep' => true));$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->Comment->Attachment->validateAssociated($data, array('atomic' => false, 'deep' => false));$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->Comment->Attachment->validateAssociated($data, array('atomic' => false, 'deep' => true));$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->Comment->Attachment->validateAssociated($data, array('deep' => false));$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->Comment->Attachment->validateAssociated($data, array('deep' => true));$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->Comment->Attachment->validationErrors;$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->Comment->validationErrors;$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->create($data) && $TestModel->validates();$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->create($data);$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->find('first', array($/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->save($data, array('fieldList' => array('title')));$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->saveAll($data, array($/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->saveAll($data, array('atomic' => false, 'validate' => 'only'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->saveAll($data, array('validate' => 'first'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->saveAll($data, array('validate' => 'only'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->saveAll($data, array('validate' => 'only', 'atomic' => false, 'deep' => false));$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->saveAll($data, array('validate' => 'only', 'atomic' => false, 'deep' => true));$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->saveAll($data, array('validate' => 'only', 'deep' => false));$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->saveAll($data, array('validate' => 'only', 'deep' => true));$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->saveAll($record, array($/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->saveAll($record, array('validate' => 'only'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->validateAssociated($data);$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->validateAssociated($data, array('atomic' => false));$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->validateAssociated($data, array('atomic' => false, 'deep' => false));$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->validateAssociated($data, array('atomic' => false, 'deep' => true));$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->validateAssociated($data, array('deep' => false));$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->validateAssociated($data, array('deep' => true));$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->validateAssociated($data, array('fieldList' => $fieldList));$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->validateAssociated($record);$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->validateAssociated($record, array('fieldList' => $fieldList));$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->validateMany($data);$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->validates();$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->validationErrors;$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $TestModel->validator()->getField('title');$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $Validator->getField('title')->validate($data);$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $Validator->getField();$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $Validator->getMethods();$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $Validator->getModel();$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $Validator->setValidationDomain('default');$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $Validator->setValidationDomain('other');$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $model->saveAll($data, array('validate' => 'first'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $model->saveAll($data, array('validate' => 'first', 'deep' => true));$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $model->saveAll($data, array('validate' => 'only'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $model->validateAssociated($data);$/;"	v
result	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$result = $user->saveAll($data, array('validate' => 'first'));$/;"	v
rule	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$rule = current($titleValidator->getRules());$/;"	v
rules	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$rules = $Validator['new'];$/;"	v
rules	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$rules = $Validator['other'];$/;"	v
rules	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$rules = $validator['body']->getRules();$/;"	v
set	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$set = array($/;"	v
set	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$set = new CakeValidationSet('other', array($/;"	v
setUp	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function setUp() {$/;"	f
setup	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function setup(Model $Model, $config = array()) {$/;"	f
testAddMultipleRules	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testAddMultipleRules() {$/;"	f
testAddRule	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testAddRule() {$/;"	f
testArrayAccessExists	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testArrayAccessExists() {$/;"	f
testArrayAccessGet	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testArrayAccessGet() {$/;"	f
testArrayAccessSet	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testArrayAccessSet() {$/;"	f
testArrayAccessUset	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testArrayAccessUset() {$/;"	f
testCount	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testCount() {$/;"	f
testCustomMethodWithEmptyValue	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testCustomMethodWithEmptyValue() {$/;"	f
testCustomMethodsWithCakeValidationSet	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testCustomMethodsWithCakeValidationSet() {$/;"	f
testDynamicValidationRuleBuilding	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testDynamicValidationRuleBuilding() {$/;"	f
testFirstWithDefaults	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testFirstWithDefaults() {$/;"	f
testGetMethods	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testGetMethods() {$/;"	f
testGetMethodsRefresh	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testGetMethodsRefresh() {$/;"	f
testGetModel	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testGetModel() {$/;"	f
testInvalidFieldsWhitelist	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testInvalidFieldsWhitelist() {$/;"	f
testInvalidFieldsWithFieldListParams	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testInvalidFieldsWithFieldListParams() {$/;"	f
testIterator	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testIterator() {$/;"	f
testMissingValidationErrorTriggering	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testMissingValidationErrorTriggering() {$/;"	f
testOnRequiredConflictValidation	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testOnRequiredConflictValidation() {$/;"	f
testRemoveRule	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testRemoveRule() {$/;"	f
testSaveAllDeepValidateOnly	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testSaveAllDeepValidateOnly() {$/;"	f
testSaveAllNotDeepValidateOnly	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testSaveAllNotDeepValidateOnly() {$/;"	f
testSetValidationDomain	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testSetValidationDomain() {$/;"	f
testStateRequiredValidation	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testStateRequiredValidation() {$/;"	f
testStateValidation	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testStateValidation() {$/;"	f
testValidateAssociated	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testValidateAssociated() {$/;"	f
testValidateAssociatedAtomicFalseDeepTrueWithErrors	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testValidateAssociatedAtomicFalseDeepTrueWithErrors() {$/;"	f
testValidateCallbacks	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testValidateCallbacks() {$/;"	f
testValidateFirstAssociatedWithBeforeValidate	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testValidateFirstAssociatedWithBeforeValidate() {$/;"	f
testValidateFirstAssociatedWithBeforeValidate2	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testValidateFirstAssociatedWithBeforeValidate2() {$/;"	f
testValidateFirstWithBeforeValidate	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testValidateFirstWithBeforeValidate() {$/;"	f
testValidateMany	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testValidateMany() {$/;"	f
testValidateManyAtomicFalseDeepTrueWithErrors	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testValidateManyAtomicFalseDeepTrueWithErrors() {$/;"	f
testValidateWithFieldListAndBehavior	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testValidateWithFieldListAndBehavior() {$/;"	f
testValidates	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testValidates() {$/;"	f
testValidatesWithAssociations	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testValidatesWithAssociations() {$/;"	f
testValidatesWithModelsAndSaveAll	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testValidatesWithModelsAndSaveAll() {$/;"	f
testValidatesWithModelsAndSaveAllWithoutId	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testValidatesWithModelsAndSaveAllWithoutId() {$/;"	f
testValidationMessageAsArray	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testValidationMessageAsArray() {$/;"	f
testValidationMessageTranslation	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testValidationMessageTranslation() {$/;"	f
testValidationParams	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testValidationParams() {$/;"	f
testValidator	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testValidator() {$/;"	f
testValidatorOverride	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testValidatorOverride() {$/;"	f
testValidatorTypehintException	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^	public function testValidatorTypehintException() {$/;"	f
title	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$title = $model->field('title', array('body' => 'foo1'));$/;"	v
titleValidator	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$titleValidator = $Validator['body'];$/;"	v
titleValidator	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$titleValidator = $Validator['title'];$/;"	v
titleValidator	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$titleValidator = $Validator['user_id'];$/;"	v
user	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$user = new User();$/;"	v
validator	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$validator = $model->validator();$/;"	v
validators	lib/Cake/Test/Case/Model/ModelValidationTest.php	/^		$validators = $rules->getRules();$/;"	v
Article	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$Article = ClassRegistry::init('Article');$/;"	v
Article	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$Article = new Article();$/;"	v
Article	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$Article = new ArticleFeatured();$/;"	v
Bid	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$Bid = ClassRegistry::init('Bid');$/;"	v
Category	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$Category = new CategoryThread();$/;"	v
Comment	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$Comment = new Comment();$/;"	v
Fruit	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$Fruit = new Fruit();$/;"	v
Fruit	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$Fruit = new FruitNoWith();$/;"	v
Model	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$Model = new CallbackPostTestModel();$/;"	v
ModelWriteTest	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^class ModelWriteTest extends BaseModelTest {$/;"	c
Node	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$Node = new Node();$/;"	v
OverallFavorite	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$OverallFavorite = new OverallFavorite();$/;"	v
Post	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$Post = new CounterCachePost();$/;"	v
Post	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$Post = new CounterCachePostNonstandardPrimaryKey();$/;"	v
Post	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$Post = new TestPost();$/;"	v
Primary	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$Primary = new PrimaryModel();$/;"	v
ProductUpdateAll	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$ProductUpdateAll = new ProductUpdateAll();$/;"	v
Something	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$Something = new Something();$/;"	v
Story	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$Story = new Story();$/;"	v
TestAuthor	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^class TestAuthor extends Author {$/;"	c
TestModel	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$TestModel = new Article();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$TestModel = new Author();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$TestModel = new Comment();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$TestModel = new DataTest();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$TestModel = new Item();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$TestModel = new JoinA();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$TestModel = new Portfolio();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$TestModel = new Post();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$TestModel = new Syfile();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$TestModel = new TheVoid();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$TestModel = new User();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$TestModel = new Uuid();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$TestModel = new Uuiditem();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$TestModel = new Uuidportfolio();$/;"	v
TestModel	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$TestModel = new ValidationTest1();$/;"	v
TestModel2	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$TestModel2 = new Item();$/;"	v
TestPost	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^class TestPost extends Post {$/;"	c
ThePaper	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$ThePaper = new ThePaper();$/;"	v
TransactionManyTestModel	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$TransactionManyTestModel = new TransactionManyTestModel();$/;"	v
TransactionTestModel	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$TransactionTestModel = new TransactionTestModel();$/;"	v
UnderscoreField	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$UnderscoreField = new UnderscoreField();$/;"	v
User	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$User = new CounterCacheUser();$/;"	v
User	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$User = new CounterCacheUserNonstandardPrimaryKey();$/;"	v
User	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$User = new User();$/;"	v
_back	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$_back = array($/;"	v
_dataSourceObject	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$this->_dataSourceObject = $object;$/;"	v
_dataSourceObject	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	protected $_dataSourceObject;$/;"	v
alias	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$alias = $db->name('Post.published');$/;"	v
articles	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$articles = $Article->find('all', array($/;"	v
belongsTo	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public $belongsTo = array($/;"	v
column	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^			$column = '';$/;"	v
column	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$column = 'COLUMN ';$/;"	v
comments	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$comments = $Comment->find('all', array($/;"	v
conditions	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$conditions = array('Group.name' => 'group one');$/;"	v
currentCount	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$currentCount = $UnderscoreField->find('count');$/;"	v
data	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$data = $Post->find('first', array($/;"	v
data	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$data = array($/;"	v
data	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$data = array('Article' => array($/;"	v
data	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$data = array('Article' => array('id' => '2'), 'Tag' => array('Tag' => array(2, 3)));$/;"	v
data	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$data = array('Article' => array('id' => '5', 'title' => 'Fifth Article - New Title 5'));$/;"	v
data	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$data = array('Attachment' => array($/;"	v
data	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$data = array('Comment' => array($/;"	v
data	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$data = array('Item' => array('Item' => array(1, 2)));$/;"	v
data	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$data = array('Post' => array($/;"	v
data	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$data = array('Tag' => array('Tag' => ''));$/;"	v
data	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$data = array('Tag' => array('Tag' => array()));$/;"	v
data	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$data = array('Tag' => array('Tag' => array(1, 2, 3)));$/;"	v
data	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$data = array('Tag' => array('Tag' => array(2)));$/;"	v
data	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$data = array('Tag' => array('Tag' => array(2, 3)));$/;"	v
data	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$data = array('UnderscoreField' => array($/;"	v
data	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$data = array('User' => array($/;"	v
data	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$data = array('Uuiditem' => array('name' => 'Item 7', 'published' => 0));$/;"	v
data	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$data = array('Uuidportfolio' => array('name' => 'Portfolio 3'));$/;"	v
db	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$db = $TestModel->getDataSource();$/;"	v
db	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$db = $this->getMock('DboSource', array('begin', 'connect', 'rollback', 'describe'));$/;"	v
db	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$db = $this->getMock('DboSource', array('connect', 'rollback', 'describe', 'create', 'begin'));$/;"	v
db	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$db = $this->getMock('DboSource', array('connect', 'rollback', 'describe', 'create', 'update', 'begin'));$/;"	v
db	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$db = ConnectionManager::getDataSource('test');$/;"	v
errors	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$errors = array(1 => array('title' => array('This field cannot be left blank')));$/;"	v
expected	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$expected = $TestModel->User->find('count');$/;"	v
expected	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$expected = 1;$/;"	v
expected	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$expected = 3;$/;"	v
expected	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$expected = array('2', '4', '1', '1', '1', '2');$/;"	v
expected	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$expected = array('Article' => array($/;"	v
expected	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$expected = array('Comment' => array($/;"	v
expected	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$expected = array('User' => array('user' => array('This field cannot be left blank')));$/;"	v
expected	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$expected = array('body' => array('This field cannot be left blank'));$/;"	v
expected	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$expected = array('new record', 'new record');$/;"	v
expected	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$expected = array();$/;"	v
expected	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$expected = array(1 => 5, 2 => 4, 3 => 1, 4 => 1, 5 => 1, 6 => 5);$/;"	v
expected	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$expected = array(1);$/;"	v
expected	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$expected = array(4, 5);$/;"	v
expected	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$expected = array(array($/;"	v
expected	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$expected = array(true, false);$/;"	v
expected	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$expected = array(true, true);$/;"	v
expected	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$expected = array_fill(0, 2, 'Updated today');$/;"	v
false	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$false = array('Post' => array('published' => false, 'id' => 2));$/;"	v
fieldList	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$fieldList = array($/;"	v
fieldList	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$fieldList = array('title', 'author_id');$/;"	v
fields	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$fields = array('Post.published', 'Post.id');$/;"	v
getDataSource	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function getDataSource() {$/;"	f
hasMany	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public $hasMany = array($/;"	v
id	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$id = $TestModel->id;$/;"	v
invalidData	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$invalidData = array($/;"	v
lastInsertId	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$lastInsertId = $TestModel->JoinAsJoinB->getLastInsertID();$/;"	v
model	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$model = ClassRegistry::init('Bid');$/;"	v
model	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$model = new Article();$/;"	v
model	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$model = new Author();$/;"	v
model	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$model = new Bidding();$/;"	v
model	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$model = new Comment();$/;"	v
model	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$model = new DataTest();$/;"	v
model	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$model = new ProductUpdateAll();$/;"	v
record	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$record = array($/;"	v
restore	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$restore = setlocale(LC_NUMERIC, 0);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Article->field('title', array('id' => 1));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Article->find('first', array('conditions' => array('Article.id' => 1)));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Article->find('first', array('order' => array('ArticleFeatured.created' => 'DESC')));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Article->getInsertID();$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Article->read();$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Article->save($data);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Article->save(Xml::build('<article title="test xml" user_id="5" \/>'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Article->save(Xml::build('<article><title>testing with DOMDocument<\/title><user_id>7<\/user_id><\/article>', array('return' => 'domdocument')));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Article->save(Xml::build('<article><title>testing<\/title><user_id>6<\/user_id><\/article>'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Article->save(array($/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Article->saveAll($data);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Article->saveAll($record, array($/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Article->saveAll($record, array('validate' => 'only'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Article->saveAll();$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Article->saveAssociated($data);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Article->validationErrors;$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Bid->save(array('Bid' => array('not in schema' => 1)));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Bid->save(array('Bid' => array()));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Category->updateAll(array('CategoryThread.name' => "'updated'"), array('CategoryThread.parent_id' => 5));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Comment->create($data);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Comment->save($data);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Comment->save();$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Fruit->save($data);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Model->save($data);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Node->read();$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Post->find('first', array('conditions' => $updateConditions, 'fields' => $fields));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Primary->field('primary_name', array('id' => $result));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Primary->field('primary_name', array('id' => 1));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Primary->find('count');$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Primary->getInsertID();$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Primary->save($data);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Something->read();$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Something->read(null, 1);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Something->save();$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Something->saveAll($data);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Something->saveAll($invalidData, array($/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Something->saveAll($validData, array($/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Something->saveAssociated($data);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Something->saveMany($invalidData, array($/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Something->saveMany($validData, array($/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Story->find('all', array('order' => array('Story.story')));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Story->save();$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $Story->set($data);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->Author->Comment->find('first', array($/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->Comment->Attachment->field('id', array('attachment' => 'deepsaved'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->Comment->Attachment->find('all', array($/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->Comment->Attachment->findById($TestModel->Comment->Attachment->id);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->Comment->Attachment->save($data);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->Comment->Attachment->saveAll($data, array('deep' => false));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->Comment->Attachment->saveAll($data, array('deep' => true));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->Comment->Attachment->saveAll($data, array('validate' => 'only', 'atomic' => false, 'deep' => false));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->Comment->Attachment->saveAll($data, array('validate' => 'only', 'atomic' => false, 'deep' => true));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->Comment->Attachment->saveAll($data, array('validate' => 'only', 'deep' => false));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->Comment->Attachment->saveAll($data, array('validate' => 'only', 'deep' => true));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->Comment->Attachment->validationErrors;$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->Comment->User->field('id', array('user' => 'newuser', 'password' => 'newuserpass'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->Comment->User->find('first', array($/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->Comment->create() && $TestModel->Comment->save($data);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->Comment->find('first', array($/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->Comment->validationErrors;$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->JoinAsJoinB->findById(1);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->JoinAsJoinB->save($data);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->JoinAsJoinB->saveField('other', $updatedValue, false);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->User->find('count');$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->create($data) && $TestModel->save();$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->create($data);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->create($data, true);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->create() && $TestModel->save($data);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->create() && $TestModel->save($data, false);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->create() && $TestModel->save($data, true, array('id', 'title', 'published'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->create()$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->create(array($/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->create(array('Article' => $data), true);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->find('all');$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->find('all', array($/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->find('all', array('order' => array('Post.id ' => 'ASC')));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->find('all', array('recursive' => -1));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->find('all', array('recursive' => -1, 'order' => 'Post.id ASC'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->find('first', array($/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->find('first', array('fields' => array('id', 'published')));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->find('first', array('fields' => array('id', 'user_id', 'title', 'body'), 'conditions' => array('Article.id' => 2)));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->findById($TestModel->id);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->findById($id);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->findById($result['Comment']['article_id']);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->findById(1);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->findById(2);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->findByTitle('Test record');$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->read();$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->read(array('id', 'user_id'), 1);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->read(array('id', 'user_id', 'title', 'body'), 1);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->read(array('id', 'user_id', 'title', 'body', 'published'), 1);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->read(array('id', 'user_id', 'title', 'body', 'published'), 4);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->read(array('id', 'user_id', 'title', 'body', 'published'), 5);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->read(null, $id);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->read(null, 1);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->read(null, 4);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->save($data);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->save();$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->save(array('published' => true, 'id' => 1));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->saveAll($/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->saveAll($data);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->saveAll($data, array('deep' => false));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->saveAll($data, array('deep' => true));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->saveAll($data, array('fieldList' => $fieldList));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->saveAll($data, array('validate' => 'only'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->saveAll($data, array('validate' => false));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->saveAll($data, array('validate' => true, 'atomic' => false));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->saveAll($record, array($/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->saveAll($record, array('validate' => 'only'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->saveAll(array($/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->saveAssociated($/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->saveAssociated(array($/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->saveAssociated(array('Article' => array()), array('validate' => true));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->saveAssociated(array('Article' => array()), array('validate' => true, 'atomic' => false));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->saveField('title', '');$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->saveField('title', '', true);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->saveField('title', 'First Article');$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->saveField('title', 'New First Article');$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->saveField('user_id', 9999);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->saveMany($data);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->saveMany($data, array('validate' => true, 'atomic' => false));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->saveMany(array($/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->set($data) && $TestModel->save();$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->set($data);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->updateAll($/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->updateAll(array('published' => true));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->updateAll(array('published' => true), array('Item.id' => 1));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->validateAssociated($data);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->validateAssociated($data, array($/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->validateMany($data);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $TestModel->validationErrors;$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $ThePaper->findById(1);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $ThePaper->findById(2);$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $User->find('all', array('order' => 'User.id'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $User->find('first', array($/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $User->read();$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $User->save();$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $User->save(array('password' => 'test'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $model->Comment->find('all');$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $model->Comment->saveAll($data, array('validate' => 'first'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $model->Comment->saveAssociated($data, array('validate' => 'first'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $model->find('all');$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $model->find('all', array('fields' => array($/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $model->save($/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $model->save(array($/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $model->saveAll($/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $model->saveAll();$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $model->saveAll(array($/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $model->saveAll(array(), array('validate' => 'first'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $model->saveAssociated($/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $model->saveAssociated(array($/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $model->saveAssociated(array());$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $model->saveAssociated(array(), array('validate' => true));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $model->saveMany(array($/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $model->saveMany(array());$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $model->saveMany(array(), array('validate' => true));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $model->updateAll(array('user' => '""'));$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = $user[$User->alias]['post_count'];$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = ($TestModel->set($data) && $TestModel->save());$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = Hash::combine($TestModel->find('all'), '{n}.Comment.id', '{n}.Comment.user_id');$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = Hash::extract($/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = Hash::extract($Category->find('all', array('conditions' => array('CategoryThread.id' => 5))), '{n}.CategoryThread.child_count');$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = Hash::extract($TestModel->find('all'), '{n}.Comment.user_id');$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = Hash::extract($model->find('all', array('fields' => 'count')), '{n}.DataTest.count');$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = Hash::extract($result, '{n}.Comment.article_id');$/;"	v
result	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$result = Hash::extract(Hash::sort($result['Comment'], '{n}.id', 'ASC'), '{n}.comment');$/;"	v
results	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$results = $Article->find('first', array('conditions' => array('Article.title' => 'test xml')));$/;"	v
results	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$results = $Article->find('first', array('conditions' => array('Article.title' => 'testing with DOMDocument')));$/;"	v
results	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$results = $Article->find('first', array('conditions' => array('Article.title' => 'testing')));$/;"	v
results	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$results = $ProductUpdateAll->find('all', array($/;"	v
results	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$results = $ProductUpdateAll->find('all', compact('conditions'));$/;"	v
resultsFkFalse	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$resultsFkFalse = $ProductUpdateAll->find('all', array('conditions' => array('ProductUpdateAll.name' => 'new product')));$/;"	v
resultsFkFalse	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$resultsFkFalse = $ProductUpdateAll->find('all', compact('conditions'));$/;"	v
ret	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$ret = $UnderscoreField->save($data);$/;"	v
setDataSourceObject	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function setDataSourceObject($object) {$/;"	f
setUp	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function setUp() {$/;"	f
testAllowSimulatedFields	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testAllowSimulatedFields() {$/;"	f
testAutoSaveUuid	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testAutoSaveUuid() {$/;"	f
testBeforeSaveSaveAbortion	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testBeforeSaveSaveAbortion() {$/;"	f
testBeforeValidateSaveAbortion	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testBeforeValidateSaveAbortion() {$/;"	f
testCacheClearOnSave	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testCacheClearOnSave() {$/;"	f
testClear	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testClear() {$/;"	f
testCounterCacheDecrease	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testCounterCacheDecrease() {$/;"	f
testCounterCacheIncrease	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testCounterCacheIncrease() {$/;"	f
testCounterCacheMultipleCaches	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testCounterCacheMultipleCaches() {$/;"	f
testCounterCacheSkip	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testCounterCacheSkip() {$/;"	f
testCounterCacheUpdated	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testCounterCacheUpdated() {$/;"	f
testCounterCacheWithNonstandardPrimaryKey	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testCounterCacheWithNonstandardPrimaryKey() {$/;"	f
testCounterCacheWithSelfJoin	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testCounterCacheWithSelfJoin() {$/;"	f
testCreateWithPKFiltering	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testCreateWithPKFiltering() {$/;"	f
testCreationOfEmptyRecord	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testCreationOfEmptyRecord() {$/;"	f
testCreationWithMultipleData	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testCreationWithMultipleData() {$/;"	f
testCreationWithMultipleDataSameModel	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testCreationWithMultipleDataSameModel() {$/;"	f
testCreationWithMultipleDataSameModelManualInstances	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testCreationWithMultipleDataSameModelManualInstances() {$/;"	f
testDb	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$testDb = ConnectionManager::getDataSource('test');$/;"	v
testFindAllForeignKey	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testFindAllForeignKey() {$/;"	f
testHabtmSaveKeyResolution	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testHabtmSaveKeyResolution() {$/;"	f
testHabtmSaveWithConditionsInAssociation	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testHabtmSaveWithConditionsInAssociation() {$/;"	f
testHabtmSavingWithNoPrimaryKeyUuidJoinTable	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testHabtmSavingWithNoPrimaryKeyUuidJoinTable() {$/;"	f
testHabtmSavingWithNoPrimaryKeyUuidJoinTableNoWith	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testHabtmSavingWithNoPrimaryKeyUuidJoinTableNoWith() {$/;"	f
testHabtmUuidWithNumericId	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testHabtmUuidWithNumericId() {$/;"	f
testHabtmUuidWithUuidId	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testHabtmUuidWithUuidId() {$/;"	f
testInsertAnotherHabtmRecordWithSameForeignKey	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testInsertAnotherHabtmRecordWithSameForeignKey() {$/;"	f
testInsertNoData	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testInsertNoData() {$/;"	f
testPkInReturnArrayForCreate	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testPkInReturnArrayForCreate() {$/;"	f
testRecordExists	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testRecordExists() {$/;"	f
testRecordExistsMissingTable	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testRecordExistsMissingTable() {$/;"	f
testResult	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$testResult = $Article->find('first', array('conditions' => array('Article.title' => 'Test Title')));$/;"	v
testSaveAll	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAll() {$/;"	f
testSaveAllAssociatedTransactionNoRollback	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllAssociatedTransactionNoRollback() {$/;"	f
testSaveAllAtomic	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllAtomic() {$/;"	f
testSaveAllBelongsTo	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllBelongsTo() {$/;"	f
testSaveAllDeepAssociated	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllDeepAssociated() {$/;"	f
testSaveAllDeepEmptyHasManyHasMany	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllDeepEmptyHasManyHasMany() {$/;"	f
testSaveAllDeepFieldListHasMany	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllDeepFieldListHasMany() {$/;"	f
testSaveAllDeepFieldListValidateBelongsTo	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllDeepFieldListValidateBelongsTo() {$/;"	f
testSaveAllDeepHasManyBelongsTo	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllDeepHasManyBelongsTo() {$/;"	f
testSaveAllDeepHasManyHasMany	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllDeepHasManyHasMany() {$/;"	f
testSaveAllDeepMany	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllDeepMany() {$/;"	f
testSaveAllDeepOrderHasManyHasMany	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllDeepOrderHasManyHasMany() {$/;"	f
testSaveAllDeepValidateOnly	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllDeepValidateOnly() {$/;"	f
testSaveAllEmptyData	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllEmptyData() {$/;"	f
testSaveAllFieldListHasMany	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllFieldListHasMany() {$/;"	f
testSaveAllFieldListHasOne	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllFieldListHasOne() {$/;"	f
testSaveAllFieldListHasOneAddFkToWhitelist	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllFieldListHasOneAddFkToWhitelist() {$/;"	f
testSaveAllFieldListValidateBelongsTo	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllFieldListValidateBelongsTo() {$/;"	f
testSaveAllHabtm	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllHabtm() {$/;"	f
testSaveAllHabtmWithExtraJoinTableFields	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllHabtmWithExtraJoinTableFields() {$/;"	f
testSaveAllHasMany	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllHasMany() {$/;"	f
testSaveAllHasManyValidation	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllHasManyValidation() {$/;"	f
testSaveAllHasManyValidationOnly	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllHasManyValidationOnly() {$/;"	f
testSaveAllHasOne	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllHasOne() {$/;"	f
testSaveAllHasOneValidation	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllHasOneValidation() {$/;"	f
testSaveAllManyRowsTransactionNoRollback	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllManyRowsTransactionNoRollback() {$/;"	f
testSaveAllNestedSaveAll	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllNestedSaveAll() {$/;"	f
testSaveAllNotDeepAssociated	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllNotDeepAssociated() {$/;"	f
testSaveAllNotDeepMany	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllNotDeepMany() {$/;"	f
testSaveAllNotDeepValidateOnly	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllNotDeepValidateOnly() {$/;"	f
testSaveAllTransaction	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllTransaction() {$/;"	f
testSaveAllValidateFirst	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllValidateFirst() {$/;"	f
testSaveAllValidateFirstAtomicFalse	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllValidateFirstAtomicFalse() {$/;"	f
testSaveAllValidation	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllValidation() {$/;"	f
testSaveAllValidationOnly	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllValidationOnly() {$/;"	f
testSaveAllWithSet	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAllWithSet() {$/;"	f
testSaveAssociated	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAssociated() {$/;"	f
testSaveAssociatedAtomic	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAssociatedAtomic() {$/;"	f
testSaveAssociatedAtomicFalseValidateFirstWithErrors	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAssociatedAtomicFalseValidateFirstWithErrors() {$/;"	f
testSaveAssociatedBelongsTo	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAssociatedBelongsTo() {$/;"	f
testSaveAssociatedEmptyData	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAssociatedEmptyData() {$/;"	f
testSaveAssociatedExpressionObjects	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAssociatedExpressionObjects() {$/;"	f
testSaveAssociatedHabtm	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAssociatedHabtm() {$/;"	f
testSaveAssociatedHabtmWithExtraJoinTableFields	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAssociatedHabtmWithExtraJoinTableFields() {$/;"	f
testSaveAssociatedHasMany	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAssociatedHasMany() {$/;"	f
testSaveAssociatedHasManyEmpty	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAssociatedHasManyEmpty() {$/;"	f
testSaveAssociatedHasManyValidation	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAssociatedHasManyValidation() {$/;"	f
testSaveAssociatedHasOne	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAssociatedHasOne() {$/;"	f
testSaveAssociatedHasOneValidation	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAssociatedHasOneValidation() {$/;"	f
testSaveAssociatedTransactionNoRollback	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAssociatedTransactionNoRollback() {$/;"	f
testSaveAssociatedValidateFirst	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveAssociatedValidateFirst() {$/;"	f
testSaveDateAsFirstEntry	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveDateAsFirstEntry() {$/;"	f
testSaveField	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveField() {$/;"	f
testSaveFieldListResetsWhitelistOnFailedSave	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveFieldListResetsWhitelistOnFailedSave() {$/;"	f
testSaveFromXml	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveFromXml() {$/;"	f
testSaveHabtm	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveHabtm() {$/;"	f
testSaveHabtmCustomKeys	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveHabtmCustomKeys() {$/;"	f
testSaveHabtmNoPrimaryData	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveHabtmNoPrimaryData() {$/;"	f
testSaveMany	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveMany() {$/;"	f
testSaveManyAtomic	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveManyAtomic() {$/;"	f
testSaveManyEmptyData	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveManyEmptyData() {$/;"	f
testSaveManyNestedSaveMany	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveManyNestedSaveMany() {$/;"	f
testSaveManyTransaction	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveManyTransaction() {$/;"	f
testSaveManyTransactionNoRollback	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveManyTransactionNoRollback() {$/;"	f
testSaveManyValidateFalse	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveManyValidateFalse() {$/;"	f
testSaveManyValidateFirstAtomicFalse	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveManyValidateFirstAtomicFalse() {$/;"	f
testSaveManyValidation	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveManyValidation() {$/;"	f
testSaveMultipleHabtm	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveMultipleHabtm() {$/;"	f
testSaveUuidNull	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveUuidNull() {$/;"	f
testSaveWithCounterCache	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveWithCounterCache() {$/;"	f
testSaveWithCounterCacheScope	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveWithCounterCacheScope() {$/;"	f
testSaveWithCreate	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveWithCreate() {$/;"	f
testSaveWithNonExistentFields	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveWithNonExistentFields() {$/;"	f
testSaveWithNullId	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveWithNullId() {$/;"	f
testSaveWithSet	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testSaveWithSet() {$/;"	f
testToggleBoolFields	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testToggleBoolFields() {$/;"	f
testUnderscoreFieldSave	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testUnderscoreFieldSave() {$/;"	f
testUpdateAllBoolean	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testUpdateAllBoolean() {$/;"	f
testUpdateAllBooleanConditions	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testUpdateAllBooleanConditions() {$/;"	f
testUpdateAllEmptyValues	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testUpdateAllEmptyValues() {$/;"	f
testUpdateAllWithJoins	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testUpdateAllWithJoins() {$/;"	f
testUpdateAllWithoutForeignKey	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testUpdateAllWithoutForeignKey() {$/;"	f
testUpdateBoolean	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testUpdateBoolean() {$/;"	f
testUpdateExisting	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testUpdateExisting() {$/;"	f
testUpdateMultiple	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testUpdateMultiple() {$/;"	f
testUpdateSavingBlankValues	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testUpdateSavingBlankValues() {$/;"	f
testUpdateWithCalculation	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testUpdateWithCalculation() {$/;"	f
testValidateAssociated	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testValidateAssociated() {$/;"	f
testValidateMany	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testValidateMany() {$/;"	f
testWriteFloatAsGerman	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testWriteFloatAsGerman() {$/;"	f
testZeroDefaultFieldValue	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^	public function testZeroDefaultFieldValue() {$/;"	f
transactionWorked	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$transactionWorked = Set::matches('\/Post[1][title=Baleeted First Post]', $result);$/;"	v
true	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$true = array('Post' => array('published' => true, 'id' => 2));$/;"	v
updateConditions	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$updateConditions = array('Post.id' => 2);$/;"	v
updatedValue	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$updatedValue = 'UPDATED Data for Join A 1 Join B 2';$/;"	v
user	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$user = $User->find('first', array($/;"	v
users	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$users = $User->find('all', array('order' => 'User.id'));$/;"	v
users	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$users = $User->find('all', array('order' => 'User.uid'));$/;"	v
validData	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$validData = array($/;"	v
whitelist	lib/Cake/Test/Case/Model/ModelWriteTest.php	/^		$whitelist = array('title');$/;"	v
CakeValidationRuleTest	lib/Cake/Test/Case/Model/Validator/CakeValidationRuleTest.php	/^class CakeValidationRuleTest extends CakeTestCase {$/;"	c
Rule	lib/Cake/Test/Case/Model/Validator/CakeValidationRuleTest.php	/^		$Rule = $this->getMock('CakeValidationRule', array('isRequired'));$/;"	v
Rule	lib/Cake/Test/Case/Model/Validator/CakeValidationRuleTest.php	/^		$Rule = new CakeValidationRule($def);$/;"	v
data	lib/Cake/Test/Case/Model/Validator/CakeValidationRuleTest.php	/^		$data = array($/;"	v
data	lib/Cake/Test/Case/Model/Validator/CakeValidationRuleTest.php	/^		$data = array('fieldName' => 'not empty');$/;"	v
def	lib/Cake/Test/Case/Model/Validator/CakeValidationRuleTest.php	/^		$def = array('rule' => 'aRule', 'allowEmpty' => false);$/;"	v
def	lib/Cake/Test/Case/Model/Validator/CakeValidationRuleTest.php	/^		$def = array('rule' => 'aRule', 'allowEmpty' => true);$/;"	v
def	lib/Cake/Test/Case/Model/Validator/CakeValidationRuleTest.php	/^		$def = array('rule' => 'myTestRule');$/;"	v
def	lib/Cake/Test/Case/Model/Validator/CakeValidationRuleTest.php	/^		$def = array('rule' => 'notEmpty', 'allowEmpty' => false, 'on' => 'create');$/;"	v
def	lib/Cake/Test/Case/Model/Validator/CakeValidationRuleTest.php	/^		$def = array('rule' => 'notEmpty', 'allowEmpty' => false, 'on' => 'update');$/;"	v
def	lib/Cake/Test/Case/Model/Validator/CakeValidationRuleTest.php	/^		$def = array('rule' => 'notEmpty', 'message' => 'Can not be empty');$/;"	v
def	lib/Cake/Test/Case/Model/Validator/CakeValidationRuleTest.php	/^		$def = array('rule' => 'notEmpty', 'required' => 'create');$/;"	v
def	lib/Cake/Test/Case/Model/Validator/CakeValidationRuleTest.php	/^		$def = array('rule' => 'notEmpty', 'required' => 'update');$/;"	v
def	lib/Cake/Test/Case/Model/Validator/CakeValidationRuleTest.php	/^		$def = array('rule' => 'notEmpty', 'required' => false);$/;"	v
def	lib/Cake/Test/Case/Model/Validator/CakeValidationRuleTest.php	/^		$def = array('rule' => 'notEmpty', 'required' => true);$/;"	v
def	lib/Cake/Test/Case/Model/Validator/CakeValidationRuleTest.php	/^		$def = array('rule' => array('totallyMissing'));$/;"	v
fieldname	lib/Cake/Test/Case/Model/Validator/CakeValidationRuleTest.php	/^			$fieldname => null$/;"	v
fieldname	lib/Cake/Test/Case/Model/Validator/CakeValidationRuleTest.php	/^		$fieldname = 'field';$/;"	v
methods	lib/Cake/Test/Case/Model/Validator/CakeValidationRuleTest.php	/^		$methods = array('mytestrule' => array($this, 'myTestRule'));$/;"	v
methods	lib/Cake/Test/Case/Model/Validator/CakeValidationRuleTest.php	/^		$methods = array('mytestrule' => array($this, 'myTestRule2'));$/;"	v
methods	lib/Cake/Test/Case/Model/Validator/CakeValidationRuleTest.php	/^		$methods = array('mytestrule' => array($this, 'myTestRule3'));$/;"	v
methods	lib/Cake/Test/Case/Model/Validator/CakeValidationRuleTest.php	/^		$methods = array();$/;"	v
myTestRule	lib/Cake/Test/Case/Model/Validator/CakeValidationRuleTest.php	/^	public function myTestRule() {$/;"	f
myTestRule2	lib/Cake/Test/Case/Model/Validator/CakeValidationRuleTest.php	/^	public function myTestRule2() {$/;"	f
myTestRule3	lib/Cake/Test/Case/Model/Validator/CakeValidationRuleTest.php	/^	public function myTestRule3() {$/;"	f
testCheckRequiredWhenRequiredAndAllowEmpty	lib/Cake/Test/Case/Model/Validator/CakeValidationRuleTest.php	/^	public function testCheckRequiredWhenRequiredAndAllowEmpty() {$/;"	f
testCustomMethodMissingError	lib/Cake/Test/Case/Model/Validator/CakeValidationRuleTest.php	/^	public function testCustomMethodMissingError() {$/;"	f
testCustomMethods	lib/Cake/Test/Case/Model/Validator/CakeValidationRuleTest.php	/^	public function testCustomMethods() {$/;"	f
testIsEmptyAllowed	lib/Cake/Test/Case/Model/Validator/CakeValidationRuleTest.php	/^	public function testIsEmptyAllowed() {$/;"	f
testIsRequired	lib/Cake/Test/Case/Model/Validator/CakeValidationRuleTest.php	/^	public function testIsRequired() {$/;"	f
testIsValid	lib/Cake/Test/Case/Model/Validator/CakeValidationRuleTest.php	/^	public function testIsValid() {$/;"	f
CakeValidationSetTest	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^class CakeValidationSetTest extends CakeTestCase {$/;"	c
Field	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^		$Field = new CakeValidationSet('body', 'notEmpty');$/;"	v
Field	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^		$Field = new CakeValidationSet('body', array($/;"	v
Field	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^		$Field = new CakeValidationSet('nothere', array($/;"	v
Field	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^		$Field = new CakeValidationSet('title', $rule);$/;"	v
Field	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^		$Field = new CakeValidationSet('title', $rules);$/;"	v
Field	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^		$Field = new CakeValidationSet('title', 'notEmpty');$/;"	v
Rule	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^		$Rule = new CakeValidationRule($rules['notEmpty']);$/;"	v
Rule	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^		$Rule = new CakeValidationRule($rules['validEmail']);$/;"	v
RuleEmail	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^		$RuleEmail = new CakeValidationRule($rule['validEmail']);$/;"	v
RuleEmpty	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^		$RuleEmpty = new CakeValidationRule($rule['notEmpty']);$/;"	v
Set	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^		$Set = new CakeValidationSet('title', array($/;"	v
data	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^		$data = array($/;"	v
expected	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^		$expected = array('This field cannot be left blank');$/;"	v
expected	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^		$expected = array('inList');$/;"	v
expected	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^		$expected = array('notEmpty');$/;"	v
i	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^		$i = 0;$/;"	v
result	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^		$result = $Field->getRule('notEmpty');$/;"	v
result	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^		$result = $Field->getRule('validEmail');$/;"	v
result	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^		$result = $Field->getRules();$/;"	v
result	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^		$result = $Field->validate($data);$/;"	v
rule	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^		$rule = $Set['notEmpty'];$/;"	v
rule	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^		$rule = $Set['numeric'];$/;"	v
rule	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^		$rule = $Set['other'];$/;"	v
rule	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^		$rule = array('notEmpty' => array('rule' => 'notEmpty', 'message' => 'Can not be empty'));$/;"	v
rule	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^		$rule = array('validEmail' => array('rule' => 'email', 'message' => 'Invalid email'));$/;"	v
rules	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^		$rules = array('notEmpty' => $RuleEmpty);$/;"	v
rules	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^		$rules = array('notEmpty' => array('rule' => 'notEmpty'));$/;"	v
rules	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^		$rules = array('notEmpty' => array('rule' => 'notEmpty', 'message' => 'Can not be empty'));$/;"	v
rules	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^		$rules = array('validEmail' => $RuleEmail);$/;"	v
rules	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^		$rules = array('validEmail' => array('rule' => 'email', 'message' => 'Invalid email'));$/;"	v
rules	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^		$rules = array('validEmail' => array('rule' => 'email', 'message' => 'Other message'));$/;"	v
setUp	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^	public function setUp() {$/;"	f
testArrayAccessExists	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^	public function testArrayAccessExists() {$/;"	f
testArrayAccessGet	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^	public function testArrayAccessGet() {$/;"	f
testArrayAccessSet	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^	public function testArrayAccessSet() {$/;"	f
testArrayAccessUnset	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^	public function testArrayAccessUnset() {$/;"	f
testCount	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^	public function testCount() {$/;"	f
testGetRule	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^	public function testGetRule() {$/;"	f
testGetRules	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^	public function testGetRules() {$/;"	f
testIterator	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^	public function testIterator() {$/;"	f
testRemoveRule	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^	public function testRemoveRule() {$/;"	f
testSetRule	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^	public function testSetRule() {$/;"	f
testSetRules	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^	public function testSetRules() {$/;"	f
testValidate	lib/Cake/Test/Case/Model/Validator/CakeValidationSetTest.php	/^	public function testValidate() {$/;"	f
Account	lib/Cake/Test/Case/Model/models.php	/^class Account extends CakeTestModel {$/;"	c
Ad	lib/Cake/Test/Case/Model/models.php	/^class Ad extends CakeTestModel {$/;"	c
Advertisement	lib/Cake/Test/Case/Model/models.php	/^class Advertisement extends CakeTestModel {$/;"	c
AfterTree	lib/Cake/Test/Case/Model/models.php	/^class AfterTree extends NumberTree {$/;"	c
AgainModifiedComment	lib/Cake/Test/Case/Model/models.php	/^class AgainModifiedComment extends CakeTestModel {$/;"	c
AnotherArticle	lib/Cake/Test/Case/Model/models.php	/^class AnotherArticle extends CakeTestModel {$/;"	c
AppModel	lib/Cake/Test/Case/Model/models.php	/^class AppModel extends Model {$/;"	c
Apple	lib/Cake/Test/Case/Model/models.php	/^class Apple extends CakeTestModel {$/;"	c
Armor	lib/Cake/Test/Case/Model/models.php	/^class Armor extends CakeTestModel {$/;"	c
ArmorsPlayer	lib/Cake/Test/Case/Model/models.php	/^class ArmorsPlayer extends CakeTestModel {$/;"	c
Article	lib/Cake/Test/Case/Model/models.php	/^class Article extends CakeTestModel {$/;"	c
Article10	lib/Cake/Test/Case/Model/models.php	/^class Article10 extends CakeTestModel {$/;"	c
Article2	lib/Cake/Test/Case/Model/models.php	/^class Article2 extends CakeTestModel {$/;"	c
ArticleB	lib/Cake/Test/Case/Model/models.php	/^class ArticleB extends CakeTestModel {$/;"	c
ArticleFeatured	lib/Cake/Test/Case/Model/models.php	/^class ArticleFeatured extends CakeTestModel {$/;"	c
ArticleFeatured2	lib/Cake/Test/Case/Model/models.php	/^class ArticleFeatured2 extends CakeTestModel {$/;"	c
ArticleFeaturedsTag	lib/Cake/Test/Case/Model/models.php	/^class ArticleFeaturedsTag extends CakeTestModel {$/;"	c
ArticlesTag	lib/Cake/Test/Case/Model/models.php	/^class ArticlesTag extends CakeTestModel {$/;"	c
AssociationTest1	lib/Cake/Test/Case/Model/models.php	/^class AssociationTest1 extends CakeTestModel {$/;"	c
AssociationTest2	lib/Cake/Test/Case/Model/models.php	/^class AssociationTest2 extends CakeTestModel {$/;"	c
Attachment	lib/Cake/Test/Case/Model/models.php	/^class Attachment extends CakeTestModel {$/;"	c
Author	lib/Cake/Test/Case/Model/models.php	/^class Author extends CakeTestModel {$/;"	c
Basket	lib/Cake/Test/Case/Model/models.php	/^class Basket extends CakeTestModel {$/;"	c
BeforeDeleteComment	lib/Cake/Test/Case/Model/models.php	/^class BeforeDeleteComment extends CakeTestModel {$/;"	c
Bid	lib/Cake/Test/Case/Model/models.php	/^class Bid extends CakeTestModel {$/;"	c
Bidding	lib/Cake/Test/Case/Model/models.php	/^class Bidding extends CakeTestModel {$/;"	c
BiddingMessage	lib/Cake/Test/Case/Model/models.php	/^class BiddingMessage extends CakeTestModel {$/;"	c
Book	lib/Cake/Test/Case/Model/models.php	/^class Book extends CakeTestModel {$/;"	c
Callback	lib/Cake/Test/Case/Model/models.php	/^class Callback extends CakeTestModel {$/;"	c
CallbackPostTestModel	lib/Cake/Test/Case/Model/models.php	/^class CallbackPostTestModel extends CakeTestModel {$/;"	c
Campaign	lib/Cake/Test/Case/Model/models.php	/^class Campaign extends CakeTestModel {$/;"	c
Category	lib/Cake/Test/Case/Model/models.php	/^class Category extends CakeTestModel {$/;"	c
Category2	lib/Cake/Test/Case/Model/models.php	/^class Category2 extends CakeTestModel {$/;"	c
CategoryFeatured2	lib/Cake/Test/Case/Model/models.php	/^class CategoryFeatured2 extends CakeTestModel {$/;"	c
CategoryThread	lib/Cake/Test/Case/Model/models.php	/^class CategoryThread extends CakeTestModel {$/;"	c
Cd	lib/Cake/Test/Case/Model/models.php	/^class Cd extends CakeTestModel {$/;"	c
Comment	lib/Cake/Test/Case/Model/models.php	/^class Comment extends CakeTestModel {$/;"	c
Comment2	lib/Cake/Test/Case/Model/models.php	/^class Comment2 extends CakeTestModel {$/;"	c
Content	lib/Cake/Test/Case/Model/models.php	/^class Content extends CakeTestModel {$/;"	c
ContentAccount	lib/Cake/Test/Case/Model/models.php	/^class ContentAccount extends CakeTestModel {$/;"	c
CounterCachePost	lib/Cake/Test/Case/Model/models.php	/^class CounterCachePost extends CakeTestModel {$/;"	c
CounterCachePostNonstandardPrimaryKey	lib/Cake/Test/Case/Model/models.php	/^class CounterCachePostNonstandardPrimaryKey extends CakeTestModel {$/;"	c
CounterCacheUser	lib/Cake/Test/Case/Model/models.php	/^class CounterCacheUser extends CakeTestModel {$/;"	c
CounterCacheUserNonstandardPrimaryKey	lib/Cake/Test/Case/Model/models.php	/^class CounterCacheUserNonstandardPrimaryKey extends CakeTestModel {$/;"	c
CustomArticle	lib/Cake/Test/Case/Model/models.php	/^class CustomArticle extends AppModel {$/;"	c
DataTest	lib/Cake/Test/Case/Model/models.php	/^class DataTest extends CakeTestModel {$/;"	c
Dependency	lib/Cake/Test/Case/Model/models.php	/^class Dependency extends CakeTestModel {$/;"	c
Device	lib/Cake/Test/Case/Model/models.php	/^class Device extends CakeTestModel {$/;"	c
DeviceType	lib/Cake/Test/Case/Model/models.php	/^class DeviceType extends CakeTestModel {$/;"	c
DeviceTypeCategory	lib/Cake/Test/Case/Model/models.php	/^class DeviceTypeCategory extends CakeTestModel {$/;"	c
Document	lib/Cake/Test/Case/Model/models.php	/^class Document extends CakeTestModel {$/;"	c
DocumentDirectory	lib/Cake/Test/Case/Model/models.php	/^class DocumentDirectory extends CakeTestModel {$/;"	c
Domain	lib/Cake/Test/Case/Model/models.php	/^class Domain extends CakeTestModel {$/;"	c
ExteriorTypeCategory	lib/Cake/Test/Case/Model/models.php	/^class ExteriorTypeCategory extends CakeTestModel {$/;"	c
FeatureSet	lib/Cake/Test/Case/Model/models.php	/^class FeatureSet extends CakeTestModel {$/;"	c
Featured	lib/Cake/Test/Case/Model/models.php	/^class Featured extends CakeTestModel {$/;"	c
Featured2	lib/Cake/Test/Case/Model/models.php	/^class Featured2 extends CakeTestModel {$/;"	c
FilmFile	lib/Cake/Test/Case/Model/models.php	/^class FilmFile extends CakeTestModel {$/;"	c
FlagTree	lib/Cake/Test/Case/Model/models.php	/^class FlagTree extends NumberTree {$/;"	c
Fruit	lib/Cake/Test/Case/Model/models.php	/^class Fruit extends CakeTestModel {$/;"	c
FruitNoWith	lib/Cake/Test/Case/Model/models.php	/^class FruitNoWith extends CakeTestModel {$/;"	c
FruitsUuidTag	lib/Cake/Test/Case/Model/models.php	/^class FruitsUuidTag extends CakeTestModel {$/;"	c
Group	lib/Cake/Test/Case/Model/models.php	/^class Group extends CakeTestModel {$/;"	c
GroupUpdateAll	lib/Cake/Test/Case/Model/models.php	/^class GroupUpdateAll extends CakeTestModel {$/;"	c
Guild	lib/Cake/Test/Case/Model/models.php	/^class Guild extends CakeTestModel {$/;"	c
GuildsPlayer	lib/Cake/Test/Case/Model/models.php	/^class GuildsPlayer extends CakeTestModel {$/;"	c
Home	lib/Cake/Test/Case/Model/models.php	/^class Home extends CakeTestModel {$/;"	c
Image	lib/Cake/Test/Case/Model/models.php	/^class Image extends CakeTestModel {$/;"	c
Item	lib/Cake/Test/Case/Model/models.php	/^class Item extends CakeTestModel {$/;"	c
ItemsPortfolio	lib/Cake/Test/Case/Model/models.php	/^class ItemsPortfolio extends CakeTestModel {$/;"	c
JoinA	lib/Cake/Test/Case/Model/models.php	/^class JoinA extends CakeTestModel {$/;"	c
JoinB	lib/Cake/Test/Case/Model/models.php	/^class JoinB extends CakeTestModel {$/;"	c
JoinC	lib/Cake/Test/Case/Model/models.php	/^class JoinC extends CakeTestModel {$/;"	c
JoinThing	lib/Cake/Test/Case/Model/models.php	/^class JoinThing extends CakeTestModel {$/;"	c
Level	lib/Cake/Test/Case/Model/models.php	/^class Level extends CakeTestModel {$/;"	c
MergeVarPluginAppModel	lib/Cake/Test/Case/Model/models.php	/^class MergeVarPluginAppModel extends AppModel {$/;"	c
MergeVarPluginComment	lib/Cake/Test/Case/Model/models.php	/^class MergeVarPluginComment extends MergeVarPluginAppModel {$/;"	c
MergeVarPluginPost	lib/Cake/Test/Case/Model/models.php	/^class MergeVarPluginPost extends MergeVarPluginAppModel {$/;"	c
Message	lib/Cake/Test/Case/Model/models.php	/^class Message extends CakeTestModel {$/;"	c
ModelA	lib/Cake/Test/Case/Model/models.php	/^class ModelA extends CakeTestModel {$/;"	c
ModelB	lib/Cake/Test/Case/Model/models.php	/^class ModelB extends CakeTestModel {$/;"	c
ModelC	lib/Cake/Test/Case/Model/models.php	/^class ModelC extends CakeTestModel {$/;"	c
ModelD	lib/Cake/Test/Case/Model/models.php	/^class ModelD extends CakeTestModel {$/;"	c
ModifiedAttachment	lib/Cake/Test/Case/Model/models.php	/^class ModifiedAttachment extends CakeTestModel {$/;"	c
ModifiedAuthor	lib/Cake/Test/Case/Model/models.php	/^class ModifiedAuthor extends Author {$/;"	c
ModifiedComment	lib/Cake/Test/Case/Model/models.php	/^class ModifiedComment extends CakeTestModel {$/;"	c
Monkey	lib/Cake/Test/Case/Model/models.php	/^class Monkey extends CakeTestModel {$/;"	c
MyCategoriesMyProduct	lib/Cake/Test/Case/Model/models.php	/^class MyCategoriesMyProduct extends CakeTestModel {$/;"	c
MyCategoriesMyUser	lib/Cake/Test/Case/Model/models.php	/^class MyCategoriesMyUser extends CakeTestModel {$/;"	c
MyCategory	lib/Cake/Test/Case/Model/models.php	/^class MyCategory extends CakeTestModel {$/;"	c
MyProduct	lib/Cake/Test/Case/Model/models.php	/^class MyProduct extends CakeTestModel {$/;"	c
MyUser	lib/Cake/Test/Case/Model/models.php	/^class MyUser extends CakeTestModel {$/;"	c
MysqlTestModel	lib/Cake/Test/Case/Model/models.php	/^class MysqlTestModel extends Model {$/;"	c
Node	lib/Cake/Test/Case/Model/models.php	/^class Node extends CakeTestModel {$/;"	c
NodeAfterFind	lib/Cake/Test/Case/Model/models.php	/^class NodeAfterFind extends CakeTestModel {$/;"	c
NodeAfterFindSample	lib/Cake/Test/Case/Model/models.php	/^class NodeAfterFindSample extends CakeTestModel {$/;"	c
NodeNoAfterFind	lib/Cake/Test/Case/Model/models.php	/^class NodeNoAfterFind extends CakeTestModel {$/;"	c
NumberTree	lib/Cake/Test/Case/Model/models.php	/^class NumberTree extends CakeTestModel {$/;"	c
NumberTreeTwo	lib/Cake/Test/Case/Model/models.php	/^class NumberTreeTwo extends NumberTree {$/;"	c
NumericArticle	lib/Cake/Test/Case/Model/models.php	/^class NumericArticle extends CakeTestModel {$/;"	c
OverallFavorite	lib/Cake/Test/Case/Model/models.php	/^class OverallFavorite extends CakeTestModel {$/;"	c
Person	lib/Cake/Test/Case/Model/models.php	/^class Person extends CakeTestModel {$/;"	c
Player	lib/Cake/Test/Case/Model/models.php	/^class Player extends CakeTestModel {$/;"	c
Portfolio	lib/Cake/Test/Case/Model/models.php	/^class Portfolio extends CakeTestModel {$/;"	c
Post	lib/Cake/Test/Case/Model/models.php	/^class Post extends CakeTestModel {$/;"	c
PrefixTestModel	lib/Cake/Test/Case/Model/models.php	/^class PrefixTestModel extends CakeTestModel {$/;"	c
PrefixTestUseTableModel	lib/Cake/Test/Case/Model/models.php	/^class PrefixTestUseTableModel extends CakeTestModel {$/;"	c
PrimaryModel	lib/Cake/Test/Case/Model/models.php	/^class PrimaryModel extends CakeTestModel {$/;"	c
Product	lib/Cake/Test/Case/Model/models.php	/^class Product extends CakeTestModel {$/;"	c
ProductUpdateAll	lib/Cake/Test/Case/Model/models.php	/^class ProductUpdateAll extends CakeTestModel {$/;"	c
Project	lib/Cake/Test/Case/Model/models.php	/^class Project extends CakeTestModel {$/;"	c
Sample	lib/Cake/Test/Case/Model/models.php	/^class Sample extends CakeTestModel {$/;"	c
ScaffoldComment	lib/Cake/Test/Case/Model/models.php	/^class ScaffoldComment extends CakeTestModel {$/;"	c
ScaffoldMock	lib/Cake/Test/Case/Model/models.php	/^class ScaffoldMock extends CakeTestModel {$/;"	c
ScaffoldTag	lib/Cake/Test/Case/Model/models.php	/^class ScaffoldTag extends CakeTestModel {$/;"	c
ScaffoldUser	lib/Cake/Test/Case/Model/models.php	/^class ScaffoldUser extends CakeTestModel {$/;"	c
SecondaryModel	lib/Cake/Test/Case/Model/models.php	/^class SecondaryModel extends CakeTestModel {$/;"	c
Site	lib/Cake/Test/Case/Model/models.php	/^class Site extends CakeTestModel {$/;"	c
Something	lib/Cake/Test/Case/Model/models.php	/^class Something extends CakeTestModel {$/;"	c
SomethingElse	lib/Cake/Test/Case/Model/models.php	/^class SomethingElse extends CakeTestModel {$/;"	c
Story	lib/Cake/Test/Case/Model/models.php	/^class Story extends CakeTestModel {$/;"	c
Syfile	lib/Cake/Test/Case/Model/models.php	/^class Syfile extends CakeTestModel {$/;"	c
Tag	lib/Cake/Test/Case/Model/models.php	/^class Tag extends CakeTestModel {$/;"	c
TagB	lib/Cake/Test/Case/Model/models.php	/^class TagB extends CakeTestModel {$/;"	c
Test	lib/Cake/Test/Case/Model/models.php	/^class Test extends CakeTestModel {$/;"	c
TestAlias	lib/Cake/Test/Case/Model/models.php	/^class TestAlias extends CakeTestModel {$/;"	c
TestModel	lib/Cake/Test/Case/Model/models.php	/^class TestModel extends CakeTestModel {$/;"	c
TestModel2	lib/Cake/Test/Case/Model/models.php	/^class TestModel2 extends CakeTestModel {$/;"	c
TestModel3	lib/Cake/Test/Case/Model/models.php	/^class TestModel3 extends CakeTestModel {$/;"	c
TestModel4	lib/Cake/Test/Case/Model/models.php	/^class TestModel4 extends CakeTestModel {$/;"	c
TestModel4TestModel7	lib/Cake/Test/Case/Model/models.php	/^class TestModel4TestModel7 extends CakeTestModel {$/;"	c
TestModel5	lib/Cake/Test/Case/Model/models.php	/^class TestModel5 extends CakeTestModel {$/;"	c
TestModel6	lib/Cake/Test/Case/Model/models.php	/^class TestModel6 extends CakeTestModel {$/;"	c
TestModel7	lib/Cake/Test/Case/Model/models.php	/^class TestModel7 extends CakeTestModel {$/;"	c
TestModel8	lib/Cake/Test/Case/Model/models.php	/^class TestModel8 extends CakeTestModel {$/;"	c
TestModel9	lib/Cake/Test/Case/Model/models.php	/^class TestModel9 extends CakeTestModel {$/;"	c
TestPluginArticle	lib/Cake/Test/Case/Model/models.php	/^class TestPluginArticle extends CakeTestModel {$/;"	c
TestPluginComment	lib/Cake/Test/Case/Model/models.php	/^class TestPluginComment extends CakeTestModel {$/;"	c
TestValidate	lib/Cake/Test/Case/Model/models.php	/^class TestValidate extends CakeTestModel {$/;"	c
ThePaper	lib/Cake/Test/Case/Model/models.php	/^class ThePaper extends CakeTestModel {$/;"	c
TheVoid	lib/Cake/Test/Case/Model/models.php	/^class TheVoid extends CakeTestModel {$/;"	c
Thread	lib/Cake/Test/Case/Model/models.php	/^class Thread extends CakeTestModel {$/;"	c
TransactionManyTestModel	lib/Cake/Test/Case/Model/models.php	/^class TransactionManyTestModel extends CakeTestModel {$/;"	c
TransactionTestModel	lib/Cake/Test/Case/Model/models.php	/^class TransactionTestModel extends CakeTestModel {$/;"	c
TranslateArticleModel	lib/Cake/Test/Case/Model/models.php	/^class TranslateArticleModel extends CakeTestModel {$/;"	c
TranslateTestModel	lib/Cake/Test/Case/Model/models.php	/^class TranslateTestModel extends CakeTestModel {$/;"	c
TranslateWithPrefix	lib/Cake/Test/Case/Model/models.php	/^class TranslateWithPrefix extends CakeTestModel {$/;"	c
TranslatedArticle	lib/Cake/Test/Case/Model/models.php	/^class TranslatedArticle extends CakeTestModel {$/;"	c
TranslatedItem	lib/Cake/Test/Case/Model/models.php	/^class TranslatedItem extends CakeTestModel {$/;"	c
TranslatedItem2	lib/Cake/Test/Case/Model/models.php	/^class TranslatedItem2 extends CakeTestModel {$/;"	c
TranslatedItemWithTable	lib/Cake/Test/Case/Model/models.php	/^class TranslatedItemWithTable extends CakeTestModel {$/;"	c
UnconventionalTree	lib/Cake/Test/Case/Model/models.php	/^class UnconventionalTree extends NumberTree {$/;"	c
UnderscoreField	lib/Cake/Test/Case/Model/models.php	/^class UnderscoreField extends CakeTestModel {$/;"	c
User	lib/Cake/Test/Case/Model/models.php	/^class User extends CakeTestModel {$/;"	c
User2	lib/Cake/Test/Case/Model/models.php	/^class User2 extends CakeTestModel {$/;"	c
Uuid	lib/Cake/Test/Case/Model/models.php	/^class Uuid extends CakeTestModel {$/;"	c
UuidTag	lib/Cake/Test/Case/Model/models.php	/^class UuidTag extends CakeTestModel {$/;"	c
UuidTagNoWith	lib/Cake/Test/Case/Model/models.php	/^class UuidTagNoWith extends CakeTestModel {$/;"	c
UuidTree	lib/Cake/Test/Case/Model/models.php	/^class UuidTree extends NumberTree {$/;"	c
Uuiditem	lib/Cake/Test/Case/Model/models.php	/^class Uuiditem extends CakeTestModel {$/;"	c
UuiditemsUuidportfolio	lib/Cake/Test/Case/Model/models.php	/^class UuiditemsUuidportfolio extends CakeTestModel {$/;"	c
UuiditemsUuidportfolioNumericid	lib/Cake/Test/Case/Model/models.php	/^class UuiditemsUuidportfolioNumericid extends CakeTestModel {$/;"	c
Uuidportfolio	lib/Cake/Test/Case/Model/models.php	/^class Uuidportfolio extends CakeTestModel {$/;"	c
ValidationTest1	lib/Cake/Test/Case/Model/models.php	/^class ValidationTest1 extends CakeTestModel {$/;"	c
ValidationTest2	lib/Cake/Test/Case/Model/models.php	/^class ValidationTest2 extends CakeTestModel {$/;"	c
_findPublished	lib/Cake/Test/Case/Model/models.php	/^	protected function _findPublished($state, $query, $results = array()) {$/;"	f
_findUnPublished	lib/Cake/Test/Case/Model/models.php	/^	protected function _findUnPublished($state, $query, $results = array()) {$/;"	f
_schema	lib/Cake/Test/Case/Model/models.php	/^			$this->_schema = array($/;"	v
_schema	lib/Cake/Test/Case/Model/models.php	/^	protected $_schema = array($/;"	v
_schema	lib/Cake/Test/Case/Model/models.php	/^	protected $_schema = array();$/;"	v
actsAs	lib/Cake/Test/Case/Model/models.php	/^	public $actsAs = array($/;"	v
actsAs	lib/Cake/Test/Case/Model/models.php	/^	public $actsAs = array('Translate' => array('content', 'title'));$/;"	v
actsAs	lib/Cake/Test/Case/Model/models.php	/^	public $actsAs = array('Translate' => array('title', 'body'));$/;"	v
actsAs	lib/Cake/Test/Case/Model/models.php	/^	public $actsAs = array('Tree');$/;"	v
actsAs	lib/Cake/Test/Case/Model/models.php	/^	public $actsAs = array();$/;"	v
afterFind	lib/Cake/Test/Case/Model/models.php	/^	public function afterFind($results, $primary = false) {$/;"	f
afterSave	lib/Cake/Test/Case/Model/models.php	/^	public function afterSave($created, $options = array()) {$/;"	f
alias	lib/Cake/Test/Case/Model/models.php	/^	public $alias = 'Post';$/;"	v
alias	lib/Cake/Test/Case/Model/models.php	/^	public $alias = 'User';$/;"	v
beforeDelete	lib/Cake/Test/Case/Model/models.php	/^	public function beforeDelete($cascade = true) {$/;"	f
beforeDeleteReturn	lib/Cake/Test/Case/Model/models.php	/^	public $beforeDeleteReturn = true;$/;"	v
beforeFind	lib/Cake/Test/Case/Model/models.php	/^	public function beforeFind($queryData) {$/;"	f
beforeSave	lib/Cake/Test/Case/Model/models.php	/^	public function beforeSave($options = array()) {$/;"	f
beforeSaveReturn	lib/Cake/Test/Case/Model/models.php	/^	public $beforeSaveReturn = true;$/;"	v
beforeValidate	lib/Cake/Test/Case/Model/models.php	/^	public function beforeValidate($options = array()) {$/;"	f
beforeValidateReturn	lib/Cake/Test/Case/Model/models.php	/^	public $beforeValidateReturn = true;$/;"	v
belongsTo	lib/Cake/Test/Case/Model/models.php	/^	public $belongsTo = 'Apple';$/;"	v
belongsTo	lib/Cake/Test/Case/Model/models.php	/^	public $belongsTo = 'NodeAfterFind';$/;"	v
belongsTo	lib/Cake/Test/Case/Model/models.php	/^	public $belongsTo = array($/;"	v
belongsTo	lib/Cake/Test/Case/Model/models.php	/^	public $belongsTo = array('AnotherArticle', 'Advertisement');$/;"	v
belongsTo	lib/Cake/Test/Case/Model/models.php	/^	public $belongsTo = array('Article');$/;"	v
belongsTo	lib/Cake/Test/Case/Model/models.php	/^	public $belongsTo = array('Article', 'User');$/;"	v
belongsTo	lib/Cake/Test/Case/Model/models.php	/^	public $belongsTo = array('ArticleFeatured', 'Category');$/;"	v
belongsTo	lib/Cake/Test/Case/Model/models.php	/^	public $belongsTo = array('ArticleFeatured2', 'User2');$/;"	v
belongsTo	lib/Cake/Test/Case/Model/models.php	/^	public $belongsTo = array('Author');$/;"	v
belongsTo	lib/Cake/Test/Case/Model/models.php	/^	public $belongsTo = array('Campaign');$/;"	v
belongsTo	lib/Cake/Test/Case/Model/models.php	/^	public $belongsTo = array('Comment');$/;"	v
belongsTo	lib/Cake/Test/Case/Model/models.php	/^	public $belongsTo = array('DocumentDirectory');$/;"	v
belongsTo	lib/Cake/Test/Case/Model/models.php	/^	public $belongsTo = array('Image' => array('className' => 'Device'));$/;"	v
belongsTo	lib/Cake/Test/Case/Model/models.php	/^	public $belongsTo = array('Image');$/;"	v
belongsTo	lib/Cake/Test/Case/Model/models.php	/^	public $belongsTo = array('Level');$/;"	v
belongsTo	lib/Cake/Test/Case/Model/models.php	/^	public $belongsTo = array('Message');$/;"	v
belongsTo	lib/Cake/Test/Case/Model/models.php	/^	public $belongsTo = array('Parent' => array('className' => 'Apple', 'foreignKey' => 'apple_id'));$/;"	v
belongsTo	lib/Cake/Test/Case/Model/models.php	/^	public $belongsTo = array('Parent' => array('className' => 'NodeAfterFind', 'foreignKey' => 'apple_id'));$/;"	v
belongsTo	lib/Cake/Test/Case/Model/models.php	/^	public $belongsTo = array('ParentCategory' => array('className' => 'CategoryThread', 'foreignKey' => 'parent_id'));$/;"	v
belongsTo	lib/Cake/Test/Case/Model/models.php	/^	public $belongsTo = array('Project');$/;"	v
belongsTo	lib/Cake/Test/Case/Model/models.php	/^	public $belongsTo = array('Something', 'SomethingElse');$/;"	v
belongsTo	lib/Cake/Test/Case/Model/models.php	/^	public $belongsTo = array('Syfile' => array('counterCache' => true));$/;"	v
belongsTo	lib/Cake/Test/Case/Model/models.php	/^	public $belongsTo = array('TestModel4' => array($/;"	v
belongsTo	lib/Cake/Test/Case/Model/models.php	/^	public $belongsTo = array('User');$/;"	v
belongsTo	lib/Cake/Test/Case/Model/models.php	/^	public $belongsTo = array('User', 'Category');$/;"	v
cacheQueries	lib/Cake/Test/Case/Model/models.php	/^	public $cacheQueries = false;$/;"	v
customValidationMethod	lib/Cake/Test/Case/Model/models.php	/^	public function customValidationMethod($data) {$/;"	f
customValidatorWithMessage	lib/Cake/Test/Case/Model/models.php	/^	public function customValidatorWithMessage($data) {$/;"	f
customValidatorWithParams	lib/Cake/Test/Case/Model/models.php	/^	public function customValidatorWithParams($data, $validator, $or = true, $ignoreOnSame = 'id') {$/;"	f
customValidatorWithSixParams	lib/Cake/Test/Case/Model/models.php	/^	public function customValidatorWithSixParams($data, $one = 1, $two = 2, $three = 3, $four = 4, $five = 5, $six = 6) {$/;"	f
data	lib/Cake/Test/Case/Model/models.php	/^			$data = array($this->name => array('name' => $name));$/;"	v
data	lib/Cake/Test/Case/Model/models.php	/^		$data = array($/;"	v
db	lib/Cake/Test/Case/Model/models.php	/^			$db = ConnectionManager::getDataSource($this->useDbConfig);$/;"	v
db	lib/Cake/Test/Case/Model/models.php	/^		$db = $this->getDataSource();$/;"	v
displayField	lib/Cake/Test/Case/Model/models.php	/^	public $displayField = 'field';$/;"	v
find	lib/Cake/Test/Case/Model/models.php	/^	public function find($conditions = null, $fields = null, $order = null, $recursive = null) {$/;"	f
findAll	lib/Cake/Test/Case/Model/models.php	/^	public function findAll($conditions = null, $fields = null, $order = null, $recursive = null) {$/;"	f
findMethods	lib/Cake/Test/Case/Model/models.php	/^	public $findMethods = array('published' => true);$/;"	v
findMethods	lib/Cake/Test/Case/Model/models.php	/^	public $findMethods = array('unPublished' => true);$/;"	v
hasAndBelongsToMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasAndBelongsToMany = array($/;"	v
hasAndBelongsToMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasAndBelongsToMany = array('Account' => array('className' => 'Account', 'with' => 'ContentAccount', 'joinTable' => 'ContentAccounts', 'foreignKey' => 'iContentId', 'associationForeignKey', 'iAccountId'));$/;"	v
hasAndBelongsToMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasAndBelongsToMany = array('AssociationTest1' => array($/;"	v
hasAndBelongsToMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasAndBelongsToMany = array('AssociationTest2' => array($/;"	v
hasAndBelongsToMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasAndBelongsToMany = array('Item');$/;"	v
hasAndBelongsToMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasAndBelongsToMany = array('JoinA');$/;"	v
hasAndBelongsToMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasAndBelongsToMany = array('JoinB', 'JoinC');$/;"	v
hasAndBelongsToMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasAndBelongsToMany = array('Monkey' => array('joinTable' => 'the_paper_monkies', 'order' => 'id'));$/;"	v
hasAndBelongsToMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasAndBelongsToMany = array('MyCategory');$/;"	v
hasAndBelongsToMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasAndBelongsToMany = array('MyProduct', 'MyUser');$/;"	v
hasAndBelongsToMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasAndBelongsToMany = array('Portfolio' => array('unique' => false));$/;"	v
hasAndBelongsToMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasAndBelongsToMany = array('Something' => array('with' => 'JoinThing'));$/;"	v
hasAndBelongsToMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasAndBelongsToMany = array('SomethingElse' => array('with' => array('JoinThing' => array('doomed'))));$/;"	v
hasAndBelongsToMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasAndBelongsToMany = array('Tag' => array('foreignKey' => 'story'));$/;"	v
hasAndBelongsToMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasAndBelongsToMany = array('Tag');$/;"	v
hasAndBelongsToMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasAndBelongsToMany = array('TestModel7' => array($/;"	v
hasAndBelongsToMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasAndBelongsToMany = array('Uuiditem');$/;"	v
hasAndBelongsToMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasAndBelongsToMany = array('Uuidportfolio' => array('with' => 'UuiditemsUuidportfolioNumericid'));$/;"	v
hasMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasMany = 'Home';$/;"	v
hasMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasMany = array($/;"	v
hasMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasMany = array('Ad' => array('fields' => array('id', 'campaign_id', 'name')));$/;"	v
hasMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasMany = array('Category2', 'User2');$/;"	v
hasMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasMany = array('Child' => array('className' => 'Apple', 'dependent' => true));$/;"	v
hasMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasMany = array('Child' => array('className' => 'NodeAfterFind', 'dependent' => true));$/;"	v
hasMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasMany = array('Comment' => array('className' => 'Comment', 'dependent' => true));$/;"	v
hasMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasMany = array('Comment' => array('dependent' => true));$/;"	v
hasMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasMany = array('Comment' => array('dependent' => true, 'exclusive' => true));$/;"	v
hasMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasMany = array('Device' => array('order' => array('Device.id' => 'ASC')));$/;"	v
hasMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasMany = array('Message');$/;"	v
hasMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasMany = array('ModelB', 'ModelC');$/;"	v
hasMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasMany = array('ModelD');$/;"	v
hasMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasMany = array('Post');$/;"	v
hasMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasMany = array('TestModel6' => array($/;"	v
hasMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasMany = array('Thread');$/;"	v
hasMany	lib/Cake/Test/Case/Model/models.php	/^	public $hasMany = array('TranslatedItem');$/;"	v
hasOne	lib/Cake/Test/Case/Model/models.php	/^	public $hasOne = array($/;"	v
hasOne	lib/Cake/Test/Case/Model/models.php	/^	public $hasOne = array('Attachment' => array('dependent' => true));$/;"	v
hasOne	lib/Cake/Test/Case/Model/models.php	/^	public $hasOne = array('Bid');$/;"	v
hasOne	lib/Cake/Test/Case/Model/models.php	/^	public $hasOne = array('Featured');$/;"	v
hasOne	lib/Cake/Test/Case/Model/models.php	/^	public $hasOne = array('Itself' => array('className' => 'ThePaper', 'foreignKey' => 'apple_id'));$/;"	v
hasOne	lib/Cake/Test/Case/Model/models.php	/^	public $hasOne = array('Sample' => array('className' => 'NodeAfterFindSample'));$/;"	v
hasOne	lib/Cake/Test/Case/Model/models.php	/^	public $hasOne = array('Sample');$/;"	v
initialize	lib/Cake/Test/Case/Model/models.php	/^	public function initialize($levelLimit = 3, $childLimit = 3, $currentLevel = null, $parentId = null, $prefix = '1', $hierarchal = true) {$/;"	f
name	lib/Cake/Test/Case/Model/models.php	/^			$name = $prefix . '.' . $i;$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Account';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Ad';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Advertisement';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'AfterTree';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'AnotherArticle';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Apple';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Article';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Article10';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Article2';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'ArticleB';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'ArticleFeatured';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'ArticleFeatured2';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'ArticleFeaturedsTag';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'ArticlesTag';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'AssociationTest1';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'AssociationTest2';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Attachment';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Author';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Basket';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'BeforeDeleteComment';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Bid';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Bidding';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'BiddingMessage';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Book';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Campaign';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Category';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Category2';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'CategoryFeatured2';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'CategoryThread';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Cd';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Comment';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Comment2';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Content';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'ContentAccount';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'CounterCachePost';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'CounterCachePostNonstandardPrimaryKey';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'CounterCacheUser';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'CounterCacheUserNonstandardPrimaryKey';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'DataTest';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Dependency';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Device';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'DeviceType';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'DeviceTypeCategory';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Document';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'DocumentDirectory';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Domain';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'ExteriorTypeCategory';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'FeatureSet';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Featured';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Featured2';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'FilmFile';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'FlagTree';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Fruit';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'FruitsUuidTag';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Group';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'GroupUpdateAll';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Home';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Image';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Item';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'ItemsPortfolio';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'JoinA';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'JoinB';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'JoinC';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'JoinThing';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Level';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Message';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'ModelA';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'ModelB';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'ModelC';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'ModelD';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'ModifiedAttachment';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Monkey';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'MyCategoriesMyProduct';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'MyCategoriesMyUser';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'MyCategory';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'MyProduct';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'MyUser';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'MysqlTestModel';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Node';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'NodeAfterFind';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'NodeAfterFindSample';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'NumberTree';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'NumberTreeTwo';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'NumericArticle';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'OverallFavorite';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Person';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Portfolio';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Post';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'PrefixTest';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'PrimaryModel';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Product';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'ProductUpdateAll';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Project';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Sample';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'SecondaryModel';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Site';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Something';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'SomethingElse';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Story';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Syfile';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Tag';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'TagB';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Test';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'TestAlias';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'TestModel';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'TestModel2';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'TestModel3';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'TestModel4';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'TestModel4TestModel7';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'TestModel5';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'TestModel6';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'TestModel7';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'TestModel8';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'TestModel9';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'TestPluginArticle';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'TestPluginComment';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'TestValidate';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'ThePaper';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'TheVoid';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Thread';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'TransactionManyTestModel';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'TransactionTestModel';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'TranslateArticleModel';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'TranslateTestModel';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'TranslateWithPrefix';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'TranslatedArticle';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'TranslatedItem';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'TranslatedItemWithTable';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'UnconventionalTree';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'UnderscoreField';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'User';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'User2';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Uuid';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'UuidTag';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'UuidTree';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Uuiditem';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'UuiditemsUuidportfolio';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'UuiditemsUuidportfolioNumericid';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'Uuidportfolio';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'ValidationTest1';$/;"	v
name	lib/Cake/Test/Case/Model/models.php	/^	public $name = 'ValidationTest2';$/;"	v
order	lib/Cake/Test/Case/Model/models.php	/^	public $order = array('DeviceType.order' => 'ASC');$/;"	v
primaryKey	lib/Cake/Test/Case/Model/models.php	/^	public $primaryKey = 'bidding';$/;"	v
primaryKey	lib/Cake/Test/Case/Model/models.php	/^	public $primaryKey = 'iAccountId';$/;"	v
primaryKey	lib/Cake/Test/Case/Model/models.php	/^	public $primaryKey = 'iContentAccountsId';$/;"	v
primaryKey	lib/Cake/Test/Case/Model/models.php	/^	public $primaryKey = 'iContentId';$/;"	v
primaryKey	lib/Cake/Test/Case/Model/models.php	/^	public $primaryKey = 'pid';$/;"	v
primaryKey	lib/Cake/Test/Case/Model/models.php	/^	public $primaryKey = 'story';$/;"	v
primaryKey	lib/Cake/Test/Case/Model/models.php	/^	public $primaryKey = 'uid';$/;"	v
primaryKey	lib/Cake/Test/Case/Model/models.php	/^	public $primaryKey = false;$/;"	v
remove	lib/Cake/Test/Case/Model/models.php	/^	public $remove = false;$/;"	v
schema	lib/Cake/Test/Case/Model/models.php	/^	public function schema($field = false) {$/;"	f
table	lib/Cake/Test/Case/Model/models.php	/^	public $table = 'article_featured';$/;"	v
table	lib/Cake/Test/Case/Model/models.php	/^	public $table = 'articles';$/;"	v
table	lib/Cake/Test/Case/Model/models.php	/^	public $table = 'category';$/;"	v
table	lib/Cake/Test/Case/Model/models.php	/^	public $table = 'category_featured';$/;"	v
table	lib/Cake/Test/Case/Model/models.php	/^	public $table = 'comment';$/;"	v
table	lib/Cake/Test/Case/Model/models.php	/^	public $table = 'featured2';$/;"	v
table	lib/Cake/Test/Case/Model/models.php	/^	public $table = 'group';$/;"	v
table	lib/Cake/Test/Case/Model/models.php	/^	public $table = 'level';$/;"	v
table	lib/Cake/Test/Case/Model/models.php	/^	public $table = 'test_model4';$/;"	v
table	lib/Cake/Test/Case/Model/models.php	/^	public $table = 'test_model4_test_model7';$/;"	v
table	lib/Cake/Test/Case/Model/models.php	/^	public $table = 'test_model5';$/;"	v
table	lib/Cake/Test/Case/Model/models.php	/^	public $table = 'test_model6';$/;"	v
table	lib/Cake/Test/Case/Model/models.php	/^	public $table = 'test_model7';$/;"	v
table	lib/Cake/Test/Case/Model/models.php	/^	public $table = 'test_model8';$/;"	v
table	lib/Cake/Test/Case/Model/models.php	/^	public $table = 'test_model9';$/;"	v
table	lib/Cake/Test/Case/Model/models.php	/^	public $table = 'user';$/;"	v
tablePrefix	lib/Cake/Test/Case/Model/models.php	/^	public $tablePrefix = 'i18n_';$/;"	v
titleDuplicate	lib/Cake/Test/Case/Model/models.php	/^	public static function titleDuplicate($title) {$/;"	f
translateModel	lib/Cake/Test/Case/Model/models.php	/^	public $translateModel = 'TranslateArticleModel';$/;"	v
translateModel	lib/Cake/Test/Case/Model/models.php	/^	public $translateModel = 'TranslateTestModel';$/;"	v
translateModel	lib/Cake/Test/Case/Model/models.php	/^	public $translateModel = 'TranslateWithPrefix';$/;"	v
translateTable	lib/Cake/Test/Case/Model/models.php	/^	public $translateTable = 'another_i18n';$/;"	v
useDbConfig	lib/Cake/Test/Case/Model/models.php	/^			$this->useDbConfig = $queryData['connection'];$/;"	v
useDbConfig	lib/Cake/Test/Case/Model/models.php	/^		$this->useDbConfig = 'test';$/;"	v
useDbConfig	lib/Cake/Test/Case/Model/models.php	/^	public $useDbConfig = 'test';$/;"	v
useDbConfig	lib/Cake/Test/Case/Model/models.php	/^	public $useDbConfig = 'test2';$/;"	v
useDbConfig	lib/Cake/Test/Case/Model/models.php	/^	public $useDbConfig = 'test_database_three';$/;"	v
useTable	lib/Cake/Test/Case/Model/models.php	/^	public $useTable = 'Accounts';$/;"	v
useTable	lib/Cake/Test/Case/Model/models.php	/^	public $useTable = 'Content';$/;"	v
useTable	lib/Cake/Test/Case/Model/models.php	/^	public $useTable = 'ContentAccounts';$/;"	v
useTable	lib/Cake/Test/Case/Model/models.php	/^	public $useTable = 'apples';$/;"	v
useTable	lib/Cake/Test/Case/Model/models.php	/^	public $useTable = 'article_i18n';$/;"	v
useTable	lib/Cake/Test/Case/Model/models.php	/^	public $useTable = 'articles';$/;"	v
useTable	lib/Cake/Test/Case/Model/models.php	/^	public $useTable = 'attachments';$/;"	v
useTable	lib/Cake/Test/Case/Model/models.php	/^	public $useTable = 'bids';$/;"	v
useTable	lib/Cake/Test/Case/Model/models.php	/^	public $useTable = 'comments';$/;"	v
useTable	lib/Cake/Test/Case/Model/models.php	/^	public $useTable = 'devices';$/;"	v
useTable	lib/Cake/Test/Case/Model/models.php	/^	public $useTable = 'domains';$/;"	v
useTable	lib/Cake/Test/Case/Model/models.php	/^	public $useTable = 'fruits';$/;"	v
useTable	lib/Cake/Test/Case/Model/models.php	/^	public $useTable = 'group_update_all';$/;"	v
useTable	lib/Cake/Test/Case/Model/models.php	/^	public $useTable = 'i18n';$/;"	v
useTable	lib/Cake/Test/Case/Model/models.php	/^	public $useTable = 'join_as';$/;"	v
useTable	lib/Cake/Test/Case/Model/models.php	/^	public $useTable = 'join_bs';$/;"	v
useTable	lib/Cake/Test/Case/Model/models.php	/^	public $useTable = 'messages';$/;"	v
useTable	lib/Cake/Test/Case/Model/models.php	/^	public $useTable = 'numeric_articles';$/;"	v
useTable	lib/Cake/Test/Case/Model/models.php	/^	public $useTable = 'posts';$/;"	v
useTable	lib/Cake/Test/Case/Model/models.php	/^	public $useTable = 'prefix_tests';$/;"	v
useTable	lib/Cake/Test/Case/Model/models.php	/^	public $useTable = 'product_update_all';$/;"	v
useTable	lib/Cake/Test/Case/Model/models.php	/^	public $useTable = 'samples';$/;"	v
useTable	lib/Cake/Test/Case/Model/models.php	/^	public $useTable = 'sites';$/;"	v
useTable	lib/Cake/Test/Case/Model/models.php	/^	public $useTable = 'tags';$/;"	v
useTable	lib/Cake/Test/Case/Model/models.php	/^	public $useTable = 'threads';$/;"	v
useTable	lib/Cake/Test/Case/Model/models.php	/^	public $useTable = 'translated_items';$/;"	v
useTable	lib/Cake/Test/Case/Model/models.php	/^	public $useTable = 'users';$/;"	v
useTable	lib/Cake/Test/Case/Model/models.php	/^	public $useTable = 'uuid_tags';$/;"	v
useTable	lib/Cake/Test/Case/Model/models.php	/^	public $useTable = false;$/;"	v
valid	lib/Cake/Test/Case/Model/models.php	/^		$valid = ($value['number'] >= $options['min'] && $value['number'] <= $options['max']);$/;"	v
validate	lib/Cake/Test/Case/Model/models.php	/^	public $validate = array($/;"	v
validate	lib/Cake/Test/Case/Model/models.php	/^	public $validate = array('name' => 'notEmpty');$/;"	v
validate	lib/Cake/Test/Case/Model/models.php	/^	public $validate = array('title' => 'notEmpty');$/;"	v
validate	lib/Cake/Test/Case/Model/models.php	/^	public $validate = array('user' => 'notEmpty', 'password' => 'notEmpty');$/;"	v
validate	lib/Cake/Test/Case/Model/models.php	/^	public $validate = array('user_id' => 'numeric', 'title' => 'notEmpty', 'body' => 'notEmpty');$/;"	v
validateNumber	lib/Cake/Test/Case/Model/models.php	/^	public function validateNumber($value, $options) {$/;"	f
validateTitle	lib/Cake/Test/Case/Model/models.php	/^	public function validateTitle($value) {$/;"	f
validatorParams	lib/Cake/Test/Case/Model/models.php	/^		$this->validatorParams = get_defined_vars();$/;"	v
CakeRequestTest	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^class CakeRequestTest extends CakeTestCase {$/;"	c
TestCakeRequest	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^class TestCakeRequest extends CakeRequest {$/;"	c
_FILES	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$_FILES = array($/;"	v
_GET	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$_GET = array($/;"	v
_GET	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$_GET = array('test' => 'value');$/;"	v
_GET	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$_GET = array();$/;"	v
_POST	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$_POST = array($/;"	v
_POST	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$_POST = array('_method' => 'DELETE');$/;"	v
_POST	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$_POST = array('_method' => 'POST');$/;"	v
_POST	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$_POST = array('data' => array($/;"	v
_POST	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$_POST = array('one' => 1, 'two' => 'three');$/;"	v
_app	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$this->_app = Configure::read('App');$/;"	v
_case	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^			$this->_case = $_GET['case'];$/;"	v
_case	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$this->_case = null;$/;"	v
_loadEnvironment	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	protected function _loadEnvironment($env) {$/;"	f
data	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$data = array($/;"	v
data	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$data = array('data' => array($/;"	v
data	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$data = array('one' => 1, 'two' => 'three');$/;"	v
detectCallback	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function detectCallback($request) {$/;"	f
environmentGenerator	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public static function environmentGenerator() {$/;"	f
expected	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$expected = array('application\/xml', 'text\/html', 'application\/json');$/;"	v
expected	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$expected = array('one' => 'something', 'two' => 'else');$/;"	v
here	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$this->here = $this->base . '\/' . $this->url;$/;"	v
reConstruct	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function reConstruct($url = 'some\/path', $parseEnvironment = true) {$/;"	f
request	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$request = $this->getMock('CakeRequest', array('_readInput'));$/;"	v
request	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$request = $this->getMock('TestCakeRequest', array('_readInput'));$/;"	v
request	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$request = new CakeRequest('\/', false);$/;"	v
request	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$request = new CakeRequest('\/posts\/add\/1\/name:value');$/;"	v
request	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$request = new CakeRequest('\/posts\/base_path\/1\/name:value');$/;"	v
request	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$request = new CakeRequest('\/posts\/edit\/1');$/;"	v
request	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$request = new CakeRequest('\/posts\/index');$/;"	v
request	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$request = new CakeRequest('posts\/index');$/;"	v
request	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$request = new CakeRequest('some\/path');$/;"	v
request	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$request = new CakeRequest('some\/path?one=something&two=else');$/;"	v
request	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$request = new CakeRequest();$/;"	v
request	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$request = new CakeRequest(null, false);$/;"	v
result	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$result = $request->accepts('image\/gif');$/;"	v
result	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$result = $request->accepts('text\/html');$/;"	v
result	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$result = $request->accepts();$/;"	v
result	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$result = $request->addParams(array('plugin' => null, 'action' => 'index'));$/;"	v
result	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$result = $request->addPaths(array($/;"	v
result	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$result = $request->data('Model');$/;"	v
result	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$result = $request->data('Model.imaginary');$/;"	v
result	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$result = $request->data('Model.new_value', 'new value');$/;"	v
result	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$result = $request->here();$/;"	v
result	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$result = $request->here(false);$/;"	v
result	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$result = $request->input('Xml::build', array('return' => 'domdocument'));$/;"	v
result	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$result = $request->input('json_decode');$/;"	v
result	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$result = $request->input('json_decode', true);$/;"	v
result	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$result = $request->input();$/;"	v
result	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$result = $request->parseAccept();$/;"	v
result	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$result = $request->query('foo');$/;"	v
result	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$result = $request->query('imaginary');$/;"	v
result	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$result = $request->query('test');$/;"	v
result	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$result = $request->query('test.1');$/;"	v
result	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$result = $request->query('test.2');$/;"	v
result	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$result = $request->referer();$/;"	v
result	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$result = $request->referer(false);$/;"	v
result	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$result = $request->referer(true);$/;"	v
result	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$result = CakeRequest::acceptLanguage('en-CA');$/;"	v
result	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$result = CakeRequest::acceptLanguage('en-US');$/;"	v
result	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$result = CakeRequest::acceptLanguage('en-ca');$/;"	v
result	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$result = CakeRequest::acceptLanguage('en-us');$/;"	v
result	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$result = CakeRequest::acceptLanguage();$/;"	v
setUp	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function tearDown() {$/;"	f
testAcceptLanguage	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testAcceptLanguage() {$/;"	f
testAcceptWithQvalueSorting	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testAcceptWithQvalueSorting() {$/;"	f
testAcceptWithWhitespace	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testAcceptWithWhitespace() {$/;"	f
testAccepts	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testAccepts() {$/;"	f
testAddDetector	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testAddDetector() {$/;"	f
testAddParams	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testAddParams() {$/;"	f
testAddPaths	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testAddPaths() {$/;"	f
testAllowMethod	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testAllowMethod() {$/;"	f
testAllowMethodException	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testAllowMethodException() {$/;"	f
testArrayAccess	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testArrayAccess() {$/;"	f
testBaseUrlAndWebrootWithBaseUrl	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testBaseUrlAndWebrootWithBaseUrl() {$/;"	f
testBaseUrlAndWebrootWithModRewrite	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testBaseUrlAndWebrootWithModRewrite() {$/;"	f
testBaseUrlNoRewriteTopLevelIndex	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testBaseUrlNoRewriteTopLevelIndex() {$/;"	f
testBaseUrlNoRewriteWebrootIndex	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testBaseUrlNoRewriteWebrootIndex() {$/;"	f
testBaseUrlWithAppAndWebrootInDirname	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testBaseUrlWithAppAndWebrootInDirname() {$/;"	f
testBaseUrlWithModRewriteAndIndexPhp	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testBaseUrlWithModRewriteAndIndexPhp() {$/;"	f
testBaseUrlWithNoModRewrite	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testBaseUrlWithNoModRewrite() {$/;"	f
testBaseUrlwithModRewriteAlias	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testBaseUrlwithModRewriteAlias() {$/;"	f
testConstructionGetParsing	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testConstructionGetParsing() {$/;"	f
testDataReading	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testDataReading() {$/;"	f
testDataWriting	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testDataWriting() {$/;"	f
testDataWritingFalsey	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testDataWritingFalsey() {$/;"	f
testDomain	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testDomain() {$/;"	f
testEnvironmentDetection	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testEnvironmentDetection($name, $env, $expected) {$/;"	f
testFilesParsing	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testFilesParsing() {$/;"	f
testFilesZeroithIndex	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testFilesZeroithIndex() {$/;"	f
testGetParamWithUrlencodedElement	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testGetParamWithUrlencodedElement() {$/;"	f
testGetParamsWithDot	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testGetParamsWithDot() {$/;"	f
testHeader	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testHeader() {$/;"	f
testHere	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testHere() {$/;"	f
testHost	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testHost() {$/;"	f
testInput	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testInput() {$/;"	f
testInputDecode	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testInputDecode() {$/;"	f
testInputDecodeExtraParams	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testInputDecodeExtraParams() {$/;"	f
testIsAll	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testIsAll() {$/;"	f
testIsHttpMethods	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testIsHttpMethods() {$/;"	f
testIsMultiple	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testIsMultiple() {$/;"	f
testIsRequested	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testIsRequested() {$/;"	f
testIsSsl	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testIsSsl() {$/;"	f
testMagicCallExceptionOnUnknownMethod	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testMagicCallExceptionOnUnknownMethod() {$/;"	f
testMagicget	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testMagicget() {$/;"	f
testMagicisset	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testMagicisset() {$/;"	f
testMethod	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testMethod() {$/;"	f
testMethodOverrides	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testMethodOverrides() {$/;"	f
testNoAutoParseConstruction	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testNoAutoParseConstruction() {$/;"	f
testParseAcceptIgnoreAcceptExtensions	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testParseAcceptIgnoreAcceptExtensions() {$/;"	f
testParseAcceptInvalidSyntax	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testParseAcceptInvalidSyntax() {$/;"	f
testParseAcceptNoQValues	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testParseAcceptNoQValues() {$/;"	f
testParseAcceptWithQValue	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testParseAcceptWithQValue() {$/;"	f
testPostParsing	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testPostParsing() {$/;"	f
testPutParsing	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testPutParsing() {$/;"	f
testPutParsingJSON	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testPutParsingJSON() {$/;"	f
testQuery	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testQuery() {$/;"	f
testQueryStringAndNamedParams	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testQueryStringAndNamedParams() {$/;"	f
testQueryStringParsingFromInputUrl	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testQueryStringParsingFromInputUrl() {$/;"	f
testQueryWithArray	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testQueryWithArray() {$/;"	f
testReadingParams	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testReadingParams() {$/;"	f
testReferer	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testReferer() {$/;"	f
testRefererBasePath	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testRefererBasePath() {$/;"	f
testSubdomain	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testSubdomain() {$/;"	f
testclientIp	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testclientIp() {$/;"	f
testisAjaxFlashAndFriends	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^	public function testisAjaxFlashAndFriends() {$/;"	f
url	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^			$url = $this->_url();$/;"	v
url	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^			$url = substr($url, 1);$/;"	v
url	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$this->url = $url;$/;"	v
xml	lib/Cake/Test/Case/Network/CakeRequestTest.php	/^		$xml = <<<XML$/;"	v
CakeResponseTest	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^class CakeResponseTest extends CakeTestCase {$/;"	c
body	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$body = 'content';$/;"	v
body	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$body = 'hwy';$/;"	v
body	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$body = '長い長い長いSubjectの場合はfoldingするのが正しいんだけどいったいどうなるんだろう？';$/;"	v
charsetTypeProvider	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public static function charsetTypeProvider() {$/;"	f
codes	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$codes = array($/;"	v
codes	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$codes = array(404 => 'Sorry Bro');$/;"	v
cookie	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$cookie = $expected['CakeTestCookie[Testing]'];$/;"	v
cookie	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$cookie = array($/;"	v
corsData	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function corsData() {$/;"	f
currentUserAgent	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$currentUserAgent = isset($_SERVER['HTTP_USER_AGENT']) ? $_SERVER['HTTP_USER_AGENT'] : null;$/;"	v
expected	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$expected = array('json', 'xhtml', 'css');$/;"	v
expected	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$expected = array(100 => 'Continue');$/;"	v
expected	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$expected = array(381 => 'Unicorn Moved');$/;"	v
expected	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$expected = array(404 => 'Sorry Bro');$/;"	v
fooRequest	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$fooRequest = new CakeRequest();$/;"	v
goofyOutput	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$goofyOutput = 'I am goofily sending output in the controller';$/;"	v
headers	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$headers = $response->header();$/;"	v
headers	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$headers = array('Location' => 'http:\/\/example2.com');$/;"	v
headers	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$headers = array();$/;"	v
i	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$i = 1;$/;"	v
method	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$method = $response->expects(!$expectedOrigin ? $this->never() : $this->at(0))->method('header');$/;"	v
now	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$now = new DateTime('now', new DateTimeZone('America\/Los_Angeles'));$/;"	v
now	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$now = time();$/;"	v
options	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$options = array($/;"	v
output	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$output = ob_get_clean();$/;"	v
rangeProvider	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public static function rangeProvider() {$/;"	f
response	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$response = $this->getMock('CakeResponse', array($/;"	v
response	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$response = $this->getMock('CakeResponse', array('_sendHeader', '_sendContent'));$/;"	v
response	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$response = $this->getMock('CakeResponse', array('_sendHeader', '_sendContent', '_setCookies'));$/;"	v
response	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$response = $this->getMock('CakeResponse', array('_sendHeader', '_sendContent', 'outputCompressed'));$/;"	v
response	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$response = $this->getMock('CakeResponse', array('header'));$/;"	v
response	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$response = $this->getMock('CakeResponse', array('notModified'));$/;"	v
response	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$response = new CakeResponse($options);$/;"	v
response	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$response = new CakeResponse();$/;"	v
response	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$response = new CakeResponse;$/;"	v
result	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$result = $response->compress();$/;"	v
result	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$result = $response->cookie('CakeTestCookie[Testing]');$/;"	v
result	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$result = $response->cookie();$/;"	v
result	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$result = $response->httpCodes($codes);$/;"	v
result	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$result = $response->httpCodes();$/;"	v
result	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$result = $response->httpCodes(100);$/;"	v
result	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$result = $response->httpCodes(381);$/;"	v
result	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$result = $response->httpCodes(404);$/;"	v
result	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$result = $response->mapType(array('application\/json', 'application\/xhtml+xml', 'text\/css'));$/;"	v
result	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$result = $response->outputCompressed();$/;"	v
result	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$result = $response->send();$/;"	v
secureRequest	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$secureRequest = $this->getMock('CakeRequest', array('is'));$/;"	v
setUp	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function setUp() {$/;"	f
since	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$since = time();$/;"	v
tearDown	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function tearDown() {$/;"	f
testBody	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testBody() {$/;"	f
testCache	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testCache() {$/;"	f
testCharset	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testCharset() {$/;"	f
testCheckNotModifiedByEtagAndTime	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testCheckNotModifiedByEtagAndTime() {$/;"	f
testCheckNotModifiedByEtagAndTimeMismatch	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testCheckNotModifiedByEtagAndTimeMismatch() {$/;"	f
testCheckNotModifiedByEtagExact	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testCheckNotModifiedByEtagExact() {$/;"	f
testCheckNotModifiedByEtagMismatch	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testCheckNotModifiedByEtagMismatch() {$/;"	f
testCheckNotModifiedByEtagStar	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testCheckNotModifiedByEtagStar() {$/;"	f
testCheckNotModifiedByTime	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testCheckNotModifiedByTime() {$/;"	f
testCheckNotModifiedNoHints	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testCheckNotModifiedNoHints() {$/;"	f
testCompress	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testCompress() {$/;"	f
testConnectionAbortedOnBuffering	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testConnectionAbortedOnBuffering() {$/;"	f
testConstruct	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testConstruct() {$/;"	f
testCookieSettings	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testCookieSettings() {$/;"	f
testCors	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testCors($request, $origin, $domains, $methods, $headers, $expectedOrigin, $expectedMethods = false, $expectedHeaders = false) {$/;"	f
testDisableCache	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testDisableCache() {$/;"	f
testDownload	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testDownload() {$/;"	f
testEtag	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testEtag() {$/;"	f
testExpires	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testExpires() {$/;"	f
testFile	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testFile() {$/;"	f
testFileExtensionNotSet	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testFileExtensionNotSet() {$/;"	f
testFileNotFound	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testFileNotFound() {$/;"	f
testFileRange	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testFileRange() {$/;"	f
testFileRangeInvalid	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testFileRangeInvalid() {$/;"	f
testFileRangeOffsets	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testFileRangeOffsets($range, $length, $offsetResponse) {$/;"	f
testFileUpperExtension	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testFileUpperExtension() {$/;"	f
testFileWithPathTraversal	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testFileWithPathTraversal() {$/;"	f
testFileWithUnknownFileNoDownload	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testFileWithUnknownFileNoDownload() {$/;"	f
testFileWithUnknownFileTypeGeneric	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testFileWithUnknownFileTypeGeneric() {$/;"	f
testFileWithUnknownFileTypeIE	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testFileWithUnknownFileTypeIE() {$/;"	f
testFileWithUnknownFileTypeOpera	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testFileWithUnknownFileTypeOpera() {$/;"	f
testHeader	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testHeader() {$/;"	f
testHttpCodes	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testHttpCodes() {$/;"	f
testLength	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testLength() {$/;"	f
testLocation	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testLocation() {$/;"	f
testMapType	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testMapType() {$/;"	f
testMaxAge	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testMaxAge() {$/;"	f
testModified	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testModified() {$/;"	f
testMustRevalidate	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testMustRevalidate() {$/;"	f
testNotModified	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testNotModified() {$/;"	f
testOutputCompressed	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testOutputCompressed() {$/;"	f
testProtocol	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testProtocol() {$/;"	f
testSend	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testSend() {$/;"	f
testSendChangingContentType	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testSendChangingContentType($original, $expected) {$/;"	f
testSendChangingContentTypeWithoutCharset	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testSendChangingContentTypeWithoutCharset() {$/;"	f
testSendContentLength	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testSendContentLength() {$/;"	f
testSendWithLocation	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testSendWithLocation() {$/;"	f
testSharable	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testSharable() {$/;"	f
testSharedMaxAge	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testSharedMaxAge() {$/;"	f
testStatusCode	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testStatusCode() {$/;"	f
testType	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testType() {$/;"	f
testUnmodifiedContent	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testUnmodifiedContent() {$/;"	f
testVary	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^	public function testVary() {$/;"	f
time	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$time = '+5 day';$/;"	v
time	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$time = new DateTime('+1 day', new DateTimeZone('UTC'));$/;"	v
time	lib/Cake/Test/Case/Network/CakeResponseTest.php	/^		$time = time();$/;"	v
CakeSocketTest	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^class CakeSocketTest extends CakeTestCase {$/;"	c
Socket	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^			$this->Socket = new CakeSocket($config);$/;"	v
Socket	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^			$this->Socket = new CakeSocket();$/;"	v
Socket	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^			$this->Socket = new CakeSocket(array('host' => '127.0.0.1'));$/;"	v
Socket	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^		$this->Socket = new CakeSocket($config);$/;"	v
Socket	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^		$this->Socket = new CakeSocket($configNoSslOrTls);$/;"	v
Socket	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^		$this->Socket = new CakeSocket($configSslTls);$/;"	v
Socket	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^		$this->Socket = new CakeSocket();$/;"	v
Socket	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^		$this->Socket = new CakeSocket(array('host' => 'www.cakephp.org', 'port' => 23, 'protocol' => 'udp'));$/;"	v
Socket	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^		$this->Socket = new CakeSocket(array('timeout' => 1));$/;"	v
Socket	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^		$this->Socket = new CakeSocket(array('timeout' => 5));$/;"	v
_connectSocketToSslTls	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^	protected function _connectSocketToSslTls() {$/;"	f
anotherSocket	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^		$anotherSocket = new CakeSocket($config);$/;"	v
config	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^			$config = array('host' => '127.0.0.1', 'timeout' => 0.00001);$/;"	v
config	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^			$config = array('host' => 'google.com', 'port' => 80, 'timeout' => 1);$/;"	v
config	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^			$config = array('persistent' => true);$/;"	v
config	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^		$config = $this->Socket->config;$/;"	v
config	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^		$config = array($/;"	v
config	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^		$config = array('host' => '127.0.0.1', 'timeout' => 0.5);$/;"	v
configNoSslOrTls	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^		$configNoSslOrTls = array('host' => 'localhost', 'port' => 80, 'timeout' => 0.1);$/;"	v
configSslTls	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^		$configSslTls = array('host' => 'smtp.gmail.com', 'port' => 465, 'timeout' => 5);$/;"	v
invalidConnections	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^	public static function invalidConnections() {$/;"	f
request	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^			$request = "GET \/ HTTP\/1.1\\r\\nConnection: close\\r\\n\\r\\n";$/;"	v
result	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^		$result = $this->Socket->context();$/;"	v
setUp	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^	public function tearDown() {$/;"	f
testConstruct	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^	public function testConstruct() {$/;"	f
testEnableCrypto	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^	public function testEnableCrypto() {$/;"	f
testEnableCryptoBadMode	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^	public function testEnableCryptoBadMode() {$/;"	f
testEnableCryptoEnableStatus	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^	public function testEnableCryptoEnableStatus() {$/;"	f
testEnableCryptoExceptionDisableTwice	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^	public function testEnableCryptoExceptionDisableTwice() {$/;"	f
testEnableCryptoExceptionEnableTwice	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^	public function testEnableCryptoExceptionEnableTwice() {$/;"	f
testEnableCryptoSocketExceptionNoSsl	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^	public function testEnableCryptoSocketExceptionNoSsl() {$/;"	f
testEnableCryptoSocketExceptionNoTls	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^	public function testEnableCryptoSocketExceptionNoTls() {$/;"	f
testGetContext	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^	public function testGetContext() {$/;"	f
testInvalidConnection	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^	public function testInvalidConnection($data) {$/;"	f
testLastError	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^	public function testLastError() {$/;"	f
testReset	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^	public function testReset() {$/;"	f
testSocketConnection	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^	public function testSocketConnection() {$/;"	f
testSocketHost	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^	public function testSocketHost() {$/;"	f
testSocketReading	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^	public function testSocketReading() {$/;"	f
testSocketWriting	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^	public function testSocketWriting() {$/;"	f
testTimeOutConnection	lib/Cake/Test/Case/Network/CakeSocketTest.php	/^	public function testTimeOutConnection() {$/;"	f
CakeEmail	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$this->CakeEmail = new CakeEmail($configs);$/;"	v
CakeEmail	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$this->CakeEmail = new TestCakeEmail('test');$/;"	v
CakeEmail	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$this->CakeEmail = new TestCakeEmail();$/;"	v
CakeEmailTest	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^class CakeEmailTest extends CakeTestCase {$/;"	c
ExtendTransport	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^class ExtendTransport {$/;"	c
File	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$File = new File(TMP . 'cake_test_emails.log');$/;"	v
TestCakeEmail	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^class TestCakeEmail extends CakeEmail {$/;"	c
TestEmailConfig	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^class TestEmailConfig {$/;"	c
_checkContentTransferEncoding	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	protected function _checkContentTransferEncoding($message, $charset) {$/;"	f
_config	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	protected $_config = array();$/;"	v
_configClass	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	protected $_configClass = 'TestEmailConfig';$/;"	v
_getEmailByNewStyleCharset	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	protected function _getEmailByNewStyleCharset($charset, $headerCharset) {$/;"	f
_getEmailByOldStyleCharset	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	protected function _getEmailByOldStyleCharset($charset, $headerCharset) {$/;"	f
additionalEmails	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$additionalEmails = array($/;"	v
address	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$address = array($/;"	v
assertLineLengths	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function assertLineLengths($message) {$/;"	f
boundary	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$boundary = $this->CakeEmail->getBoundary();$/;"	v
boundary	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$boundary = '--' . $this->CakeEmail->getBoundary();$/;"	v
charset	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$charset = $this->CakeEmail->charset('Shift_JIS');$/;"	v
charset	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$charset = $this->CakeEmail->headerCharset('Shift_JIS');$/;"	v
checkHeaders	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$checkHeaders = array($/;"	v
config	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$config = array($/;"	v
config	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$config = array('test' => 'ok', 'test2' => true);$/;"	v
config	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$config = array('test' => 'test@example.com');$/;"	v
configs	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$configs = array($/;"	v
configs	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$configs = array('from' => 'root@cakephp.org', 'message' => 'Message from configs', 'transport' => 'Debug');$/;"	v
configs	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$configs = new TestEmailConfig();$/;"	v
data	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$data = file_get_contents(CAKE . 'Console\/Templates\/skel\/webroot\/img\/cake.icon.png');$/;"	v
email	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$email = new CakeEmail();$/;"	v
email	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$email = new CakeEmail(array($/;"	v
email	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$email = new CakeEmail(array('charset' => 'iso-2022-jp'));$/;"	v
email	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$email = new CakeEmail(array('charset' => 'iso-2022-jp', 'headerCharset' => 'iso-2022-jp-ms'));$/;"	v
email	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$email = new CakeEmail(array('emailPattern' => $regex));$/;"	v
email	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$email = new CakeEmail(array('headerCharset' => 'iso-2022-jp-ms'));$/;"	v
email	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$email = new CakeEmail(array('headerCharset' => 'iso-2022-jp-ms', 'transport' => 'Debug'));$/;"	v
email	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$email = new CakeEmail(array('transport' => 'Debug'));$/;"	v
emails	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$emails = array($/;"	v
encode	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function encode($text) {$/;"	f
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = "--$boundary\\r\\n" .$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = "<\/html>\\r\\n" .$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = "<a\\r\\n" . 'href="http:\/\/cakephp.org">' . str_repeat('x', CakeEmail::LINE_LENGTH_MUST - 26) . "\\r\\n" .$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = "=?ISO-2022-JP?B?GyRCRDkkJEQ5JCREOSQkGyhCU3ViamVjdBskQiROPmw5ZyRPGyhCZm9s?=\\r\\n" .$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = "?ISO-2022-JP?B?GyRCJCIkbCEpJGIkNyQrJDckRiROQTAkSBsoQg==?=";$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = "Here is my body, with multi lines.\\r\\nThis is the second line.\\r\\n\\r\\nAnd the last.\\r\\n\\r\\n";$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = "Other body\\r\\n\\r\\n";$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = "Sending content\\r\\nAs array\\r\\n\\r\\n\\r\\n";$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = "{$message}\\r\\n\\r\\n";$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = "{$message}\\r\\nx\\r\\n\\r\\n";$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = "{$message}\\r\\nxxxxxxxxx\\r\\n\\r\\n";$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = $str1 . str_repeat('x', CakeEmail::LINE_LENGTH_MUST - $length + 1) . sprintf("\\r\\n%s\\r\\n\\r\\n", trim($str2));$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = '<img src="http:\/\/' . $server . '\/img\/image.gif" alt="cool image" width="100" height="100" \/>';$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = '<p>This email was sent using the <a href="http:\/\/cakephp.org">CakePHP Framework<\/a><\/p>';$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = '=?ISO-2022-JP?B?GyRCRnxLXDhsGyhC?=';$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = '=?ISO-2022-JP?B?GyRCRnxLXDhsJE4bKEJTdWJqZWN0GyRCJEskYkJQMX4kOSRrJGgbKEI=?=';$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = '=?UTF-8?B?2YfYsNmHINix2LPYp9mE2Kkg2KjYudmG2YjYp9mGINi32YjZitmEINmF2LE=?=' . "\\r\\n" . ' =?UTF-8?B?2LPZhCDZhNmE2YXYs9iq2YTZhQ==?=';$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = '@example.org>';$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = 'This email was sent using the CakePHP Framework, http:\/\/cakephp.org.';$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = 'default';$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = 'example.org';$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = array("=?ISO-2022-JP?B?GyRCPHc4Qkw1PHc4Qkw1OF45ZSROOyQkakBaJGwzJDo9TXg\/ZTV7GyhC?=\\r\\n" .$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = array('"Last, First" <me@example.com>');$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = array('"\\"Last\\" First" <me@example.com>');$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = array('=?ISO-2022-JP?B?GyRCRnxLXDhsGyhCVGVzdA==?= <cake@cakephp.org>');$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = array('=?UTF-8?B?5pel5pys6KqeVGVzdA==?= <cake@cakephp.org>');$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = array('=?UTF-8?B?w4TDlsOcVGVzdA==?= <cake@cakephp.org>');$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = array('CakePHP <cake@cakephp.org>', 'Cake <php@cakephp.org>');$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = array('Last First <me@example.com>');$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = array('cake@cakephp.org' => 'CakePHP');$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = array('cake@cakephp.org' => 'Name');$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = array('cake@cakephp.org' => 'cake@cakephp.org');$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = array('cake@cakephp.org');$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = array('cake@cakephp.org', 'php@cakephp.org');$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = array('headers', 'message');$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = array('template' => 'new_template', 'layout' => 'layout');$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = array('template' => 'template', 'layout' => 'layout');$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = array('template' => 'template', 'layout' => null);$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = array('template' => null, 'layout' => null);$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = array('test' => 'test@example.com', 'test2' => true);$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = env('HTTP_HOST') ? env('HTTP_HOST') : php_uname('n');$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = mb_convert_encoding('CakePHP Framework を使って送信したメールです。 http:\/\/cakephp.org.', 'ISO-2022-JP');$/;"	v
expected	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$expected = mb_convert_encoding('ここにあなたの設定した値が入ります: 日本語の差し込み123', 'ISO-2022-JP');$/;"	v
flag	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^						$flag = true;$/;"	v
flag	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^				$flag = false;$/;"	v
formatAddress	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function formatAddress($address) {$/;"	f
getBoundary	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function getBoundary() {$/;"	f
headers	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$headers = $email->getHeaders(array('subject'));$/;"	v
headers	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$headers = $this->CakeEmail->getHeaders(array('from' => true, 'sender' => true));$/;"	v
headers	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$headers = $this->CakeEmail->getHeaders(array_fill_keys(array('from', 'replyTo', 'readReceipt', 'returnPath', 'to', 'cc', 'bcc'), true));$/;"	v
instance	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$instance = CakeEmail::deliver('all@cakephp.org', 'About', 'Everything ok', array('from' => 'root@cakephp.org'), false);$/;"	v
instance	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$instance = CakeEmail::deliver('all@cakephp.org', 'About', null, $configs, true);$/;"	v
instance	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$instance = CakeEmail::deliver(null, null, array('name' => 'CakePHP'), $config, false);$/;"	v
invalidEmails	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public static function invalidEmails() {$/;"	f
invalidHeaders	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public static function invalidHeaders() {$/;"	f
length	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$length = count($message);$/;"	v
length	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$length = strlen($str);$/;"	v
length	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$length = strlen($str1) + strlen($str2);$/;"	v
lines	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$lines = explode("\\r\\n", $message);$/;"	v
list	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$list = array($/;"	v
log	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$log = $File->read();$/;"	v
message	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$message = $instance->message();$/;"	v
message	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$message = $str . str_repeat('x', CakeEmail::LINE_LENGTH_MUST + 1);$/;"	v
message	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$message = $str . str_repeat('x', CakeEmail::LINE_LENGTH_MUST - $length + 1);$/;"	v
message	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$message = $str1 . str_repeat('x', CakeEmail::LINE_LENGTH_MUST - $length + 1) . $str2;$/;"	v
message	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$message = $str1 . str_repeat('x', CakeEmail::LINE_LENGTH_MUST - $length - 1) . $str2;$/;"	v
message	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$message = $str1 . str_repeat('x', CakeEmail::LINE_LENGTH_MUST - $length) . $str2;$/;"	v
message	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$message = $this->CakeEmail->message();$/;"	v
message	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$message = '<a href="http:\/\/cakephp.org">' . str_repeat('x', CakeEmail::LINE_LENGTH_MUST) . "<\/a>";$/;"	v
message	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$message = mb_convert_encoding('受け付けました', 'iso-2022-jp', 'UTF-8');$/;"	v
message	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$message = str_replace("\\n", "\\r\\n", $message);$/;"	v
message	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$message = str_replace("\\r\\n", "\\n", substr($message, 0, -9));$/;"	v
message	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$message = substr($message, 0, -1);$/;"	v
newStyleEmail	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$newStyleEmail = $this->_getEmailByNewStyleCharset('iso-2022-jp', 'utf-8');$/;"	v
newStyleEmail	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$newStyleEmail = $this->_getEmailByNewStyleCharset('iso-2022-jp', null);$/;"	v
newStyleEmail	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$newStyleEmail = $this->_getEmailByNewStyleCharset('utf-8', 'iso-2022-jp');$/;"	v
newStyleHeaders	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$newStyleHeaders = $newStyleEmail->getHeaders($checkHeaders);$/;"	v
oldStyleEmail	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$oldStyleEmail = $this->_getEmailByOldStyleCharset('iso-2022-jp', 'utf-8');$/;"	v
oldStyleEmail	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$oldStyleEmail = $this->_getEmailByOldStyleCharset('iso-2022-jp', null);$/;"	v
oldStyleEmail	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$oldStyleEmail = $this->_getEmailByOldStyleCharset('utf-8', 'iso-2022-jp');$/;"	v
oldStyleHeaders	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$oldStyleHeaders = $oldStyleEmail->getHeaders($checkHeaders);$/;"	v
regex	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$regex = '\/.+@.+\\..+\/i';$/;"	v
regex	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$regex = '\/^[\\.a-z0-9!#$%&\\'*+\\\/=?^_`{|}~-]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]{2,6}$\/i';$/;"	v
render	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function render($content) {$/;"	f
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $email->send('①㈱');$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $email->send('ってテーブルを作ってやってたらう');$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->addTo(array('phpnut@cakephp.org' => 'PhpNut', 'jose_zap@cakephp.org'));$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->domain();$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->emailFormat('html');$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->emailFormat('invalid');$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->emailFormat();$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->encode('日本語');$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->encode('長い長い長いSubjectの場合はfoldingするのが正しいんだけどいったいどうなるんだろう？');$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->formatAddress(array('cake@cakephp.org' => 'CakePHP', 'php@cakephp.org' => 'Cake'));$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->formatAddress(array('cake@cakephp.org' => 'cake@cakephp.org'));$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->formatAddress(array('cake@cakephp.org' => 'cake@cakephp.org', 'php@cakephp.org' => 'php@cakephp.org'));$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->formatAddress(array('cake@cakephp.org' => 'ÄÖÜTest'));$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->formatAddress(array('cake@cakephp.org' => '寿限無寿限無五劫の擦り切れ海砂利水魚の水行末雲来末風来末食う寝る処に住む処やぶら小路の藪柑子パイポパイポパイポのシューリンガンシューリンガンのグーリンダイグーリンダイのポンポコピーのポンポコナーの長久命の長助'));$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->formatAddress(array('cake@cakephp.org' => '日本語Test'));$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->formatAddress(array('me@example.com' => '"Last" First'));$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->formatAddress(array('me@example.com' => 'Last First'));$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->formatAddress(array('me@example.com' => 'Last, First'));$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->from();$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->from(array('cake@cakephp.org' => 'CakePHP'));$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->from(array('cake@cakephp.org' => 'CakePHP', 'fail@cakephp.org' => 'From can only be one address'));$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->getBoundary();$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->getHeaders();$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->helpers();$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->helpers(array('Time'));$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->messageId('<my-email@localhost>');$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->messageId();$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->render(array());$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->send("Here is my body, with multi lines.\\nThis is the second line.\\r\\n\\r\\nAnd the last.");$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->send("Logging This");$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->send("Other body");$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->send($message);$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->send('Hello');$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->send('This is the message');$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->send('body');$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->send('message body.');$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->send();$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->send(array('Sending content', 'As array'));$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->setHeaders(array());$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->subject();$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->template('TestPlugin.test_plugin_tpl', 'TestPlugin.plug_default')->send();$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->template('TestPlugin.test_plugin_tpl', 'default')->send();$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->template('TestPlugin.test_plugin_tpl', 'plug_default')->send();$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->template('custom', 'TestPlugin.plug_default')->send();$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->template();$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->theme();$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->to('cake@cakephp.org');$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->to();$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->transport('Debug');$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->transport();$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->transportClass()->config();$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->transportClass();$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->viewRender('Theme');$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->viewRender();$/;"	v
result	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$result = $this->CakeEmail->wrap($text, CakeEmail::LINE_LENGTH_SHOULD);$/;"	v
server	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$server = env('SERVER_NAME') ? env('SERVER_NAME') : 'localhost';$/;"	v
setUp	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function setUp() {$/;"	f
str	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$str = 'foo<bar';$/;"	v
str	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$str = <<<HTML$/;"	v
str1	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$str1 = "a ";$/;"	v
str2	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$str2 = " b";$/;"	v
tearDown	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function tearDown() {$/;"	f
test	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public $test = array($/;"	v
test2	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public $test2 = array($/;"	v
testAddresses	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testAddresses() {$/;"	f
testAttachments	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testAttachments() {$/;"	f
testBodyEncoding	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testBodyEncoding() {$/;"	f
testBodyEncodingIso2022Jp	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testBodyEncodingIso2022Jp() {$/;"	f
testBodyEncodingIso2022JpMs	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testBodyEncodingIso2022JpMs() {$/;"	f
testCharset	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testCharset() {$/;"	f
testCharsetsCompatible	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testCharsetsCompatible() {$/;"	f
testConfig	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testConfig() {$/;"	f
testConfigArrayWithLayoutWithoutTemplate	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testConfigArrayWithLayoutWithoutTemplate() {$/;"	f
testConfigCharset	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testConfigCharset() {$/;"	f
testConfigEmailPattern	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testConfigEmailPattern() {$/;"	f
testConfigMerge	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testConfigMerge() {$/;"	f
testConfigString	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testConfigString() {$/;"	f
testConstructWithConfigArray	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testConstructWithConfigArray() {$/;"	f
testConstructWithConfigString	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testConstructWithConfigString() {$/;"	f
testCustomEmailValidation	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testCustomEmailValidation() {$/;"	f
testDeliver	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testDeliver() {$/;"	f
testDomain	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testDomain() {$/;"	f
testEmailFormat	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testEmailFormat() {$/;"	f
testEmailPattern	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testEmailPattern() {$/;"	f
testEncode	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testEncode() {$/;"	f
testExtendTransport	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testExtendTransport() {$/;"	f
testFormatAddress	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testFormatAddress() {$/;"	f
testFormatAddressJapanese	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testFormatAddressJapanese() {$/;"	f
testFrom	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testFrom() {$/;"	f
testFromWithColonsAndQuotes	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testFromWithColonsAndQuotes() {$/;"	f
testHeaderCharset	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testHeaderCharset() {$/;"	f
testHeaderEncoding	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testHeaderEncoding() {$/;"	f
testHeaders	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testHeaders() {$/;"	f
testInvalidAddHeaders	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testInvalidAddHeaders($value) {$/;"	f
testInvalidEmail	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testInvalidEmail($value) {$/;"	f
testInvalidEmailAdd	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testInvalidEmailAdd($value) {$/;"	f
testInvalidHeaders	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testInvalidHeaders($value) {$/;"	f
testMessage	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testMessage() {$/;"	f
testMessageId	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testMessageId() {$/;"	f
testMessageIdInvalid	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testMessageIdInvalid() {$/;"	f
testMessageIdWithDomain	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testMessageIdWithDomain() {$/;"	f
testRenderWithLayoutAndAttachment	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testRenderWithLayoutAndAttachment() {$/;"	f
testReset	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testReset() {$/;"	f
testResetWithCharset	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testResetWithCharset() {$/;"	f
testSendAttachment	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testSendAttachment() {$/;"	f
testSendMultipleMIME	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testSendMultipleMIME() {$/;"	f
testSendNoTemplateWithAttachments	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testSendNoTemplateWithAttachments() {$/;"	f
testSendNoTemplateWithAttachmentsAsBoth	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testSendNoTemplateWithAttachmentsAsBoth() {$/;"	f
testSendNoTemplateWithDataStringAttachment	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testSendNoTemplateWithDataStringAttachment() {$/;"	f
testSendRender	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testSendRender() {$/;"	f
testSendRenderBoth	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testSendRenderBoth() {$/;"	f
testSendRenderJapanese	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testSendRenderJapanese() {$/;"	f
testSendRenderNoLayout	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testSendRenderNoLayout() {$/;"	f
testSendRenderPlugin	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testSendRenderPlugin() {$/;"	f
testSendRenderThemed	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testSendRenderThemed() {$/;"	f
testSendRenderWithHTML	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testSendRenderWithHTML() {$/;"	f
testSendRenderWithHelpers	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testSendRenderWithHelpers() {$/;"	f
testSendRenderWithImage	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testSendRenderWithImage() {$/;"	f
testSendRenderWithVars	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testSendRenderWithVars() {$/;"	f
testSendRenderWithVarsJapanese	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testSendRenderWithVarsJapanese() {$/;"	f
testSendWithContent	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testSendWithContent() {$/;"	f
testSendWithInlineAttachments	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testSendWithInlineAttachments() {$/;"	f
testSendWithInlineAttachmentsHtmlOnly	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testSendWithInlineAttachmentsHtmlOnly() {$/;"	f
testSendWithLog	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testSendWithLog() {$/;"	f
testSendWithLogAndScope	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testSendWithLogAndScope() {$/;"	f
testSendWithNoContentDispositionAttachments	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testSendWithNoContentDispositionAttachments() {$/;"	f
testSendWithNoContentDoesNotOverwriteViewVar	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testSendWithNoContentDoesNotOverwriteViewVar() {$/;"	f
testSendWithoutFrom	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testSendWithoutFrom() {$/;"	f
testSendWithoutTo	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testSendWithoutTo() {$/;"	f
testSender	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testSender() {$/;"	f
testSubject	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testSubject() {$/;"	f
testSubjectJapanese	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testSubjectJapanese() {$/;"	f
testTemplate	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testTemplate() {$/;"	f
testTheme	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testTheme() {$/;"	f
testTo	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testTo() {$/;"	f
testTransport	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testTransport() {$/;"	f
testViewRender	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testViewRender() {$/;"	f
testViewVars	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testViewVars() {$/;"	f
testWrap	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testWrap() {$/;"	f
testWrapForJapaneseEncoding	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testWrapForJapaneseEncoding() {$/;"	f
testWrapIncludeLessThanSign	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testWrapIncludeLessThanSign() {$/;"	f
testWrapLongLine	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testWrapLongLine() {$/;"	f
testWrapWithTagsAcrossLines	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function testWrapWithTagsAcrossLines() {$/;"	f
text	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$text = '<p>Lorem ipsum dolor sit amet,<br> consectetur adipiscing elit.<br> Donec ac turpis orci, non <b>commodo<\/b> odio. <br \/> Morbi nibh nisi, vehicula pellentesque accumsan amet.<hr><\/p>';$/;"	v
text	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$text = 'Lorem ipsum <a href="http:\/\/www.cakephp.org\/controller\/action\/param1\/param2" class="nice cool fine amazing awesome">ok<\/a>';$/;"	v
text	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$text = 'Lorem ipsum dolor sit amet, consectetur < adipiscing elit. Donec ac turpis orci, non commodo odio. Morbi nibh nisi, vehicula > pellentesque accumsan amet.';$/;"	v
text	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$text = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ac <a href="http:\/\/cakephp.org">turpis<\/a> orci, non commodo odio. Morbi nibh nisi, vehicula pellentesque accumsan amet.';$/;"	v
text	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$text = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ac turpis orci, non commodo odio. Morbi nibh nisi, vehicula pellentesque accumsan amet.';$/;"	v
text	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$text = 'Lorem ipsum withonewordverybigMorethanthelineshouldsizeofrfcspecificationbyieeeavailableonieeesite ok.';$/;"	v
timestamp	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$timestamp = time();$/;"	v
transportClass	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^		$transportClass = $this->CakeEmail->transport('debug')->transportClass();$/;"	v
type	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^						$type = 'html';$/;"	v
type	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^						$type = 'text';$/;"	v
type	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^				$type = '';$/;"	v
wrap	lib/Cake/Test/Case/Network/Email/CakeEmailTest.php	/^	public function wrap($text, $length = CakeEmail::LINE_LENGTH_MUST) {$/;"	f
DebugTransport	lib/Cake/Test/Case/Network/Email/DebugTransportTest.php	/^		$this->DebugTransport = new DebugTransport();$/;"	v
DebugTransportTest	lib/Cake/Test/Case/Network/Email/DebugTransportTest.php	/^class DebugTransportTest extends CakeTestCase {$/;"	c
data	lib/Cake/Test/Case/Network/Email/DebugTransportTest.php	/^		$data = "First Line\\r\\n";$/;"	v
date	lib/Cake/Test/Case/Network/Email/DebugTransportTest.php	/^		$date = date(DATE_RFC2822);$/;"	v
email	lib/Cake/Test/Case/Network/Email/DebugTransportTest.php	/^		$email = $this->getMock('CakeEmail', array('message'), array(), 'DebugCakeEmail');$/;"	v
headers	lib/Cake/Test/Case/Network/Email/DebugTransportTest.php	/^		$headers = "From: CakePHP Test <noreply@cakephp.org>\\r\\n";$/;"	v
result	lib/Cake/Test/Case/Network/Email/DebugTransportTest.php	/^		$result = $this->DebugTransport->send($email);$/;"	v
setUp	lib/Cake/Test/Case/Network/Email/DebugTransportTest.php	/^	public function setUp() {$/;"	f
testSend	lib/Cake/Test/Case/Network/Email/DebugTransportTest.php	/^	public function testSend() {$/;"	f
MailTransport	lib/Cake/Test/Case/Network/Email/MailTransportTest.php	/^		$this->MailTransport = $this->getMock('MailTransport', array('_mail'));$/;"	v
MailTransportTest	lib/Cake/Test/Case/Network/Email/MailTransportTest.php	/^class MailTransportTest extends CakeTestCase {$/;"	c
data	lib/Cake/Test/Case/Network/Email/MailTransportTest.php	/^		$data = "From: CakePHP Test <noreply@cakephp.org>" . PHP_EOL;$/;"	v
date	lib/Cake/Test/Case/Network/Email/MailTransportTest.php	/^		$date = date(DATE_RFC2822);$/;"	v
email	lib/Cake/Test/Case/Network/Email/MailTransportTest.php	/^		$email = $this->getMock('CakeEmail', array('message'), array());$/;"	v
encoded	lib/Cake/Test/Case/Network/Email/MailTransportTest.php	/^		$encoded = '=?UTF-8?B?Rm\/DuCBCw6VyIELDqXogRm\/DuCBCw6VyIELDqXogRm\/DuCBCw6VyIELDqXog?=';$/;"	v
longNonAscii	lib/Cake/Test/Case/Network/Email/MailTransportTest.php	/^		$longNonAscii = 'Foø Bår Béz Foø Bår Béz Foø Bår Béz Foø Bår Béz';$/;"	v
setUp	lib/Cake/Test/Case/Network/Email/MailTransportTest.php	/^	public function setUp() {$/;"	f
testSendData	lib/Cake/Test/Case/Network/Email/MailTransportTest.php	/^	public function testSendData() {$/;"	f
SmtpTestTransport	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^class SmtpTestTransport extends SmtpTransport {$/;"	c
SmtpTransport	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^		$this->SmtpTransport = new SmtpTestTransport();$/;"	v
SmtpTransportTest	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^class SmtpTransportTest extends CakeTestCase {$/;"	c
__call	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^	public function __call($method, $args) {$/;"	f
_cakeEmail	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^		$this->_cakeEmail = $cakeEmail;$/;"	v
_generateSocket	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^	protected function _generateSocket() {$/;"	f
_socket	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^		$this->_socket = $socket;$/;"	v
data	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^		$data = "From: CakePHP Test <noreply@cakephp.org>\\r\\n";$/;"	v
date	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^		$date = date(DATE_RFC2822);$/;"	v
email	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^		$email = $this->getMock('CakeEmail', array('message'), array(), 'SmtpCakeEmail');$/;"	v
email	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^		$email = new CakeEmail();$/;"	v
expected	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^		$expected = $this->SmtpTransport->config(array($/;"	v
expected	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^		$expected = array($/;"	v
method	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^		$method = '_' . $method;$/;"	v
reponseLines	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^		$reponseLines = array($/;"	v
result	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^		$result = $this->SmtpTransport->config(array());$/;"	v
result	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^		$result = $this->SmtpTransport->getLastResponse();$/;"	v
setCakeEmail	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^	public function setCakeEmail($cakeEmail) {$/;"	f
setSocket	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^	public function setSocket(CakeSocket $socket) {$/;"	f
setUp	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^	public function setUp() {$/;"	f
socket	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^		$this->socket = $this->getMock('CakeSocket', array('read', 'write', 'connect', 'enableCrypto'));$/;"	v
testAuth	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^	public function testAuth() {$/;"	f
testAuthNoAuth	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^	public function testAuthNoAuth() {$/;"	f
testBufferResponseLines	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^	public function testBufferResponseLines() {$/;"	f
testConnectEhlo	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^	public function testConnectEhlo() {$/;"	f
testConnectEhloNoTlsOnRequiredTlsServer	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^	public function testConnectEhloNoTlsOnRequiredTlsServer() {$/;"	f
testConnectEhloTls	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^	public function testConnectEhloTls() {$/;"	f
testConnectEhloTlsOnNonTlsServer	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^	public function testConnectEhloTlsOnNonTlsServer() {$/;"	f
testConnectFail	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^	public function testConnectFail() {$/;"	f
testConnectHelo	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^	public function testConnectHelo() {$/;"	f
testEmptyConfigArray	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^	public function testEmptyConfigArray() {$/;"	f
testGetLastResponse	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^	public function testGetLastResponse() {$/;"	f
testQuit	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^	public function testQuit() {$/;"	f
testRcpt	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^	public function testRcpt() {$/;"	f
testRcptWithReturnPath	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^	public function testRcptWithReturnPath() {$/;"	f
testSendData	lib/Cake/Test/Case/Network/Email/SmtpTransportTest.php	/^	public function testSendData() {$/;"	f
BasicAuthenticationTest	lib/Cake/Test/Case/Network/Http/BasicAuthenticationTest.php	/^class BasicAuthenticationTest extends CakeTestCase {$/;"	c
auth	lib/Cake/Test/Case/Network/Http/BasicAuthenticationTest.php	/^		$auth = array($/;"	v
http	lib/Cake/Test/Case/Network/Http/BasicAuthenticationTest.php	/^		$http = new HttpSocket();$/;"	v
proxy	lib/Cake/Test/Case/Network/Http/BasicAuthenticationTest.php	/^		$proxy = array($/;"	v
testAuthentication	lib/Cake/Test/Case/Network/Http/BasicAuthenticationTest.php	/^	public function testAuthentication() {$/;"	f
testProxyAuthentication	lib/Cake/Test/Case/Network/Http/BasicAuthenticationTest.php	/^	public function testProxyAuthentication() {$/;"	f
DigestAuthenticationTest	lib/Cake/Test/Case/Network/Http/DigestAuthenticationTest.php	/^class DigestAuthenticationTest extends CakeTestCase {$/;"	c
DigestHttpSocket	lib/Cake/Test/Case/Network/Http/DigestAuthenticationTest.php	/^class DigestHttpSocket extends HttpSocket {$/;"	c
HttpSocket	lib/Cake/Test/Case/Network/Http/DigestAuthenticationTest.php	/^		$this->HttpSocket = new DigestHttpSocket();$/;"	v
HttpSocket	lib/Cake/Test/Case/Network/Http/DigestAuthenticationTest.php	/^	public $HttpSocket = null;$/;"	v
auth	lib/Cake/Test/Case/Network/Http/DigestAuthenticationTest.php	/^		$auth = array('user' => 'admin', 'pass' => '1234');$/;"	v
expected	lib/Cake/Test/Case/Network/Http/DigestAuthenticationTest.php	/^		$expected = '@Digest username="admin", realm="The batcave", nonce="4cded326c6c51", uri="\/", response="[a-z0-9]{32}", qop="auth", nc=00000001, cnonce="[a-z0-9]+"@';$/;"	v
expected	lib/Cake/Test/Case/Network/Http/DigestAuthenticationTest.php	/^		$expected = 'Digest username="admin", realm="The batcave", nonce="4cded326c6c51", uri="\/", response="da7e2a46b471d77f70a9bb3698c8902b"';$/;"	v
nextHeader	lib/Cake/Test/Case/Network/Http/DigestAuthenticationTest.php	/^	public $nextHeader = '';$/;"	v
request	lib/Cake/Test/Case/Network/Http/DigestAuthenticationTest.php	/^	public function request($request = array()) {$/;"	f
response	lib/Cake/Test/Case/Network/Http/DigestAuthenticationTest.php	/^		$response = substr($this->HttpSocket->request['header']['Authorization'], $responsePos + 10, 32);$/;"	v
responseB	lib/Cake/Test/Case/Network/Http/DigestAuthenticationTest.php	/^		$responseB = substr($this->HttpSocket->request['header']['Authorization'], $responsePos + 10, 32);$/;"	v
responsePos	lib/Cake/Test/Case/Network/Http/DigestAuthenticationTest.php	/^		$responsePos = strpos($this->HttpSocket->request['header']['Authorization'], 'response=');$/;"	v
setUp	lib/Cake/Test/Case/Network/Http/DigestAuthenticationTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Network/Http/DigestAuthenticationTest.php	/^	public function tearDown() {$/;"	f
testBasic	lib/Cake/Test/Case/Network/Http/DigestAuthenticationTest.php	/^	public function testBasic() {$/;"	f
testMultipleRequest	lib/Cake/Test/Case/Network/Http/DigestAuthenticationTest.php	/^	public function testMultipleRequest() {$/;"	f
testNoDigestResponse	lib/Cake/Test/Case/Network/Http/DigestAuthenticationTest.php	/^	public function testNoDigestResponse() {$/;"	f
testOpaque	lib/Cake/Test/Case/Network/Http/DigestAuthenticationTest.php	/^	public function testOpaque() {$/;"	f
testPathChanged	lib/Cake/Test/Case/Network/Http/DigestAuthenticationTest.php	/^	public function testPathChanged() {$/;"	f
testQop	lib/Cake/Test/Case/Network/Http/DigestAuthenticationTest.php	/^	public function testQop() {$/;"	f
HttpResponse	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$this->HttpResponse = new TestHttpResponse();$/;"	v
HttpResponseTest	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^class HttpResponseTest extends CakeTestCase {$/;"	c
TestHttpResponse	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^class TestHttpResponse extends HttpResponse {$/;"	c
cookies	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$cookies = $this->HttpResponse->parseCookies($header);$/;"	v
decodeBody	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^	public function decodeBody($body, $encoding = 'chunked') {$/;"	f
decodeChunkedBody	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^	public function decodeChunkedBody($body) {$/;"	f
decoded	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$decoded = "This is a chunked message";$/;"	v
decoded	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$decoded = "This is a chunked message\\nThat is cool\\n";$/;"	v
encoded	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$encoded = "19 \\r\\nThis is a chunked message\\r\\n0\\r\\n";$/;"	v
encoded	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$encoded = "19\\r\\nThis is a chunked message\\r\\n0\\r\\n";$/;"	v
encoded	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$encoded = "19\\r\\nThis is a chunked message\\r\\nE;foo-chunk=5\\r\\n\\nThat is cool\\n\\r\\n0\\r\\n";$/;"	v
encoded	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$encoded = "19\\r\\nThis is a chunked message\\r\\nE\\r\\n\\nThat is cool\\n\\r\\n";$/;"	v
encoded	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$encoded = "19\\r\\nThis is a chunked message\\r\\nE\\r\\n\\nThat is cool\\n\\r\\n0\\r\\n";$/;"	v
encoded	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$encoded = "19\\r\\nThis is a chunked message\\r\\nE\\r\\n\\nThat is cool\\n\\r\\n0\\r\\nfoo-header: bar\\r\\ncake: PHP\\r\\n\\r\\n";$/;"	v
encoding	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$encoding = 'chunked';$/;"	v
encoding	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$encoding = 'foo-bar';$/;"	v
escape	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$escape = $this->HttpResponse->tokenEscapeChars(false);$/;"	v
escapedToken	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$escapedToken = $this->HttpResponse->unescapeToken($token);$/;"	v
expectations	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^			$expectations = array_merge($expectations, $test['expectations']);$/;"	v
expectations	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$expectations = array();$/;"	v
expected	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$expected = $expectedOne . $expectedTwo . "\\r\\n" . $expectedThree;$/;"	v
expected	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$expected = 'HTTP\/1.1';$/;"	v
expected	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$expected = 'OK';$/;"	v
expected	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$expected = 'This is a test!';$/;"	v
expected	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$expected = 200;$/;"	v
expected	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$expected = array($/;"	v
expectedOne	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$expectedOne = "HTTP\/1.1 200 OK\\r\\n";$/;"	v
expectedThree	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$expectedThree = 'This is a test!';$/;"	v
expectedToken	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^			$expectedToken = 'My-special-' . $char . '-Token';$/;"	v
expectedToken	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$expectedToken = 'Extreme-:Token-	-"@-test';$/;"	v
expectedTwo	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$expectedTwo = "Server: CakePHP\\r\\nContEnt-Type: text\/plain\\r\\n";$/;"	v
header	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$header = "Date:Sat, 07 Apr 2007 10:10:25 GMT\\r\\nX-Powered-By: PHP\/5.1.2\\r\\n";$/;"	v
header	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$header = "Esc\\"@\\"ped: value\\r\\n";$/;"	v
header	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$header = "Host: cakephp.org\\t\\r\\n";$/;"	v
header	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$header = "Multi-Line: I am a \\r\\nmulti line\\t\\r\\nfield value.\\r\\nSingle-Line: I am not\\r\\n";$/;"	v
header	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$header = "People: Jim,John,Tim\\r\\nPeople: Lisa,Tina,Chelsea\\r\\n";$/;"	v
header	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$header = "people: Jim,John\\r\\nfoo-LAND: Bar\\r\\ncAKe-PHP: rocks\\r\\n";$/;"	v
header	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$header = array($/;"	v
invalidParseResponseDataProvider	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^	public static function invalidParseResponseDataProvider() {$/;"	f
parseHeader	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^	public function parseHeader($header) {$/;"	f
r	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$r = $this->HttpResponse->decodeBody($sample['encoded'], $encoding);$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$r = $this->HttpResponse->decodeBody('Foobar', false);$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$r = $this->HttpResponse->decodeBody(true);$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$r = $this->HttpResponse->decodeChunkedBody($encoded);$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$r = $this->HttpResponse->decodeChunkedBody(true);$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$r = $this->HttpResponse->parseHeader($header);$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$r = $this->HttpResponse->parseHeader(array('foo' => 'Bar', 'fOO-bAr' => 'quux'));$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$r = $this->HttpResponse->parseHeader(true);$/;"	v
sample	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$sample = array($/;"	v
setUp	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^	public function setUp() {$/;"	f
testArrayAccess	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^	public function testArrayAccess() {$/;"	f
testBody	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^	public function testBody() {$/;"	f
testDecodeBody	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^	public function testDecodeBody() {$/;"	f
testDecodeChunkedBody	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^	public function testDecodeChunkedBody() {$/;"	f
testDecodeChunkedBodyError	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^	public function testDecodeChunkedBodyError() {$/;"	f
testDecodeFooCoded	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^	public function testDecodeFooCoded() {$/;"	f
testGetHeader	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^	public function testGetHeader() {$/;"	f
testInvalidParseResponseData	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^	public function testInvalidParseResponseData($value) {$/;"	f
testIsOk	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^	public function testIsOk() {$/;"	f
testIsRedirect	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^	public function testIsRedirect() {$/;"	f
testParseCookies	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^	public function testParseCookies() {$/;"	f
testParseHeader	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^	public function testParseHeader() {$/;"	f
testParseResponse	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^	public function testParseResponse() {$/;"	f
testResponse	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^			$testResponse = array_merge($testResponse, $test['response']);$/;"	v
testResponse	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$testResponse = array();$/;"	v
testToString	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^	public function testToString() {$/;"	f
testUnescapeToken	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^	public function testUnescapeToken() {$/;"	f
tests	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$tests = array($/;"	v
token	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^			$token = 'My-special-"' . $char . '"-Token';$/;"	v
token	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^		$token = 'Extreme-":"Token-"	"-""""@"-test';$/;"	v
tokenEscapeChars	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^	public function tokenEscapeChars($hex = true, $chars = null) {$/;"	f
unescapeToken	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^	public function unescapeToken($token, $chars = null) {$/;"	f
unescapedToken	lib/Cake/Test/Case/Network/Http/HttpResponseTest.php	/^			$unescapedToken = $this->HttpResponse->unescapeToken($token);$/;"	v
CustomResponse	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^class CustomResponse {$/;"	c
HttpSocketTest	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^class HttpSocketTest extends CakeTestCase {$/;"	c
RequestSocket	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$this->RequestSocket = $this->getMock('TestHttpSocket', array('read', 'write', 'connect', 'request'));$/;"	v
RequestSocket	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public $RequestSocket = null;$/;"	v
Socket	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$this->Socket = $this->getMock('TestHttpSocket', array('read', 'write', 'connect'));$/;"	v
Socket	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public $Socket = null;$/;"	v
TestAuthentication	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^class TestAuthentication {$/;"	c
TestHttpSocket	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^class TestHttpSocket extends HttpSocket {$/;"	c
__construct	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function __construct($message) {$/;"	f
authentication	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public static function authentication(HttpSocket $http, &$authInfo) {$/;"	f
baseConfig	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$baseConfig = $this->Socket->config;$/;"	v
buildHeader	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function buildHeader($header, $mode = 'standard') {$/;"	f
buildRequestLine	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function buildRequestLine($request = array(), $versionToken = 'HTTP\/1.1') {$/;"	f
buildUri	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function buildUri($uri = array(), $uriTemplate = '%scheme:\/\/%user:%pass@%host:%port\/%path?%query#%fragment') {$/;"	f
configUri	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function configUri($uri = null) {$/;"	f
context	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$context = array($/;"	v
cookies	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$cookies = array($/;"	v
escape	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$escape = $this->Socket->tokenEscapeChars(false);$/;"	v
escapeToken	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function escapeToken($token, $chars = null) {$/;"	f
escapedToken	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^			$escapedToken = $this->Socket->escapeToken($token);$/;"	v
escapedToken	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$escapedToken = $this->Socket->escapeToken($token);$/;"	v
expect	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$expect = "Cookie: foo=bar; people=jim,jack,johnny\\";\\"; key=value\\r\\n";$/;"	v
expectation	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^					$expectation = Hash::insert($expectation, $path, $val);$/;"	v
expectation	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^				$expectation = Hash::merge($expectation, $test['expectation']);$/;"	v
expectation	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$expectation = array();$/;"	v
expected	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$expected = "GET http:\/\/www.cakephp.org\/ HTTP\/1.1\\r\\nHost: www.cakephp.org\\r\\nConnection: close\\r\\nUser-Agent: CakePHP\\r\\nProxy-Authorization: Test mark.secret\\r\\nAuthorization: Test login.passwd\\r\\n\\r\\n";$/;"	v
expected	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$expected = "GET http:\/\/www.cakephp.org\/ HTTP\/1.1\\r\\nHost: www.cakephp.org\\r\\nConnection: close\\r\\nUser-Agent: CakePHP\\r\\nProxy-Authorization: Test mark.secret\\r\\n\\r\\n";$/;"	v
expected	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$expected = "GET http:\/\/www.cakephp.org\/ HTTP\/1.1\\r\\nHost: www.cakephp.org\\r\\nConnection: close\\r\\nUser-Agent: CakePHP\\r\\n\\r\\n";$/;"	v
expected	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$expected = "GET http:\/\/www.cakephp.org\/bakery HTTP\/1.1\\r\\nHost: www.cakephp.org\\r\\nConnection: close\\r\\nUser-Agent: CakePHP\\r\\n\\r\\n";$/;"	v
expected	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$expected = array('method' => 'GET', 'uri' => '\/_test');$/;"	v
expected	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$expected = array('method' => 'GET', 'uri' => 'http:\/\/localhost:5984\/_test?count=4');$/;"	v
expected	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$expected = array('www.cakephp.org' => array('foo' => array('value' => 'bar')));$/;"	v
expectedQuery	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$expectedQuery = array($/;"	v
expectedToken	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^			$expectedToken = 'My-special-"' . $char . '"-Token';$/;"	v
expectedToken	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$expectedToken = 'Extreme-":"Token-"	"-""""@"-test';$/;"	v
f	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$f = fopen(TMP . 'download.txt', 'w');$/;"	v
first10	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$this->first10 = substr($message, 0, 10);$/;"	v
first10	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public $first10;$/;"	v
http	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$http = $this->getMock('TestHttpSocket', array('read', 'write', 'connect', 'request'), array($request));$/;"	v
initialState	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$initialState = get_class_vars('HttpSocket');$/;"	v
message	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^			$message = $e->getMessage();$/;"	v
number	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$number = mt_rand(0, 9999999);$/;"	v
parseQuery	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function parseQuery($query) {$/;"	f
parseUri	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function parseUri($uri = null, $base = array()) {$/;"	f
partialResetProperties	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$partialResetProperties = array('request', 'response');$/;"	v
proxyAuthentication	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public static function proxyAuthentication(HttpSocket $http, &$proxyInfo) {$/;"	f
query	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$query = $this->Socket->parseQuery($queryStr);$/;"	v
query	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$query = $this->Socket->parseQuery('');$/;"	v
query	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$query = $this->Socket->parseQuery('?framework=cakephp');$/;"	v
query	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$query = $this->Socket->parseQuery('a&b&c');$/;"	v
query	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$query = $this->Socket->parseQuery('a[0]=foo&a[1]=bar&a[2]=cake');$/;"	v
query	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$query = $this->Socket->parseQuery('a[]=foo&a[]=bar&a[]=cake');$/;"	v
query	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$query = $this->Socket->parseQuery('a[][]=foo&a[][]=bar&a[][]=cake');$/;"	v
query	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$query = $this->Socket->parseQuery('a[][]=foo&a[bar]=php&a[][]=bar&a[][]=cake');$/;"	v
query	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$query = $this->Socket->parseQuery('framework=cakephp');$/;"	v
query	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$query = $this->Socket->parseQuery('user[]=jim&user[3]=tom&user[]=bob');$/;"	v
query	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$query = $this->Socket->parseQuery('value=12345');$/;"	v
query	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$query = $this->Socket->parseQuery(array('framework' => 'cakephp'));$/;"	v
query	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$query = 'openid.ns=example.com&foo=bar&foo=baz';$/;"	v
queryStr	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$queryStr = 'user[0]=foo&user[0][items][]=foo&user[0][items][]=bar&user[][name]=jim&user[1][items][personal][]=book&user[1][items][personal][]=pen&user[1][items][]=ball&user[count]=2&empty';$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^			$r = array('config' => $this->Socket->config, 'request' => $this->Socket->request);$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->buildHeader('My raw header');$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->buildHeader(array('Host' => 'www.cakephp.org'));$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->buildHeader(array('Host' => 'www.cakephp.org', 'Connection' => 'Close'));$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->buildHeader(array('Multi-Line-Field' => "This is my\\r\\n Multi Line field"));$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->buildHeader(array('Multi-Line-Field' => "This is my\\r\\nMulti Line field"));$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->buildHeader(array('Multi-Line-Field' => "This is my\\r\\n\\tMulti Line field"));$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->buildHeader(array('People' => array('Bob', 'Jim', 'John')));$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->buildHeader(array('Test@Field' => "My value"));$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->buildHeader(true);$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->buildRequestLine("GET * HTTP\/1.1\\r\\n");$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->buildRequestLine($request);$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->buildRequestLine($request, 'CAKE-HTTP\/0.1');$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->buildRequestLine('Foo');$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->buildRequestLine(array('foo' => 'bar', 'method' => 'foo'));$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->buildRequestLine(array('method' => 'GET', 'uri' => 'http:\/\/www.cakephp.org\/search?q=socket'));$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->buildRequestLine(true);$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->buildUri('foo.com');$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->buildUri(array($/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->buildUri(array('host' => 'www.cakephp.org'));$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->buildUri(array('host' => 'www.cakephp.org'), '%fragment???%host');$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->buildUri(array('host' => 'www.cakephp.org', 'fragment' => 'bar'));$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->buildUri(array('host' => 'www.cakephp.org', 'fragment' => 'bar'), '%fragment?%host');$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->buildUri(array('host' => 'www.cakephp.org', 'path' => '\/foo'));$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->buildUri(array('host' => 'www.cakephp.org', 'path' => '\/search', 'query' => array('q' => 'HttpSocket')));$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->buildUri(array('host' => 'www.cakephp.org', 'path' => 'foo'));$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->buildUri(array('host' => 'www.cakephp.org', 'port' => 23));$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->buildUri(array('host' => 'www.cakephp.org', 'scheme' => 'https'));$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->buildUri(array('host' => 'www.cakephp.org', 'scheme' => 'https', 'port' => 79));$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->buildUri(array('path' => '*'), '\/%path?%query');$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->buildUri(array('path' => 'www.google.com\/search', 'query' => 'q=cakephp'));$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->buildUri(array('scheme' => 'foo', 'host' => 'www.cakephp.org'));$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->buildUri(true);$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->configUri('\/this-is-broken');$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->configUri('http:\/\/www.foo.com');$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->configUri('https:\/\/bob:secret@www.cakephp.org:23\/?query=foo');$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->configUri(array('host' => 'www.foo-bar.org'));$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->configUri(false);$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->tokenEscapeChars();$/;"	v
r	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$r = $this->Socket->tokenEscapeChars(false);$/;"	v
raw	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^			$raw = $expectation['request']['raw'];$/;"	v
request	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$request = array($/;"	v
request	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$request = array('method' => 'OPTIONS', 'uri' => '*');$/;"	v
request	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$request = array('method' => 'POST', 'uri' => 'http:\/\/www.cakephp.org\/posts\/add', 'body' => array('name' => 'HttpSocket-is-released', 'date' => 'today'));$/;"	v
request	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$request = array('uri' => '*', 'method' => 'GET');$/;"	v
request	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$request = array('uri' => 'htpp:\/\/www.cakephp.org\/');$/;"	v
response	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$response = $this->Socket->request($request);$/;"	v
response	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$response = $this->Socket->request('http:\/\/www.cakephp.org\/');$/;"	v
response	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$response = $this->Socket->request(true);$/;"	v
response	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$response = (string)$this->Socket->request($request);$/;"	v
result	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$result = $this->Socket->buildCookies($cookies);$/;"	v
result	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$result = $this->Socket->parseQuery($query);$/;"	v
result	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$result = $this->Socket->response['cookies'];$/;"	v
result	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$result = (string)$this->Socket->request('http:\/\/www.cakephp.org\/');$/;"	v
return	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$return = $this->Socket->reset();$/;"	v
return	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$return = $this->Socket->reset(false);$/;"	v
serverResponse	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$serverResponse = "HTTP\/1.x 200 OK\\r\\nDate: Mon, 16 Apr 2007 04:14:16 GMT\\r\\nServer: CakeHttp Server\\r\\nContent-Type: text\/html\\r\\n\\r\\n<h1>Hello, your lucky number is " . $number . "<\/h1>";$/;"	v
serverResponse	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$serverResponse = "HTTP\/1.x 200 OK\\r\\nDate: Mon, 16 Apr 2007 04:14:16 GMT\\r\\nServer: CakeHttp Server\\r\\nContent-Type: text\/html\\r\\n\\r\\n<h1>This is a test!<\/h1>";$/;"	v
serverResponse	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$serverResponse = "HTTP\/1.x 200 OK\\r\\nSet-Cookie: bar=foo\\r\\nDate: Mon, 16 Apr 2007 04:14:16 GMT\\r\\nServer: CakeHttp Server\\r\\nContent-Type: text\/html\\r\\n\\r\\n<h1>This is a test!<\/h1>";$/;"	v
serverResponse	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$serverResponse = "HTTP\/1.x 200 OK\\r\\nSet-Cookie: foo=bar\\r\\nDate: Mon, 16 Apr 2007 04:14:16 GMT\\r\\nServer: CakeHttp Server\\r\\nContent-Type: text\/html\\r\\n\\r\\n<h1>This is a cookie test!<\/h1>";$/;"	v
serverResponse	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$serverResponse = "HTTP\/1.x 200 OK\\r\\nSet-Cookie: foo=bar\\r\\nDate: Mon, 16 Apr 2007 04:14:16 GMT\\r\\nServer: CakeHttp Server\\r\\nContent-Type: text\/html\\r\\n\\r\\n<h1>This is a test!<\/h1>";$/;"	v
serverResponse	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$serverResponse = "HTTP\/1.x 200 OK\\r\\nSet-Cookie: foobar=ok\\r\\nDate: Mon, 16 Apr 2007 04:14:16 GMT\\r\\nServer: CakeHttp Server\\r\\nContent-Type: text\/html\\r\\n\\r\\n<h1>This is a test!<\/h1>";$/;"	v
serverResponse	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$serverResponse = $status . "\\r\\nDate: Mon, 16 Apr 2007 04:14:16 GMT\\r\\nServer: CakeHttp Server\\r\\n\\r\\n<h1>This is a test!<\/h1>";$/;"	v
serverResponse1	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$serverResponse1 = "HTTP\/1.x 302 Found\\r\\nDate: Mon, 16 Apr 2007 04:14:16 GMT\\r\\nServer: CakeHttp Server\\r\\nContent-Type: text\/html\\r\\nLocation: http:\/\/i.cmpnet.com%2Ftechonline%2Fpdf%2Fa.pdf=\\r\\n\\r\\n";$/;"	v
serverResponse1	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$serverResponse1 = "HTTP\/1.x 302 Found\\r\\nDate: Mon, 16 Apr 2007 04:14:16 GMT\\r\\nServer: CakeHttp Server\\r\\nContent-Type: text\/html\\r\\nLocation: http:\/\/localhost\/anotheruri\\r\\n\\r\\n";$/;"	v
serverResponse1	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$serverResponse1 = "HTTP\/1.x 302 Found\\r\\nDate: Mon, 16 Apr 2007 04:14:16 GMT\\r\\nServer: CakeHttp Server\\r\\nContent-Type: text\/html\\r\\nLocation: http:\/\/localhost\/oneruri\\r\\n\\r\\n";$/;"	v
serverResponse2	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$serverResponse2 = "HTTP\/1.x 200 OK\\r\\nDate: Mon, 16 Apr 2007 04:14:16 GMT\\r\\nServer: CakeHttp Server\\r\\nContent-Type: text\/html\\r\\n\\r\\n<h1>You have been redirected<\/h1>";$/;"	v
serverResponse2	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$serverResponse2 = "HTTP\/1.x 302 Found\\r\\nDate: Mon, 16 Apr 2007 04:14:16 GMT\\r\\nServer: CakeHttp Server\\r\\nContent-Type: text\/html\\r\\nLocation: http:\/\/localhost\/anotheruri\\r\\n\\r\\n";$/;"	v
setUp	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function setUp() {$/;"	f
socket	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$socket = new HttpSocket();$/;"	v
statusProvider	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function statusProvider() {$/;"	f
tearDown	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function tearDown() {$/;"	f
testAuth	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testAuth() {$/;"	f
testBadBuildRequestLine	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testBadBuildRequestLine() {$/;"	f
testBadBuildRequestLine2	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testBadBuildRequestLine2() {$/;"	f
testBuildCookies	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testBuildCookies() {$/;"	f
testBuildHeader	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testBuildHeader() {$/;"	f
testBuildRequestLine	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testBuildRequestLine() {$/;"	f
testBuildUri	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testBuildUri() {$/;"	f
testConfigContext	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testConfigContext() {$/;"	f
testConfigUri	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testConfigUri() {$/;"	f
testConsecutiveGetResetsAuthCredentials	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testConsecutiveGetResetsAuthCredentials() {$/;"	f
testConstruct	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testConstruct() {$/;"	f
testDelete	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testDelete() {$/;"	f
testEscapeToken	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testEscapeToken() {$/;"	f
testGet	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testGet() {$/;"	f
testGetWithSchemeAndPort	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testGetWithSchemeAndPort() {$/;"	f
testParseQuery	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testParseQuery() {$/;"	f
testParseUri	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testParseUri() {$/;"	f
testPartialReset	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testPartialReset() {$/;"	f
testPatch	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testPatch() {$/;"	f
testPost	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testPost() {$/;"	f
testProxy	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testProxy() {$/;"	f
testPut	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testPut() {$/;"	f
testRequest	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testRequest() {$/;"	f
testRequest2	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testRequest2() {$/;"	f
testRequest3	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testRequest3() {$/;"	f
testRequestCustomResponse	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testRequestCustomResponse() {$/;"	f
testRequestNotAllowedUri	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testRequestNotAllowedUri() {$/;"	f
testRequestWithConstructor	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testRequestWithConstructor() {$/;"	f
testRequestWithCrossCookie	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testRequestWithCrossCookie() {$/;"	f
testRequestWithRedirectAsInt	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testRequestWithRedirectAsInt() {$/;"	f
testRequestWithRedirectAsIntReachingZero	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testRequestWithRedirectAsIntReachingZero() {$/;"	f
testRequestWithRedirectAsTrue	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testRequestWithRedirectAsTrue() {$/;"	f
testRequestWithRedirectUrlEncoded	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testRequestWithRedirectUrlEncoded() {$/;"	f
testRequestWithResource	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testRequestWithResource() {$/;"	f
testRequestWithStringQuery	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testRequestWithStringQuery() {$/;"	f
testReset	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testReset() {$/;"	f
testResponseStatusParsing	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testResponseStatusParsing($status, $code, $msg = '') {$/;"	f
testTokenEscapeChars	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testTokenEscapeChars() {$/;"	f
testUrl	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testUrl() {$/;"	f
testVerifyPeer	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function testVerifyPeer() {$/;"	f
tests	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$tests = array($/;"	v
token	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^			$token = 'My-special-' . $char . '-Token';$/;"	v
token	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$token = 'Extreme-:Token-	-"@-test';$/;"	v
tokenEscapeChars	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^	public function tokenEscapeChars($hex = true, $chars = null) {$/;"	f
uri	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$uri = $this->Socket->parseUri('\/my-cool-path');$/;"	v
uri	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$uri = $this->Socket->parseUri('http:\/\/bob:foo123@www.cakephp.org:40\/search?q=dessert#results');$/;"	v
uri	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$uri = $this->Socket->parseUri('http:\/\/www.cakephp.org', array('host' => 'piephp.org', 'user' => 'bob', 'fragment' => 'results'));$/;"	v
uri	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$uri = $this->Socket->parseUri('http:\/\/www.cakephp.org', true);$/;"	v
uri	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$uri = $this->Socket->parseUri('http:\/\/www.cakephp.org\/');$/;"	v
uri	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$uri = $this->Socket->parseUri('http:\/\/www.cakephp.org\/?param1=value1&param2=value2%3Dvalue3');$/;"	v
uri	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$uri = $this->Socket->parseUri('http:\/\/www.cakephp.org\/?param1=value1&param2=value2=value3');$/;"	v
uri	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$uri = $this->Socket->parseUri('https:\/\/www.cakephp.org', array('scheme' => 'http', 'port' => 23));$/;"	v
uri	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$uri = $this->Socket->parseUri('https:\/\/www.cakephp.org', true);$/;"	v
uri	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$uri = $this->Socket->parseUri('www.cakephp.org:443\/query?foo', true);$/;"	v
uri	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$uri = $this->Socket->parseUri('www.cakephp.org:59', array('scheme' => array('http', 'https'), 'port' => 80));$/;"	v
uri	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$uri = $this->Socket->parseUri(array('invalid' => 'uri-string'));$/;"	v
uri	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$uri = $this->Socket->parseUri(array('invalid' => 'uri-string'), array('host' => 'somehost'));$/;"	v
uri	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$uri = $this->Socket->parseUri(array('scheme' => 'http', 'host' => 'www.google.com', 'port' => 8080), array('scheme' => array('http', 'https'), 'host' => 'www.google.com', 'port' => array(80, 443)));$/;"	v
uri	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$uri = $this->Socket->parseUri(false);$/;"	v
url	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$url = $this->Socket->url('\/search?q=bar');$/;"	v
url	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$url = $this->Socket->url('\/search?q=socket');$/;"	v
url	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$url = $this->Socket->url('http:\/\/www.cakephp\/search?q=socket', '\/%path?%query');$/;"	v
url	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$url = $this->Socket->url('https:\/\/www.cakephp.org\/posts\/add');$/;"	v
url	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$url = $this->Socket->url('www.cakephp.org');$/;"	v
url	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$url = $this->Socket->url();$/;"	v
url	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$url = $this->Socket->url(array('host' => 'www.foobar.org', 'query' => array('q' => 'bar')));$/;"	v
url	lib/Cake/Test/Case/Network/Http/HttpSocketTest.php	/^		$url = $this->Socket->url(array('path' => '\/supersearch', 'query' => array('q' => 'bar')));$/;"	v
APP_CONTROLLER_EXISTS	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	define('APP_CONTROLLER_EXISTS', true);$/;"	d
ArticlesTestAppController	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^class ArticlesTestAppController extends AppController {$/;"	c
ArticlesTestController	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^class ArticlesTestController extends ArticlesTestAppController {$/;"	c
Dispatcher	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$Dispatcher = new Dispatcher();$/;"	v
Dispatcher	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$Dispatcher = new TestDispatcher();$/;"	v
DispatcherMockCakeResponse	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^class DispatcherMockCakeResponse extends CakeResponse {$/;"	c
DispatcherTest	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^class DispatcherTest extends CakeTestCase {$/;"	c
DispatcherTestAbstractController	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^abstract class DispatcherTestAbstractController extends Controller {$/;"	c
DispatcherTestInterfaceController	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^interface DispatcherTestInterfaceController {$/;"	i
MyPluginAppController	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^class MyPluginAppController extends AppController {$/;"	c
MyPluginController	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^class MyPluginController extends MyPluginAppController {$/;"	c
OtherPagesController	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^class OtherPagesController extends MyPluginAppController {$/;"	c
SomePagesController	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^class SomePagesController extends AppController {$/;"	c
SomePostsController	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^class SomePostsController extends AppController {$/;"	c
TestCachedPagesController	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^class TestCachedPagesController extends Controller {$/;"	c
TestDispatchPagesController	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^class TestDispatchPagesController extends AppController {$/;"	c
TestDispatcher	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^class TestDispatcher extends Dispatcher {$/;"	c
TestFilterDispatcher	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^class TestFilterDispatcher extends DispatcherFilter {$/;"	c
TimesheetsController	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^class TimesheetsController extends Controller {$/;"	c
_FILES	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$_FILES = $this->_files;$/;"	v
_GET	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$_GET = $this->_get;$/;"	v
_GET	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$_GET = array('coffee' => 'life', 'sleep' => 'sissies');$/;"	v
_GET	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$_GET = array();$/;"	v
_POST	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$_POST = $this->_post;$/;"	v
_POST	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$_POST = array();$/;"	v
_SERVER	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$_SERVER = $this->_server;$/;"	v
_SERVER	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$_SERVER = array();$/;"	v
_app	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$this->_app = Configure::read('App');$/;"	v
_cache	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$this->_cache = Configure::read('Cache');$/;"	v
_cachePath	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	protected function _cachePath($here) {$/;"	f
_debug	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$this->_debug = Configure::read('debug');$/;"	v
_files	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$this->_files = $_FILES;$/;"	v
_get	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$this->_get = $_GET;$/;"	v
_invoke	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	protected function _invoke(Controller $controller, CakeRequest $request) {$/;"	f
_post	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$this->_post = $_POST;$/;"	v
_responseClass	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	protected $_responseClass = 'DispatcherMockCakeResponse';$/;"	v
_sendHeader	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	protected function _sendHeader($name, $value = null) {$/;"	f
_server	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$this->_server = $_SERVER;$/;"	v
add	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function add() {$/;"	f
admin_add	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function admin_add($id = null) {$/;"	f
admin_index	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function admin_index() {$/;"	f
afterDispatch	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function afterDispatch(CakeEvent $event) {$/;"	f
assetProvider	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public static function assetProvider() {$/;"	f
autoRender	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public $autoRender = false;$/;"	v
beforeDispatch	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function beforeDispatch(CakeEvent $event) {$/;"	f
beforeFilter	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function beforeFilter() {$/;"	f
cacheAction	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$this->cacheAction = 10;$/;"	v
cacheAction	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public $cacheAction = array($/;"	v
cacheActionProvider	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public static function cacheActionProvider() {$/;"	f
cache_form	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function cache_form() {$/;"	f
cached	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$cached = $response->body();$/;"	v
cached	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$cached = preg_replace('\/<!--+[^<>]+-->\/', '', $cached);$/;"	v
camelCased	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function camelCased() {$/;"	f
change	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function change() {$/;"	f
controller	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$this->controller = $controller;$/;"	v
controller	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public $controller;$/;"	v
dispatcher	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$dispatcher = new Dispatcher();$/;"	v
dispatcher	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$dispatcher = new TestDispatcher();$/;"	v
display	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function display($page = null) {$/;"	f
event	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$event = new CakeEvent('DispatcherTest', $Dispatcher, array('request' => $request));$/;"	v
event	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$event = new CakeEvent('DispatcherTest', $Dispatcher, array('request' => $test));$/;"	v
event	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$event = new CakeEvent('DispatcherTest', $Dispatcher, array('request' => $url));$/;"	v
event	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$event = new CakeEvent('DispatcherTest', $dispatcher, array('request' => $request));$/;"	v
expected	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$expected = $pluginUrl;$/;"	v
expected	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$expected = 'Pages';$/;"	v
expected	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$expected = 'SomePosts';$/;"	v
expected	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$expected = 'Timesheets';$/;"	v
expected	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$expected = '\/cake\/repo\/branches\/1.2.x.x';$/;"	v
expected	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$expected = '\/cake\/repo\/branches\/1.2.x.x\/index.php';$/;"	v
expected	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$expected = '\/cake\/repo\/branches\/1.2.x.x\/index.php\/admin\/test_dispatch_pages\/index\/param:value\/param2:value2';$/;"	v
expected	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$expected = '\/cake\/repo\/branches\/1.2.x.x\/my_plugin\/other_pages\/index\/param:value\/param2:value2';$/;"	v
expected	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$expected = 'change';$/;"	v
expected	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$expected = array('0' => 'home', 'param' => 'value', 'param2' => 'value2');$/;"	v
expected	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$expected = array('changed');$/;"	v
expected	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$expected = array('controller' => null, 'action' => null, 'plugin' => null, 'named' => array(), 'pass' => array());$/;"	v
expected	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$expected = array('pass' => array('5'), 'named' => array(), 'id' => '5', 'plugin' => null, 'controller' => 'posts', 'action' => 'edit', '[method]' => 'PUT');$/;"	v
expected	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$expected = array('pass' => array('5'), 'named' => array(), 'id' => '5', 'plugin' => null, 'controller' => 'posts', 'action' => 'view', '[method]' => 'GET');$/;"	v
expected	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$expected = array('pass' => array(), 'named' => array(), 'plugin' => null, 'controller' => 'posts', 'action' => 'add', '[method]' => 'POST');$/;"	v
expected	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$expected = array(0 => 5, 'param' => 'value', 'param2' => 'value2');$/;"	v
expected	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$expected = filesize($path);$/;"	v
file	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$file = file_get_contents($path);$/;"	v
filename	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^			$filename = CACHE . 'views' . DS . $path . '_index.php';$/;"	v
filename	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$filename = $this->_cachePath($request->here());$/;"	v
filename	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$filename = CACHE . 'views' . DS . $path . '.php';$/;"	v
filterTest	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function filterTest($event) {$/;"	f
filterTest2	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function filterTest2($event) {$/;"	f
headers	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$headers = $response->header();$/;"	v
helpers	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public $helpers = array('Cache', 'Html');$/;"	v
index	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function index() {$/;"	f
index	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function index();$/;"	f
loaded	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$loaded = class_exists('TestPluginController', false);$/;"	v
out	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$out = $response->body();$/;"	v
path	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^			$path = 'home';$/;"	v
path	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$path = $here;$/;"	v
path	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$path = CAKE . 'Test' . DS . 'test_app' . DS . str_replace('\/', DS, $file);$/;"	v
path	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$path = strtolower(Inflector::slug($path));$/;"	v
plugin	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$plugin = 'MyPlugin';$/;"	v
pluginUrl	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$pluginUrl = Inflector::underscore($plugin);$/;"	v
plugins	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$plugins = App::objects('plugin');$/;"	v
priority	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public $priority = 10;$/;"	v
request	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$request = new CakeRequest("\/");$/;"	v
request	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$request = new CakeRequest("\/testcontroller\/testaction\/params1\/params2\/params3");$/;"	v
request	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$request = new CakeRequest($url);$/;"	v
request	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$request = new CakeRequest('\/');$/;"	v
request	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$request = new CakeRequest('\/?coffee=life&sleep=sissy');$/;"	v
request	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$request = new CakeRequest('\/posts');$/;"	v
request	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$request = new CakeRequest('\/posts\/5');$/;"	v
request	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$request = new CakeRequest('ccss\/cake.generic.css');$/;"	v
request	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$request = new CakeRequest('posts\/home\/?coffee=life&sleep=sissies');$/;"	v
request	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$request = new CakeRequest('some_pages\/responseGenerator');$/;"	v
request	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$request = new CakeRequest('some_pages\/sendfile');$/;"	v
response	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$response = $event->data['request'];$/;"	v
response	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$response = $this->getMock('CakeResponse');$/;"	v
response	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$response = $this->getMock('CakeResponse', array($/;"	v
response	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$response = $this->getMock('CakeResponse', array('_sendHeader'));$/;"	v
response	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$response = $this->getMock('CakeResponse', array('send'));$/;"	v
responseGenerator	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function responseGenerator() {$/;"	f
result	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$result = $dispatcher->dispatch($request, $response);$/;"	v
result	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$result = ob_get_clean();$/;"	v
sendfile	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function sendfile() {$/;"	f
setUp	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function setUp() {$/;"	f
settings	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$settings = $url->param('settings');$/;"	v
tearDown	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function tearDown() {$/;"	f
test	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$test = new CakeRequest("\/testcontroller\/testaction\/000\/0000\/00000\/000000\/000000\/0000000");$/;"	v
test	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$test = new CakeRequest("\/testcontroller\/testaction\/01\/0403\/04010\/000002\/000030\/0000400");$/;"	v
test	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$test = new CakeRequest("\/testcontroller\/testaction\/0\/0\/0\/0\/0\/0");$/;"	v
test	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$test = new CakeRequest("\/testcontroller\/testaction\/1\/0\/23");$/;"	v
testAdminDispatch	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function testAdminDispatch() {$/;"	f
testAsset	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function testAsset($url, $file) {$/;"	f
testAssets	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function testAssets() {$/;"	f
testAutomaticPluginControllerDispatch	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function testAutomaticPluginControllerDispatch() {$/;"	f
testAutomaticPluginControllerIndexMissingAction	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function testAutomaticPluginControllerIndexMissingAction() {$/;"	f
testAutomaticPluginControllerMissingActionDispatch	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function testAutomaticPluginControllerMissingActionDispatch() {$/;"	f
testAutomaticPluginDispatch	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function testAutomaticPluginDispatch() {$/;"	f
testAutomaticPluginDispatchWithShortAccess	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function testAutomaticPluginDispatchWithShortAccess() {$/;"	f
testChangingParamsFromBeforeFilter	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function testChangingParamsFromBeforeFilter() {$/;"	f
testDispatchActionReturnsResponse	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function testDispatchActionReturnsResponse() {$/;"	f
testDispatchActionSendsFile	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function testDispatchActionSendsFile() {$/;"	f
testDispatchBasic	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function testDispatchBasic() {$/;"	f
testDispatcherFilterCallable	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function testDispatcherFilterCallable() {$/;"	f
testDispatcherFilterSettings	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function testDispatcherFilterSettings() {$/;"	f
testDispatcherFilterSubscriber	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function testDispatcherFilterSubscriber() {$/;"	f
testDispatcherFilterSuscriberMissing	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function testDispatcherFilterSuscriberMissing() {$/;"	f
testFullPageCachingDispatch	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function testFullPageCachingDispatch($url) {$/;"	f
testHttpMethodOverrides	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function testHttpMethodOverrides() {$/;"	f
testMissingAssetProcessor404	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function testMissingAssetProcessor404() {$/;"	f
testMissingController	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function testMissingController() {$/;"	f
testMissingControllerAbstract	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function testMissingControllerAbstract() {$/;"	f
testMissingControllerInterface	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function testMissingControllerInterface() {$/;"	f
testParseParamsReturnsPostedData	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function testParseParamsReturnsPostedData() {$/;"	f
testParseParamsWithManySingleZeros	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function testParseParamsWithManySingleZeros() {$/;"	f
testParseParamsWithManyZerosInEachSectionOfUrl	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function testParseParamsWithManyZerosInEachSectionOfUrl() {$/;"	f
testParseParamsWithMixedOneToManyZerosInEachSectionOfUrl	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function testParseParamsWithMixedOneToManyZerosInEachSectionOfUrl() {$/;"	f
testParseParamsWithSingleZero	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function testParseParamsWithSingleZero() {$/;"	f
testParseParamsWithoutZerosAndEmptyPost	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function testParseParamsWithoutZerosAndEmptyPost() {$/;"	f
testPluginDispatch	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function testPluginDispatch() {$/;"	f
testPluginShortCutUrlsWithControllerThatNeedsToBeLoaded	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function testPluginShortCutUrlsWithControllerThatNeedsToBeLoaded() {$/;"	f
testQueryStringOnRoot	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function testQueryStringOnRoot() {$/;"	f
testTestPluginDispatch	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function testTestPluginDispatch() {$/;"	f
test_nocache_tags	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function test_nocache_tags() {$/;"	f
theme	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$this->theme = 'TestTheme';$/;"	v
themed	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function themed() {$/;"	f
url	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$url = new CakeRequest($pluginUrl);$/;"	v
url	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$url = new CakeRequest('\/test_plugin\/tests\/index');$/;"	v
url	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$url = new CakeRequest('\/test_plugin\/tests\/index\/some_param');$/;"	v
url	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$url = new CakeRequest('admin\/my_plugin\/my_plugin\/add\/5\/param:value\/param2:value2');$/;"	v
url	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$url = new CakeRequest('admin\/test_dispatch_pages\/index\/param:value\/param2:value2');$/;"	v
url	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$url = new CakeRequest('dispatcher_test_abstract\/index');$/;"	v
url	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$url = new CakeRequest('dispatcher_test_interface\/index');$/;"	v
url	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$url = new CakeRequest('my_plugin\/');$/;"	v
url	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$url = new CakeRequest('my_plugin\/my_plugin\/add\/param:value\/param2:value2');$/;"	v
url	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$url = new CakeRequest('my_plugin\/not_here\/param:value\/param2:value2');$/;"	v
url	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$url = new CakeRequest('my_plugin\/other_pages\/index\/param:value\/param2:value2');$/;"	v
url	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$url = new CakeRequest('my_plugin\/param:value\/param2:value2');$/;"	v
url	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$url = new CakeRequest('my_plugin\/some_pages\/home\/param:value\/param2:value2');$/;"	v
url	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$url = new CakeRequest('pages\/home');$/;"	v
url	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$url = new CakeRequest('pages\/home\/');$/;"	v
url	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$url = new CakeRequest('pages\/home\/param:value\/param2:value2');$/;"	v
url	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$url = new CakeRequest('some_controller\/home\/param:value\/param2:value2');$/;"	v
url	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$url = new CakeRequest('some_pages\/index');$/;"	v
url	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$url = new CakeRequest('some_posts\/index\/param:value\/param2:value2');$/;"	v
url	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$url = new CakeRequest('some_posts\/something_else\/param:value\/param2:value2');$/;"	v
url	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$url = new CakeRequest('test_dispatch_pages\/camelCased');$/;"	v
url	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$url = new CakeRequest('test_dispatch_pages\/camelCased\/something. .');$/;"	v
url	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$url = new CakeRequest('test_plugin\/');$/;"	v
url	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$url = new CakeRequest('timesheets');$/;"	v
url	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$url = new CakeRequest('timesheets\/');$/;"	v
uses	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public $uses = array();$/;"	v
view	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public function view($id = null) {$/;"	f
viewClass	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^		$this->viewClass = 'Theme';$/;"	v
viewPath	lib/Cake/Test/Case/Routing/DispatcherTest.php	/^	public $viewPath = 'Posts';$/;"	v
AssetDispatcherTest	lib/Cake/Test/Case/Routing/Filter/AssetDispatcherTest.php	/^class AssetDispatcherTest extends CakeTestCase {$/;"	c
event	lib/Cake/Test/Case/Routing/Filter/AssetDispatcherTest.php	/^		$event = new CakeEvent('Dispatcher.beforeRequest', $this, compact('request', 'response'));$/;"	v
event	lib/Cake/Test/Case/Routing/Filter/AssetDispatcherTest.php	/^		$event = new CakeEvent('DispatcherTest', $this, compact('request', 'response'));$/;"	v
filter	lib/Cake/Test/Case/Routing/Filter/AssetDispatcherTest.php	/^		$filter = new AssetDispatcher();$/;"	v
request	lib/Cake/Test/Case/Routing/Filter/AssetDispatcherTest.php	/^		$request = new CakeRequest('\/\/index.php');$/;"	v
request	lib/Cake/Test/Case/Routing/Filter/AssetDispatcherTest.php	/^		$request = new CakeRequest('css\/ccss\/debug_kit.css');$/;"	v
request	lib/Cake/Test/Case/Routing/Filter/AssetDispatcherTest.php	/^		$request = new CakeRequest('js\/cjs\/debug_kit.js');$/;"	v
request	lib/Cake/Test/Case/Routing/Filter/AssetDispatcherTest.php	/^		$request = new CakeRequest('test_plugin\/api\/v1\/forwarding.json');$/;"	v
request	lib/Cake/Test/Case/Routing/Filter/AssetDispatcherTest.php	/^		$request = new CakeRequest('test_plugin\/ccss\/cake.generic.css');$/;"	v
request	lib/Cake/Test/Case/Routing/Filter/AssetDispatcherTest.php	/^		$request = new CakeRequest('test_plugin\/cjs\/debug_kit.js');$/;"	v
request	lib/Cake/Test/Case/Routing/Filter/AssetDispatcherTest.php	/^		$request = new CakeRequest('theme\/test_theme\/%2e.\/%2e.\/%2e.\/%2e.\/%2e.\/%2e.\/VERSION.txt');$/;"	v
request	lib/Cake/Test/Case/Routing/Filter/AssetDispatcherTest.php	/^		$request = new CakeRequest('theme\/test_theme\/..\/..\/..\/..\/..\/..\/VERSION.txt');$/;"	v
request	lib/Cake/Test/Case/Routing/Filter/AssetDispatcherTest.php	/^		$request = new CakeRequest('theme\/test_theme\/ccss\/cake.generic.css');$/;"	v
request	lib/Cake/Test/Case/Routing/Filter/AssetDispatcherTest.php	/^		$request = new CakeRequest('theme\/test_theme\/cjs\/debug_kit.js');$/;"	v
request	lib/Cake/Test/Case/Routing/Filter/AssetDispatcherTest.php	/^		$request = new CakeRequest('theme\/test_theme\/img\/cake.power.gif');$/;"	v
response	lib/Cake/Test/Case/Routing/Filter/AssetDispatcherTest.php	/^		$response = $this->getMock('CakeResponse', array('_sendHeader'));$/;"	v
response	lib/Cake/Test/Case/Routing/Filter/AssetDispatcherTest.php	/^		$response = $this->getMock('CakeResponse', array('_sendHeader', 'checkNotModified'));$/;"	v
response	lib/Cake/Test/Case/Routing/Filter/AssetDispatcherTest.php	/^		$response = $this->getMock('CakeResponse', array('_sendHeader', 'send'));$/;"	v
response	lib/Cake/Test/Case/Routing/Filter/AssetDispatcherTest.php	/^		$response = $this->getMock('CakeResponse', array('send', 'checkNotModified'));$/;"	v
tearDown	lib/Cake/Test/Case/Routing/Filter/AssetDispatcherTest.php	/^	public function tearDown() {$/;"	f
test404OnDoubleDot	lib/Cake/Test/Case/Routing/Filter/AssetDispatcherTest.php	/^	public function test404OnDoubleDot() {$/;"	f
test404OnDoubleDotEncoded	lib/Cake/Test/Case/Routing/Filter/AssetDispatcherTest.php	/^	public function test404OnDoubleDotEncoded() {$/;"	f
test404OnDoubleSlash	lib/Cake/Test/Case/Routing/Filter/AssetDispatcherTest.php	/^	public function test404OnDoubleSlash() {$/;"	f
testAssetFilterForThemeAndPlugins	lib/Cake/Test/Case/Routing/Filter/AssetDispatcherTest.php	/^	public function testAssetFilterForThemeAndPlugins() {$/;"	f
testNoHandleRoutedExtension	lib/Cake/Test/Case/Routing/Filter/AssetDispatcherTest.php	/^	public function testNoHandleRoutedExtension() {$/;"	f
testNotModified	lib/Cake/Test/Case/Routing/Filter/AssetDispatcherTest.php	/^	public function testNotModified() {$/;"	f
time	lib/Cake/Test/Case/Routing/Filter/AssetDispatcherTest.php	/^		$time = filemtime(App::themePath('TestTheme') . 'webroot' . DS . 'img' . DS . 'cake.power.gif');$/;"	v
time	lib/Cake/Test/Case/Routing/Filter/AssetDispatcherTest.php	/^		$time = new DateTime('@' . $time);$/;"	v
CakeRouteTest	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^class CakeRouteTest extends CakeTestCase {$/;"	c
expected	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$expected = '#^\/*$#';$/;"	v
expected	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$expected = '\/admin\/subscriptions\/edit\/1';$/;"	v
expected	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$expected = '\/admin\/subscriptions\/edit_admin_e\/1';$/;"	v
expected	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$expected = '\/foo\/bar';$/;"	v
expected	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$expected = '\/pages\/test\/%20spaces\/%E6%BC%A2%E5%AD%97\/la%E2%80%A0%C3%AEn';$/;"	v
expected	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$expected = '\/posts\/index\/filter%5B0%5D:one\/filter%5Bmodel%5D%5B0%5D:two\/filter%5Bmodel%5D%5Border%5D:field';$/;"	v
expected	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$expected = '\/posts\/index\/filter%5B0%5D:one\/filter%5Bmodel%5D:value';$/;"	v
expected	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$expected = array('controller' => 'blog_posts', 'action' => 'other', 'pass' => array(), 'named' => array());$/;"	v
expected	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$expected = array('section' => 'weblog', 'plugin' => 'blogs', 'controller' => 'posts', 'action' => 'index', 'pass' => array(), 'named' => array());$/;"	v
expected	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$expected = array('section' => 'آموزش', 'plugin' => 'blogs', 'controller' => 'posts', 'action' => 'index', 'pass' => array(), 'named' => array());$/;"	v
id	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$id = 'test\/ spaces\/漢字\/la†în';$/;"	v
params	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$params = array('lang' => 'en', 'color' => 'blue');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^			$result = $route->compile();$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->compile();$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match($url);$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array($/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array('controller' => 'blog_posts', 'action' => 'actions'));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array('controller' => 'blog_posts', 'action' => 'foo'));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array('controller' => 'nodes', 'action' => 'view'));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array('controller' => 'pages', 'action' => 'display', 'about'));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array('controller' => 'pages', 'action' => 'display', 'home'));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array('controller' => 'pages', 'action' => 'display', 1));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array('controller' => 'pages', 'action' => 'display', 2, 'something'));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array('controller' => 'pages', 'action' => 'display', 5, 'something'));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array('controller' => 'posts', 'action' => 'index', 'page' => null, 'sort' => false));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array('controller' => 'posts', 'action' => 'index', 'plugin' => null, 'page' => 1));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array('controller' => 'posts', 'action' => 'view'));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array('controller' => 'posts', 'action' => 'view', '0'));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array('controller' => 'posts', 'action' => 'view', 'id' => 'foo'));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array('controller' => 'posts', 'action' => 'view', 'id' => 2));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array('controller' => 'posts', 'action' => 'view', 'page' => 1));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array('controller' => 'posts', 'action' => 'view', 'plugin' => null));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array('controller' => 'posts', 'action' => 'view', 'plugin' => null, '0'));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array('controller' => 'posts', 'action' => 'view', 'plugin' => null, 'word space', 'order' => 'Θ'));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array('controller' => 'posts', 'action' => 'view', 'plugin' => null, 0));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array('controller' => 'posts', 'action' => 'view', 'plugin' => null, 5));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array('controller' => 'posts', 'action' => 'view', 'plugin' => null, 5, 'page' => 1, 'limit' => 20, 'order' => 'title'));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array('controller' => 'posts', 'action' => 'view', 'test'));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array('controller' => 'posts', 'action' => 'view', 1));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array('plugin' => 'fo', 'controller' => 'nodes', 'action' => 'view', 'id' => 1));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array('plugin' => 'fo', 'controller' => 'posts', 'action' => 'edit', 'id' => 1));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array('plugin' => 'fo', 'controller' => 'posts', 'action' => 'view', 'id' => '1', '0'));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array('plugin' => 'test', 'controller' => 'posts', 'action' => 'view', 'id' => '1'));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array('plugin' => null, 'controller' => 'posts', 'action' => 'view', 'id' => '9'));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array('plugin' => null, 'controller' => 'posts', 'action' => 'view', 'id' => '922'));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array('plugin' => null, 'controller' => 'posts', 'action' => 'view', 'id' => 'a99'));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array('plugin' => null, 'controller' => 'posts', 'action' => 'view', 'id' => 1));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->match(array('plugin' => null, 'controller' => 'posts', 'action' => 'view', 0));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->parse('\/%D8%A2%D9%85%D9%88%D8%B2%D8%B4');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->parse('\/admin\/');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->parse('\/admin\/posts');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->parse('\/blog\/foobar');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->parse('\/blog\/other');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->parse('\/category\/%D9%85%D9%88%D8%A8%D8%A7%DB%8C%D9%84');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->parse('\/comments\/index\/pattern:val--');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->parse('\/comments\/index\/pattern:val-2');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->parse('\/comments\/index\/wibble:spin\/fish:trout\/fizz:buzz');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->parse('\/posts');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->parse('\/posts\/%E2%88%82%E2%88%82');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->parse('\/posts\/08\/01\/2007\/title-of-post');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->parse('\/posts\/display\/wibble:spin\/fish:trout\/fizz:buzz\/unknown:value');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->parse('\/posts\/display\/wibble:spin\/fizz:buzz\/pattern:ignored');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->parse('\/posts\/edit\/1\/2\/0');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->parse('\/posts\/edit\/a-string\/page:1\/sort:value');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->parse('\/posts\/index\/1\/2\/3\/foo:bar');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->parse('\/posts\/index\/http:\/\/example.com');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->parse('\/posts\/index\/page:%CE%98');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->parse('\/posts\/index\/page[]:%CE%98');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->parse('\/posts\/index\/something%20else\/page[]:%CE%98');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->parse('\/posts\/index\/user%5B%5D:a\/user%5B%5D:b');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->parse('\/posts\/index\/user%5B0%5D:a\/user%5B1%5D:b');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->parse('\/posts\/index\/wibble:spin\/fish:trout\/fizz:buzz');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->parse('\/posts\/view\/1');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->parse('\/posts\/view\/my-title');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->parse('\/posts\/∂∂');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->parse('\/tests\/action\/theanswer[is]:42\/var[]:val2\/var[]:val3');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->parse('\/tests\/action\/theanswer[is][not]:42\/theanswer[]:5\/theanswer[is]:6');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->parse('\/tests\/action\/var[]:val1\/var[]:val2');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->parse('\/weblog');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$result = $route->persistParams($url, $params);$/;"	v
route	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^			$route = new CakeRoute('\/posts\/:id' . $delim . ':title');$/;"	v
route	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$route = new CakeRoute($/;"	v
route	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$route = new CakeRoute('\/', array('controller' => 'pages', 'action' => 'display', 'home'));$/;"	v
route	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$route = new CakeRoute('\/:controller\/:action', array('controller' => 'posts'));$/;"	v
route	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$route = new CakeRoute('\/:controller\/:action', array('plugin' => null));$/;"	v
route	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$route = new CakeRoute('\/:controller\/:action\/*');$/;"	v
route	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$route = new CakeRoute('\/:controller\/:action\/*', array('plugin' => null));$/;"	v
route	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$route = new CakeRoute('\/:controller\/:action\/*', array(), array($/;"	v
route	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$route = new CakeRoute('\/:controller\/:action\/**');$/;"	v
route	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$route = new CakeRoute('\/:controller\/:action\/:id', array('plugin' => null));$/;"	v
route	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$route = new CakeRoute('\/:controller\/:action\/:id', array('plugin' => null), array('id' => '[0-9]+'));$/;"	v
route	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$route = new CakeRoute('\/:controller\/:action\/:id', array(), array('id' => '[0-9]+'));$/;"	v
route	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$route = new CakeRoute('\/:controller\/:action\/:slug', array(), array($/;"	v
route	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$route = new CakeRoute('\/:plugin\/:controller\/:action\/*', array('plugin' => 'test_plugin', 'action' => 'index'));$/;"	v
route	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$route = new CakeRoute('\/:plugin\/:id\/*', array('controller' => 'posts', 'action' => 'view'));$/;"	v
route	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$route = new CakeRoute('\/:thisParam\/:thisParamIsLonger');$/;"	v
route	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$route = new CakeRoute('\/admin\/subscriptions\/:action\/*', array($/;"	v
route	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$route = new CakeRoute('\/blog\/:action', array('controller' => 'posts'));$/;"	v
route	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$route = new CakeRoute('\/category\/**', array('controller' => 'categories', 'action' => 'index'));$/;"	v
route	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$route = new CakeRoute('\/foo\/:controller\/:action', array('action' => 'index'));$/;"	v
route	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$route = new CakeRoute('\/invoices\/add\/:id\/:idd', array('controller' => 'invoices', 'action' => 'add'));$/;"	v
route	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$route = new CakeRoute('\/invoices\/add\/:idd\/:id', array('controller' => 'invoices', 'action' => 'add'));$/;"	v
route	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$route = new CakeRoute('\/pages\/*', array('controller' => 'pages', 'action' => 'display'));$/;"	v
route	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$route = new CakeRoute('\/pages\/**', array('controller' => 'pages', 'action' => 'display'));$/;"	v
route	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$route = new CakeRoute('\/posts\/foo:id', array('controller' => 'posts', 'action' => 'view'));$/;"	v
route	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$route = new CakeRoute('\/sales\/*', array('controller' => 'sales', 'action' => 'index'));$/;"	v
route	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$route = new CakeRoute('\/sample', array('controller' => 'posts', 'action' => 'index', '[method]' => 'POST'));$/;"	v
route	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$route = new CakeRoute('\/test2\/*', array('controller' => 'pages', 'action' => 'display', 2));$/;"	v
route	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$route = new Cakeroute($/;"	v
route	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$route = new Cakeroute('\/:controller', array('action' => 'display', 'home'));$/;"	v
setUp	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function setUp() {$/;"	f
testBasicRouteCompiling	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testBasicRouteCompiling() {$/;"	f
testComplexRouteCompilingAndParsing	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testComplexRouteCompilingAndParsing() {$/;"	f
testConstruction	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testConstruction() {$/;"	f
testGreedyRouteFailureNamedParam	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testGreedyRouteFailureNamedParam() {$/;"	f
testGreedyRouteFailurePassedArg	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testGreedyRouteFailurePassedArg() {$/;"	f
testMatchBasic	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testMatchBasic() {$/;"	f
testMatchGreedyNamedExcludesPrefixes	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testMatchGreedyNamedExcludesPrefixes() {$/;"	f
testMatchNamedParametersArray	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testMatchNamedParametersArray() {$/;"	f
testMatchSimilarParameters	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testMatchSimilarParameters() {$/;"	f
testMatchTrailing	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testMatchTrailing() {$/;"	f
testMatchWithFalseyValues	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testMatchWithFalseyValues() {$/;"	f
testMatchWithNamedParametersAndPassedArgs	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testMatchWithNamedParametersAndPassedArgs() {$/;"	f
testMatchWithPatterns	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testMatchWithPatterns() {$/;"	f
testNamedParamsWithNullFalse	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testNamedParamsWithNullFalse() {$/;"	f
testParse	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testParse() {$/;"	f
testParseArrayNamedParameters	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testParseArrayNamedParameters() {$/;"	f
testParseGreedyNamed	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testParseGreedyNamed() {$/;"	f
testParseNamedKeyUrlDecode	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testParseNamedKeyUrlDecode() {$/;"	f
testParseNamedParametersUrlDecode	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testParseNamedParametersUrlDecode() {$/;"	f
testParseNamedParametersWithRules	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testParseNamedParametersWithRules() {$/;"	f
testParsePassedArgument	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testParsePassedArgument() {$/;"	f
testParseTrailing	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testParseTrailing() {$/;"	f
testParseTrailingUTF8	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testParseTrailingUTF8() {$/;"	f
testParseUrlDecodeElements	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testParseUrlDecodeElements() {$/;"	f
testParseWithHttpHeaderConditions	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testParseWithHttpHeaderConditions() {$/;"	f
testParseWithPassDefaults	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testParseWithPassDefaults() {$/;"	f
testPassArgRestructure	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testPassArgRestructure() {$/;"	f
testPatternOnAction	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testPatternOnAction() {$/;"	f
testPersistParams	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testPersistParams() {$/;"	f
testPersistParamsNonArray	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testPersistParamsNonArray() {$/;"	f
testRouteCompilingWithParamPatterns	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testRouteCompilingWithParamPatterns() {$/;"	f
testRouteParameterOverlap	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testRouteParameterOverlap() {$/;"	f
testUTF8PatternOnSection	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^	public function testUTF8PatternOnSection() {$/;"	f
url	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$url = array($/;"	v
url	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$url = array('controller' => 'posts', 'action' => 'index');$/;"	v
url	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$url = array('controller' => 'posts', 'action' => 'index', 'color' => 'red');$/;"	v
url	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$url = array('controller' => 'subscribe', 'admin' => true, 'action' => 'admin_edit', 1);$/;"	v
url	lib/Cake/Test/Case/Routing/Route/CakeRouteTest.php	/^		$url = array('controller' => 'subscribe', 'admin' => true, 'action' => 'edit', 1);$/;"	v
PluginShortRouteTest	lib/Cake/Test/Case/Routing/Route/PluginShortRouteTest.php	/^class PluginShortRouteTest extends CakeTestCase {$/;"	c
result	lib/Cake/Test/Case/Routing/Route/PluginShortRouteTest.php	/^		$result = $route->match(array('plugin' => 'foo', 'controller' => 'foo', 'action' => 'index'));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/PluginShortRouteTest.php	/^		$result = $route->match(array('plugin' => 'foo', 'controller' => 'posts', 'action' => 'index'));$/;"	v
result	lib/Cake/Test/Case/Routing/Route/PluginShortRouteTest.php	/^		$result = $route->parse('\/foo');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/PluginShortRouteTest.php	/^		$result = $route->parse('\/wrong');$/;"	v
route	lib/Cake/Test/Case/Routing/Route/PluginShortRouteTest.php	/^		$route = new PluginShortRoute('\/:plugin', array('action' => 'index'), array('plugin' => 'foo|bar'));$/;"	v
setUp	lib/Cake/Test/Case/Routing/Route/PluginShortRouteTest.php	/^	public function setUp() {$/;"	f
testMatch	lib/Cake/Test/Case/Routing/Route/PluginShortRouteTest.php	/^	public function testMatch() {$/;"	f
testParsing	lib/Cake/Test/Case/Routing/Route/PluginShortRouteTest.php	/^	public function testParsing() {$/;"	f
RedirectRouteTest	lib/Cake/Test/Case/Routing/Route/RedirectRouteTest.php	/^class RedirectRouteTest extends CakeTestCase {$/;"	c
header	lib/Cake/Test/Case/Routing/Route/RedirectRouteTest.php	/^		$header = $route->response->header();$/;"	v
result	lib/Cake/Test/Case/Routing/Route/RedirectRouteTest.php	/^		$result = $route->parse('\/google');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/RedirectRouteTest.php	/^		$result = $route->parse('\/home');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/RedirectRouteTest.php	/^		$result = $route->parse('\/my_controllers\/do_something\/passme\/named:param');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/RedirectRouteTest.php	/^		$result = $route->parse('\/nl\/my_controllers\/');$/;"	v
result	lib/Cake/Test/Case/Routing/Route/RedirectRouteTest.php	/^		$result = $route->parse('\/posts\/2');$/;"	v
route	lib/Cake/Test/Case/Routing/Route/RedirectRouteTest.php	/^		$route = new RedirectRoute('\/:lang\/my_controllers', array('controller' => 'tags', 'action' => 'add'), array('lang' => '(nl|en)', 'persist' => array('lang')));$/;"	v
route	lib/Cake/Test/Case/Routing/Route/RedirectRouteTest.php	/^		$route = new RedirectRoute('\/google', 'http:\/\/google.com');$/;"	v
route	lib/Cake/Test/Case/Routing/Route/RedirectRouteTest.php	/^		$route = new RedirectRoute('\/home', array('controller' => 'posts'));$/;"	v
route	lib/Cake/Test/Case/Routing/Route/RedirectRouteTest.php	/^		$route = new RedirectRoute('\/home', array('controller' => 'posts', 'action' => 'index'));$/;"	v
route	lib/Cake/Test/Case/Routing/Route/RedirectRouteTest.php	/^		$route = new RedirectRoute('\/my_controllers\/:action\/*', array('controller' => 'tags', 'action' => 'add'));$/;"	v
route	lib/Cake/Test/Case/Routing/Route/RedirectRouteTest.php	/^		$route = new RedirectRoute('\/my_controllers\/:action\/*', array('controller' => 'tags', 'action' => 'add'), array('persist' => true));$/;"	v
route	lib/Cake/Test/Case/Routing/Route/RedirectRouteTest.php	/^		$route = new RedirectRoute('\/posts\/*', '\/test', array('persist' => true));$/;"	v
route	lib/Cake/Test/Case/Routing/Route/RedirectRouteTest.php	/^		$route = new RedirectRoute('\/posts\/*', array('controller' => 'posts', 'action' => 'view'), array('persist' => true));$/;"	v
route	lib/Cake/Test/Case/Routing/Route/RedirectRouteTest.php	/^		$route = new RedirectRoute('\/posts\/*', array('controller' => 'posts', 'action' => 'view'), array('status' => 302));$/;"	v
setUp	lib/Cake/Test/Case/Routing/Route/RedirectRouteTest.php	/^	public function setUp() {$/;"	f
testParsing	lib/Cake/Test/Case/Routing/Route/RedirectRouteTest.php	/^	public function testParsing() {$/;"	f
FULL_BASE_URL	lib/Cake/Test/Case/Routing/RouterTest.php	/^	define('FULL_BASE_URL', 'http:\/\/cakephp.org');$/;"	d
RouterTest	lib/Cake/Test/Case/Routing/RouterTest.php	/^class RouterTest extends CakeTestCase {$/;"	c
_back	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$_back = Configure::read('App.baseUrl');$/;"	v
adminParams	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$adminParams = array('prefix' => 'admin', 'admin' => true);$/;"	v
custom	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$custom = array($/;"	v
default	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$default = Router::resourceMap();$/;"	v
existing	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$existing = '?apple=red&pear=green';$/;"	v
existing	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$existing = 'apple=red&pear=green';$/;"	v
existing	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$existing = array('apple' => 'red', 'pear' => 'green');$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = "\/admin\/controller\/index\/page:1\/sort:controller\/direction:asc";$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = "\/admin\/controller\/index\/type:new";$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '?apple=red&pear=green&some=param&foo=bar';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '?apple=red&pear=green';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '?foo=bar&amp;php=nut&amp;jose=zap';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '?foo=bar&php=nut&jose=zap';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '?some=param&foo=bar';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '?var=foo+bar';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/12\/file:asdf.png';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/about';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/admin\/images\/add';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/admin\/pages\/add';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/admin\/pages\/edit\/284';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/admin\/posts\/all';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/admin\/registrations\/index\/page:2';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/admin\/test_plugin';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/admin\/test_plugin\/show_tickets';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/admin\/test_plugin\/show_tickets\/edit\/6';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/articles.json';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/articles\/add.json';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/base\/admin\/posts';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/base\/members\/posts\/index\/page:2';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/base\/members\/users\/add';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/base\/my_controller\/my_action';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/base\/my_controller\/my_action\/base:1';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/cache_css\/test';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/cake_plugin\/1';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/cake_plugin\/1\/0';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/company\/users\/login';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/contact\/me';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/dan\/galleries';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/en\/blue\/posts\/index';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/en\/red\/posts\/view\/6';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/en\/shows\/shows\/page:1';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/eng\/galleries';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/eng\/pages';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/eng\/pages\/add';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/eng\/posts\/view\/1?test=value';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/eng\/test\/test_another_action';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/forestillinger\/10\/2007\/min-forestilling';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/graphs\/view\/12\/file:asdf.foo';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/images\/add';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/images\/edit\/1';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/kalender\/10\/2007\/min-forestilling';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/kalender\/min-forestilling';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/login';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/magazine\/admin\/subscriptions\/edit\/1';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/magazine\/admin\/subscriptions\/index\/page:3';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/magazine\/admin\/users\/login';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/my_controller\/my_action';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/my_plugin\/pages\/view\/my-page';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/myothercontroller';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/others\/edit\/1';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/page\/my-page';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/page\/this_is_the_slug';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/pages\/about';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/posts';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/posts\/1';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/posts\/10';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/posts\/edit\/6';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/posts\/edit\/7';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/posts\/index\/0';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/posts\/index\/0?var=test&amp;var2=test2';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/posts\/index\/0?var=test&var2=test2#unencoded string %';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/posts\/index\/0?var=test&var2=test2';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/posts\/index\/published:0\/deleted:0';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/posts\/index\/published:1\/deleted:1';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/posts\/view\/1';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/posts\/view\/1.json';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/protected\/images\/add';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/protected\/images\/add_protected_test';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/protected\/images\/edit\/1';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/protected\/images\/index';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/protected\/images\/protectededit\/1';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/protected\/others\/edit\/1';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/protected\/others\/edit\/1\/page:1';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/protected\/others\/edit\/1\/random:my-value';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/short_controller_name\/add';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/short_controller_name\/index\/page:1';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/some_extra\/page\/this_is_the_slug';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/test-passed\/whatever';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/test2\/whatever';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/test\/test_another_action';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/test\/test_another_action\/locale:badness';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/test\/whatever';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/tests\/index\/namedParam%5Bkeyed%5D:is%20an%20array\/namedParam%5B0%5D:test';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/tests\/index\/pages%5B0%5D:1\/pages%5B1%5D:2\/pages%5B2%5D:3';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/tests\/index\/pages%5Bparam1%5D%5B0%5D:one\/pages%5Bparam1%5D%5B1%5D:two\/pages%5B0%5D:three';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/tests\/index\/pages%5Bparam1%5D%5Bone%5D:1\/pages%5Bparam1%5D%5Btwo%5D:2\/pages%5B0%5D:three';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/tests\/index\/super%5Bnested%5D%5Barray%5D:awesome\/super%5Bnested%5D%5Bsomething%5D:else\/super%5B0%5D:cool';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/users\/login';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/users\/logout';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = '\/view\/1';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = 'example.com';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = FULL_BASE_URL . '\/posts\/index#here';$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('admin');$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('admin', 'member');$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('admin', 'member', 'super_user');$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('admin', 'protected');$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('controller' => 'blog_posts', 'action' => 'other', 'pass' => array(), 'named' => array());$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('controller' => 'controller', 'action' => 'action', 'plugin' => null, 'ext' => 'rss', 'named' => array(), 'pass' => array());$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('controller' => 'posts', 'action' => 'view', 'slug' => 'test');$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('day' => '01', 'year' => '2007', 'month' => '08', 'controller' => 'posts', 'action' => 'view', 'plugin' => '', 'pass' => array('0' => 'title-of-post-here'), 'named' => array());$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('month' => '08', 'day' => '01', 'year' => '2007', 'controller' => 'posts', 'action' => 'view', 'plugin' => '', 'pass' => array('0' => 'title-of-post-here'), 'named' => array());$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('pass' => array('47fc97a9-019c-41d1-a058-1fa3cbdd56cb', 'sample-post-title'), 'named' => array(), 'id' => '47fc97a9-019c-41d1-a058-1fa3cbdd56cb', 'url_title' => 'sample-post-title', 'plugin' => null, 'controller' => 'posts', 'action' => 'view');$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('pass' => array('5', 'sample-post-title'), 'named' => array(), 'id' => 5, 'url_title' => 'sample-post-title', 'plugin' => null, 'controller' => 'posts', 'action' => 'view');$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('pass' => array('5', 'sample-post-title', 'other', 'params', '4'), 'named' => array(), 'id' => 5, 'url_title' => 'sample-post-title', 'plugin' => null, 'controller' => 'posts', 'action' => 'view');$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('pass' => array('contact'), 'named' => array(), 'plugin' => null, 'controller' => 'pages', 'action' => 'display');$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('pass' => array('foo:bar', 'routing:fun'), 'named' => array(), 'plugin' => null, 'controller' => 'posts', 'action' => 'view');$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('pass' => array('home'), 'named' => array('event' => 'Val_u2'), 'plugin' => null, 'controller' => 'pages', 'action' => 'display');$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('pass' => array('home'), 'named' => array('event' => 'val-ue'), 'plugin' => null, 'controller' => 'pages', 'action' => 'display');$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('pass' => array('home'), 'named' => array('event' => 'value'), 'plugin' => null, 'controller' => 'pages', 'action' => 'display');$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('pass' => array('home'), 'named' => array(), 'plugin' => null, 'controller' => 'pages', 'action' => 'display');$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('pass' => array('min-forestilling'), 'plugin' => 'shows', 'controller' => 'shows', 'action' => 'calendar', 'year' => 2007, 'month' => 10, 'named' => array());$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('pass' => array('my-page'), 'plugin' => null, 'controller' => 'test', 'action' => 'index', 'named' => array());$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('pass' => array('param1:value1:1'), 'named' => array('param2' => 'value2:3', 'param' => 'value'), 'controller' => 'controller', 'action' => 'action', 'plugin' => null);$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('pass' => array('param1:value1:1'), 'named' => array('param2' => 'value2:3', 'param' => 'value'), 'controller' => 'foo', 'action' => 'view', 'plugin' => null);$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('pass' => array('param1:value1:1', 'param2:value2:3', 'param:value'), 'named' => array(), 'controller' => 'controller', 'action' => 'action', 'plugin' => null);$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('pass' => array('param2:2'), 'named' => array('param1' => '1', 'param3' => '3'), 'controller' => 'controller', 'action' => 'action', 'plugin' => null);$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('pass' => array('param2:value2:3', 'param3:value'), 'named' => array('param1' => 'value1:1'), 'controller' => 'controller', 'action' => 'action', 'plugin' => null);$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('pass' => array('param2=value2'), 'named' => array('param1' => 'value1'), 'controller' => 'controller', 'action' => 'action', 'plugin' => null);$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('pass' => array('routing:fun'), 'named' => array('foo' => 'bar', 'answer' => '42'), 'plugin' => null, 'controller' => 'posts', 'action' => 'view');$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('pass' => array(), 'named' => array('foo' => 'bar', 'routing' => 'fun', 'answer' => '42'), 'plugin' => null, 'controller' => 'posts', 'action' => 'view');$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('pass' => array(), 'named' => array('foo' => 'bar', 'routing' => 'fun', 'answer' => '42'), 'plugin' => null, 'controller' => 'posts', 'action' => 'view', '?' => array('id' => '123', 'tab' => 'abc'));$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('pass' => array(), 'named' => array('param1' => '1', 'param2' => '2', 'param3' => '3'), 'controller' => 'controller', 'action' => 'action', 'plugin' => null);$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('pass' => array(), 'named' => array('param1' => 'value1', 'param2' => 'value2'), 'controller' => 'bar', 'action' => 'fubar', 'plugin' => null);$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('pass' => array(), 'named' => array('param1' => 'value1:1', 'param2' => 'value2:3', 'param' => 'value'), 'controller' => 'controller', 'action' => 'action', 'plugin' => null);$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('pass' => array(), 'named' => array(), 'category_id' => '4795d601-19c8-49a6-930e-06a8b01d17b7', 'plugin' => null, 'controller' => 'subjects', 'action' => 'add');$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('pass' => array(), 'named' => array(), 'controller' => 'pages', 'action' => 'display', 'plugin' => 'pages');$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('pass' => array(), 'named' => array(), 'language' => 'eng', 'plugin' => 'contact', 'controller' => 'contact', 'action' => 'index');$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('pass' => array(), 'named' => array(), 'locale' => 'eng', 'controller' => 'test', 'action' => 'test_action', 'plugin' => null);$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('pass' => array(), 'named' => array(), 'plugin' => null, 'controller' => 'pages', 'action' => 'view', 'slug' => 'this_is_the_slug', 'extra' => 'some_extra');$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('pass' => array(), 'named' => array(), 'plugin' => null, 'controller' => 'pages', 'action' => 'view', 'slug' => 'this_is_the_slug', 'extra' => null);$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('pass' => array(), 'named' => array(), 'prefix' => 'admin', 'plugin' => null, 'controller' => 'posts', 'action' => 'admin_index', 'admin' => true);$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('pass' => array(), 'named' => array(), 'prefix' => 'members', 'plugin' => null, 'controller' => 'posts', 'action' => 'members_index', 'members' => true);$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('pass' => array(0), 'named' => array(), 'controller' => 'posts', 'action' => 'edit', 'plugin' => null);$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('plugin' => null, 'controller' => 'posts', 'action' => 'index', 'ext' => 'rss', 'pass' => array(), 'named' => array());$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('plugin' => null, 'controller' => 'posts', 'action' => 'index', 'ext' => 'xml', 'pass' => array(), 'named' => array());$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('plugin' => null, 'controller' => 'posts', 'action' => 'view', 'pass' => array('1'), 'named' => array(), 'ext' => 'rss');$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('plugin' => null, 'controller' => 'posts.atom', 'action' => 'index', 'pass' => array(), 'named' => array(), '?' => array('hello' => 'goodbye'));$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('plugin' => null, 'pass' => array('home'), 'controller' => 'pages', 'action' => 'display', 'named' => array());$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('value' => '2007', 'somevalue' => '08', 'othervalue' => '01', 'controller' => 'posts', 'action' => 'view', 'plugin' => '', 'pass' => array('0' => 'title-of-post-here'), 'named' => array());$/;"	v
expected	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$expected = array('year' => '2007', 'month' => '08', 'day' => '01', 'controller' => 'posts', 'action' => 'view', 'plugin' => '', 'pass' => array('0' => 'title-of-post-here'), 'named' => array());$/;"	v
firstRequest	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$firstRequest = new CakeRequest('\/posts\/index');$/;"	v
header	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$header = Router::$routes[0]->response->header();$/;"	v
named	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$named = Router::connectNamed(false, array('default' => true));$/;"	v
named	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$named = Router::namedConfig();$/;"	v
out	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$out = Router::url(array('controller' => 'pages', 'action' => 'display', 'home'));$/;"	v
params	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$params = array($/;"	v
params	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$params = array('controller' => 'pages', 'action' => 'display');$/;"	v
params	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$params = array('param1' => '1', 'param2' => '2');$/;"	v
parseReverseSymmetryData	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function parseReverseSymmetryData() {$/;"	f
paths	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$paths = App::path('plugins');$/;"	v
paths	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$paths = array('base' => '\/', 'here' => '\/products\/display\/5', 'webroot' => '\/webroot');$/;"	v
pluginName	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$pluginName = 'forums';$/;"	v
prefixParams	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$prefixParams = array('prefix' => 'members', 'members' => true);$/;"	v
request	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$request = new CakeRequest('\/eng\/posts\/view\/1');$/;"	v
request	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$request = new CakeRequest('\/posts\/view\/1.json');$/;"	v
request	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$request = new CakeRequest('admin\/controller\/index');$/;"	v
request	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$request = new CakeRequest();$/;"	v
resources	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$resources = Router::mapResources('Posts');$/;"	v
resources	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$resources = Router::mapResources('Posts', array($/;"	v
resources	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$resources = Router::mapResources('Posts', array('id' => '[a-z0-9_]+'));$/;"	v
resources	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$resources = Router::mapResources('Posts', array('prefix' => 'api'));$/;"	v
resources	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$resources = Router::mapResources('TestPlugin.TestPlugin');$/;"	v
resources	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$resources = Router::mapResources('TestPlugin.TestPlugin', array('prefix' => '\/api\/'));$/;"	v
restore	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$restore = Configure::read('Routing');$/;"	v
restore	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$restore = ini_get('arg_separator.output');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = $route->match(array('controller' => 'blog_posts', 'action' => 'actions'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = $route->match(array('controller' => 'blog_posts', 'action' => 'foo'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = $route->parse('\/blog\/foobar');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = $route->parse('\/blog\/other');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::connect('\/', array('controller' => 'pages', 'action' => 'display', 'home'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::connectNamed(false);$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::connectNamed(true);$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::extensions();$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::getRequest();$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::normalize('\/');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::normalize('\/\/users\/\/logout\/\/');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::normalize('\/admin\/beers_tags\/add');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::normalize('\/cake_12\/users\/logout\/');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::normalize('\/recipe\/recipes\/add');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::normalize('\/us\/users\/logout\/');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::normalize('\/users\/login\/scope:\/\/foo');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::normalize('\/users\/logout\/');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::normalize('beer\/admin\/beers_tags\/add');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::normalize('http:\/\/google.com\/');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::normalize('http:\/\/google.com\/\/');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::normalize('users\/login');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::normalize('users\/logout');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::normalize(array('controller' => 'users', 'action' => 'logout'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('0');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/0');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/admin\/controller\/index\/type:whatever');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/admin\/posts');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/admin\/posts\/');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/api\/posts');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/api\/test_plugin');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/badness\/test\/test_action');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/blog\/foobar');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/blog\/other');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/categories\/index\/limit=5');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/controller\/action');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/controller\/action\/param1:1\/param2:2\/param3:3');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/controller\/action\/param1:value1:1\/param2:value2:3\/param3:value');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/controller\/action\/param1:value1:1\/param2:value2:3\/param:value');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/controller\/action\/param1=value1\/param2=value2');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/eng\/contact');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/eng\/test\/test_action');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/foo\/param1=value1\/param2=value2');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/foo\/view\/param1:value1:1\/param2:value2:3\/param:value');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/forestillinger\/10\/2007\/min-forestilling');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/members\/posts\/index');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/page\/my-page');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/page\/this_is_the_slug');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/pages\/contact\/');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/pages\/display\/home');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/pages\/display\/home\/event:Val_u2');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/pages\/display\/home\/event:val-ue');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/pages\/display\/home\/event:value');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/pages\/home\/');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/plugin_js\/js_file');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/posts');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/posts.atom?hello=goodbye');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/posts.rss');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/posts.xml');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/posts\/01\/2007\/08\/title-of-post-here');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/posts\/08\/01\/2007\/title-of-post-here');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/posts\/13');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/posts\/2007\/08\/01\/title-of-post-here');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/posts\/475acc39-a328-44d3-95fb-015000000000');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/posts\/5:sample-post-title');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/posts\/5:sample-post-title\/other\/params\/4');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/posts\/add');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/posts\/edit\/0');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/posts\/edit\/5');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/posts\/name');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/posts\/sample-post-title-(uuid:47fc97a9-019c-41d1-a058-1fa3cbdd56cb)');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/posts\/view\/1.atom');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/posts\/view\/1.rss');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/posts\/view\/1.rss?query=test');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/posts\/view\/foo:bar\/routing:fun');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/posts\/view\/foo:bar\/routing:fun\/answer:42');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/posts\/view\/foo:bar\/routing:fun\/answer:42?id=123&tab=abc');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/posts\/view\/something. . .');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/posts\/view\/something.');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/some_extra\/page\/this_is_the_slug');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/subjects\/add\/4795d601-19c8-49a6-930e-06a8b01d17b7');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/test');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/test_plugin');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/test_plugin\/test_plugin');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('\/test_plugin\/test_plugin\/13');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('pages\/display\/home');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::parse('pages\/display\/home\/');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::prefixes();$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::queryString($existing, array('some' => 'param', 'foo' => 'bar'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::queryString('apple=red&pear=green');$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::queryString('foo=bar&', array('php' => 'nut', 'jose' => 'zap'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::queryString('foo=bar&amp;', array('php' => 'nut', 'jose' => 'zap'), true);$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::queryString('foo=bar', array('php' => 'nut', 'jose' => 'zap'), true);$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::queryString(array('var' => 'foo bar'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::queryString(false, array('some' => 'param', 'foo' => 'bar'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::reverse($params);$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::reverse($params, true);$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::reverse($request);$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::setExtensions(array('pdf'), false);$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url();$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array($/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('action' => 'add'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('action' => 'edit', 1));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('action' => 'edit', 1, 'protected' => true));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('action' => 'login'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('action' => 'protected_edit', 1, 'protected' => true));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('action' => 'protectededit', 1, 'protected' => true));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('action' => 'test_another_action'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('action' => 'test_another_action', 'locale' => 'badness'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('action' => 'test_another_action', 'locale' => 'eng'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('admin' => false, 'language' => 'dan', 'action' => 'index', 'controller' => 'galleries'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('admin' => false, 'language' => 'eng', 'action' => 'index', 'controller' => 'galleries'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('admin' => null, 'plugin' => null, 'controller' => 'pages', 'action' => 'view', 'slug' => 'this_is_the_slug', 'extra' => 'some_extra'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('admin' => null, 'plugin' => null, 'controller' => 'pages', 'action' => 'view', 'slug' => 'this_is_the_slug', 'extra' => null));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('admin' => true, 'controller' => 'pages', 'action' => 'view', 'my-page'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('admin' => true, 'controller' => 'posts'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('admin' => true, 'controller' => 'users', 'action' => 'login'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('all'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('base' => false));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'blog_posts', 'action' => 'actions'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'blog_posts', 'action' => 'foo'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'categories', 'action' => 'index', '0'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'graphs', 'action' => 'view', 'id' => 12, 'file' => 'asdf.png'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'graphs', 'action' => 'view', 12, 'file' => 'asdf.foo'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'images', 'action' => 'add'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'images', 'action' => 'add', 'admin' => true));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'images', 'action' => 'add', 'protected' => false));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'images', 'action' => 'add', 'protected' => true));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'images', 'action' => 'add_protected_test', 'protected' => true));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'my_controller', 'action' => 'my_action'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'my_controller', 'action' => 'my_action', 'base' => false));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'my_controller', 'action' => 'my_action', 'base' => true));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'others', 'action' => 'edit', 1));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'others', 'action' => 'edit', 1, 'protected' => true));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'others', 'action' => 'edit', 1, 'protected' => true, 'page' => 1));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'others', 'action' => 'edit', 1, 'protected' => true, 'random' => 'my-value'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'pages', 'action' => 'display', 'about'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'pages', 'action' => 'display', 'home', 'whatever'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'pages', 'action' => 'display', 1, 'whatever'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'pages', 'action' => 'display', 2, 'whatever'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'pages', 'action' => 'view', 'about'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'posts', '0', '?' => 'var=test&var2=test2'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'posts', '0', '?' => 'var=test&var2=test2', '#' => 'unencoded string %'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'posts', '0', '?' => array('var' => 'test', 'var2' => 'test2')));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'posts', '0', '?' => array('var' => null)));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'posts', 'action' => 'add', '[method]' => 'POST'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'posts', 'action' => 'delete', '[method]' => 'DELETE', 'id' => 10));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'posts', 'action' => 'edit', '[method]' => 'POST', 'id' => 10));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'posts', 'action' => 'edit', '[method]' => 'PUT', 'id' => 10));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'posts', 'action' => 'edit', 6, 'color' => null, 'lang' => null));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'posts', 'action' => 'edit', 7));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'posts', 'action' => 'index'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'posts', 'action' => 'index', '0'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'posts', 'action' => 'index', '0', '?' => 'var=test&var2=test2'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'posts', 'action' => 'index', '0', '?' => array('var' => 'test', 'var2' => 'test2')));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'posts', 'action' => 'index', '0', '?' => array('var' => 'test', 'var2' => 'test2')), array('escape' => true));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'posts', 'action' => 'index', '0', '?' => array('var' => 'test', 'var2' => 'test2', 'more' => 'test data')));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'posts', 'action' => 'index', '[method]' => 'GET'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'posts', 'action' => 'index', 'color' => 'blue'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'posts', 'action' => 'index', 'published' => 0, 'deleted' => 0));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'posts', 'action' => 'index', 'published' => 1, 'deleted' => 1));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'posts', 'action' => 'view', '1'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'posts', 'action' => 'view', '[method]' => 'GET', 'id' => 10));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'posts', 'action' => 'view', 'id' => '1'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'posts', 'action' => 'view', 1));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'posts', 'action' => 'view', 6));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'real_controller_name', 'page' => '1'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'tests', 'namedParam' => array($/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'tests', 'pages' => array($/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'tests',$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'users', 'action' => 'admin_login'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'users', 'action' => 'company_login', 'company' => true));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'users', 'action' => 'login'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'users', 'action' => 'login', 'admin' => true));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'users', 'action' => 'login', 'company' => false));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('controller' => 'users', 'action' => 'login', 'company' => true));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('language' => 'eng', 'action' => 'index', 'controller' => 'pages'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('language' => 'eng', 'controller' => 'pages'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('language' => 'eng', 'controller' => 'pages', 'action' => 'add'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('members' => true, 'controller' => 'posts', 'action' => 'index', 'page' => 2));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('members' => true, 'controller' => 'users', 'action' => 'add'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('page' => 1, 0 => null, 'sort' => 'controller', 'direction' => 'asc', 'order' => null));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('page' => 2));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('page' => 3));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('plugin' => 'aliased', 'controller' => 'posts', 'action' => 'index'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('plugin' => 'cake_plugin', 'controller' => 'posts', 'action' => 'view', 'id' => '1'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('plugin' => 'cake_plugin', 'controller' => 'posts', 'action' => 'view', 'id' => '1', '0'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('plugin' => 'contact', 'controller' => 'contact', 'action' => 'me'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('plugin' => 'my_plugin', 'controller' => 'pages', 'action' => 'view', 'my-page'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('plugin' => 'plugin_js', 'controller' => 'js_file', 'action' => 'index'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('plugin' => 'shows', 'controller' => 'shows', 'action' => 'calendar', 'min-forestilling'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('plugin' => 'shows', 'controller' => 'shows', 'action' => 'calendar', 'month' => 10, 'year' => 2007, 'min-forestilling'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('plugin' => 'shows', 'controller' => 'shows', 'action' => 'calendar', 'year' => 2007, 'month' => 10, 'min-forestilling'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('plugin' => 'test_plugin', 'controller' => 'test_plugin', 'action' => 'index'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('plugin' => null, 'controller' => 'articles', 'action' => 'add', 'ext' => 'json'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('plugin' => null, 'controller' => 'articles', 'action' => 'add', 'id' => null, 'ext' => 'json'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('plugin' => null, 'controller' => 'articles', 'action' => 'index', 'ext' => 'json'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('plugin' => null, 'controller' => 'articles', 'action' => 'index', 'id' => null, 'ext' => 'json'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('plugin' => null, 'controller' => 'myothercontroller'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('plugin' => null, 'controller' => 'pages', 'action' => 'add', 'id' => false));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('plugin' => null, 'controller' => 'pages', 'action' => 'edit', 'id' => '284'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('plugin' => null, 'controller' => 'pages', 'action' => 'edit', 284));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('plugin' => null, 'controller' => 'posts', 'action' => 'index'));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('protected' => true));$/;"	v
result	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$result = Router::url(array('type' => 'new'));$/;"	v
route	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$route = Router::currentRoute();$/;"	v
route	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$route = Router::requestRoute();$/;"	v
route	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$route = end(Router::$routes);$/;"	v
route	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$route = new CakeRoute($/;"	v
routeClass	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$routeClass = 'TestDefaultRouteClass';$/;"	v
routes	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$routes = Router::connect($/;"	v
routes	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$routes = Router::connect('\/:controller\/:action', array(), array('routeClass' => 'MockReturnRoute'));$/;"	v
secondRequest	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$secondRequest = new CakeRequest('\/posts\/index');$/;"	v
setUp	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function tearDown() {$/;"	f
testArrayNamedParameters	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testArrayNamedParameters() {$/;"	f
testAutoPrefixRoutePersistence	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testAutoPrefixRoutePersistence() {$/;"	f
testBaseUrl	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testBaseUrl() {$/;"	f
testBaseUrlWithBasePath	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testBaseUrlWithBasePath() {$/;"	f
testCanLeavePlugin	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testCanLeavePlugin() {$/;"	f
testConnectDefaultRoutes	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testConnectDefaultRoutes() {$/;"	f
testConnectNamed	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testConnectNamed() {$/;"	f
testCurrentRoute	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testCurrentRoute() {$/;"	f
testCurrentRouteWhenNonExistentRoute	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testCurrentRouteWhenNonExistentRoute() {$/;"	f
testCustomRouteException	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testCustomRouteException() {$/;"	f
testDefaultRouteClass	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testDefaultRouteClass() {$/;"	f
testDefaultRouteClassGetter	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testDefaultRouteClassGetter() {$/;"	f
testDefaultRouteException	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testDefaultRouteException() {$/;"	f
testDefaultsMethod	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testDefaultsMethod() {$/;"	f
testExtensionParsing	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testExtensionParsing() {$/;"	f
testFullBaseUrl	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testFullBaseUrl() {$/;"	f
testGenerateUrlResourceRoute	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testGenerateUrlResourceRoute() {$/;"	f
testGetParams	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testGetParams() {$/;"	f
testMapResources	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testMapResources() {$/;"	f
testMapResourcesConnectOptions	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testMapResourcesConnectOptions() {$/;"	f
testMultipleResourceRoute	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testMultipleResourceRoute() {$/;"	f
testNamedArgsUrlGeneration	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testNamedArgsUrlGeneration() {$/;"	f
testNamedArgsUrlParsing	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testNamedArgsUrlParsing() {$/;"	f
testPagesUrlParsing	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testPagesUrlParsing() {$/;"	f
testParseExtensions	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testParseExtensions() {$/;"	f
testParseReverseSymmetry	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testParseReverseSymmetry($url) {$/;"	f
testParsingWithPatternOnAction	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testParsingWithPatternOnAction() {$/;"	f
testParsingWithPrefixes	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testParsingWithPrefixes() {$/;"	f
testParsingWithTrailingPeriod	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testParsingWithTrailingPeriod() {$/;"	f
testParsingWithTrailingPeriodAndParseExtensions	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testParsingWithTrailingPeriodAndParseExtensions() {$/;"	f
testPassedArgsOrder	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testPassedArgsOrder() {$/;"	f
testPatternOnAction	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testPatternOnAction() {$/;"	f
testPersistentParameters	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testPersistentParameters() {$/;"	f
testPluginMapResources	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testPluginMapResources() {$/;"	f
testPluginMapResourcesWithPrefix	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testPluginMapResourcesWithPrefix() {$/;"	f
testPrefixFalseIgnored	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testPrefixFalseIgnored() {$/;"	f
testPrefixOverride	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testPrefixOverride() {$/;"	f
testPrefixRoutingAndPlugins	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testPrefixRoutingAndPlugins() {$/;"	f
testQueryString	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testQueryString() {$/;"	f
testQuerystringGeneration	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testQuerystringGeneration() {$/;"	f
testRegexRouteMatching	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testRegexRouteMatching() {$/;"	f
testRemoveBase	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testRemoveBase() {$/;"	f
testRequestRoute	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testRequestRoute() {$/;"	f
testResourceMap	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testResourceMap() {$/;"	f
testReverseWithExtension	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testReverseWithExtension() {$/;"	f
testRouteDefaultParams	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testRouteDefaultParams() {$/;"	f
testRouteRedirection	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testRouteRedirection() {$/;"	f
testRouteSymmetry	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testRouteSymmetry() {$/;"	f
testRouterReverse	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testRouterReverse() {$/;"	f
testRoutingPrefixesSetting	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testRoutingPrefixesSetting() {$/;"	f
testSetExtensions	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testSetExtensions() {$/;"	f
testSetRequestInfoLegacy	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testSetRequestInfoLegacy() {$/;"	f
testSettingInvalidDefaultRouteException	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testSettingInvalidDefaultRouteException() {$/;"	f
testSettingNonExistentDefaultRouteException	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testSettingNonExistentDefaultRouteException() {$/;"	f
testStripPlugin	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testStripPlugin() {$/;"	f
testUrlCatchAllRoute	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testUrlCatchAllRoute() {$/;"	f
testUrlFullUrlReturnFromRoute	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testUrlFullUrlReturnFromRoute() {$/;"	f
testUrlGenerationBasic	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testUrlGenerationBasic() {$/;"	f
testUrlGenerationPlugins	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testUrlGenerationPlugins() {$/;"	f
testUrlGenerationWithAdminPrefix	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testUrlGenerationWithAdminPrefix() {$/;"	f
testUrlGenerationWithAutoPrefixes	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testUrlGenerationWithAutoPrefixes() {$/;"	f
testUrlGenerationWithExtensions	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testUrlGenerationWithExtensions() {$/;"	f
testUrlGenerationWithLegacyPrefixes	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testUrlGenerationWithLegacyPrefixes() {$/;"	f
testUrlGenerationWithQueryStrings	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testUrlGenerationWithQueryStrings() {$/;"	f
testUrlGenerationWithRegexQualifiedParams	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testUrlGenerationWithRegexQualifiedParams() {$/;"	f
testUrlNormalization	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testUrlNormalization() {$/;"	f
testUrlParsing	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testUrlParsing() {$/;"	f
testUrlProtocol	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testUrlProtocol() {$/;"	f
testUrlWithRequestAction	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testUrlWithRequestAction() {$/;"	f
testUrlWritingWithPrefixes	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testUrlWritingWithPrefixes() {$/;"	f
testUrlWritingWithPrefixesAndCustomRoutes	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testUrlWritingWithPrefixesAndCustomRoutes() {$/;"	f
testUsingCustomRouteClass	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testUsingCustomRouteClass() {$/;"	f
testUsingCustomRouteClassPluginDotSyntax	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testUsingCustomRouteClassPluginDotSyntax() {$/;"	f
testUuidRoutes	lib/Cake/Test/Case/Routing/RouterTest.php	/^	public function testUuidRoutes() {$/;"	f
url	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$url = '#here';$/;"	v
url	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$url = ':\/\/example.com';$/;"	v
url	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$url = '?param=0';$/;"	v
url	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$url = '\/\/example.com';$/;"	v
url	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$url = 'ed2k:\/\/example.com';$/;"	v
url	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$url = 'example.com\/' . $pluginName . '\/';$/;"	v
url	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$url = 'http:\/\/example.com';$/;"	v
url	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$url = 'http:\/\/example.com\/posts\/view\/1';$/;"	v
url	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$url = 'javascript:void(0)';$/;"	v
url	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$url = 'posts\/index#here';$/;"	v
url	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$url = 'sms:012345-678';$/;"	v
url	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$url = 'svn+ssh:\/\/example.com';$/;"	v
url	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$url = 'tel:012345-678';$/;"	v
url	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$url = Router::url(array('admin' => false, 'controller' => 'asset_compress', 'action' => 'get', 'test'));$/;"	v
url	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$url = Router::url(array('admin' => true, 'controller' => 'asset_compress', 'action' => 'get', 'test'));$/;"	v
url	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$url = Router::url(array('controller' => 'asset_compress', 'action' => 'get', 'test'));$/;"	v
url	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$url = array('controller' => 'pages', 'action' => 'display', 'government');$/;"	v
url	lib/Cake/Test/Case/Routing/RouterTest.php	/^		$url = array('controller' => 'products', 'action' => 'display', 5);$/;"	v
CakeTestCaseTest	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^class CakeTestCaseTest extends CakeTestCase {$/;"	c
Mock	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^		$Mock = $this->getMockForModel('Model', array('save'), array('name' => 'Comment'));$/;"	v
Post	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^		$Post = $this->getMockForModel('Post');$/;"	v
Post	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^		$Post = $this->getMockForModel('Post', array('save'));$/;"	v
Reporter	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^		$this->Reporter = $this->getMock('CakeHtmlReporter');$/;"	v
TestPluginComment	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^		$TestPluginComment = $this->getMockForModel('TestPlugin.TestPluginComment');$/;"	v
TestPluginComment	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^		$TestPluginComment = $this->getMockForModel('TestPlugin.TestPluginComment', array('save'));$/;"	v
fixtures	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^	public $fixtures = array('core.post', 'core.author', 'core.test_plugin_comment');$/;"	v
input	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^		$input = "<a href='\/test.html' class='active'>My link<\/a>";$/;"	v
input	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^		$input = "<span class='active'><strong>Text<\/strong><\/span>";$/;"	v
input	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^		$input = "<span><strong>Text<\/strong><\/span>";$/;"	v
input	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^		$input = '<a href="\/test.html" class="active">My link<\/a>';$/;"	v
input	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^		$input = '<div attr8="val8" attr6="val6" attr4="val4" attr2="val2"' .$/;"	v
manager	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^		$manager = $this->getMock('CakeFixtureManager');$/;"	v
one	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^		$one = "\\r\\nOne\\rTwo";$/;"	v
one	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^		$one = "\\r\\nOne\\rTwooo";$/;"	v
pattern	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^		$pattern = array($/;"	v
result	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^		$result = $test->run();$/;"	v
result	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^		$result = ClassRegistry::init('Comment');$/;"	v
result	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^		$result = ClassRegistry::init('TestPlugin.TestPluginComment');$/;"	v
setUp	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^	public function setUp() {$/;"	f
setUpBeforeClass	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^	public static function setUpBeforeClass() {$/;"	f
stringClean	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^		$stringClean = "some\\nstring\\nwith\\ndifferent\\nline endings!";$/;"	v
stringDirty	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^		$stringDirty = "some\\nstring\\r\\nwith\\rdifferent\\nline endings!";$/;"	v
tearDown	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^	public function tearDown() {$/;"	f
test	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^		$test = new AssertTagsTestCase('testAssertTagsQuotes');$/;"	v
test	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^		$test = new AssertTagsTestCase('testBadAssertTags');$/;"	v
test	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^		$test = new AssertTagsTestCase('testBadAssertTags2');$/;"	v
test	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^		$test = new AssertTagsTestCase('testNumericValuesInExpectationForAssertTags');$/;"	v
test	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^		$test = new FixturizedTestCase('testFixtureLoadOnDemand');$/;"	v
test	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^		$test = new FixturizedTestCase('testFixturePresent');$/;"	v
test	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^		$test = new FixturizedTestCase('testSkipIfFalse');$/;"	v
test	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^		$test = new FixturizedTestCase('testSkipIfTrue');$/;"	v
test	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^		$test = new FixturizedTestCase('testThrowException');$/;"	v
testAssertTagsBasic	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^	public function testAssertTagsBasic() {$/;"	f
testAssertTagsQuoting	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^	public function testAssertTagsQuoting() {$/;"	f
testAssertTagsRuntimeComplexity	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^	public function testAssertTagsRuntimeComplexity() {$/;"	f
testAssertTextContains	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^	public function testAssertTextContains() {$/;"	f
testAssertTextEndsNotWith	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^	public function testAssertTextEndsNotWith() {$/;"	f
testAssertTextEndsWith	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^	public function testAssertTextEndsWith() {$/;"	f
testAssertTextEquals	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^	public function testAssertTextEquals() {$/;"	f
testAssertTextNotContains	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^	public function testAssertTextNotContains() {$/;"	f
testAssertTextNotEquals	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^	public function testAssertTextNotEquals() {$/;"	f
testAssertTextStartsNotWith	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^	public function testAssertTextStartsNotWith() {$/;"	f
testAssertTextStartsWith	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^	public function testAssertTextStartsWith() {$/;"	f
testBadAssertTags	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^	public function testBadAssertTags() {$/;"	f
testGetMockForModel	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^	public function testGetMockForModel() {$/;"	f
testGetMockForModelDoesNotExist	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^	public function testGetMockForModelDoesNotExist() {$/;"	f
testGetMockForModelModel	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^	public function testGetMockForModelModel() {$/;"	f
testGetMockForModelWithPlugin	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^	public function testGetMockForModelWithPlugin() {$/;"	f
testLoadFixtures	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^	public function testLoadFixtures() {$/;"	f
testLoadFixturesOnDemand	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^	public function testLoadFixturesOnDemand() {$/;"	f
testNumericValuesInExpectationForAssertTags	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^	public function testNumericValuesInExpectationForAssertTags() {$/;"	f
testSetupBackUpValues	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^	public function testSetupBackUpValues() {$/;"	f
testSkipIf	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^	public function testSkipIf() {$/;"	f
testThrowException	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^	public function testThrowException() {$/;"	f
testUnoadFixturesAfterFailure	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^	public function testUnoadFixturesAfterFailure() {$/;"	f
two	lib/Cake/Test/Case/TestSuite/CakeTestCaseTest.php	/^		$two = "\\nOne\\nTwo";$/;"	v
CakeTestFixtureDefaultImportFixture	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^class CakeTestFixtureDefaultImportFixture extends CakeTestFixture {$/;"	c
CakeTestFixtureImportFixture	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^class CakeTestFixtureImportFixture extends CakeTestFixture {$/;"	c
CakeTestFixtureTest	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^class CakeTestFixtureTest extends CakeTestCase {$/;"	c
CakeTestFixtureTestFixture	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^class CakeTestFixtureTestFixture extends CakeTestFixture {$/;"	c
Fixture	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^		$Fixture = new CakeTestFixtureDefaultImportFixture();$/;"	v
Fixture	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^		$Fixture = new CakeTestFixtureImportFixture();$/;"	v
Fixture	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^		$Fixture = new CakeTestFixtureTestFixture();$/;"	v
Fixture	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^		$Fixture = new InvalidTestFixture();$/;"	v
Fixture	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^		$Fixture = new StringsTestFixture();$/;"	v
FixtureImportTestModel	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^class FixtureImportTestModel extends Model {$/;"	c
FixturePrefixTest	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^class FixturePrefixTest extends Model {$/;"	c
InvalidTestFixture	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^class InvalidTestFixture extends CakeTestFixture {$/;"	c
Source	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^		$Source = new CakeTestFixtureTestFixture();$/;"	v
StringsTestFixture	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^class StringsTestFixture extends CakeTestFixture {$/;"	c
_backupConfig	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^		$this->_backupConfig = $this->db->config;$/;"	v
backPrefix	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^		$backPrefix = $db->config['prefix'];$/;"	v
config	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^		$config = $db->config;$/;"	v
criticDb	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^		$this->criticDb = $this->getMock('DboSource', $methods);$/;"	v
db	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^		$db = ConnectionManager::getDataSource('test');$/;"	v
db	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^		$this->db = ConnectionManager::getDataSource('test');$/;"	v
expected	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^		$expected = array('id', 'name', 'created');$/;"	v
fields	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^	public $fields = array($/;"	v
import	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^	public $import = array('table' => 'fixture_tests', 'connection' => 'fixture_test_suite');$/;"	v
insertCallback	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^	public function insertCallback($table, $fields, $values) {$/;"	f
keys	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^		$keys = array_flip(ClassRegistry::keys());$/;"	v
methods	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^		$methods = array_diff(get_class_methods('DboSource'), array('enabled'));$/;"	v
name	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^	public $name = 'FixtureImport';$/;"	v
name	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^	public $name = 'FixturePrefix';$/;"	v
name	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^	public $name = 'FixtureTest';$/;"	v
name	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^	public $name = 'ImportFixture';$/;"	v
name	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^	public $name = 'Invalid';$/;"	v
name	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^	public $name = 'Strings';$/;"	v
newDb	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^		$newDb = ConnectionManager::getDataSource('fixture_test_suite');$/;"	v
newTestSuiteDb	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^		$newTestSuiteDb = ConnectionManager::getDataSource('new_test_suite');$/;"	v
records	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^	public $records = array($/;"	v
return	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^		$return = $Fixture->create($this->criticDb);$/;"	v
return	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^		$return = $Fixture->drop($this->criticDb);$/;"	v
return	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^		$return = $Fixture->insert($this->criticDb);$/;"	v
setUp	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^	public function setUp() {$/;"	f
table	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^	public $table = 'fixture_tests';$/;"	v
table	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^	public $table = 'invalid';$/;"	v
table	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^	public $table = 'strings';$/;"	v
tablePrefix	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^	public $tablePrefix = 'fixture';$/;"	v
tearDown	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^	public function tearDown() {$/;"	f
testCreate	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^	public function testCreate() {$/;"	f
testDrop	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^	public function testDrop() {$/;"	f
testImport	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^	public function testImport() {$/;"	f
testImportWithRecords	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^	public function testImportWithRecords() {$/;"	f
testInit	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^	public function testInit() {$/;"	f
testInitDbPrefix	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^	public function testInitDbPrefix() {$/;"	f
testInitDbPrefixDuplication	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^	public function testInitDbPrefixDuplication() {$/;"	f
testInitModelTablePrefix	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^	public function testInitModelTablePrefix() {$/;"	f
testInsert	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^	public function testInsert() {$/;"	f
testInsertInvalid	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^	public function testInsertInvalid() {$/;"	f
testInsertStrings	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^	public function testInsertStrings() {$/;"	f
testSuiteConfig	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^		$testSuiteConfig = $testSuiteDb->config;$/;"	v
testSuiteDb	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^		$testSuiteDb = ConnectionManager::getDataSource('test');$/;"	v
testTruncate	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^	public function testTruncate() {$/;"	f
useDbConfig	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^	public $useDbConfig = 'test';$/;"	v
useTable	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^	public $useTable = '_tests';$/;"	v
useTable	lib/Cake/Test/Case/TestSuite/CakeTestFixtureTest.php	/^	public $useTable = 'fixture_tests';$/;"	v
CakeTestSuiteTest	lib/Cake/Test/Case/TestSuite/CakeTestSuiteTest.php	/^class CakeTestSuiteTest extends CakeTestCase {$/;"	c
Folder	lib/Cake/Test/Case/TestSuite/CakeTestSuiteTest.php	/^		$Folder = new Folder(TMP . 'MyTestFolder', true, 0777);$/;"	v
count	lib/Cake/Test/Case/TestSuite/CakeTestSuiteTest.php	/^		$count = count(glob($testFolder . DS . '*Test.php'));$/;"	v
suite	lib/Cake/Test/Case/TestSuite/CakeTestSuiteTest.php	/^		$suite = $this->getMock('CakeTestSuite', array('addTestFile'));$/;"	v
testAddTestDirectory	lib/Cake/Test/Case/TestSuite/CakeTestSuiteTest.php	/^	public function testAddTestDirectory() {$/;"	f
testAddTestDirectoryRecursive	lib/Cake/Test/Case/TestSuite/CakeTestSuiteTest.php	/^	public function testAddTestDirectoryRecursive() {$/;"	f
testAddTestDirectoryRecursiveWithHidden	lib/Cake/Test/Case/TestSuite/CakeTestSuiteTest.php	/^	public function testAddTestDirectoryRecursiveWithHidden() {$/;"	f
testAddTestDirectoryRecursiveWithNonPhp	lib/Cake/Test/Case/TestSuite/CakeTestSuiteTest.php	/^	public function testAddTestDirectoryRecursiveWithNonPhp() {$/;"	f
testFolder	lib/Cake/Test/Case/TestSuite/CakeTestSuiteTest.php	/^		$testFolder = CORE_TEST_CASES . DS . 'Cache';$/;"	v
testFolder	lib/Cake/Test/Case/TestSuite/CakeTestSuiteTest.php	/^		$testFolder = CORE_TEST_CASES . DS . 'TestSuite';$/;"	v
APP_CONTROLLER_EXISTS	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^	define('APP_CONTROLLER_EXISTS', true);$/;"	d
AppController	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^	class AppController extends Controller {$/;"	c
Case	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$this->Case = $this->getMockForAbstractClass('ControllerTestCase');$/;"	v
Controller	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$Controller = $this->Case->generate('TestsApps');$/;"	v
ControllerTestCaseTest	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^class ControllerTestCaseTest extends CakeTestCase {$/;"	c
ControllerTestCaseTestController	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^class ControllerTestCaseTestController extends AppController {$/;"	c
Posts	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$Posts = $this->Case->generate('Posts');$/;"	v
Posts	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$Posts = $this->Case->generate('Posts', array($/;"	v
PostsController	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^	class PostsController extends AppController {$/;"	c
Tests	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$Tests = $this->Case->generate('ControllerTestCaseTest', array($/;"	v
Tests	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$Tests = $this->Case->generate('TestConfigs', array($/;"	v
Tests	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$Tests = $this->Case->generate('TestPlugin.Tests', array($/;"	v
_GET	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$_GET = $restored;$/;"	v
_POST	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$_POST = $restored;$/;"	v
components	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		public $components = array($/;"	v
components	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		public $components = array('Cookie');$/;"	v
controller	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$controller = $this->Case->generate('TestsApps');$/;"	v
data	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$data = array($/;"	v
data	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$data = array('var' => 'set');$/;"	v
expected	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$expected = array('cakephp' => 'cool');$/;"	v
expected	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$expected = array('some' => 'config');$/;"	v
fixtures	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^	public $fixtures = array('core.post', 'core.author', 'core.test_plugin_comment');$/;"	v
helpers	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		public $helpers = array('Html');$/;"	v
options	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$options = array('method' => 'get');$/;"	v
query	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$query = $this->Case->controller->request->query;$/;"	v
restored	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$restored = array('new' => 'value');$/;"	v
result	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$result = $this->Case->controller->response->body();$/;"	v
result	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$result = $this->Case->testAction('\/some_alias');$/;"	v
result	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$result = $this->Case->testAction('\/tests_apps\/index', array($/;"	v
result	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$result = $this->Case->testAction('\/tests_apps\/index.json', array('return' => 'contents'));$/;"	v
result	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$result = $this->Case->testAction('\/tests_apps\/set_action', array($/;"	v
result	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$result = $this->Case->testAction('\/tests_apps\/some_method');$/;"	v
result	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$result = $this->Case->testAction('\/tests_apps_posts\/add', array('return' => 'vars'));$/;"	v
result	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$result = $this->Case->testAction('\/tests_apps_posts\/input_data', array($/;"	v
result	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$result = $this->Case->testAction('\/tests_apps_posts\/post_var', array($/;"	v
result	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$result = $this->Case->testAction('\/tests_apps_posts\/url_var', array($/;"	v
result	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$result = $this->Case->testAction('\/tests_apps_posts\/url_var\/gogo\/val2', array($/;"	v
result	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$result = $this->Case->testAction('\/tests_apps_posts\/url_var\/var1:value1\/var2:val2', array($/;"	v
result	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$result = ClassRegistry::init('TestPlugin.TestPluginComment');$/;"	v
result	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$result = json_decode($result, true);$/;"	v
results	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$results = $this->Case->controller->viewVars;$/;"	v
results	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$results = $this->Case->headers;$/;"	v
setUp	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^	public function setUp() {$/;"	f
settings	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		$settings = array_intersect_key($Tests->RequestHandler->settings, array('some' => 'foo'));$/;"	v
tearDown	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^	public function tearDown() {$/;"	f
testAutoMock	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^	public function testAutoMock() {$/;"	f
testBCSetReturn	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^	public function testBCSetReturn() {$/;"	f
testComponentsSameRequestAndResponse	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^	public function testComponentsSameRequestAndResponse() {$/;"	f
testGenerate	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^	public function testGenerate() {$/;"	f
testGenerateWithComponentConfig	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^	public function testGenerateWithComponentConfig() {$/;"	f
testGenerateWithPlugin	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^	public function testGenerateWithPlugin() {$/;"	f
testNoControllerReuse	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^	public function testNoControllerReuse() {$/;"	f
testNoMocking	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^	public function testNoMocking() {$/;"	f
testRestoreGetPost	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^	public function testRestoreGetPost() {$/;"	f
testSkipRoutes	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^	public function testSkipRoutes() {$/;"	f
testTestAction	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^	public function testTestAction() {$/;"	f
testTestActionGetData	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^	public function testTestActionGetData() {$/;"	f
testTestActionJsonData	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^	public function testTestActionJsonData() {$/;"	f
testTestActionPostData	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^	public function testTestActionPostData() {$/;"	f
testTestActionWithMultipleRedirect	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^	public function testTestActionWithMultipleRedirect() {$/;"	f
testTestActionWithPlugin	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^	public function testTestActionWithPlugin() {$/;"	f
testUseRoutes	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^	public function testUseRoutes() {$/;"	f
uses	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^		public $uses = array('ControllerPost');$/;"	v
uses	lib/Cake/Test/Case/TestSuite/ControllerTestCaseTest.php	/^	public $uses = array('TestPlugin.TestPluginComment');$/;"	v
CakeFixtureManagerTest	lib/Cake/Test/Case/TestSuite/Fixture/CakeFixtureManagerTest.php	/^class CakeFixtureManagerTest extends CakeTestCase {$/;"	c
MockFixture	lib/Cake/Test/Case/TestSuite/Fixture/CakeFixtureManagerTest.php	/^		$MockFixture = $this->getMock('UuidFixture', array('truncate'));$/;"	v
TestCase	lib/Cake/Test/Case/TestSuite/Fixture/CakeFixtureManagerTest.php	/^		$TestCase = $this->getMock('CakeTestCase');$/;"	v
db	lib/Cake/Test/Case/TestSuite/Fixture/CakeFixtureManagerTest.php	/^		$db = $this->getMock('DboSource', $dboMethods);$/;"	v
dboMethods	lib/Cake/Test/Case/TestSuite/Fixture/CakeFixtureManagerTest.php	/^		$dboMethods = array_diff(get_class_methods('DboSource'), array('enabled'));$/;"	v
fixtureManager	lib/Cake/Test/Case/TestSuite/Fixture/CakeFixtureManagerTest.php	/^		$fixtureManager = $this->fixtureManager;$/;"	v
fixtureManager	lib/Cake/Test/Case/TestSuite/Fixture/CakeFixtureManagerTest.php	/^		$this->fixtureManager = new CakeFixtureManager();$/;"	v
fixtureManagerReflection	lib/Cake/Test/Case/TestSuite/Fixture/CakeFixtureManagerTest.php	/^		$fixtureManagerReflection = new ReflectionClass($fixtureManager);$/;"	v
fixtureMapProperty	lib/Cake/Test/Case/TestSuite/Fixture/CakeFixtureManagerTest.php	/^		$fixtureMapProperty = $fixtureManagerReflection->getProperty('_fixtureMap');$/;"	v
loadedProperty	lib/Cake/Test/Case/TestSuite/Fixture/CakeFixtureManagerTest.php	/^		$loadedProperty = $fixtureManagerReflection->getProperty('_loaded');$/;"	v
setUp	lib/Cake/Test/Case/TestSuite/Fixture/CakeFixtureManagerTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/TestSuite/Fixture/CakeFixtureManagerTest.php	/^	public function tearDown() {$/;"	f
testLoadSingleTruncatesTable	lib/Cake/Test/Case/TestSuite/Fixture/CakeFixtureManagerTest.php	/^	public function testLoadSingleTruncatesTable() {$/;"	f
testLoadTruncatesTable	lib/Cake/Test/Case/TestSuite/Fixture/CakeFixtureManagerTest.php	/^	public function testLoadTruncatesTable() {$/;"	f
Coverage	lib/Cake/Test/Case/TestSuite/HtmlCoverageReportTest.php	/^		$this->Coverage = new HtmlCoverageReport($coverage, $reporter);$/;"	v
HtmlCoverageReportTest	lib/Cake/Test/Case/TestSuite/HtmlCoverageReportTest.php	/^class HtmlCoverageReportTest extends CakeTestCase {$/;"	c
class	lib/Cake/Test/Case/TestSuite/HtmlCoverageReportTest.php	/^				$class = 'uncovered';$/;"	v
class	lib/Cake/Test/Case/TestSuite/HtmlCoverageReportTest.php	/^			$class = 'covered';$/;"	v
coverage	lib/Cake/Test/Case/TestSuite/HtmlCoverageReportTest.php	/^		$coverage = array($/;"	v
coverage	lib/Cake/Test/Case/TestSuite/HtmlCoverageReportTest.php	/^		$coverage = array();$/;"	v
data	lib/Cake/Test/Case/TestSuite/HtmlCoverageReportTest.php	/^		$data = array($/;"	v
file	lib/Cake/Test/Case/TestSuite/HtmlCoverageReportTest.php	/^		$file = array($/;"	v
reporter	lib/Cake/Test/Case/TestSuite/HtmlCoverageReportTest.php	/^		$reporter = new CakeBaseReporter();$/;"	v
result	lib/Cake/Test/Case/TestSuite/HtmlCoverageReportTest.php	/^		$result = $this->Coverage->filterCoverageDataByPath(CAKE);$/;"	v
result	lib/Cake/Test/Case/TestSuite/HtmlCoverageReportTest.php	/^		$result = $this->Coverage->generateDiff('myfile.php', $file, $coverage);$/;"	v
result	lib/Cake/Test/Case/TestSuite/HtmlCoverageReportTest.php	/^		$result = $this->Coverage->getPathFilter();$/;"	v
setUp	lib/Cake/Test/Case/TestSuite/HtmlCoverageReportTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/TestSuite/HtmlCoverageReportTest.php	/^	public function tearDown() {$/;"	f
testCoveredLinesTitleAttributes	lib/Cake/Test/Case/TestSuite/HtmlCoverageReportTest.php	/^	public function testCoveredLinesTitleAttributes() {$/;"	f
testFilterCoverageDataByPathRemovingElements	lib/Cake/Test/Case/TestSuite/HtmlCoverageReportTest.php	/^	public function testFilterCoverageDataByPathRemovingElements() {$/;"	f
testGenerateDiff	lib/Cake/Test/Case/TestSuite/HtmlCoverageReportTest.php	/^	public function testGenerateDiff() {$/;"	f
testGetPathFilter	lib/Cake/Test/Case/TestSuite/HtmlCoverageReportTest.php	/^	public function testGetPathFilter() {$/;"	f
testPhpunit36Compatibility	lib/Cake/Test/Case/TestSuite/HtmlCoverageReportTest.php	/^	public function testPhpunit36Compatibility() {$/;"	f
CakeNumberTest	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^class CakeNumberTest extends CakeTestCase {$/;"	c
Number	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$this->Number = new CakeNumber();$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '#100,100,100';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '#100,100,100.00';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '$ 0.22';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '$ 1.00';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '$0.0';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '$0.00';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '$0.35';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '$0.50';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '$1,,000.a45';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '$100,100,100.00';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '$22.39';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '$4.11';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '&#163;0.35';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '&amp;#163; 1,234,567.89';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '($$ 10.00)';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '($100,100,100.00)';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '(99c)';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '(99p)';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '(£100,100,100.00)';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '(¥2.23)';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '(€0,99)';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '(€100.100.100,00)';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '+100,100,100.00';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '+9.876,1';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '-$100,100,100.00';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '-99c';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '-99p';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '-£100,100,100.00';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '-€0,99';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '-€100.100.100,00';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '0 Bytes';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '0%';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '0.0000%';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '0p';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '1 Byte';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '1 KB';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '1 fils';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '1,23 €';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '1.00 $';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '1.00 GB';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '1.00 MB';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '1.00 TB';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '100,100,100';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '100,100,100.00';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '100,100,100.000';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '100-100-100';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '1023 Bytes';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '1024.00 TB';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '12 cents';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '12.00 dollars';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '13- |-| \/-\\ &gt;&lt; () |2 -371- |-| \/-\\ &gt;&lt; () |2 -337- £€€† -13';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '20 cents';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '22c!';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '234 fils';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '23p';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '311.00$';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '35p';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '45 Bytes';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '45%';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '45.00%';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '45.60%';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '46%';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '5&nbsp;199&nbsp;100&amp;001';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '50c';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '50øre';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '512 KB';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '512.00 GB';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '512.00 MB';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '512.00 TB';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '519ø€ƒ‡™919ø€ƒ‡™827ø€ƒ‡™593ø€ƒ‡™784(§.§)00€';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '99c';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '99p';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = 'BD 1.23';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = 'EUR 100 100 100,00';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = 'FREE!';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = 'GBP1,234,567.89';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = 'GBP1,234,567.891';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = 'GBP650.1200';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = 'Kr. 1,000.00';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = 'Kr. 2,000.00';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = 'Kr.1.000,45';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '[ -100,100,100.00 ]';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '[+100,100,100.00]';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '[-100,100,100.00]';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '[0.0]';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = 'cents 20';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '£0.00';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '£1,234,568';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '£1.230';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '£100,100,100.00';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '€0,00';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '€0,20';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '€0,35';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '€0,99';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '€1.000,00';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '€100.100.100,00';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = '€2.000,00';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$expected = (1024 * 1024) . '.00 TB';$/;"	v
filesizes	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^	public function filesizes() {$/;"	f
options	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$options = array('after' => 'øre', 'before' => 'Kr.', 'decimals' => ',', 'thousands' => '.');$/;"	v
options	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$options = array('decimals' => ',', 'thousands' => '.', 'before' => '', 'after' => ' €');$/;"	v
options	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$options = array('fractionSymbol' => false, 'fractionPosition' => 'before', 'wholeSymbol' => '$');$/;"	v
options	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$options = array('thousands' => ' ', 'wholeSymbol' => 'EUR ', 'wholePosition' => 'before',$/;"	v
options	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$options = array('wholeSymbol' => ' dollars', 'wholePosition' => 'after', 'fractionSymbol' => ' cents',$/;"	v
options	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$options = array('wholeSymbol' => '$', 'wholePosition' => 'after', 'fractionSymbol' => ' cents');$/;"	v
options	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$options = array('wholeSymbol' => '$', 'wholePosition' => 'after', 'fractionSymbol' => 'cents ',$/;"	v
restore	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$restore = setlocale(LC_NUMERIC, 0);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency($value);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency($value, '#');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency($value, '', $options);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency($value, 'EUR');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency($value, 'EUR', array('negative' => '-'));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency($value, 'GBP');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency($value, 'GBP', array('before' => '&#163; ', 'escape' => true));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency($value, 'GBP', array('negative' => '-'));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency($value, 'GBP', array('places' => 0));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency($value, 'GBP', array('zero' => 'FREE!'));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency($value, 'RUR');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency($value, 'USD');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency($value, 'USD', array('before' => '#'));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency($value, 'USD', array('negative' => '-'));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency($value, false);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency($value, null, array('before' => 'GBP'));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency('-2.23300', 'JPY');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency('0.00000', 'GBP');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency('0.001', 'BHD', array('places' => 2));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency('0.001', 'GBP', array('places' => 3));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency('0.23', 'GBP', array('places' => 3));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency('0.234', 'BHD', array('places' => 2));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency('0.35', 'EUR');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency('0.35', 'GBP');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency('0.35', 'GBP', array('before' => '&#163;', 'after' => false, 'escape' => false));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency('0.35', 'USD', array('after' => false));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency('1.23', 'GBP', array('places' => 3));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency('1.234', 'BHD', array('places' => 2));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency('1234567.8912345', null, array('before' => 'GBP', 'places' => 3));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency('22.389', 'CAD');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency('4.111', 'AUD');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency('650.120001', null, array('before' => 'GBP', 'places' => 4));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency(-10, 'Other');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency(0, 'GBP');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency(0.00000, 'GBP');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency(0.12, null, $options);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency(0.2, '', array($/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency(0.2, 'EUR');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency(0.2, null, $options);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency(0.22, 'Other');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency(0.22, 'Other2');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency(0.5, 'USD');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency(0.5, null, $options);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency(0.5, null, array('after' => 'øre'));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency(1, null, array('wholeSymbol' => ' $', 'wholePosition' => 'after'));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency(1, null, array('wholeSymbol' => '$ '));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency(1000);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency(1000, 'NOK');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency(1000.45, null, $options);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency(12, null, $options);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency(2000);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->currency(311, 'USD', array('wholePosition' => 'after'));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->defaultCurrency();$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->format($value);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->format($value, $options);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->format($value, '#');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->format($value, '-');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->format($value, 3);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->format($value, array($/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->format($value, array('places' => 1));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->formatDelta($value);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->formatDelta($value, array('before' => '', 'after' => ''));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->formatDelta($value, array('before' => '[', 'after' => ']'));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->formatDelta($value, array('places' => 1, 'before' => '[', 'after' => ']'));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->formatDelta($value, array('places' => 1, 'decimals' => ',', 'thousands' => '.'));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->formatDelta(-$value, array('before' => '[ ', 'after' => ' ]'));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->formatDelta(-$value, array('before' => '[', 'after' => ']'));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->fromReadableSize($params['size'], $params['default']);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->precision(1.234);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->toPercentage(0, 0);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->toPercentage(0, 0, array('multiply' => false));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->toPercentage(0, 4);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->toPercentage(0, 4, array('multiply' => false));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->toPercentage(0.456, 0, array('multiply' => true));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->toPercentage(0.456, 2, array('multiply' => true));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->toPercentage(45, 0);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->toPercentage(45, 0, array('multiply' => false));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->toPercentage(45, 2);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->toPercentage(45, 2, array('multiply' => false));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->toReadableSize(0);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->toReadableSize(1);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->toReadableSize(1023);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->toReadableSize(1024 * 1024 * 1024 * 1024 * 1024 * 1024);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->toReadableSize(1024 * 1024 * 1024 * 1024 * 1024 - 1);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->toReadableSize(1024 * 1024 * 1024 * 1024 * 512);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->toReadableSize(1024 * 1024 * 1024 * 1024 - 1);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->toReadableSize(1024 * 1024 * 1024 * 512);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->toReadableSize(1024 * 1024 * 1024 - 1);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->toReadableSize(1024 * 1024 * 512);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->toReadableSize(1024 * 1024 - 1);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->toReadableSize(1024 * 512);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->toReadableSize(1024);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->toReadableSize(1321205);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = $this->Number->toReadableSize(45);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$result = CakeNumber::format($value, array($/;"	v
setUp	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^	public function tearDown() {$/;"	f
testCurrency	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^	public function testCurrency() {$/;"	f
testCurrencyAddFormat	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^	public function testCurrencyAddFormat() {$/;"	f
testCurrencyCentsNegative	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^	public function testCurrencyCentsNegative() {$/;"	f
testCurrencyCentsPositive	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^	public function testCurrencyCentsPositive() {$/;"	f
testCurrencyFractionSymbol	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^	public function testCurrencyFractionSymbol() {$/;"	f
testCurrencyNegative	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^	public function testCurrencyNegative() {$/;"	f
testCurrencyOptions	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^	public function testCurrencyOptions() {$/;"	f
testCurrencyPositive	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^	public function testCurrencyPositive() {$/;"	f
testCurrencyWithFractionAndPlaces	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^	public function testCurrencyWithFractionAndPlaces() {$/;"	f
testCurrencyZero	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^	public function testCurrencyZero() {$/;"	f
testDefaultCurrency	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^	public function testDefaultCurrency() {$/;"	f
testFormat	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^	public function testFormat() {$/;"	f
testFormatDelta	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^	public function testFormatDelta() {$/;"	f
testFromReadableSize	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^	public function testFromReadableSize($params, $expected) {$/;"	f
testFromReadableSizeException	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^	public function testFromReadableSizeException() {$/;"	f
testMultibyteFormat	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^	public function testMultibyteFormat() {$/;"	f
testPrecisionLocalized	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^	public function testPrecisionLocalized() {$/;"	f
testReadableSizeLocalized	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^	public function testReadableSizeLocalized() {$/;"	f
testToPercentage	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^	public function testToPercentage() {$/;"	f
testToReadableSize	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^	public function testToReadableSize() {$/;"	f
value	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$value = '-0.99';$/;"	v
value	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$value = '-100100100';$/;"	v
value	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$value = '0';$/;"	v
value	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$value = '0.99';$/;"	v
value	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$value = '100100100';$/;"	v
value	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$value = '1234567.89';$/;"	v
value	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$value = '13371337.1337';$/;"	v
value	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$value = '5199100.0006';$/;"	v
value	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$value = -0.00001;$/;"	v
value	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$value = 0.00001;$/;"	v
value	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$value = 0.0001;$/;"	v
value	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$value = 0;$/;"	v
value	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$value = 1.23;$/;"	v
value	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$value = 1000.45;$/;"	v
value	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$value = 519919827593784.00;$/;"	v
value	lib/Cake/Test/Case/Utility/CakeNumberTest.php	/^		$value = 9876.1234;$/;"	v
CakeTimeTest	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^class CakeTimeTest extends CakeTestCase {$/;"	c
Time	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$this->Time = new CakeTime();$/;"	v
_restoreSystemTimezone	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	protected function _restoreSystemTimezone() {$/;"	f
_systemTimezoneIdentifier	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$this->_systemTimezoneIdentifier = date_default_timezone_get();$/;"	v
_systemTimezoneIdentifier	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	protected $_systemTimezoneIdentifier = null;$/;"	v
arr	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$arr = array(time(), strtotime('+1 days'), strtotime('+1 days'), strtotime('+0 days'));$/;"	v
begin	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$begin = time();$/;"	v
converted	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$converted = CakeTime::format($date, '%Y-%m-%d %H:%M', '', 'Europe\/Copenhagen');$/;"	v
date	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$date = '2012-01-01 10:00:00';$/;"	v
date	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$date = '2012-08-12 12:12:45';$/;"	v
date	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$date = new DateTime($time);$/;"	v
date	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$date = new DateTime($time, new DateTimeZone('America\/New_York'));$/;"	v
date	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$date = new DateTime($time, new DateTimeZone('UTC'));$/;"	v
date	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$date = new DateTime('+1 hour', new DateTimeZone('America\/New_York'));$/;"	v
date	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$date = new DateTime('2013-04-09');$/;"	v
date	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$date = new DateTime('now', new DateTimeZone('America\/New_York'));$/;"	v
date	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$date = new DateTime('now', new DateTimeZone('Europe\/London'));$/;"	v
date	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$date = new DateTime(null, new DateTimeZone('America\/New_York'));$/;"	v
day	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$day = 14;$/;"	v
day	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$day = date('d');$/;"	v
days	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$days = $map[date('D')];$/;"	v
end	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$end = time() + DAY;$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = "\\n";$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = "\\t";$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = $date->format('U') + $date->getOffset();$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = $date->format('Y-m-d H:i:s');$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = $this->Time->convert(strtotime('+1 hour'), $timezone);$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = $this->Time->nice(time(), 'America\/New_York');$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = $this->Time->niceShort(time(), 'America\/New_York');$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = ' 1';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = '%H:%M:%S';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = '%I:%M:%S AM';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = '%d\/%m\/%y';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = '%m\/%d\/%y';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = '(my_field >= \\'' . date('Y-m-d', $begin) . ' 00:00:00\\') AND (my_field <= \\'' . date('Y-m-d', $end) . ' 23:59:59\\')';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = '(my_field >= \\'' . date('Y-m-d', $time) . ' 00:00:00\\') AND (my_field <= \\'' . date('Y-m-d', $time) . ' 23:59:59\\')';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = '1 year';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = '11:43';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = '13\/01\/10';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = '14';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = '14\/01\/10';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = '20';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = '8 years';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = '8 years, 4 months';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = '8 years, 4 months, 2 weeks';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = '8 years, 4 months, 2 weeks, 3 days';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = 'AM';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = 'Date invalid';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = 'Time is 01:59:28 PM, and date is 13\/01\/10';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = 'Time is 01:59:28 PM, and date is 14\/01\/10';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = 'am';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = 'at least 8 years ago';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = 'ene';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = 'enero';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = 'exactly on ' . date('j\/n\/y', strtotime('+4 months +2 weeks +3 days'));$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = 'in about a day';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = 'in about an hour';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = 'jue %d ene %Y %H:%M:%S %Z';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = 'jue 14 ene 2010 13:59:28 ' . utf8_encode(strftime('%Z', $time));$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = 'jue';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = 'jueves';$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = 'mié 13 ene 2010 13:59:28 ' . utf8_encode(strftime('%Z', $time));$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = 'on ' . date('j\/n\/y', $time);$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = 'on ' . date('j\/n\/y', $timestamp);$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = 4;$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = date('l jS \\of F Y h:i:s A', $time);$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = gmmktime($hour, $min, $sec, $month, $day, $year);$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = new DateTime($date);$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = strtotime('+1 hour');$/;"	v
expected	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$expected = time();$/;"	v
field	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$field = 'my_field';$/;"	v
format	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$format = 'D-M-Y';$/;"	v
hour	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$hour = 3;$/;"	v
hour	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$hour = date('H');$/;"	v
map	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$map = array($/;"	v
min	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$min = 4;$/;"	v
min	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$min = date('i');$/;"	v
month	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$month = 5;$/;"	v
month	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$month = date('m');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^			$result = $this->Time->toServer($serverTime->format('Y-m-d H:i:s'), $timezone, 'U');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->convertSpecifiers('%A', $time);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->convertSpecifiers('%B', $time);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->convertSpecifiers('%C', $time);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->convertSpecifiers('%D', $time);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->convertSpecifiers('%P', $time);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->convertSpecifiers('%R', $time);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->convertSpecifiers('%T', $time);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->convertSpecifiers('%X', $time);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->convertSpecifiers('%a', $time);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->convertSpecifiers('%b', $time);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->convertSpecifiers('%c', $time);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->convertSpecifiers('%e', $time);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->convertSpecifiers('%e', strtotime('2011-01-01'));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->convertSpecifiers('%h', $time);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->convertSpecifiers('%n', $time);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->convertSpecifiers('%p', $time);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->convertSpecifiers('%r', $time);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->convertSpecifiers('%t', $time);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->convertSpecifiers('%u', $time);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->convertSpecifiers('%x', $time);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->format('0000-00-00', '%d-%m-%Y', 'invalid');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->format('2012-01-13', '%d-%m-%Y', 'invalid');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->format('Y-m-d', null, 'never');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->format('nonsense', '%d-%m-%Y', 'invalid', 'UTC');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->fromString($date);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->fromString($date, 'Asia\/Kuwait');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->fromString($date, 'UTC');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->fromString('');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->fromString('+1 hour');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->fromString('+1 hour', $timezone);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->fromString(0, 0);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->fromString(time());$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->fromString(time(), $timezoneServer);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->fromString(time(), $timezoneServer->getName());$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->fromString(time(), $yourTimezone);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->i18nFormat($time);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->i18nFormat($time, '%c');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->i18nFormat($time, 'Time is %r, and date is %x');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->i18nFormat('invalid date', '%x', 'Date invalid');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->isThisMonth($time = mktime(0, 0, 0, date('m'), mt_rand(1, 28), date('Y')));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->isThisMonth('+0 day');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->isThisMonth(mktime(0, 0, 0, date('m'), mt_rand(1, 28), date('Y') + mt_rand(1, 12)));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->isThisMonth(mktime(0, 0, 0, date('m'), mt_rand(1, 28), date('Y') - mt_rand(1, 12)));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->isThisYear('+0 day');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->isThisYear(mktime(0, 0, 0, mt_rand(1, 12), mt_rand(1, 28), date('Y')));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->isToday('+0 day');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->isToday('+1 day');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->isToday('+1 days');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->isToday('-1 day');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->isTomorrow('+0 day');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->isTomorrow('+1 day');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->isTomorrow('+1 days');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->isTomorrow('-1 day');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->nice(null, 'America\/New_York');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->niceShort('2005-01-15 10:00:00', new DateTimeZone('Europe\/Brussels'));$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->niceShort(null, 'America\/New_York');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->timeAgoInWords($/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->timeAgoInWords($input);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->timeAgoInWords($time);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->timeAgoInWords('2007-9-25', 'Y-m-d');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->toQuarter('2007-12-25');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->toQuarter('2007-12-25', true);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->toQuarter('2007-3-25');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->toQuarter('2007-3-25', true);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->toQuarter('2007-5-25', true);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->toQuarter('2007-8-25', true);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->toQuarter('2007-9-25');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->toServer($date, 'Pacific\/Tahiti');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->toServer($date, null, 'Y-m-d H:i:s');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->toServer($time);$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->toServer($time, 'America\/New_York');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->toServer($time, null, 'l jS \\of F Y h:i:s A');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->wasYesterday('+0 day');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->wasYesterday('+1 day');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->wasYesterday('+1 days');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->wasYesterday('-1 day');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->wasYesterday('-1 days');$/;"	v
result	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$result = $this->Time->wasYesterday('-2 days');$/;"	v
return	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^			$return = CakeTime::listTimezones(DateTimeZone::ASIA);$/;"	v
return	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^			$return = CakeTime::listTimezones(DateTimeZone::PER_COUNTRY, 'US', false);$/;"	v
return	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$return = CakeTime::listTimezones('#^(America|Pacific)\/#', null, false);$/;"	v
return	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$return = CakeTime::listTimezones('#^Asia\/#');$/;"	v
return	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$return = CakeTime::listTimezones();$/;"	v
sec	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$sec = 2;$/;"	v
sec	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$sec = date('s');$/;"	v
serverTime	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$serverTime = new DateTime('2012-12-11 14:15:20');$/;"	v
setUp	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function tearDown() {$/;"	f
testConvertPercentE	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testConvertPercentE() {$/;"	f
testConvertSpecifiers	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testConvertSpecifiers() {$/;"	f
testCorrectTimezoneConversion	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testCorrectTimezoneConversion() {$/;"	f
testDayAsSql	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testDayAsSql() {$/;"	f
testDaysAsSql	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testDaysAsSql() {$/;"	f
testFormat	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testFormat() {$/;"	f
testFormatNewSyntax	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testFormatNewSyntax() {$/;"	f
testFromString	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testFromString() {$/;"	f
testFromStringWithDateTime	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testFromStringWithDateTime() {$/;"	f
testFromStringWithDateTimeNoConversion	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testFromStringWithDateTimeNoConversion() {$/;"	f
testGmt	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testGmt() {$/;"	f
testI18nFormat	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testI18nFormat() {$/;"	f
testIsFuture	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testIsFuture() {$/;"	f
testIsPast	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testIsPast() {$/;"	f
testIsThisMonth	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testIsThisMonth() {$/;"	f
testIsThisWeek	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testIsThisWeek() {$/;"	f
testIsThisYear	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testIsThisYear() {$/;"	f
testIsToday	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testIsToday() {$/;"	f
testIsTomorrow	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testIsTomorrow() {$/;"	f
testIsWithinNext	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testIsWithinNext() {$/;"	f
testListTimezones	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testListTimezones() {$/;"	f
testNice	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testNice() {$/;"	f
testNiceShort	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testNiceShort() {$/;"	f
testTimeAgoInWords	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testTimeAgoInWords($input, $expected) {$/;"	f
testTimeAgoInWordsAccuracy	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testTimeAgoInWordsAccuracy() {$/;"	f
testTimeAgoInWordsCustomStrings	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testTimeAgoInWordsCustomStrings() {$/;"	f
testTimeAgoInWordsEnd	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testTimeAgoInWordsEnd($input, $expected, $end) {$/;"	f
testTimeAgoInWordsNegativeValues	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testTimeAgoInWordsNegativeValues() {$/;"	f
testTimeAgoInWordsWithFormat	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testTimeAgoInWordsWithFormat() {$/;"	f
testToAtom	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testToAtom() {$/;"	f
testToQuarter	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testToQuarter() {$/;"	f
testToRss	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testToRss() {$/;"	f
testToServer	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testToServer() {$/;"	f
testToUnix	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testToUnix() {$/;"	f
testUserOffset	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testUserOffset() {$/;"	f
testWasWithinLast	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testWasWithinLast() {$/;"	f
testWasYesterday	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function testWasYesterday() {$/;"	f
time	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^			$time = $yourTime->format('U');$/;"	v
time	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$time = '2002-01-01 05:15:30';$/;"	v
time	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$time = '2005-10-25 10:00:00';$/;"	v
time	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$time = '2010-01-28T15:00:00+10:00';$/;"	v
time	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$time = 0;$/;"	v
time	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$time = mktime($hour, $min, $sec, $month, $day, $year);$/;"	v
time	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$time = null;$/;"	v
time	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$time = strtotime($date);$/;"	v
time	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$time = strtotime('+6 days');$/;"	v
time	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$time = strtotime('-3 years -12 months');$/;"	v
time	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$time = strtotime('-6 days');$/;"	v
time	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$time = strtotime('Thu Jan 14 11:43:39 2010');$/;"	v
time	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$time = strtotime('Thu Jan 14 13:59:28 2010');$/;"	v
time	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$time = strtotime('Wed Jan 13 13:59:28 2010');$/;"	v
time	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$time = time() + 2 * DAY;$/;"	v
time	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$time = time() + DAY;$/;"	v
time	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$time = time() - 2 * DAY;$/;"	v
time	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$time = time() - DAY;$/;"	v
time	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$time = time();$/;"	v
timeAgoEndProvider	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public function timeAgoEndProvider() {$/;"	f
timeAgoProvider	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^	public static function timeAgoProvider() {$/;"	f
timeServer	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$timeServer = new DateTime('now', $timezoneServer);$/;"	v
timestamp	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$timestamp = strtotime('-1 years -2 weeks -3 days');$/;"	v
timezone	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$timezone = date('Z', time());$/;"	v
timezone	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$timezone = date_default_timezone_get();$/;"	v
timezoneServer	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$timezoneServer = new DateTimeZone(date_default_timezone_get());$/;"	v
timezones	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$timezones = array('Europe\/London', 'Europe\/Brussels', 'UTC', 'America\/Denver', 'America\/Caracas', 'Asia\/Kathmandu');$/;"	v
tz	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^			$tz = new DateTimeZone($timezone);$/;"	v
tz	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$tz = date_default_timezone_get();$/;"	v
userOffset	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^			$userOffset = $yourTimezone->getOffset($yourTime) \/ HOUR;$/;"	v
year	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$year = 2007;$/;"	v
year	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$year = date('Y');$/;"	v
yourTime	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^			$yourTime = new DateTime($date, $yourTimezone);$/;"	v
yourTimezone	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^			$yourTimezone = new DateTimeZone($timezone);$/;"	v
yourTimezone	lib/Cake/Test/Case/Utility/CakeTimeTest.php	/^		$yourTimezone = $timezoneServer->getOffset($timeServer) \/ HOUR;$/;"	v
Article	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^		$Article = ClassRegistry::getObject('Article');$/;"	v
Article	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^		$Article = ClassRegistry::isKeySet('Article');$/;"	v
ArticleTag	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^		$ArticleTag = ClassRegistry::getObject('RegisterArticleTag');$/;"	v
Category	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^		$Category = ClassRegistry::init(array('class' => 'RegisterCategory'));$/;"	v
ClassRegisterModel	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^class ClassRegisterModel extends CakeTestModel {$/;"	c
ClassRegistryAbstractModel	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^abstract class ClassRegistryAbstractModel extends ClassRegisterModel {$/;"	c
ClassRegistryInterfaceTest	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^interface ClassRegistryInterfaceTest {$/;"	i
ClassRegistryTest	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^class ClassRegistryTest extends CakeTestCase {$/;"	c
Featured	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^		$Featured = ClassRegistry::getObject('Featured');$/;"	v
Featured	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^		$Featured = ClassRegistry::isKeySet('Featured');$/;"	v
Model	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^		$Model = ClassRegistry::init('RegisterArticle');$/;"	v
Model	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^		$Model = ClassRegistry::init('RegisterPrefixedDs');$/;"	v
NewTag	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^		$NewTag = ClassRegistry::init(array('class' => 'RegisterArticleTag', 'alias' => 'NewTag'));$/;"	v
NewTagCopy	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^		$NewTagCopy = ClassRegistry::init(array('class' => 'RegisterArticleTag', 'alias' => 'NewTag'));$/;"	v
NoArticleTag	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^		$NoArticleTag = ClassRegistry::isKeySet('RegisterArticleTag');$/;"	v
ParentCategory	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^		$ParentCategory = ClassRegistry::init(array('class' => 'RegisterCategory', 'alias' => 'ParentCategory'));$/;"	v
PluginUser	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^		$PluginUser = ClassRegistry::init(array('class' => 'RegistryPlugin.RegisterUser', 'alias' => 'RegistryPluginUser', 'table' => false));$/;"	v
PluginUserCopy	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^		$PluginUserCopy = ClassRegistry::getObject('RegistryPluginUser');$/;"	v
RegisterArticle	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^class RegisterArticle extends ClassRegisterModel {$/;"	c
RegisterArticleFeatured	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^class RegisterArticleFeatured extends ClassRegisterModel {$/;"	c
RegisterArticleTag	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^class RegisterArticleTag extends ClassRegisterModel {$/;"	c
RegisterCategory	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^class RegisterCategory extends ClassRegisterModel {$/;"	c
RegisterPrefixedDs	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^class RegisterPrefixedDs extends ClassRegisterModel {$/;"	c
RegistryPluginAppModel	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^class RegistryPluginAppModel extends ClassRegisterModel {$/;"	c
Tag	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^		$Tag = ClassRegistry::getObject('Tag');$/;"	v
Tag	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^		$Tag = ClassRegistry::init('RegisterArticleTag');$/;"	v
Tag	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^		$Tag = ClassRegistry::isKeySet('Tag');$/;"	v
TagCopy	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^		$TagCopy = ClassRegistry::getObject('RegisterArticleTag');$/;"	v
TagCopy	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^		$TagCopy = ClassRegistry::isKeySet('RegisterArticleTag');$/;"	v
TestRegistryPluginModel	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^		$TestRegistryPluginModel = ClassRegistry::init('RegistryPlugin.TestRegistryPluginModel');$/;"	v
TestRegistryPluginModel	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^		$TestRegistryPluginModel = ClassRegistry::isKeySet('TestRegistryPluginModel');$/;"	v
TestRegistryPluginModel	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^class TestRegistryPluginModel extends RegistryPluginAppModel {$/;"	c
User	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^		$User = ClassRegistry::init(array('class' => 'RegisterUser', 'alias' => 'User', 'table' => false));$/;"	v
UserCopy	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^		$UserCopy = ClassRegistry::init(array('class' => 'RegisterUser', 'alias' => 'User', 'table' => false));$/;"	v
added	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^		$added = ClassRegistry::init($models);$/;"	v
doSomething	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^	public function doSomething();$/;"	f
models	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^		$models = array(array('class' => 'RegisterArticle', 'alias' => 'Article'),$/;"	v
tablePrefix	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^	public $tablePrefix = 'something_';$/;"	v
testAddModel	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^	public function testAddModel() {$/;"	f
testAddMultipleModels	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^	public function testAddMultipleModels() {$/;"	f
testClassRegistryFlush	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^	public function testClassRegistryFlush() {$/;"	f
testConfig	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^		$testConfig = ConnectionManager::getDataSource('test')->config;$/;"	v
testInitAbstractClass	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^	public function testInitAbstractClass() {$/;"	f
testInitInterface	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^	public function testInitInterface() {$/;"	f
testInitStrict	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^	public function testInitStrict() {$/;"	f
testPluginAppModel	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^	public function testPluginAppModel() {$/;"	f
testPrefixedTestDatasource	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^	public function testPrefixedTestDatasource() {$/;"	f
useDbConfig	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^	public $useDbConfig = 'doesnotexist';$/;"	v
useTable	lib/Cake/Test/Case/Utility/ClassRegistryTest.php	/^	public $useTable = false;$/;"	v
Controller	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$Controller = new Controller();$/;"	v
DebuggerTest	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^class DebuggerTest extends CakeTestCase {$/;"	c
DebuggerTestCaseDebugger	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^class DebuggerTestCaseDebugger extends Debugger {$/;"	c
View	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$View = new View($Controller);$/;"	v
_restoreError	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$this->_restoreError = true;$/;"	v
_restoreError	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^	protected $_restoreError = false;$/;"	v
close	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$close = php_sapi_name() == 'cli' ? "\\n" : '<\/pre>';$/;"	v
close	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$close = php_sapi_name() === 'cli' ? "\\n" : '<\/pre>';$/;"	v
config	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$config = array($/;"	v
customFormat	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^	public function customFormat($error, $strings) {$/;"	f
data	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$data = array($/;"	v
data	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$data = false;$/;"	v
expected	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$expected = <<<TEXT$/;"	v
expected	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$expected = Debugger::exportVar($expectedArray);$/;"	v
expectedArray	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$expectedArray = array($/;"	v
file	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$file = fopen('php:\/\/output', 'w');$/;"	v
open	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$open = php_sapi_name() == 'cli' ? "\\n" : '<pre>';$/;"	v
open	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$open = php_sapi_name() === 'cli' ? "\\n" : '<pre>';$/;"	v
output	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$output = Debugger::exportVar($GLOBALS);$/;"	v
output	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$output = Debugger::exportVar($config);$/;"	v
pattern	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$pattern = '\/<code>.*?<span style\\="color\\: \\#\\d+">.*?&lt;\\?php\/';$/;"	v
pattern	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$pattern = '\/<span style\\="color\\: \\#\\d{6}">\\*<\\\/span>\/';$/;"	v
result	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$result = Debugger::excerpt(__FILE__, 11, 2);$/;"	v
result	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$result = Debugger::excerpt(__FILE__, 2, 2);$/;"	v
result	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$result = Debugger::excerpt(__FILE__, __LINE__, 2);$/;"	v
result	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$result = Debugger::exportVar($View);$/;"	v
result	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$result = Debugger::exportVar($data);$/;"	v
result	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$result = Debugger::exportVar($data, 1);$/;"	v
result	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$result = Debugger::exportVar($file);$/;"	v
result	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$result = Debugger::getInstance('Debugger');$/;"	v
result	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$result = Debugger::getInstance('DebuggerTestCaseDebugger');$/;"	v
result	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$result = Debugger::getInstance();$/;"	v
result	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$result = Debugger::output(false);$/;"	v
result	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$result = Debugger::output(true);$/;"	v
result	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$result = Debugger::trace();$/;"	v
result	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$result = Debugger::trace(array($/;"	v
result	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$result = explode('<\/a>', ob_get_clean());$/;"	v
result	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$result = file_get_contents(LOGS . 'debug.log');$/;"	v
result	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$result = ob_get_clean();$/;"	v
return	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$return = Debugger::excerpt('[internal]', 2, 2);$/;"	v
setUp	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^	public function tearDown() {$/;"	f
testAddFormat	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^	public function testAddFormat() {$/;"	f
testAddFormatCallback	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^	public function testAddFormatCallback() {$/;"	f
testChangeOutputFormats	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^	public function testChangeOutputFormats() {$/;"	f
testDocRef	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^	public function testDocRef() {$/;"	f
testDump	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^	public function testDump() {$/;"	f
testExcerpt	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^	public function testExcerpt() {$/;"	f
testExportVar	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^	public function testExportVar() {$/;"	f
testExportVarRecursion	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^	public function testExportVarRecursion() {$/;"	f
testExportVarZero	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^	public function testExportVarZero() {$/;"	f
testGetInstance	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^	public function testGetInstance() {$/;"	f
testLog	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^	public function testLog() {$/;"	f
testLogDepth	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^	public function testLogDepth() {$/;"	f
testNoDbCredentials	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^	public function testNoDbCredentials() {$/;"	f
testOutput	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^	public function testOutput() {$/;"	f
testOutputAs	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^	public function testOutputAs() {$/;"	f
testOutputAsException	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^	public function testOutputAsException() {$/;"	f
testTraceExclude	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^	public function testTraceExclude() {$/;"	f
testTrimPath	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^	public function testTrimPath() {$/;"	f
val	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$val = array($/;"	v
var	lib/Cake/Test/Case/Utility/DebuggerTest.php	/^		$var = array('People' => array($/;"	v
File	lib/Cake/Test/Case/Utility/FileTest.php	/^		$File = new File($file, true);$/;"	v
File	lib/Cake/Test/Case/Utility/FileTest.php	/^		$File = new File($tmpFile);$/;"	v
File	lib/Cake/Test/Case/Utility/FileTest.php	/^		$File = new File($tmpFile, true, 0777);$/;"	v
File	lib/Cake/Test/Case/Utility/FileTest.php	/^		$this->File = new File($file);$/;"	v
File	lib/Cake/Test/Case/Utility/FileTest.php	/^		$this->File = new File($file, false);$/;"	v
File	lib/Cake/Test/Case/Utility/FileTest.php	/^	public $File = null;$/;"	v
FileTest	lib/Cake/Test/Case/Utility/FileTest.php	/^class FileTest extends CakeTestCase {$/;"	c
Folder	lib/Cake/Test/Case/Utility/FileTest.php	/^		$Folder = new Folder();$/;"	v
TestFile	lib/Cake/Test/Case/Utility/FileTest.php	/^		$TestFile = new File(dirname(__FILE__) . '\/..\/..\/test_app\/Vendor\/welcome.php');$/;"	v
TmpFile	lib/Cake/Test/Case/Utility/FileTest.php	/^		$TmpFile = new File($tmpFile);$/;"	v
TmpFile	lib/Cake/Test/Case/Utility/FileTest.php	/^		$TmpFile = new File('\/this\/does\/not\/exist');$/;"	v
TmpFile	lib/Cake/Test/Case/Utility/FileTest.php	/^		$TmpFile = new File(TMP . 'tests' . DS . 'cakephp.file.test.tmp');$/;"	v
_getTmpFile	lib/Cake/Test/Case/Utility/FileTest.php	/^	protected function _getTmpFile($paintSkip = true) {$/;"	f
caller	lib/Cake/Test/Case/Utility/FileTest.php	/^			$caller = $trace[0]['function'];$/;"	v
contents	lib/Cake/Test/Case/Utility/FileTest.php	/^		$contents = $TmpFile->read();$/;"	v
data	lib/Cake/Test/Case/Utility/FileTest.php	/^			$data = $data . $fragment;$/;"	v
data	lib/Cake/Test/Case/Utility/FileTest.php	/^		$data = $expecting;$/;"	v
data	lib/Cake/Test/Case/Utility/FileTest.php	/^		$data = file_get_contents(__FILE__);$/;"	v
data	lib/Cake/Test/Case/Utility/FileTest.php	/^		$data = null;$/;"	v
dest	lib/Cake/Test/Case/Utility/FileTest.php	/^		$dest = TMP . 'tests' . DS . 'cakephp.file.test.tmp';$/;"	v
dir	lib/Cake/Test/Case/Utility/FileTest.php	/^		$dir = TMP . 'tests' . DS . 'permissions' . DS;$/;"	v
expected	lib/Cake/Test/Case/Utility/FileTest.php	/^			$expected = "some\\nvery\\ncool\\nteststring here\\n\\n\\nfor\\n\\n\\n\\n\\nhere";$/;"	v
expected	lib/Cake/Test/Case/Utility/FileTest.php	/^			$expected = "some\\r\\nvery\\r\\ncool\\r\\nteststring here\\r\\n\\r\\n\\r\\n";$/;"	v
expected	lib/Cake/Test/Case/Utility/FileTest.php	/^			$expected = false;$/;"	v
expected	lib/Cake/Test/Case/Utility/FileTest.php	/^		$expected = "some\\r\\nvery\\r\\ncool\\r\\nteststring here\\r\\n\\r\\n\\r\\n";$/;"	v
expected	lib/Cake/Test/Case/Utility/FileTest.php	/^		$expected = 'This is the welcome.tmp file in vendors directory';$/;"	v
expected	lib/Cake/Test/Case/Utility/FileTest.php	/^		$expected = 'This should be a welcome.tmp file in vendors directory';$/;"	v
expected	lib/Cake/Test/Case/Utility/FileTest.php	/^		$expected = 'image\/gif';$/;"	v
expected	lib/Cake/Test/Case/Utility/FileTest.php	/^		$expected = 0;$/;"	v
expected	lib/Cake/Test/Case/Utility/FileTest.php	/^		$expected = 5 + 3;$/;"	v
expected	lib/Cake/Test/Case/Utility/FileTest.php	/^		$expected = substr($data, 5, 3);$/;"	v
expecting	lib/Cake/Test/Case/Utility/FileTest.php	/^		$expecting = 'LICENSE';$/;"	v
expecting	lib/Cake/Test/Case/Utility/FileTest.php	/^		$expecting = 'txt';$/;"	v
expecting	lib/Cake/Test/Case/Utility/FileTest.php	/^		$expecting = array($/;"	v
expecting	lib/Cake/Test/Case/Utility/FileTest.php	/^		$expecting = basename($file);$/;"	v
expecting	lib/Cake/Test/Case/Utility/FileTest.php	/^		$expecting = decoct(0222 & ~umask());$/;"	v
expecting	lib/Cake/Test/Case/Utility/FileTest.php	/^		$expecting = decoct(0244 & ~umask());$/;"	v
expecting	lib/Cake/Test/Case/Utility/FileTest.php	/^		$expecting = decoct(0644 & ~umask());$/;"	v
expecting	lib/Cake/Test/Case/Utility/FileTest.php	/^		$expecting = decoct(0664 & ~umask());$/;"	v
expecting	lib/Cake/Test/Case/Utility/FileTest.php	/^		$expecting = file_get_contents(__FILE__);$/;"	v
expecting	lib/Cake/Test/Case/Utility/FileTest.php	/^		$expecting = filegroup($file);$/;"	v
expecting	lib/Cake/Test/Case/Utility/FileTest.php	/^		$expecting = fileowner($file);$/;"	v
expecting	lib/Cake/Test/Case/Utility/FileTest.php	/^		$expecting = filesize($file);$/;"	v
expecting	lib/Cake/Test/Case/Utility/FileTest.php	/^		$expecting = md5_file($file);$/;"	v
expecting	lib/Cake/Test/Case/Utility/FileTest.php	/^		$expecting = substr($data, 0, 3);$/;"	v
expecting	lib/Cake/Test/Case/Utility/FileTest.php	/^		$expecting = substr($data, 3, 3);$/;"	v
file	lib/Cake/Test/Case/Utility/FileTest.php	/^		$file = $dir . 'permission_' . uniqid();$/;"	v
file	lib/Cake/Test/Case/Utility/FileTest.php	/^		$file = CAKE . DS . 'LICENSE.txt';$/;"	v
file	lib/Cake/Test/Case/Utility/FileTest.php	/^		$file = __FILE__;$/;"	v
file	lib/Cake/Test/Case/Utility/FileTest.php	/^		$file = new File($path);$/;"	v
fragments	lib/Cake/Test/Case/Utility/FileTest.php	/^		$fragments = array('CakePHP\\'s', ' test suite', ' was here ...');$/;"	v
handle	lib/Cake/Test/Case/Utility/FileTest.php	/^		$handle = $this->File->handle;$/;"	v
message	lib/Cake/Test/Case/Utility/FileTest.php	/^			$message = __d('cake_dev', '[FileTest] Skipping %s because "%s" not writeable!', $caller, $shortPath);$/;"	v
newSize	lib/Cake/Test/Case/Utility/FileTest.php	/^			$newSize = $TmpFile->size();$/;"	v
old	lib/Cake/Test/Case/Utility/FileTest.php	/^		$old = umask();$/;"	v
path	lib/Cake/Test/Case/Utility/FileTest.php	/^		$path = CAKE . 'Test' . DS . 'test_app' . DS . 'webroot' . DS . 'img' . DS . 'cake.power.gif';$/;"	v
r	lib/Cake/Test/Case/Utility/FileTest.php	/^			$r = $TmpFile->append($fragment);$/;"	v
r	lib/Cake/Test/Case/Utility/FileTest.php	/^			$r = $TmpFile->write($data);$/;"	v
r	lib/Cake/Test/Case/Utility/FileTest.php	/^		$r = $this->File->open('r', true);$/;"	v
r	lib/Cake/Test/Case/Utility/FileTest.php	/^		$r = $this->File->open();$/;"	v
replace	lib/Cake/Test/Case/Utility/FileTest.php	/^		$replace = array('This should be a', 'welcome.tmp file', 'in the Lib directory');$/;"	v
result	lib/Cake/Test/Case/Utility/FileTest.php	/^		$result = $File->perms();$/;"	v
result	lib/Cake/Test/Case/Utility/FileTest.php	/^		$result = $TmpFile->copy($dest);$/;"	v
result	lib/Cake/Test/Case/Utility/FileTest.php	/^		$result = $TmpFile->delete();$/;"	v
result	lib/Cake/Test/Case/Utility/FileTest.php	/^		$result = $TmpFile->replaceText($search, $replace);$/;"	v
result	lib/Cake/Test/Case/Utility/FileTest.php	/^		$result = $TmpFile->replaceText('welcome.php', 'welcome.tmp');$/;"	v
result	lib/Cake/Test/Case/Utility/FileTest.php	/^		$result = $this->File->Folder();$/;"	v
result	lib/Cake/Test/Case/Utility/FileTest.php	/^		$result = $this->File->copy($dest);$/;"	v
result	lib/Cake/Test/Case/Utility/FileTest.php	/^		$result = $this->File->copy($dest, false);$/;"	v
result	lib/Cake/Test/Case/Utility/FileTest.php	/^		$result = $this->File->copy($dest, true);$/;"	v
result	lib/Cake/Test/Case/Utility/FileTest.php	/^		$result = $this->File->ext();$/;"	v
result	lib/Cake/Test/Case/Utility/FileTest.php	/^		$result = $this->File->group();$/;"	v
result	lib/Cake/Test/Case/Utility/FileTest.php	/^		$result = $this->File->info();$/;"	v
result	lib/Cake/Test/Case/Utility/FileTest.php	/^		$result = $this->File->md5();$/;"	v
result	lib/Cake/Test/Case/Utility/FileTest.php	/^		$result = $this->File->md5(true);$/;"	v
result	lib/Cake/Test/Case/Utility/FileTest.php	/^		$result = $this->File->name();$/;"	v
result	lib/Cake/Test/Case/Utility/FileTest.php	/^		$result = $this->File->name;$/;"	v
result	lib/Cake/Test/Case/Utility/FileTest.php	/^		$result = $this->File->offset();$/;"	v
result	lib/Cake/Test/Case/Utility/FileTest.php	/^		$result = $this->File->owner();$/;"	v
result	lib/Cake/Test/Case/Utility/FileTest.php	/^		$result = $this->File->read();$/;"	v
result	lib/Cake/Test/Case/Utility/FileTest.php	/^		$result = $this->File->read(3);$/;"	v
result	lib/Cake/Test/Case/Utility/FileTest.php	/^		$result = $this->File->size();$/;"	v
search	lib/Cake/Test/Case/Utility/FileTest.php	/^		$search = array('This is the', 'welcome.php file', 'in tmp directory');$/;"	v
setUp	lib/Cake/Test/Case/Utility/FileTest.php	/^	public function setUp() {$/;"	f
shortPath	lib/Cake/Test/Case/Utility/FileTest.php	/^			$shortPath = dirname($tmpFile);$/;"	v
size	lib/Cake/Test/Case/Utility/FileTest.php	/^			$size = $newSize;$/;"	v
size	lib/Cake/Test/Case/Utility/FileTest.php	/^		$size = 0;$/;"	v
someFile	lib/Cake/Test/Case/Utility/FileTest.php	/^		$someFile = new File(TMP . 'some_file.txt', false);$/;"	v
string	lib/Cake/Test/Case/Utility/FileTest.php	/^		$string = "some\\nvery\\ncool\\r\\nteststring here\\n\\n\\nfor\\r\\r\\n\\n\\r\\n\\nhere";$/;"	v
success	lib/Cake/Test/Case/Utility/FileTest.php	/^		$success = $this->File->offset(0);$/;"	v
success	lib/Cake/Test/Case/Utility/FileTest.php	/^		$success = $this->File->offset(5);$/;"	v
tearDown	lib/Cake/Test/Case/Utility/FileTest.php	/^	public function tearDown() {$/;"	f
testAppend	lib/Cake/Test/Case/Utility/FileTest.php	/^	public function testAppend() {$/;"	f
testBasic	lib/Cake/Test/Case/Utility/FileTest.php	/^	public function testBasic() {$/;"	f
testClose	lib/Cake/Test/Case/Utility/FileTest.php	/^	public function testClose() {$/;"	f
testCopy	lib/Cake/Test/Case/Utility/FileTest.php	/^	public function testCopy() {$/;"	f
testCreate	lib/Cake/Test/Case/Utility/FileTest.php	/^	public function testCreate() {$/;"	f
testData	lib/Cake/Test/Case/Utility/FileTest.php	/^		$testData = array('CakePHP\\'s', ' test suite', ' was here ...', '');$/;"	v
testDelete	lib/Cake/Test/Case/Utility/FileTest.php	/^	public function testDelete() {$/;"	f
testDeleteAfterRead	lib/Cake/Test/Case/Utility/FileTest.php	/^	public function testDeleteAfterRead() {$/;"	f
testExecutable	lib/Cake/Test/Case/Utility/FileTest.php	/^	public function testExecutable() {$/;"	f
testLastAccess	lib/Cake/Test/Case/Utility/FileTest.php	/^	public function testLastAccess() {$/;"	f
testLastChange	lib/Cake/Test/Case/Utility/FileTest.php	/^	public function testLastChange() {$/;"	f
testMime	lib/Cake/Test/Case/Utility/FileTest.php	/^	public function testMime() {$/;"	f
testOffset	lib/Cake/Test/Case/Utility/FileTest.php	/^	public function testOffset() {$/;"	f
testOpen	lib/Cake/Test/Case/Utility/FileTest.php	/^	public function testOpen() {$/;"	f
testOpeningNonExistentFileCreatesIt	lib/Cake/Test/Case/Utility/FileTest.php	/^	public function testOpeningNonExistentFileCreatesIt() {$/;"	f
testPermission	lib/Cake/Test/Case/Utility/FileTest.php	/^	public function testPermission() {$/;"	f
testPrepare	lib/Cake/Test/Case/Utility/FileTest.php	/^	public function testPrepare() {$/;"	f
testRead	lib/Cake/Test/Case/Utility/FileTest.php	/^	public function testRead() {$/;"	f
testReadable	lib/Cake/Test/Case/Utility/FileTest.php	/^	public function testReadable() {$/;"	f
testReplaceText	lib/Cake/Test/Case/Utility/FileTest.php	/^	public function testReplaceText() {$/;"	f
testWritable	lib/Cake/Test/Case/Utility/FileTest.php	/^	public function testWritable() {$/;"	f
testWrite	lib/Cake/Test/Case/Utility/FileTest.php	/^	public function testWrite() {$/;"	f
tmpFile	lib/Cake/Test/Case/Utility/FileTest.php	/^		$tmpFile = TMP . 'tests' . DS . 'cakephp.file.test.tmp';$/;"	v
trace	lib/Cake/Test/Case/Utility/FileTest.php	/^			$trace = debug_backtrace();$/;"	v
File	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$File = new File($Folder->pwd() . DS . 'my.php');$/;"	v
File	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$File = new File($Folder->pwd() . DS . 'my.php', true, 0777);$/;"	v
File	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$File = new File($Folder->pwd() . DS . 'paths.php');$/;"	v
File	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$File = new File($Folder->pwd() . DS . 'paths.php', true);$/;"	v
File	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$File = new File($filePath);$/;"	v
Folder	lib/Cake/Test/Case/Utility/FolderTest.php	/^			$Folder = new Folder($path);$/;"	v
Folder	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$Folder = new Folder($folder);$/;"	v
Folder	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$Folder = new Folder($folderOne);$/;"	v
Folder	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$Folder = new Folder($folderTwo);$/;"	v
Folder	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$Folder = new Folder($path);$/;"	v
Folder	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$Folder = new Folder($path, true);$/;"	v
Folder	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$Folder = new Folder('files\/');$/;"	v
Folder	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$Folder = new Folder('non-existent');$/;"	v
Folder	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$Folder = new Folder();$/;"	v
Folder	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$Folder = new Folder(TMP . 'config_non_existent', true);$/;"	v
Folder	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$Folder = new Folder(TMP . 'folder_tree_hidden', true, 0777);$/;"	v
Folder	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$Folder = new Folder(TMP . 'tests' . DS . 'trailing');$/;"	v
Folder	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$Folder = new Folder(TMP . 'tests');$/;"	v
Folder	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$Folder = new Folder(TMP);$/;"	v
FolderTest	lib/Cake/Test/Case/Utility/FolderTest.php	/^class FolderTest extends CakeTestCase {$/;"	c
_setupFilesystem	lib/Cake/Test/Case/Utility/FolderTest.php	/^	protected function _setupFilesystem() {$/;"	f
_tmp	lib/Cake/Test/Case/Utility/FolderTest.php	/^	protected static $_tmp = array();$/;"	v
copy	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$copy = TMP . 'test_folder_copy';$/;"	v
dirs	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$dirs = array('cache', 'logs', 'sessions', 'tests');$/;"	v
errors	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$errors = $Folder->errors();$/;"	v
exclude	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$exclude = array_merge(self::$_tmp, array('.', '..'));$/;"	v
expected	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$expected = $new . ' is a file';$/;"	v
expected	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$expected = $path . DS . 'test';$/;"	v
expected	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$expected = DS . 'some' . DS . 'dir' . DS . 'another_path' . DS . 'and' . DS . 'another';$/;"	v
expected	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$expected = DS . 'some' . DS . 'dir' . DS . 'another_path';$/;"	v
expected	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$expected = ROOT;$/;"	v
expected	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$expected = array('0', 'cache', 'logs', 'sessions', 'tests');$/;"	v
expected	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$expected = array('0', 'cache', 'sessions', 'tests');$/;"	v
expected	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$expected = array('cacert.pem', 'config.php', 'routes.php');$/;"	v
expected	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$expected = array('cache', 'logs', 'sessions', 'tests');$/;"	v
expected	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$expected = array('config.php');$/;"	v
expected	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$expected = array('config.php', 'routes.php');$/;"	v
expected	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$expected = array('paths.php');$/;"	v
expected	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$expected = array();$/;"	v
expected	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$expected = array(array(), array());$/;"	v
file	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$file = $folder . DS . 'file';$/;"	v
fileOne	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$fileOne = $folderOne . DS . 'file1.php';$/;"	v
fileOneA	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$fileOneA = $folderOneA . DS . 'fileA.php';$/;"	v
filePath	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$filePath = $new . DS . 'skip_me.php';$/;"	v
filePath	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$filePath = $new . DS . 'test1.php';$/;"	v
fileTwo	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$fileTwo = $folderTwo . DS . 'file2.php';$/;"	v
fileTwoB	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$fileTwoB = $folderTwoB . DS . 'fileB.php';$/;"	v
folder	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$folder = $path . DS . 'sub';$/;"	v
folderOne	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$folderOne = $path . DS . 'folder1';$/;"	v
folderOneA	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$folderOneA = $folderOne . DS . 'folderA';$/;"	v
folderThree	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$folderThree = $path . DS . 'folder3';$/;"	v
folderTwo	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$folderTwo = $path . DS . 'folder2';$/;"	v
folderTwoB	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$folderTwoB = $folderTwo . DS . 'folderB';$/;"	v
inside	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$inside = dirname($path) . DS;$/;"	v
iterator	lib/Cake/Test/Case/Utility/FolderTest.php	/^				$iterator = new RecursiveDirectoryIterator(TMP . $dir);$/;"	v
messages	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$messages = $Folder->messages();$/;"	v
mv	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$mv = TMP . 'test_folder_mv';$/;"	v
mv	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$mv = TMP . 'test_folder_mv_2';$/;"	v
new	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$new = APP . 'index.php';$/;"	v
new	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$new = TMP . $subdir;$/;"	v
new	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$new = TMP . '0';$/;"	v
new	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$new = TMP . 'test_folder_new';$/;"	v
path	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$path = 'C:\\\\path\\\\to\\\\file';$/;"	v
path	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$path = 'C:\\\\path\\to\\\\file';$/;"	v
path	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$path = '\/path\/to\/file';$/;"	v
path	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$path = '\\\\path\\\\\\to\\\\\\file';$/;"	v
path	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$path = '\\\\path\\\\to\\\\file';$/;"	v
path	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$path = CAKE . 'Console' . DS . 'Templates' . DS . 'skel';$/;"	v
path	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$path = DS . 'lib' . DS . 'Cake' . DS . 'Config';$/;"	v
path	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$path = ROOT;$/;"	v
path	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$path = TMP . 'folder_delete_test';$/;"	v
path	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$path = TMP . 'folder_test';$/;"	v
path	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$path = TMP . 'tests' . DS . 'one';$/;"	v
path	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$path = TMP . 'tests' . DS . 'trailing' . DS . 'dir' . DS;$/;"	v
path	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$path = TMP;$/;"	v
path	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$path = dirname(__FILE__);$/;"	v
path	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$path = dirname(dirname(__FILE__));$/;"	v
perms	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$perms = substr(sprintf('%o', fileperms($new . DS . 'test1')), -4);$/;"	v
perms	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$perms = substr(sprintf('%o', fileperms($new . DS . 'test2')), -4);$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^			$result = $Folder->create($path . DS . 'two' . DS . 'three');$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->cd($copy);$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->cd($new);$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->cd(ROOT . DS . 'non-existent');$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->cd(ROOT);$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->chmod($copy, 0755, false);$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->copy($copy);$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->copy($folderThree);$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->copy(array('to' => $folderThree, 'scheme' => Folder::MERGE));$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->copy(array('to' => $folderThree, 'scheme' => Folder::OVERWRITE));$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->copy(array('to' => $folderThree, 'scheme' => Folder::SKIP));$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->copy(array('to' => $folderTwo, 'scheme' => Folder::SKIP));$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->create($new);$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->create($path);$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->create(TMP . 'tests' . DS . 'first' . DS . 'second' . DS . 'third');$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->create(TMP . 'tests' . DS . 'first');$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->delete($mv);$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->delete($new);$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->delete();$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->errors();$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->find('.*', true);$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->find('.*\\.php');$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->find('.*\\.php', true);$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->find('.*ig\\.php');$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->find('config\\.php');$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->find('paths\\.php');$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->find();$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->findRecursive('(config|paths)\\.php');$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->findRecursive('(config|paths)\\.php', true);$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->findRecursive('(paths|my)\\.php');$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->findRecursive('(paths|my)\\.php', true);$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->findRecursive('paths\\.php');$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->inCakePath($path);$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->inPath($path . DS . 'Model', true);$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->inPath('Test' . DS);$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->inPath(DS . 'non-existing' . $inside);$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->move($folderTwo);$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->move($mv);$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->move(array('to' => $folderTwo, 'scheme' => Folder::SKIP));$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->pwd();$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->read(true);$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->read(true, array('logs'));$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->read(true, true);$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->realpath('Test\/');$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->tree(CAKE . 'Config', false);$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->tree(CAKE . 'Config', false, 'dir');$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->tree(CAKE . 'Config', false, 'files');$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->tree(null, array('.'));$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->tree(null, false);$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = $Folder->tree(null, true);$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = Folder::addPathElement($path, 'test');$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = Folder::addPathElement(DS . 'some' . DS . 'dir' . DS, 'another_path');$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = Folder::addPathElement(DS . 'some' . DS . 'dir' . DS, array('another_path'));$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = Folder::addPathElement(DS . 'some' . DS . 'dir', 'another_path');$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = Folder::addPathElement(DS . 'some' . DS . 'dir', array('another_path'));$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = Folder::addPathElement(DS . 'some' . DS . 'dir', array('another_path', 'and', 'another'));$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = Folder::correctSlashFor($path);$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = Folder::isSlashTerm($inside);$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = Folder::normalizePath($path);$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = Folder::slashTerm('\/path\/to\/file');$/;"	v
result	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$result = is_dir($Folder->pwd());$/;"	v
return	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$return = $Folder->delete();$/;"	v
setUp	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function setUp() {$/;"	f
setUpBeforeClass	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public static function setUpBeforeClass() {$/;"	f
subdir	lib/Cake/Test/Case/Utility/FolderTest.php	/^		$subdir = 'test_folder_new';$/;"	v
tearDown	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function tearDown() {$/;"	f
testAddPathElement	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testAddPathElement() {$/;"	f
testBasic	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testBasic() {$/;"	f
testChmod	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testChmod() {$/;"	f
testConstructWithNonExistentPath	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testConstructWithNonExistentPath() {$/;"	f
testCopy	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testCopy() {$/;"	f
testCopyWithMerge	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testCopyWithMerge() {$/;"	f
testCopyWithOverwrite	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testCopyWithOverwrite() {$/;"	f
testCopyWithSkip	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testCopyWithSkip() {$/;"	f
testCorrectSlashFor	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testCorrectSlashFor() {$/;"	f
testCreateWithTrailingDs	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testCreateWithTrailingDs() {$/;"	f
testCreation	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testCreation() {$/;"	f
testDelete	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testDelete() {$/;"	f
testDirSize	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testDirSize() {$/;"	f
testFind	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testFind() {$/;"	f
testFindRecursive	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testFindRecursive() {$/;"	f
testFolderRead	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testFolderRead() {$/;"	f
testFolderReadWithHiddenFiles	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testFolderReadWithHiddenFiles() {$/;"	f
testFolderTree	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testFolderTree() {$/;"	f
testFolderTreeWithHiddenFiles	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testFolderTreeWithHiddenFiles() {$/;"	f
testInCakePath	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testInCakePath() {$/;"	f
testInPath	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testInPath() {$/;"	f
testIsAbsolute	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testIsAbsolute() {$/;"	f
testIsSlashTerm	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testIsSlashTerm() {$/;"	f
testMove	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testMove() {$/;"	f
testMoveWithSkip	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testMoveWithSkip() {$/;"	f
testNormalizePath	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testNormalizePath() {$/;"	f
testOperations	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testOperations() {$/;"	f
testRealPathForWebroot	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testRealPathForWebroot() {$/;"	f
testRecursiveCreateFailure	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testRecursiveCreateFailure() {$/;"	f
testReset	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testReset() {$/;"	f
testSlashTerm	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testSlashTerm() {$/;"	f
testWindowsPath	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testWindowsPath() {$/;"	f
testZeroAsDirectory	lib/Cake/Test/Case/Utility/FolderTest.php	/^	public function testZeroAsDirectory() {$/;"	f
HashTest	lib/Cake/Test/Case/Utility/HashTest.php	/^class HashTest extends CakeTestCase {$/;"	c
a	lib/Cake/Test/Case/Utility/HashTest.php	/^		$a = Hash::sort($a, '{n}.Friend.{n}.name');$/;"	v
a	lib/Cake/Test/Case/Utility/HashTest.php	/^		$a = Hash::sort($a, '{n}.Friend.{n}.name', 'desc');$/;"	v
a	lib/Cake/Test/Case/Utility/HashTest.php	/^		$a = Hash::sort($a, '{n}.Person.name', 'ASC', 'STRING');$/;"	v
a	lib/Cake/Test/Case/Utility/HashTest.php	/^		$a = Hash::sort($a, '{n}.Person.name', 'asc');$/;"	v
a	lib/Cake/Test/Case/Utility/HashTest.php	/^		$a = array($/;"	v
a	lib/Cake/Test/Case/Utility/HashTest.php	/^		$a = array('foo' => 'bar', 'bar' => 'foo');$/;"	v
a	lib/Cake/Test/Case/Utility/HashTest.php	/^		$a = array('foo', 'foo2');$/;"	v
a	lib/Cake/Test/Case/Utility/HashTest.php	/^		$a = array('key' => 'value', 'another' => null, 'name' => 'me');$/;"	v
a	lib/Cake/Test/Case/Utility/HashTest.php	/^		$a = array('key' => true, 'another' => false, 'name' => 'me');$/;"	v
a	lib/Cake/Test/Case/Utility/HashTest.php	/^		$a = array('name' => 'bob', 'address' => 'home');$/;"	v
a	lib/Cake/Test/Case/Utility/HashTest.php	/^		$a = array('users' => array('bob', 'jim'));$/;"	v
a	lib/Cake/Test/Case/Utility/HashTest.php	/^		$a = array('users' => array('jim', 'bob'));$/;"	v
a	lib/Cake/Test/Case/Utility/HashTest.php	/^		$a = array('users' => array('lisa' => array('id' => 5, 'pw' => 'secret')), 'cakephp');$/;"	v
a	lib/Cake/Test/Case/Utility/HashTest.php	/^		$a = array();$/;"	v
a	lib/Cake/Test/Case/Utility/HashTest.php	/^		$a = array(0 => 'test', 'string' => null);$/;"	v
a	lib/Cake/Test/Case/Utility/HashTest.php	/^		$a = self::userData();$/;"	v
articleData	lib/Cake/Test/Case/Utility/HashTest.php	/^	public static function articleData() {$/;"	f
b	lib/Cake/Test/Case/Utility/HashTest.php	/^		$b = array($/;"	v
b	lib/Cake/Test/Case/Utility/HashTest.php	/^		$b = array('bar', 'bar2');$/;"	v
b	lib/Cake/Test/Case/Utility/HashTest.php	/^		$b = array('foo' => 'no-bar', 'bar' => 'no-foo');$/;"	v
b	lib/Cake/Test/Case/Utility/HashTest.php	/^		$b = array('key' => 'differentValue', 'another' => 'value');$/;"	v
b	lib/Cake/Test/Case/Utility/HashTest.php	/^		$b = array('key' => 'differentValue', 'another' => null);$/;"	v
b	lib/Cake/Test/Case/Utility/HashTest.php	/^		$b = array('key' => 1, 'another' => 0);$/;"	v
b	lib/Cake/Test/Case/Utility/HashTest.php	/^		$b = array('name' => 'bob', 'address' => 'home');$/;"	v
b	lib/Cake/Test/Case/Utility/HashTest.php	/^		$b = array('users' => 'none');$/;"	v
b	lib/Cake/Test/Case/Utility/HashTest.php	/^		$b = array('users' => array('lisa' => array('pw' => 'new-pass', 'age' => 23)), 'ice-cream');$/;"	v
b	lib/Cake/Test/Case/Utility/HashTest.php	/^		$b = array('users' => array('lisa', 'tina'));$/;"	v
b	lib/Cake/Test/Case/Utility/HashTest.php	/^		$b = array();$/;"	v
b	lib/Cake/Test/Case/Utility/HashTest.php	/^		$b = array(0 => 'differentValue', 1 => 'value');$/;"	v
c	lib/Cake/Test/Case/Utility/HashTest.php	/^		$c = array($/;"	v
data	lib/Cake/Test/Case/Utility/HashTest.php	/^		$data = array($/;"	v
data	lib/Cake/Test/Case/Utility/HashTest.php	/^		$data = array('1' => '1.1', '2', '3' => array('3.1' => '3.1.1'));$/;"	v
data	lib/Cake/Test/Case/Utility/HashTest.php	/^		$data = array('1' => '1.1', '2', '3');$/;"	v
data	lib/Cake/Test/Case/Utility/HashTest.php	/^		$data = array('1' => 'one', 2 => 'two', 3 => 'three', 4 => 'four', 5 => 'five');$/;"	v
data	lib/Cake/Test/Case/Utility/HashTest.php	/^		$data = array('1' => array('1.1' => '1.1.1'), '2', '3' => array('3.1' => '3.1.1'));$/;"	v
data	lib/Cake/Test/Case/Utility/HashTest.php	/^		$data = array('1' => array('1.1' => '1.1.1'), '2', '3' => array('3.1' => array('3.1.1' => '3.1.1.1')));$/;"	v
data	lib/Cake/Test/Case/Utility/HashTest.php	/^		$data = array('Entity' => false );$/;"	v
data	lib/Cake/Test/Case/Utility/HashTest.php	/^		$data = array('Larry', 'Curly', 'Moe');$/;"	v
data	lib/Cake/Test/Case/Utility/HashTest.php	/^		$data = array('My', 'Array', 'To', 'Flatten');$/;"	v
data	lib/Cake/Test/Case/Utility/HashTest.php	/^		$data = array('a.b.100.a' => null, 'a.b.200.a' => null);$/;"	v
data	lib/Cake/Test/Case/Utility/HashTest.php	/^		$data = array('abc', 'def');$/;"	v
data	lib/Cake/Test/Case/Utility/HashTest.php	/^		$data = array('apple', 'bee', 'cyclops');$/;"	v
data	lib/Cake/Test/Case/Utility/HashTest.php	/^		$data = array('one' => 'two');$/;"	v
data	lib/Cake/Test/Case/Utility/HashTest.php	/^		$data = array('one' => 1);$/;"	v
data	lib/Cake/Test/Case/Utility/HashTest.php	/^		$data = array('one');$/;"	v
data	lib/Cake/Test/Case/Utility/HashTest.php	/^		$data = array('one', '2', 'three');$/;"	v
data	lib/Cake/Test/Case/Utility/HashTest.php	/^		$data = array('one', 'two', 'three', 'four', 'five');$/;"	v
data	lib/Cake/Test/Case/Utility/HashTest.php	/^		$data = array('one', 2 => 'two', 3 => 'three', 4 => 'four', 'a' => 'five');$/;"	v
data	lib/Cake/Test/Case/Utility/HashTest.php	/^		$data = array(0);$/;"	v
data	lib/Cake/Test/Case/Utility/HashTest.php	/^		$data = array(1 => 'one');$/;"	v
data	lib/Cake/Test/Case/Utility/HashTest.php	/^		$data = array(1 => 'one', 2 => 'two', 3 => 'three', 4 => 'four', 5 => 'five');$/;"	v
data	lib/Cake/Test/Case/Utility/HashTest.php	/^		$data = array(2.4, 1, 0, -1, -2);$/;"	v
data	lib/Cake/Test/Case/Utility/HashTest.php	/^		$data = self::articleData();$/;"	v
data	lib/Cake/Test/Case/Utility/HashTest.php	/^		$data = self::userData();$/;"	v
default	lib/Cake/Test/Case/Utility/HashTest.php	/^		$default = array('empty');$/;"	v
expanded	lib/Cake/Test/Case/Utility/HashTest.php	/^		$expanded = Hash::expand($data);$/;"	v
expected	lib/Cake/Test/Case/Utility/HashTest.php	/^		$expected = $a + $b;$/;"	v
expected	lib/Cake/Test/Case/Utility/HashTest.php	/^		$expected = $a;$/;"	v
expected	lib/Cake/Test/Case/Utility/HashTest.php	/^		$expected = $b;$/;"	v
expected	lib/Cake/Test/Case/Utility/HashTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Utility/HashTest.php	/^		$expected = array($data[0]['Article']);$/;"	v
expected	lib/Cake/Test/Case/Utility/HashTest.php	/^		$expected = array($data[0]['Comment'][0]);$/;"	v
expected	lib/Cake/Test/Case/Utility/HashTest.php	/^		$expected = array($data[0]['Comment'][1]);$/;"	v
expected	lib/Cake/Test/Case/Utility/HashTest.php	/^		$expected = array($data[1]['Article']);$/;"	v
expected	lib/Cake/Test/Case/Utility/HashTest.php	/^		$expected = array($data[2]['Article']);$/;"	v
expected	lib/Cake/Test/Case/Utility/HashTest.php	/^		$expected = array('0', 2 => true, 3 => 0, 4 => array('one thing', 'I can tell you', 'is you got to be'));$/;"	v
expected	lib/Cake/Test/Case/Utility/HashTest.php	/^		$expected = array('42', '', '');$/;"	v
expected	lib/Cake/Test/Case/Utility/HashTest.php	/^		$expected = array('Boston, 42', 'Boondock, ', 'Venice Beach, ');$/;"	v
expected	lib/Cake/Test/Case/Utility/HashTest.php	/^		$expected = array('John', 'Bob', 'Tony');$/;"	v
expected	lib/Cake/Test/Case/Utility/HashTest.php	/^		$expected = array('Neo', 'Morpheus');$/;"	v
expected	lib/Cake/Test/Case/Utility/HashTest.php	/^		$expected = array('foo' => 'no-bar', 'bar' => 'no-foo');$/;"	v
expected	lib/Cake/Test/Case/Utility/HashTest.php	/^		$expected = array('foo', 'foo2', 'bar', 'bar2');$/;"	v
expected	lib/Cake/Test/Case/Utility/HashTest.php	/^		$expected = array('key' => 'differentValue', 'another' => 'value', 'name' => 'me');$/;"	v
expected	lib/Cake/Test/Case/Utility/HashTest.php	/^		$expected = array('key' => 'value', 'another' => null, 'name' => 'me');$/;"	v
expected	lib/Cake/Test/Case/Utility/HashTest.php	/^		$expected = array('key' => 'value', 'name' => 'me');$/;"	v
expected	lib/Cake/Test/Case/Utility/HashTest.php	/^		$expected = array('name' => 'me');$/;"	v
expected	lib/Cake/Test/Case/Utility/HashTest.php	/^		$expected = array('one' => 1, 'two' => 2, 'three' => 3, 'four' => null);$/;"	v
expected	lib/Cake/Test/Case/Utility/HashTest.php	/^		$expected = array('one' => array('a', 'b', 'c' => 'cee'), 'two' => 2, 'three' => null);$/;"	v
expected	lib/Cake/Test/Case/Utility/HashTest.php	/^		$expected = array('one' => null, 'two' => null, 'three' => null);$/;"	v
expected	lib/Cake/Test/Case/Utility/HashTest.php	/^		$expected = array('one', 'two', 'three');$/;"	v
expected	lib/Cake/Test/Case/Utility/HashTest.php	/^		$expected = array('users' => 'none');$/;"	v
expected	lib/Cake/Test/Case/Utility/HashTest.php	/^		$expected = array('users' => array('bob', 'jim', 'lisa', 'tina'));$/;"	v
expected	lib/Cake/Test/Case/Utility/HashTest.php	/^		$expected = array(1);$/;"	v
expected	lib/Cake/Test/Case/Utility/HashTest.php	/^		$expected = array(1, array('2', 2 => array(3)));$/;"	v
expected	lib/Cake/Test/Case/Utility/HashTest.php	/^		$expected = array(1, array('empty'));$/;"	v
expected	lib/Cake/Test/Case/Utility/HashTest.php	/^		$expected = array(2 => null, 14 => null, 25 => null);$/;"	v
expected	lib/Cake/Test/Case/Utility/HashTest.php	/^		$expected = array(2, 4, 6, 8, 10);$/;"	v
first	lib/Cake/Test/Case/Utility/HashTest.php	/^		$first = array($/;"	v
flat	lib/Cake/Test/Case/Utility/HashTest.php	/^		$flat = Hash::flatten($data);$/;"	v
flattened	lib/Cake/Test/Case/Utility/HashTest.php	/^		$flattened = Hash::flatten($expanded);$/;"	v
input	lib/Cake/Test/Case/Utility/HashTest.php	/^		$input = array($/;"	v
items	lib/Cake/Test/Case/Utility/HashTest.php	/^		$items = array($/;"	v
mapCallback	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function mapCallback($value) {$/;"	f
menus	lib/Cake/Test/Case/Utility/HashTest.php	/^		$menus = array($/;"	v
names	lib/Cake/Test/Case/Utility/HashTest.php	/^		$names = array($/;"	v
reduceCallback	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function reduceCallback($one, $two) {$/;"	f
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::apply($data, '{n}.Article.id', 'array_sum');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::combine($/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::combine($a, '{n}.User.id');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::combine($a, '{n}.User.id', '{n}.User.Data');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::combine($a, '{n}.User.id', '{n}.User.Data', '{n}.User.group_id');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::combine($a, '{n}.User.id', '{n}.User.Data.name');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::combine($a, '{n}.User.id', '{n}.User.Data.name', '{n}.User.group_id');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::combine($a, '{n}.User.id', '{n}.User.non-existant');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::combine(array(), '{n}.User.id', '{n}.User.Data');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::diff($a, $b);$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::diff($a, array());$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::diff($b, $a);$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::diff(array(), $b);$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::dimensions($data);$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::dimensions(array());$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::expand($data);$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::expand($data, '\/');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::expand($flat);$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::extract($data, '');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::extract($data, '0.Article.title');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::extract($data, '0.Comment.{n}.user_id');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::extract($data, '1.Article.title');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::extract($data, 'Country.{n}[name=\/Canada|^$\/]');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::extract($data, 'Entity[id=1].data1');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::extract($data, 'User.{n}.name');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::extract($data, '{n}.Article.title');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::extract($data, '{n}.Article[id = 3]');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::extract($data, '{n}.Article[id!=3]');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::extract($data, '{n}.Article[id=3]');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::extract($data, '{n}.Article[id][published]');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::extract($data, '{n}.Article[published]');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::extract($data, '{n}.Article[title=\/^Fir[a-z]+\/]');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::extract($data, '{n}.Article[title=\/^First\/]');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::extract($data, '{n}.Comment.{n}[user_id < 3]');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::extract($data, '{n}.Comment.{n}[user_id <= 2]');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::extract($data, '{n}.Comment.{n}[user_id > 2]');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::extract($data, '{n}.Comment.{n}[user_id > 2][id=1]');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::extract($data, '{n}.Comment.{n}[user_id > 2][id=2]');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::extract($data, '{n}.Comment.{n}[user_id >= 4]');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::extract($data, '{n}.User.name');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::extract($data, '{n}.{s}.Nesting.test.1');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::extract($data, '{n}.{s}.user');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::extract($users, '{n}[active=0]');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::extract($users, '{n}[active=1]');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::extract($users, '{n}[active=false]');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::extract($users, '{n}[active=true]');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::extract(array(false), '{n}.Something.another_thing');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::filter(array('0', false, true, 0, array('one thing', 'I can tell you', 'is you got to be', false)));$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::filter(array(1, array('2', false, array(3, null))));$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::filter(array(1, array('empty', false)));$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::filter(array(1, array(false)));$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::filter(array(1, array(false, false)));$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::flatten($data);$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::flatten($data, '\/');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::format($/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::format($data, array('{n}.Person.city', '{n}.Person.something'), '%s, %s');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::format($data, array('{n}.Person.something'), '%s');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::get($data, '');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::get($data, '0');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::get($data, '0.Article.title');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::get($data, '1');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::get($data, '1.Article');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::get($data, '1.Article.title');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::get($data, '1.Article.title.not_there');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::get($data, '5.Article.title');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::get($data, 0);$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::get($data, array('1', 'Article'));$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::get(array(), '1.Article.title');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::insert($a, 'files', array('name' => 'files'));$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::insert($a, 'pages.name', array());$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::insert($data, 'Some.string.value', array('values'));$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::insert($data, '{n}.Article.insert', 'value');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::insert($data, '{n}.Comment.{n}.insert', 'value');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::insert($data, '{n}.Item[id=\/\\b2|\\b4\/]', array('test' => 2));$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::map($data, '{n}.Article.id', array($this, 'mapCallback'));$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::maxDimensions($data);$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::merge($a, $b);$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::merge(array('foo'), array('bar'));$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::merge(array('foo'), array('user' => 'bob', 'no-bar'), 'bar');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::mergeDiff($first, $second);$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::mergeDiff($first, $third);$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::mergeDiff($first, array());$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::mergeDiff($first, null);$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::mergeDiff(array(), $first);$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::nest($input);$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::nest($input, array('idPath' => '{n}.id', 'parentPath' => '{n}.parent_id'));$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::nest($input, array('root' => 6));$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::normalize(array('one' => 1, 'two' => 2, 'three' => 3, 'four'));$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::normalize(array('one' => 1, 'two' => 2, 'three' => 3, 'four'), false);$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::normalize(array('one' => array('a', 'b', 'c' => 'cee'), 'two' => 2, 'three'));$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::normalize(array('one', 'two', 'three'));$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::normalize(array('one', 'two', 'three'), false);$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::reduce($data, '{n}.Article.id', array($this, 'reduceCallback'));$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::remove($a, 'files');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::remove($a, 'pages.1.vars');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::remove($a, 'pages.2.vars');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::remove($a, '{n}[name=files]');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::remove($data, '{n}.Article.title');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::remove($data, '{n}.Article.{s}');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::remove($data, '{n}.Item[id=\/\\b2|\\b4\/]');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::sort($a, '{s}.total_fulfillable', 'asc');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::sort($data, '{n}.class', 'asc');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::sort($data, '{n}.test2', 'asc');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::sort($items, '{n}.Item.image', 'asc', 'natural');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::sort($items, '{n}.Item.image', 'desc', 'natural');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::sort($items, '{n}.Item.price', 'asc', 'numeric');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::sort($items, '{n}.Item.price', 'desc', 'numeric');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::sort($menus, '{s}.weight', 'ASC');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::sort($names, '{n}.employees.0.name', 'asc');$/;"	v
result	lib/Cake/Test/Case/Utility/HashTest.php	/^		$result = Hash::sort(array(), '{n}.name');$/;"	v
second	lib/Cake/Test/Case/Utility/HashTest.php	/^		$second = array($/;"	v
set	lib/Cake/Test/Case/Utility/HashTest.php	/^		$set = array($/;"	v
sorted	lib/Cake/Test/Case/Utility/HashTest.php	/^		$sorted = Hash::sort($a, '{n}.Person.name', 'asc', 'natural');$/;"	v
sorted	lib/Cake/Test/Case/Utility/HashTest.php	/^		$sorted = Hash::sort($toSort, '{s}.number', 'asc');$/;"	v
testApply	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testApply() {$/;"	f
testCheck	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testCheck() {$/;"	f
testCombine	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testCombine() {$/;"	f
testCombineErrorMissingKey	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testCombineErrorMissingKey() {$/;"	f
testCombineErrorMissingValue	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testCombineErrorMissingValue() {$/;"	f
testCombineWithFormatting	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testCombineWithFormatting() {$/;"	f
testCombineWithGroupPath	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testCombineWithGroupPath() {$/;"	f
testContains	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testContains() {$/;"	f
testDiff	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testDiff() {$/;"	f
testDimensions	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testDimensions() {$/;"	f
testExpand	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testExpand() {$/;"	f
testExtractAttributeBoolean	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testExtractAttributeBoolean() {$/;"	f
testExtractAttributeComparison	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testExtractAttributeComparison() {$/;"	f
testExtractAttributeEquality	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testExtractAttributeEquality() {$/;"	f
testExtractAttributeEqualityOnScalarValue	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testExtractAttributeEqualityOnScalarValue() {$/;"	f
testExtractAttributeMultiple	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testExtractAttributeMultiple() {$/;"	f
testExtractAttributePattern	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testExtractAttributePattern() {$/;"	f
testExtractAttributePresence	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testExtractAttributePresence() {$/;"	f
testExtractBasic	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testExtractBasic() {$/;"	f
testExtractMatchesNull	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testExtractMatchesNull() {$/;"	f
testExtractNumericKey	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testExtractNumericKey() {$/;"	f
testExtractNumericMixedKeys	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testExtractNumericMixedKeys() {$/;"	f
testExtractNumericNonZero	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testExtractNumericNonZero() {$/;"	f
testExtractStringKey	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testExtractStringKey() {$/;"	f
testExtractUnevenKeys	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testExtractUnevenKeys() {$/;"	f
testFilter	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testFilter() {$/;"	f
testFlatten	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testFlatten() {$/;"	f
testFlattenInfiniteLoop	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testFlattenInfiniteLoop() {$/;"	f
testFormat	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testFormat() {$/;"	f
testFormatNullValues	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testFormatNullValues() {$/;"	f
testGet	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testGet() {$/;"	f
testInsertMulti	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testInsertMulti() {$/;"	f
testInsertOverwriteStringValue	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testInsertOverwriteStringValue() {$/;"	f
testInsertSimple	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testInsertSimple() {$/;"	f
testMap	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testMap() {$/;"	f
testMaxDimensions	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testMaxDimensions() {$/;"	f
testMerge	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testMerge() {$/;"	f
testMergeDiff	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testMergeDiff() {$/;"	f
testMissingParent	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testMissingParent() {$/;"	f
testNest1Dimensional	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testNest1Dimensional() {$/;"	f
testNestInvalid	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testNestInvalid() {$/;"	f
testNestModel	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testNestModel() {$/;"	f
testNestModelExplicitRoot	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testNestModelExplicitRoot() {$/;"	f
testNormalize	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testNormalize() {$/;"	f
testNumeric	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testNumeric() {$/;"	f
testReduce	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testReduce() {$/;"	f
testRemove	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testRemove() {$/;"	f
testRemoveMulti	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testRemoveMulti() {$/;"	f
testSort	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testSort() {$/;"	f
testSortNatural	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testSortNatural() {$/;"	f
testSortNaturalFallbackToRegular	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testSortNaturalFallbackToRegular() {$/;"	f
testSortNumeric	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testSortNumeric() {$/;"	f
testSortString	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testSortString() {$/;"	f
testSortWithOutOfOrderKeys	lib/Cake/Test/Case/Utility/HashTest.php	/^	public function testSortWithOutOfOrderKeys() {$/;"	f
third	lib/Cake/Test/Case/Utility/HashTest.php	/^		$third = array($/;"	v
toSort	lib/Cake/Test/Case/Utility/HashTest.php	/^		$toSort = array($/;"	v
userData	lib/Cake/Test/Case/Utility/HashTest.php	/^	public static function userData() {$/;"	f
users	lib/Cake/Test/Case/Utility/HashTest.php	/^		$users = array($/;"	v
InflectorTest	lib/Cake/Test/Case/Utility/InflectorTest.php	/^class InflectorTest extends CakeTestCase {$/;"	c
expected	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$expected = '1eplace_eve1y_1';$/;"	v
expected	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$expected = '20-of-profits-went-to-me';$/;"	v
expected	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$expected = 'Aepfel-Ueber-Oel-gruen-aergert-gross-oeko';$/;"	v
expected	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$expected = 'Foo+Bar+Not+just+for+breakfast+any+more';$/;"	v
expected	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$expected = 'Foo-Bar-Not-just-for-breakfast-any-more';$/;"	v
expected	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$expected = 'Foo_Bar_Not_just_for_breakfast_any_more';$/;"	v
expected	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$expected = 'La-langue-francaise-est-un-attribut-de-souverainete-en-France';$/;"	v
expected	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$expected = 'Testing-ae-oe-aa';$/;"	v
expected	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$expected = 'The-truth-and-more-news';$/;"	v
expected	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$expected = 'controller_action_りんご_1';$/;"	v
expected	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$expected = 'exciting-stuff-what-was-that';$/;"	v
expected	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$expected = 'posts_view_한국어_page_1_sort_asc';$/;"	v
expected	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$expected = 'this-melts-your-face1-2-3';$/;"	v
expected	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$expected = 'this_is_a_path';$/;"	v
expected	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$expected = 'の話が出たので大丈夫かなあと';$/;"	v
maps	lib/Cake/Test/Case/Utility/InflectorTest.php	/^	public static $maps = array ($/;"	v
pluralIrregular	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$pluralIrregular = array('as' => 'ases');$/;"	v
result	lib/Cake/Test/Case/Utility/InflectorTest.php	/^				$result = Inflector::slug($from);$/;"	v
result	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$result = Inflector::slug("non\\xc2\\xa0breaking\\xc2\\xa0space");$/;"	v
result	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$result = Inflector::slug('!@$#exciting stuff! - what !@-# was that?', '-');$/;"	v
result	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$result = Inflector::slug('#this melts your face1#2#3', '-');$/;"	v
result	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$result = Inflector::slug('20% of profits went to me!', '-');$/;"	v
result	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$result = Inflector::slug('Foo Bar: Not just for breakfast any-more');$/;"	v
result	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$result = Inflector::slug('Foo Bar: Not just for breakfast any-more', "+");$/;"	v
result	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$result = Inflector::slug('Foo Bar: Not just for breakfast any-more', "-");$/;"	v
result	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$result = Inflector::slug('La langue française est un attribut de souveraineté en France', '-');$/;"	v
result	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$result = Inflector::slug('Testing æ ø å', '-');$/;"	v
result	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$result = Inflector::slug('The truth - and- more- news', '-');$/;"	v
result	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$result = Inflector::slug('The truth: and more news', '-');$/;"	v
result	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$result = Inflector::slug('controller\/action\/りんご\/1');$/;"	v
result	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$result = Inflector::slug('posts\/view\/한국어\/page:1\/sort:asc');$/;"	v
result	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$result = Inflector::slug('replace every r');$/;"	v
result	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$result = Inflector::slug('replace every r', '_');$/;"	v
result	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$result = Inflector::slug('this\/is\/a\/path');$/;"	v
result	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$result = Inflector::slug('Äpfel Über Öl grün ärgert groß öko', '-');$/;"	v
result	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$result = Inflector::slug('の話が出たので大丈夫かなあと');$/;"	v
tearDown	lib/Cake/Test/Case/Utility/InflectorTest.php	/^	public function tearDown() {$/;"	f
testClassNaming	lib/Cake/Test/Case/Utility/InflectorTest.php	/^	public function testClassNaming() {$/;"	f
testCustomPluralRule	lib/Cake/Test/Case/Utility/InflectorTest.php	/^	public function testCustomPluralRule() {$/;"	f
testCustomRuleWithReset	lib/Cake/Test/Case/Utility/InflectorTest.php	/^	public function testCustomRuleWithReset() {$/;"	f
testCustomSingularRule	lib/Cake/Test/Case/Utility/InflectorTest.php	/^	public function testCustomSingularRule() {$/;"	f
testCustomTransliterationRule	lib/Cake/Test/Case/Utility/InflectorTest.php	/^	public function testCustomTransliterationRule() {$/;"	f
testHumanization	lib/Cake/Test/Case/Utility/InflectorTest.php	/^	public function testHumanization() {$/;"	f
testInflectingPlurals	lib/Cake/Test/Case/Utility/InflectorTest.php	/^	public function testInflectingPlurals() {$/;"	f
testInflectingSingulars	lib/Cake/Test/Case/Utility/InflectorTest.php	/^	public function testInflectingSingulars() {$/;"	f
testInflectorSlug	lib/Cake/Test/Case/Utility/InflectorTest.php	/^	public function testInflectorSlug() {$/;"	f
testInflectorSlugCharList	lib/Cake/Test/Case/Utility/InflectorTest.php	/^	public function testInflectorSlugCharList() {$/;"	f
testInflectorSlugWithMap	lib/Cake/Test/Case/Utility/InflectorTest.php	/^	public function testInflectorSlugWithMap() {$/;"	f
testInflectorSlugWithMapOverridingDefault	lib/Cake/Test/Case/Utility/InflectorTest.php	/^	public function testInflectorSlugWithMapOverridingDefault() {$/;"	f
testInflectorUnderscore	lib/Cake/Test/Case/Utility/InflectorTest.php	/^	public function testInflectorUnderscore() {$/;"	f
testRulesClearsCaches	lib/Cake/Test/Case/Utility/InflectorTest.php	/^	public function testRulesClearsCaches() {$/;"	f
testTableNaming	lib/Cake/Test/Case/Utility/InflectorTest.php	/^	public function testTableNaming() {$/;"	f
testVariableNaming	lib/Cake/Test/Case/Utility/InflectorTest.php	/^	public function testVariableNaming() {$/;"	f
uninflected	lib/Cake/Test/Case/Utility/InflectorTest.php	/^		$uninflected = array('atlas', 'lapis', 'onibus', 'pires', 'virus', '.*x');$/;"	v
FirstGenericObject	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^		$this->FirstGenericObject = $this->getMock('FirstGenericObject', array(), array(), '', false);$/;"	v
FirstGenericObject	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^class FirstGenericObject extends GenericObject {$/;"	c
GenericObject	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^class GenericObject {$/;"	c
GenericObjectCollection	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^class GenericObjectCollection extends ObjectCollection {$/;"	c
ObjectCollectionTest	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^class ObjectCollectionTest extends CakeTestCase {$/;"	c
Objects	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^		$this->Objects = new GenericObjectCollection();$/;"	v
SecondGenericObject	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^		$this->SecondGenericObject = $this->getMock('SecondGenericObject', array(), array(), '', false);$/;"	v
SecondGenericObject	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^class SecondGenericObject extends GenericObject {$/;"	c
ThirdGenericObject	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^		$this->ThirdGenericObject = $this->getMock('ThirdGenericObject', array(), array(), '', false);$/;"	v
ThirdGenericObject	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^class ThirdGenericObject extends GenericObject {$/;"	c
_Collection	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^		$this->_Collection = $collection;$/;"	v
__construct	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^	public function __construct(GenericObjectCollection $collection, $settings = array()) {$/;"	f
_makeMockClasses	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^	protected function _makeMockClasses() {$/;"	f
callback	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^	public function callback() {$/;"	f
components	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^		$components = array($/;"	v
enable	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^		$enable = isset($settings['enabled']) ? $settings['enabled'] : true;$/;"	v
event	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^		$event = new CakeEvent('callback', $subjectClass, array('first argument'));$/;"	v
expected	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^		$expected = array($/;"	v
load	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^	public function load($object, $settings = array()) {$/;"	f
objectClass	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^		$objectClass = $name . 'GenericObject';$/;"	v
result	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^		$result = $this->Objects->load('First');$/;"	v
result	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^		$result = $this->Objects->loaded();$/;"	v
result	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^		$result = $this->Objects->set('First', new SecondGenericObject($this->Objects));$/;"	v
result	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^		$result = $this->Objects->set('Second', new SecondGenericObject($this->Objects));$/;"	v
result	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^		$result = $this->Objects->trigger($/;"	v
result	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^		$result = $this->Objects->trigger('callback', array(), array('collectReturn' => true));$/;"	v
result	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^		$result = ObjectCollection::normalizeObjectArray($components);$/;"	v
setObject	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^	public function setObject($name, $object, $settings = array()) {$/;"	f
setUp	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^	public function setUp() {$/;"	f
settings	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^		$this->settings = $settings;$/;"	v
subjectClass	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^		$subjectClass = new Object();$/;"	v
tearDown	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^	public function tearDown() {$/;"	f
testDispatchEventNoSubject	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^	public function testDispatchEventNoSubject() {$/;"	f
testDispatchEventWithSubject	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^	public function testDispatchEventWithSubject() {$/;"	f
testLoad	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^	public function testLoad() {$/;"	f
testSet	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^	public function testSet() {$/;"	f
testTrigger	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^	public function testTrigger() {$/;"	f
testTriggerModParamsInvalidIndex	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^	public function testTriggerModParamsInvalidIndex() {$/;"	f
testTriggerModParamsNullIgnored	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^	public function testTriggerModParamsNullIgnored() {$/;"	f
testTriggerPriority	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^	public function testTriggerPriority() {$/;"	f
testTriggerWithBreak	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^	public function testTriggerWithBreak() {$/;"	f
testTriggerWithCollectReturn	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^	public function testTriggerWithCollectReturn() {$/;"	f
testTriggerWithDisabledObjects	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^	public function testTriggerWithDisabledObjects() {$/;"	f
testTriggerWithModParams	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^	public function testTriggerWithModParams() {$/;"	f
testUnload	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^	public function testUnload() {$/;"	f
testnormalizeObjectArray	lib/Cake/Test/Case/Utility/ObjectCollectionTest.php	/^	public function testnormalizeObjectArray() {$/;"	f
SanitizeArticle	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^class SanitizeArticle extends CakeTestModel {$/;"	c
SanitizeDataTest	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^class SanitizeDataTest extends CakeTestModel {$/;"	c
SanitizeTest	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^class SanitizeTest extends CakeTestCase {$/;"	c
array	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$array = array(array('\\\\$', array('key' => 'test & "quote" \\'other\\' ;.$ \\\\$ symbol.' . "\\r" . 'another line')));$/;"	v
array	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$array = array(array('test & "quote" \\'other\\' ;.$ \\\\$ symbol.' . "\\r" . 'another line'));$/;"	v
array	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$array = array(array('test & "quote" \\'other\\' ;.$ symbol.' . "\\r" . 'another line'));$/;"	v
array	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$array = array(array('test odd Ä spacesé'));$/;"	v
autoFixtures	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^	public $autoFixtures = false;$/;"	v
data	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$data = array($/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = "This sentence has lots of whitespace that needs to be trimmed.";$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = "\\n" . '<link rel="icon" href="\/favicon.ico" type="image\/x-icon" \/>' . "\\n" .$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = "text\\n\\ntext";$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = ' ';$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = '"\/>';$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = '';$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = '<';$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = '<a href="http:\/\/www.badsite.com\/phising">test image alt<\/a><br \/>';$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = '<a onclick="medium()" href="http:\/\/example.com"><\/a>';$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = '<p>This is ok text<\/p>';$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = 'Headline<p>My Link could go to a bad site<\/p>';$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = 'I love ßá†ö√ letters.';$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = 'Important message!<br \/>This message will self destruct!';$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = 'Important message!<br>This message will self destruct!';$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = 'Important<p>Additional information here . Read even more here<\/p>';$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = 'Important<p>Additional information here <img src="\/img\/test.png" \/>. Read even more here<\/p>';$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = 'Iwouldliketodancesing';$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = 'The &quot;lazy&quot; dog &#039;jumped&#039; &amp; flew over the moon. If (1+1) = 2 &lt;em&gt;is&lt;\/em&gt; true, (2-1) = 1 is also true';$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = 'The &quot;lazy&quot; dog &amp; his friend Apple&amp;reg; conquered the world';$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = 'The &quot;lazy&quot; dog &amp; his friend Apple&reg; conquered the world';$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = 'The &quot;lazy&quot; dog \\'jumped\\'';$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = 'This is a test string &amp; so is this';$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = 'anythingOR11';$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = 'my image<br \/>';$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = 'test & "quote" \\'other\\' ;.$ $ symbol.another line';$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = 'test & "quote" \\'other\\' ;.$ \\\\$ symbol.another line';$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = 'test & "quote" \\'other\\' ;.$ symbol.' . "\\r" . 'another line';$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = 'test & ' . Sanitize::escape('"quote"', 'test') . ' ' . Sanitize::escape('\\'other\\'', 'test') . ' ;.$ symbol.another line';$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = 'test &amp; &quot;quote&quot; &#039;other&#039; ;.$ symbol.another line';$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = 'xAND1SELECTCOUNTFROMusers';$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = 'xANDemailISNULL';$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = 'xDROPTABLEmembers';$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = array('This s th% s0ng that never ends it g*es',$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = array(array('$', array('key' => 'test & "quote" \\'other\\' ;.$ $ symbol.another line')));$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = array(array('test & "quote" \\'other\\' ;.$ $ symbol.another line'));$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = array(array('test &amp; &quot;quote&quot; &#039;other&#039; ;.$ symbol.another line'));$/;"	v
expected	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$expected = array(array('test odd &Auml; spaces&eacute;'));$/;"	v
fixtures	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^	public $fixtures = array('core.data_test', 'core.article');$/;"	v
result	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$result = Sanitize::clean($array, array('connection' => 'test'));$/;"	v
result	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$result = Sanitize::clean($array, array('encode' => false, 'escape' => false, 'connection' => 'test'));$/;"	v
result	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$result = Sanitize::clean($array, array('odd_spaces' => false, 'escape' => false, 'connection' => 'test'));$/;"	v
result	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$result = Sanitize::clean($data, array('connection' => 'test'));$/;"	v
result	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$result = Sanitize::clean($string, array('connection' => 'test'));$/;"	v
result	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$result = Sanitize::clean($string, array('encode' => false, 'connection' => 'test'));$/;"	v
result	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$result = Sanitize::clean($string, array('encode' => false, 'escape' => false, 'carriage' => false, 'connection' => 'test'));$/;"	v
result	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$result = Sanitize::clean($string, array('encode' => false, 'escape' => false, 'connection' => 'test'));$/;"	v
result	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$result = Sanitize::clean($string, array('encode' => false, 'escape' => false, 'dollar' => false, 'connection' => 'test'));$/;"	v
result	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$result = Sanitize::html($string);$/;"	v
result	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$result = Sanitize::html($string, array('double' => false));$/;"	v
result	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$result = Sanitize::html($string, array('quotes' => ENT_COMPAT));$/;"	v
result	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$result = Sanitize::html($string, array('quotes' => ENT_NOQUOTES));$/;"	v
result	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$result = Sanitize::html($string, array('remove' => true));$/;"	v
result	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$result = Sanitize::paranoid($string);$/;"	v
result	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$result = Sanitize::paranoid($string, array('%', '*', '.', ' '));$/;"	v
result	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$result = Sanitize::stripAll($string);$/;"	v
result	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$result = Sanitize::stripImages($string);$/;"	v
result	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$result = Sanitize::stripScripts($string);$/;"	v
result	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$result = Sanitize::stripTags($string, 'b');$/;"	v
result	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$result = Sanitize::stripTags($string, 'h2', 'a');$/;"	v
result	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$result = Sanitize::stripTags($string, 'h2', 'a', 'img');$/;"	v
result	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$result = Sanitize::stripTags($string, 'script');$/;"	v
result	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$result = Sanitize::stripWhitespace($string);$/;"	v
result	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$result = Sanitize::stripWhitespace($text);$/;"	v
resultAlpha	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$resultAlpha = Sanitize::escape('abc', 'test');$/;"	v
resultNull	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$resultNull = Sanitize::escape(false, 'test');$/;"	v
resultNull	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$resultNull = Sanitize::escape(null, 'test');$/;"	v
resultNull	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$resultNull = Sanitize::escape(true, 'test');$/;"	v
resultNumeric	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$resultNumeric = Sanitize::escape('#1234.23', 'test');$/;"	v
resultNumeric	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$resultNumeric = Sanitize::escape('123', 'test');$/;"	v
resultNumeric	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$resultNumeric = Sanitize::escape(1234, 'test');$/;"	v
resultNumeric	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$resultNumeric = Sanitize::escape(1234.23, 'test');$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = "This     sentence \\t\\t\\t has lots of \\n\\n white\\nspace \\rthat \\r\\n needs to be    \\t    \\n trimmed.";$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = "anything' OR 1 = 1";$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = "x' AND 1=(SELECT COUNT(*) FROM users); --";$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = "x' AND email IS NULL; --";$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = "x'; DROP TABLE members; --";$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = '';$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = '<<script>alert("XSS");\/\/<<\/script>';$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = '<IMG SRC=&#0000106&#0000097&#0000118&#0000097&#0000115&#0000099&#0000114&#0000105&#0000112&#0000116&#0000058&#0000097&#0000108&#0000101&#0000114&#0000116&#0000040&#0000039&#0000088&#0000083&#0000083&#0000039&#0000041>';$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = '<a href="http:\/\/www.badsite.com\/phising"><img src="\/img\/test.jpg" alt="test image alt" title="test image title" id="myImage" class="image-left"\/><\/a>';$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = '<a onclick="medium()" href="http:\/\/example.com"><img src="foobar.png" onclick="evilFunction(); return false;"\/><\/a>';$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = '<b>Important message!<\/b><br \/>This message will self destruct!';$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = '<b>Important message!<\/b><br>This message will self destruct!';$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = '<h2 onclick="alert(\\'evil\\'); onmouseover="badness()">Important<\/h2><p>Additional information here <a href="\/about"><img src="\/img\/test.png" \/><\/a>. Read even more here<\/p>';$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = '<h2>Headline<\/h2><p><a href="http:\/\/example.com">My Link<\/a> could go to a bad site<\/p>';$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = '<h2>Important<\/h2><p>Additional information here <a href="\/about"><img src="\/img\/test.png" \/><\/a>. Read even more here<\/p>';$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = '<img """><script>alert("xss")<\/script>"\/>';$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = '<img src="\/img\/test.jpg" alt="my image" \/>';$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = '<img src="http:\/\/google.com\/images\/logo.gif" onload="window.location=\\'http:\/\/sam.com\/\\'" \/>' . "\\n" .$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = '<img src="javascript:alert(\\'XSS\\');" \/>';$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = '<link href="\/css\/styles.css" media="screen" rel="stylesheet" \/>' . "\\n" .$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = '<link href="\/css\/styles.css" media="screen" rel="stylesheet" \/>';$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = '<p>This is a <em>test string<\/em> & so is this<\/p>';$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = '<script type="text\/javascript" src="http:\/\/evildomain.com"> <\/script>';$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = '<script type="text\/javascript"> alert("hacked!");<\/script>';$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = '<script> alert("hacked!");<\/script>';$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = '<style type="text\/css"><!-- #content { display:none; } --><\/style>';$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = '<style>#content { display:none; }<\/style>';$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = 'I would like to !%@#% & dance & sing ^$&*()-+';$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = 'The "lazy" dog & his friend Apple&reg; conquered the world';$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = 'The "lazy" dog \\'jumped\\' & flew over the moon. If (1+1) = 2 <em>is<\/em> true, (2-1) = 1 is also true';$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = 'The "lazy" dog \\'jumped\\'';$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = 'test & "quote" \\'other\\' ;.$ \\\\$ symbol.' . "\\r" . 'another line';$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = 'test & "quote" \\'other\\' ;.$ symbol.' . "\\r" . 'another line';$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = <<<HTML$/;"	v
string	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$string = array('This |s th% s0ng that never ends it g*es',$/;"	v
testClean	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^	public function testClean() {$/;"	f
testEscapeAlphaNumeric	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^	public function testEscapeAlphaNumeric() {$/;"	f
testHtml	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^	public function testHtml() {$/;"	f
testParanoid	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^	public function testParanoid() {$/;"	f
testStripAll	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^	public function testStripAll() {$/;"	f
testStripImages	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^	public function testStripImages() {$/;"	f
testStripScripts	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^	public function testStripScripts() {$/;"	f
testStripTags	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^	public function testStripTags() {$/;"	f
testStripWhitespace	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^	public function testStripWhitespace() {$/;"	f
text	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^		$text = 'I    love  ßá†ö√    letters.';$/;"	v
useTable	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^	public $useTable = 'articles';$/;"	v
useTable	lib/Cake/Test/Case/Utility/SanitizeTest.php	/^	public $useTable = 'data_tests';$/;"	v
SecurityTest	lib/Cake/Test/Case/Utility/SecurityTest.php	/^class SecurityTest extends CakeTestCase {$/;"	c
_hashType	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$_hashType = Security::$hashType;$/;"	v
authKey	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$authKey = Security::generateAuthKey();$/;"	v
expected	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$expected = sha1('customsaltsomevalue');$/;"	v
hash	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$hash = 'someHash';$/;"	v
hashType	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$hashType = 'blowfish';$/;"	v
hashType	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$hashType = 'md5';$/;"	v
hashType	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$hashType = 'sha1';$/;"	v
hashedPassword	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$hashedPassword = Security::hash($submittedPassword, null, $storedPassword);$/;"	v
key	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$key = '';$/;"	v
key	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$key = 'DYhG93b0qyJfIxfs2guVoUubWwvniR2G0FgaC9mi';$/;"	v
key	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$key = 'Not the same key. This one will fail';$/;"	v
key	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$key = 'This is a key that is long enough to be ok.';$/;"	v
key	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$key = 'This key is longer than 32 bytes long.';$/;"	v
key	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$key = 'This key is quite long and works well.';$/;"	v
key	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$key = 'my_key';$/;"	v
key	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$key = 'someKey';$/;"	v
key	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$key = 'this is my key of over 32 chars, yes it is';$/;"	v
key	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$key = 'this is too short';$/;"	v
key	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$key = 'too small';$/;"	v
length	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$length = 10;$/;"	v
oldSalt	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$oldSalt = Configure::read('Security.salt');$/;"	v
password	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$password = $submittedPassword = $key;$/;"	v
result	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$result = Security::cipher($txt, $key);$/;"	v
result	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$result = Security::encrypt($txt, $key);$/;"	v
result	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$result = Security::encrypt($txt, $key, $salt);$/;"	v
result	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$result = Security::encrypt('', $key);$/;"	v
result	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$result = Security::encrypt('0', $key);$/;"	v
result	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$result = Security::encrypt(0, $key);$/;"	v
result	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$result = Security::encrypt(false, $key);$/;"	v
result	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$result = Security::encrypt(null, $key);$/;"	v
result	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$result = Security::hash($key, 'sha1', $hash);$/;"	v
result	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$result = Security::hash($key, null, $hash);$/;"	v
result	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$result = Security::hash('somevalue', 'sha1', 'customsalt');$/;"	v
result	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$result = Security::hash('somevalue', 'sha1', true);$/;"	v
result	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$result = Security::rijndael($key, $txt, 'encrypt');$/;"	v
result	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$result = Security::rijndael($txt, $key, 'encrypt');$/;"	v
result	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$result = Security::rijndael('', $key, 'encrypt');$/;"	v
salt	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$salt = 'humpty dumpty had a great fall.';$/;"	v
salt	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$salt = 'this is a delicious salt!';$/;"	v
storedPassword	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$storedPassword = Security::hash($password);$/;"	v
submittedPassword	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$submittedPassword = 'someOtherKey';$/;"	v
sut	lib/Cake/Test/Case/Utility/SecurityTest.php	/^	public $sut = null;$/;"	v
test	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$test = Security::hash('password', 'blowfish');$/;"	v
testCipher	lib/Cake/Test/Case/Utility/SecurityTest.php	/^	public function testCipher() {$/;"	f
testCipherEmptyKey	lib/Cake/Test/Case/Utility/SecurityTest.php	/^	public function testCipherEmptyKey() {$/;"	f
testDecryptHmacFailure	lib/Cake/Test/Case/Utility/SecurityTest.php	/^	public function testDecryptHmacFailure() {$/;"	f
testDecryptHmacSaltFailure	lib/Cake/Test/Case/Utility/SecurityTest.php	/^	public function testDecryptHmacSaltFailure() {$/;"	f
testDecryptInvalidData	lib/Cake/Test/Case/Utility/SecurityTest.php	/^	public function testDecryptInvalidData() {$/;"	f
testDecryptInvalidKey	lib/Cake/Test/Case/Utility/SecurityTest.php	/^	public function testDecryptInvalidKey() {$/;"	f
testDecryptKeyFailure	lib/Cake/Test/Case/Utility/SecurityTest.php	/^	public function testDecryptKeyFailure() {$/;"	f
testEncryptDecrypt	lib/Cake/Test/Case/Utility/SecurityTest.php	/^	public function testEncryptDecrypt() {$/;"	f
testEncryptDecryptFalseyData	lib/Cake/Test/Case/Utility/SecurityTest.php	/^	public function testEncryptDecryptFalseyData() {$/;"	f
testEncryptInvalidKey	lib/Cake/Test/Case/Utility/SecurityTest.php	/^	public function testEncryptInvalidKey() {$/;"	f
testGenerateAuthkey	lib/Cake/Test/Case/Utility/SecurityTest.php	/^	public function testGenerateAuthkey() {$/;"	f
testHash	lib/Cake/Test/Case/Utility/SecurityTest.php	/^	public function testHash() {$/;"	f
testHashAnotherInvalidSalt	lib/Cake/Test/Case/Utility/SecurityTest.php	/^	public function testHashAnotherInvalidSalt() {$/;"	f
testHashBlowfish	lib/Cake/Test/Case/Utility/SecurityTest.php	/^	public function testHashBlowfish() {$/;"	f
testHashInvalidCost	lib/Cake/Test/Case/Utility/SecurityTest.php	/^	public function testHashInvalidCost() {$/;"	f
testHashInvalidSalt	lib/Cake/Test/Case/Utility/SecurityTest.php	/^	public function testHashInvalidSalt() {$/;"	f
testHashYetAnotherInvalidSalt	lib/Cake/Test/Case/Utility/SecurityTest.php	/^	public function testHashYetAnotherInvalidSalt() {$/;"	f
testInactiveMins	lib/Cake/Test/Case/Utility/SecurityTest.php	/^	public function testInactiveMins() {$/;"	f
testRijndael	lib/Cake/Test/Case/Utility/SecurityTest.php	/^	public function testRijndael() {$/;"	f
testRijndaelBackwardCompatibility	lib/Cake/Test/Case/Utility/SecurityTest.php	/^	public function testRijndaelBackwardCompatibility() {$/;"	f
testRijndaelInvalidKey	lib/Cake/Test/Case/Utility/SecurityTest.php	/^	public function testRijndaelInvalidKey() {$/;"	f
testRijndaelInvalidOperation	lib/Cake/Test/Case/Utility/SecurityTest.php	/^	public function testRijndaelInvalidOperation() {$/;"	f
testValidateAuthKey	lib/Cake/Test/Case/Utility/SecurityTest.php	/^	public function testValidateAuthKey() {$/;"	f
txt	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$txt = '';$/;"	v
txt	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$txt = '123456';$/;"	v
txt	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$txt = 'The quick brown fox jumped over the lazy dog.';$/;"	v
txt	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$txt = 'The quick brown fox';$/;"	v
txt	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$txt = 'some_text';$/;"	v
txt	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$txt = 123456;$/;"	v
value	lib/Cake/Test/Case/Utility/SecurityTest.php	/^		$value = base64_decode('1WPjnq96LMzLGwNgmudHF+cAIqVUN5DaUZEpf5tm1EzSgt5iYY9o3d66iRI\/fKJLTlTVGsa8HzW0jDNitmVXoQ==');$/;"	v
SetTest	lib/Cake/Test/Case/Utility/SetTest.php	/^class SetTest extends CakeTestCase {$/;"	c
a	lib/Cake/Test/Case/Utility/SetTest.php	/^		$a = Set::sort($a, '{n}', 'asc');$/;"	v
a	lib/Cake/Test/Case/Utility/SetTest.php	/^		$a = Set::sort($a, '{n}.Friend.{n}.name', 'asc');$/;"	v
a	lib/Cake/Test/Case/Utility/SetTest.php	/^		$a = Set::sort($a, '{n}.Friend.{n}.name', 'desc');$/;"	v
a	lib/Cake/Test/Case/Utility/SetTest.php	/^		$a = Set::sort($a, '{n}.Person.name', 'ASC');$/;"	v
a	lib/Cake/Test/Case/Utility/SetTest.php	/^		$a = Set::sort($a, '{n}.Person.name', 'asc');$/;"	v
a	lib/Cake/Test/Case/Utility/SetTest.php	/^		$a = Set::sort($a, '{n}.{n}', 'asc');$/;"	v
a	lib/Cake/Test/Case/Utility/SetTest.php	/^		$a = array($/;"	v
a	lib/Cake/Test/Case/Utility/SetTest.php	/^		$a = array('Tree', 'CounterCache',$/;"	v
a	lib/Cake/Test/Case/Utility/SetTest.php	/^		$a = array('foo' => 'bar', 'bar' => 'foo');$/;"	v
a	lib/Cake/Test/Case/Utility/SetTest.php	/^		$a = array('foo', 'foo2');$/;"	v
a	lib/Cake/Test/Case/Utility/SetTest.php	/^		$a = array('key' => 'value', 'another' => null, 'name' => 'me');$/;"	v
a	lib/Cake/Test/Case/Utility/SetTest.php	/^		$a = array('key' => true, 'another' => false, 'name' => 'me');$/;"	v
a	lib/Cake/Test/Case/Utility/SetTest.php	/^		$a = array('name' => 'bob', 'address' => 'home');$/;"	v
a	lib/Cake/Test/Case/Utility/SetTest.php	/^		$a = array('users' => array('bob', 'jim'));$/;"	v
a	lib/Cake/Test/Case/Utility/SetTest.php	/^		$a = array('users' => array('jim', 'bob'));$/;"	v
a	lib/Cake/Test/Case/Utility/SetTest.php	/^		$a = array('users' => array('lisa' => array('id' => 5, 'pw' => 'secret')), 'cakephp');$/;"	v
a	lib/Cake/Test/Case/Utility/SetTest.php	/^		$a = array();$/;"	v
a	lib/Cake/Test/Case/Utility/SetTest.php	/^		$a = array(array('1day' => '20 sales'), array('1day' => '2 sales'));$/;"	v
a	lib/Cake/Test/Case/Utility/SetTest.php	/^		$a = new ArrayObject();$/;"	v
a	lib/Cake/Test/Case/Utility/SetTest.php	/^		$a = new stdClass();$/;"	v
array1	lib/Cake/Test/Case/Utility/SetTest.php	/^		$array1 = array($/;"	v
array1	lib/Cake/Test/Case/Utility/SetTest.php	/^		$array1 = array('ModelOne' => array('id' => 1001, 'field_one' => 'a1.m1.f1', 'field_two' => 'a1.m1.f2'));$/;"	v
array2	lib/Cake/Test/Case/Utility/SetTest.php	/^		$array2 = array($/;"	v
array2	lib/Cake/Test/Case/Utility/SetTest.php	/^		$array2 = array('ModelTwo' => array('id' => 1002, 'field_one' => 'a2.m2.f1', 'field_two' => 'a2.m2.f2'));$/;"	v
array3	lib/Cake/Test/Case/Utility/SetTest.php	/^		$array3 = array('ModelOne' => array('id' => 1003, 'field_one' => 'a3.m1.f1', 'field_two' => 'a3.m1.f2', 'field_three' => 'a3.m1.f3'));$/;"	v
array3	lib/Cake/Test/Case/Utility/SetTest.php	/^		$array3 = array(0 => array('ModelThree' => array('id' => 1003, 'field_one' => 's3.0.m3.f1', 'field_two' => 's3.0.m3.f2')));$/;"	v
b	lib/Cake/Test/Case/Utility/SetTest.php	/^		$b = array($/;"	v
b	lib/Cake/Test/Case/Utility/SetTest.php	/^		$b = array('Cacheable' => array('enabled' => false),$/;"	v
b	lib/Cake/Test/Case/Utility/SetTest.php	/^		$b = array('Deep' => $a[0]['Deep']);$/;"	v
b	lib/Cake/Test/Case/Utility/SetTest.php	/^		$b = array('bar', 'bar2');$/;"	v
b	lib/Cake/Test/Case/Utility/SetTest.php	/^		$b = array('foo' => 'no-bar', 'bar' => 'no-foo');$/;"	v
b	lib/Cake/Test/Case/Utility/SetTest.php	/^		$b = array('key' => 'differentValue', 'another' => 'value');$/;"	v
b	lib/Cake/Test/Case/Utility/SetTest.php	/^		$b = array('key' => 'differentValue', 'another' => null);$/;"	v
b	lib/Cake/Test/Case/Utility/SetTest.php	/^		$b = array('key' => 1, 'another' => 0);$/;"	v
b	lib/Cake/Test/Case/Utility/SetTest.php	/^		$b = array('name' => 'bob', 'address' => 'home');$/;"	v
b	lib/Cake/Test/Case/Utility/SetTest.php	/^		$b = array('users' => 'none');$/;"	v
b	lib/Cake/Test/Case/Utility/SetTest.php	/^		$b = array('users' => array('lisa' => array('pw' => 'new-pass', 'age' => 23)), 'ice-cream');$/;"	v
b	lib/Cake/Test/Case/Utility/SetTest.php	/^		$b = array('users' => array('lisa', 'tina'));$/;"	v
b	lib/Cake/Test/Case/Utility/SetTest.php	/^		$b = array();$/;"	v
b	lib/Cake/Test/Case/Utility/SetTest.php	/^		$b = array(0 => 'differentValue', 1 => 'value');$/;"	v
b	lib/Cake/Test/Case/Utility/SetTest.php	/^		$b = new stdClass();$/;"	v
c	lib/Cake/Test/Case/Utility/SetTest.php	/^		$c = array($/;"	v
c	lib/Cake/Test/Case/Utility/SetTest.php	/^		$c = array('users' => array('lisa' => array('pw' => 'you-will-never-guess', 'age' => 25, 'pet' => 'dog')), 'chocolate');$/;"	v
class	lib/Cake/Test/Case/Utility/SetTest.php	/^		$class = new stdClass;$/;"	v
comment	lib/Cake/Test/Case/Utility/SetTest.php	/^		$comment = new stdClass;$/;"	v
comment2	lib/Cake/Test/Case/Utility/SetTest.php	/^		$comment2 = new stdClass;$/;"	v
common	lib/Cake/Test/Case/Utility/SetTest.php	/^		$common = array($/;"	v
data	lib/Cake/Test/Case/Utility/SetTest.php	/^		$data = array($/;"	v
data	lib/Cake/Test/Case/Utility/SetTest.php	/^		$data = array('1' => '1.1', '2', '3' => array('3.1' => '3.1.1'));$/;"	v
data	lib/Cake/Test/Case/Utility/SetTest.php	/^		$data = array('1' => '1.1', '2', '3');$/;"	v
data	lib/Cake/Test/Case/Utility/SetTest.php	/^		$data = array('1' => array('1.1' => '1.1.1'), '2', '3' => array('3.1' => '3.1.1'));$/;"	v
data	lib/Cake/Test/Case/Utility/SetTest.php	/^		$data = array('1' => array('1.1' => '1.1.1'), '2', '3' => array('3.1' => array('3.1.1' => '3.1.1.1')));$/;"	v
data	lib/Cake/Test/Case/Utility/SetTest.php	/^		$data = array('1' => array('1.1' => '1.1.1'), array('2' => array('2.1' => array('2.1.1' => '2.1.1.1'))), '3' => array('3.1' => array('3.1.1' => '3.1.1.1')));$/;"	v
data	lib/Cake/Test/Case/Utility/SetTest.php	/^		$data = array('1' => array('1.1' => '1.1.1'), array('2' => array('2.1' => array('2.1.1' => array('2.1.1.1' => '2.1.1.1.1')))), '3' => array('3.1' => array('3.1.1' => '3.1.1.1')));$/;"	v
data	lib/Cake/Test/Case/Utility/SetTest.php	/^		$data = array('1' => array('1.1' => '1.1.1'), array('2' => array('2.1' => array('2.1.1' => array('2.1.1.1')))), '3' => array('3.1' => array('3.1.1' => '3.1.1.1')));$/;"	v
data	lib/Cake/Test/Case/Utility/SetTest.php	/^		$data = array('Larry', 'Curly', 'Moe');$/;"	v
data	lib/Cake/Test/Case/Utility/SetTest.php	/^		$data = array('Multi' => array('dimensonal' => array('array')));$/;"	v
data	lib/Cake/Test/Case/Utility/SetTest.php	/^		$data = array('My', 'Array', 'To', 'Flatten');$/;"	v
data	lib/Cake/Test/Case/Utility/SetTest.php	/^		$data = array('one');$/;"	v
data	lib/Cake/Test/Case/Utility/SetTest.php	/^		$data = array('one', '2', 'three');$/;"	v
data	lib/Cake/Test/Case/Utility/SetTest.php	/^		$data = array('plugin' => null, 'controller' => '', 'action' => '', 1, 'whatever');$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = $a + $b;$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = $a;$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = $b;$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = 'Article 1';$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = 'Article 2';$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = 15;$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = 9;$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array($common[0]['Comment'][0]);$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array($common[0]['Comment'][2]);$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array($common[1]['Comment'][1]);$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('0', 2 => true, 3 => 0, 4 => array('one thing', 'I can tell you', 'is you got to be'));$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('20 sales', '2 sales');$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('2: mariano.iglesias' => 'Mariano Iglesias', '14: phpnut' => 'Larry E. Masters', '25: gwoo' => 'The Gwoo');$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('42', '', '');$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('42, Nate', '0, Larry', '0, Garrett');$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('A1', 'A2');$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('Abele, Nate', 'Masters, Larry', 'Woodworth, Garrett');$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('Article 1', 'Article 2', 'Article 3');$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('Boston, 42', 'Boondock, ', 'Venice Beach, ');$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('Boston, MA', 'Boondock, TN', 'Venice Beach, CA');$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('MOVIE 3', 'MOVIE 1', 'MOVIE 2');$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('Mariano Iglesias: mariano.iglesias' => 2, 'Larry E. Masters: phpnut' => 14, 'The Gwoo: gwoo' => 25);$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('ModelOne' => array('id' => 1001, 'field_one' => 'a1.m1.f1', 'field_two' => 'a1.m1.f2', 'field_three' => 'a3.m1.f3'));$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('Movie 3', 'Movie 1', 'Movie 2');$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('Nate, 42', 'Larry, 0', 'Garrett, 0');$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('Neo', 'Morpheus');$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('Second');$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('Session Test' => array('Test Case' => 'test'));$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('Tree' => null, 'CounterCache' => null,$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('Tree', 'CounterCache',$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('User' => array('id' => '100'), 'Profile' => array('name' => 'Joe Mamma'));$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('User' => array('psword' => 'whatever', 'Icon' => array('id' => 851)));$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('User' => array('psword' => 'whatever', 'Icon' => array('id' => 851), 'Profile' => array('name' => 'Some Name', 'address' => 'Some Address')));$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('User' => array('psword' => 'whatever',$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('XRDS' => array($/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('data' => array('post' => array('@title' => 'Title of this post', '@description' => 'cool')));$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('dot.test' => array(array('name' => 'jippi')));$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('example' =>$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('key' => 'differentValue', 'another' => 'value', 'name' => 'me');$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('key' => 'value', 'another' => null, 'name' => 'me');$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('key' => 'value', 'name' => 'me');$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('mariano.iglesias', 'mariano.iglesias', 'phpnut');$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('mariano.iglesias: 2' => 'Mariano Iglesias', 'phpnut: 14' => 'Larry E. Masters', 'gwoo: 25' => 'The Gwoo');$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('mariano.iglesias: Mariano Iglesias' => 2, 'phpnut: Larry E. Masters' => 14, 'gwoo: The Gwoo' => 25);$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('name' => 'me');$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('one' => 1, 'two' => 2, 'three' => 3, 'four' => null);$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('one' => array('a', 'b', 'c' => 'cee'), 'two' => 2, 'three' => null);$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('one' => null, 'two' => null, 'three' => null);$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('one', 'two', 'three');$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('page', 'fruit');$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('rss' => array($/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('users' => array('lisa' => array('id' => 5, 'pw' => 'you-will-never-guess', 'age' => 25, 'pet' => 'dog')), 'cakephp', 'ice-cream', 'chocolate');$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('{42, 42}', '{0, {0}}', '{0, {1}}');$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('{42, 42}', '{{0}, {0}}', '{{1}, {1}}');$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array('{Boston, MA}', '{Boondock, TN}', '{Venice Beach, CA}');$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array();$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(0 => array('Article' => array('id' => 1, 'approved' => 1)));$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(0 => array('page'), 1 => array('fruit'));$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(1);$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(1, 2, 3);$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(1, 2, 3, 4);$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(1, 2, 3, 4, 5);$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(1, 2, 4, 5);$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(1, 3);$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(1, 3, 4);$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(2 => 'Mariano Iglesias', 14 => 'Larry E. Masters', 25 => 'The Gwoo');$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(2 => null, 14 => null, 25 => null);$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(2);$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(2, 3);$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(3);$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(4);$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(4, 5);$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(5);$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(7);$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(7, 2, 1);$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(array('Category' => $tree[1]['Category']));$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(array('Category' => $tree[1]['Category'], 'children' => $tree[1]['children']));$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(array('Comment' => $common[1]['Comment'][0]));$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(array('I'), array('II'));$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(array('a' => $c[2]['a']));$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(array('children' => $tree[1]['children'][0]), array('children' => $tree[1]['children'][1]));$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(array('id', 'name'), array('id', 'name'), array('id', 'name'), array('id', 'name'));$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(array('jippi'), array('jippi'));$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(array('name' => 'zipfile.zip', 'type' => 'application\/zip', 'tmp_name' => '\/tmp\/php178.tmp', 'error' => 0, 'size' => '564647'));$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(array('name' => 'zipfile2.zip', 'type' => 'application\/x zip compressed', 'tmp_name' => '\/tmp\/php179.tmp', 'error' => 0, 'size' => '354784'));$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(array('name' => 'zipfile2.zip', 'type' => 'application\/x-zip-compressed', 'tmp_name' => '\/tmp\/php179.tmp', 'error' => 0, 'size' => '354784'));$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(array('pages' => 'page'), array('fruites' => 'fruit'));$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(array('test' => $a[0]['Deep']['Nesting']['test']));$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(array(10, 11, 12), array(13, 14), null);$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = array(array(array('name' => 'jippi')), array(array('name' => 'jippi')));$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = new stdClass();$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = new stdClass;$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected = null;$/;"	v
expected	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected =$/;"	v
expected2	lib/Cake/Test/Case/Utility/SetTest.php	/^		$expected2 = new stdClass;$/;"	v
f	lib/Cake/Test/Case/Utility/SetTest.php	/^		$f = array($/;"	v
flat	lib/Cake/Test/Case/Utility/SetTest.php	/^		$flat = Set::flatten($data);$/;"	v
habtm	lib/Cake/Test/Case/Utility/SetTest.php	/^		$habtm = array($/;"	v
hasMany	lib/Cake/Test/Case/Utility/SetTest.php	/^		$hasMany = array($/;"	v
ids	lib/Cake/Test/Case/Utility/SetTest.php	/^		$ids = array();$/;"	v
input	lib/Cake/Test/Case/Utility/SetTest.php	/^		$input = array($/;"	v
items	lib/Cake/Test/Case/Utility/SetTest.php	/^		$items = array($/;"	v
map	lib/Cake/Test/Case/Utility/SetTest.php	/^		$map = Set::map($expected);$/;"	v
map	lib/Cake/Test/Case/Utility/SetTest.php	/^		$map = Set::map($expected, true);$/;"	v
mapped	lib/Cake/Test/Case/Utility/SetTest.php	/^		$mapped = Set::map($data);$/;"	v
mapped	lib/Cake/Test/Case/Utility/SetTest.php	/^		$mapped = Set::map($expected);$/;"	v
menus	lib/Cake/Test/Case/Utility/SetTest.php	/^		$menus = array($/;"	v
method	lib/Cake/Test/Case/Utility/SetTest.php	/^	public static function method($val1, $val2) {$/;"	f
mixedKeys	lib/Cake/Test/Case/Utility/SetTest.php	/^		$mixedKeys = array($/;"	v
multiple	lib/Cake/Test/Case/Utility/SetTest.php	/^		$multiple = array($/;"	v
names	lib/Cake/Test/Case/Utility/SetTest.php	/^		$names = array($/;"	v
nonSequential	lib/Cake/Test/Case/Utility/SetTest.php	/^		$nonSequential = array($/;"	v
nonZero	lib/Cake/Test/Case/Utility/SetTest.php	/^		$nonZero = array($/;"	v
piece	lib/Cake/Test/Case/Utility/SetTest.php	/^		$piece = new stdClass();$/;"	v
piece2	lib/Cake/Test/Case/Utility/SetTest.php	/^		$piece2 = new stdClass();$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract($common, '\/1\/Comment\/.[2]');$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract($common, '\/Comment[1]\/.[id=1]');$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract($common, '\/Comment[id!=3]\/id');$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract($common, '\/Comment\/2');$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/', $common);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/Article[:last]\/id', $common);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/CallType[name=Internal Voice]\/..\/x\/hour', $multiple);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/CallType[name=Internal Voice]\/..\/x\/hour', $single);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/Category[name=Category 2]', $tree);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/Category[name=Category 2]\/..', $tree);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/Category[name=Category 2]\/..\/children', $tree);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/Comment[addition=]', $common);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/Comment[id!=3]\/id', $common);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/Comment\/User[name=\/[a-z]+\/]\/..', $habtm);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/Comment\/User[name=\/\\w+\/]\/..', $habtm);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/Comment\/User[name=\/bob|dan\/]\/..', $habtm);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/Comment\/User[name=\/bob|tod\/]\/..', $habtm);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/Comment\/id', $common);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/Comment\/id[:first]', $common);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/Comment\/id[:last]', $common);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/Deep\/Nesting\/test\/1\/..', $a);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/Deep\/Nesting\/test\/2\/..\/..\/..\/Nesting\/test\/2\/..', $a);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/Deep\/Nesting\/test\/2\/and\/..\/..', $a);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/Model\/SubModelsModel[type=2]\/..', $a);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/User[2]\/id', $a);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/User[id>1][id<=3]\/id', $a);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/User[id>3]\/id', $a);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/User[name=\/N\/]\/id', $tricky);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/User[name=\/N\/i]\/id', $tricky);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/User[name=\/n\/]\/id', $tricky);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/User\/@*', $tricky);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/User\/id', $a, array('flatten' => false));$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/User\/id', $nonZero);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/User\/id', $single);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/User\/id', $tricky);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/User\/id', array());$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/User\/name', $mixedKeys);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/a\/@*', $c);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/a\/II[a=3]\/..', $c);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/file\/.[tmp_name=\/tmp\\\/php17\/]', $f);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/file\/.[type=application\/x zip compressed]', $f);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/file\/.[type=application\/x-zip-compressed]', $f);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::extract('\/file\/.[type=application\/zip]', $f);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::merge($a, $b, $c);$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::merge('foo');$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::merge('foo', 'bar');$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::merge('foo', array('user' => 'bob', 'no-bar'), 'bar');$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::merge(array('foo'));$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = Set::merge(array('foo'), array(), array('bar'));$/;"	v
r	lib/Cake/Test/Case/Utility/SetTest.php	/^		$r = array($/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::apply('\/Movie\/rating', $data, 'array_product');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::apply('\/Movie\/rating', $data, 'array_sum');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::apply('\/Movie\/rating', $data, 'strtoupper', array('type' => 'non existing type'));$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::apply('\/Movie\/rating', $data, array('SetTest', 'method'), array('type' => 'reduce'));$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::apply('\/Movie\/title', $data, 'strtoupper', array('type' => 'map'));$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::apply('\/Movie\/title', $data, 'ucfirst', array('type' => 'map'));$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::combine($a, 'fail', 'fail');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::combine($a, '{n}.User.id');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::combine($a, '{n}.User.id', '{n}.User.Data');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::combine($a, '{n}.User.id', '{n}.User.Data', '{n}.User.group_id');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::combine($a, '{n}.User.id', '{n}.User.Data.name');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::combine($a, '{n}.User.id', '{n}.User.Data.name', '{n}.User.group_id');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::combine($a, '{n}.User.id', '{n}.User.non-existant');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::combine($a, '{n}.User.id', array('{0}: {1}', '{n}.User.Data.user', '{n}.User.Data.name'), '{n}.User.group_id');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::combine($a, array('%1$s: %2$d', '{n}.User.Data.user', '{n}.User.id'), '{n}.User.Data.name');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::combine($a, array('%2$d: %1$s', '{n}.User.Data.user', '{n}.User.id'), '{n}.User.Data.name');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::combine($a, array('{0}: {1}', '{n}.User.Data.user', '{n}.User.Data.name'), '{n}.User.id');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::combine($a, array('{1}: {0}', '{n}.User.Data.user', '{n}.User.Data.name'), '{n}.User.id');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::combine($b, 'users.{n}.User.id');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::combine($b, 'users.{n}.User.id', 'users.{n}.User.non-existant');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::combine('', '{n}.User.id', '{n}.User.Data');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::combine(array(), '{n}.User.id', '{n}.User.Data');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::countDim($data);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::countDim($data, true);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::countDim($set, false, 0);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::countDim($set, true);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::diff($a, $b);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::diff($a, array());$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::diff($b, $a);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::diff(array(), $b);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::enum('first', array('first' => 'one', 'second' => 'two'));$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::enum('no', array('no' => 0, 'yes' => 1));$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::enum('not sure', array('no' => 0, 'yes' => 1));$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::enum('third', array('first' => 'one', 'second' => 'two'));$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::enum(0);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::enum(0, $set);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::enum(1);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::enum(1, $set);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::enum(1, 'one, two');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::enum(1, array('one', 'two'));$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::enum(2);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::enum(2, 'one, two');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::enum(2, array('one', 'two'));$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::expand($flat);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::extract($a, '1.Article.title');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::extract($a, '3.Article.title');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::extract($a, 'articles.0.Article.title');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::extract($a, 'articles.{n}.Article.id');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::extract($a, 'articles.{n}.Article.title');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::extract($a, '{[a-z]}');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::extract($a, '{\\d+}.{\\w+}.name');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::extract($a, '{\\w+}.{\\w+}.name');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::extract($a, '{dot\\.test}.{n}');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::extract($a, '{n}.1day');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::extract($a, '{n}.Article.Comment.{n}.id');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::extract($a, '{n}.Article.Comment.{n}.title');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::extract($a, '{n}.Article.User.username');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::extract($a, '{n}.Article.id');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::extract($a, '{n}.Article.title');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::extract($a, '{n}.{\\w+}.name');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::extract($a, '{n}.{s}.name');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::extract($a, '{s}');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::extract($a, '{s}.name');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::extract($a, '{s}.{\\d+}.name');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::extract($a, '{s}.{n}.name');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::extract('\/0', $data);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::extract('\/0\/name', $data);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::extract('\/Article[approved=1]', $startingAtOne);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::extract('\/B\/field1', $items);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::extract('\/Category[id=1]\/..', $data);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::extract('\/Country[name=\/Canada|^$\/]', $data);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::extract('\/ParentNode\/name', $hasMany);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::extract('\/User', $nonZero);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::extract('\/User\/id', $nonZero);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::extract('\/node', $data);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::filter(array('0', false, true, 0, array('one thing', 'I can tell you', 'is you got to be', false)));$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::flatten($data);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::format($data, '%1$s, %2$d', array('{n}.Person.first_name', '{n}.Person.something'));$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::format($data, '%2$d, %1$s', array('{n}.Person.first_name', '{n}.Person.something'));$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::format($data, '%s', array('{n}.Person.something'));$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::format($data, '{%1$s, %1$s}', array('{n}.Person.something', '{n}.Person.something'));$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::format($data, '{%2$d, %1$s}', array('{n}.Person.something', '{n}.Person.something'));$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::format($data, '{0}, {1}', array('{n}.Person.city', '{n}.Person.something'));$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::format($data, '{0}, {1}', array('{n}.Person.city', '{n}.Person.state'));$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::format($data, '{0}, {1}', array('{n}.Person.last_name', '{n}.Person.first_name'));$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::format($data, '{1}, {0}', array('{n}.Person.first_name', '{n}.Person.last_name'));$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::format($data, '{{0}, {1}}', array('{n}.Person.city', '{n}.Person.state'));$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::format($data, '{{0}, {1}}', array('{n}.Person.something', '{n}.Person.something'));$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::insert($a, 'files', array('name' => 'files'));$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::map($/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::map($data);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::map(array($/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::map(null);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::nest($input);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::nest($input, array('idPath' => '\/id', 'parentPath' => '\/parent_id'));$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::nest($input, array('root' => 6));$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::normalize('one  ,  two   ,  three   ', true, ',', true);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::normalize('one two three', true, ' ');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::normalize('one,two,three');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::normalize(array('one' => 1, 'two' => 2, 'three' => 3, 'four'));$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::normalize(array('one' => 1, 'two' => 2, 'three' => 3, 'four'), false);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::normalize(array('one' => array('a', 'b', 'c' => 'cee'), 'two' => 2, 'three'));$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::normalize(array('one', 'two', 'three'));$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::normalize(array('one', 'two', 'three'), false);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::pushDiff($array1, $array2);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::pushDiff($array1, $array3);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::pushDiff($array1, null);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::remove($a, 'files');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::reverse($class);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::reverse($map);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::reverse($mapped);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::reverse($xml);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::reverse(false);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::reverse(null);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::sort($data, '{n}.class', 'asc');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::sort($data, '{n}.test2', 'asc');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::sort($menus, '{[a-z]+}.weight', 'ASC');$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::sort($names, '{n}.employees.0.name', 'asc', 1);$/;"	v
result	lib/Cake/Test/Case/Utility/SetTest.php	/^		$result = Set::sort(array(), '{n}.name', 'asc');$/;"	v
set	lib/Cake/Test/Case/Utility/SetTest.php	/^		$set = Set::insert(array(), 'Session Test', "test");$/;"	v
set	lib/Cake/Test/Case/Utility/SetTest.php	/^		$set = Set::remove($set, 'Session Test');$/;"	v
set	lib/Cake/Test/Case/Utility/SetTest.php	/^		$set = array($/;"	v
set	lib/Cake/Test/Case/Utility/SetTest.php	/^		$set = array('1' => array('1.1' => '1.1.1'), array('2' => array('2.1' => array('2.1.1' => array('2.1.1.1' => '2.1.1.1.1')))), '3' => array('3.1' => array('3.1.1' => '3.1.1.1')));$/;"	v
set	lib/Cake/Test/Case/Utility/SetTest.php	/^		$set = array('a' => 'hi');$/;"	v
set	lib/Cake/Test/Case/Utility/SetTest.php	/^		$set = array('one', 'two');$/;"	v
single	lib/Cake/Test/Case/Utility/SetTest.php	/^		$single = array($/;"	v
sorted	lib/Cake/Test/Case/Utility/SetTest.php	/^		$sorted = Set::sort($toSort, '{s}.number', 'asc');$/;"	v
startingAtOne	lib/Cake/Test/Case/Utility/SetTest.php	/^		$startingAtOne = array($/;"	v
string	lib/Cake/Test/Case/Utility/SetTest.php	/^		$string = '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>$/;"	v
string	lib/Cake/Test/Case/Utility/SetTest.php	/^		$string = '<data><post title="Title of this post" description="cool"\/><\/data>';$/;"	v
test	lib/Cake/Test/Case/Utility/SetTest.php	/^		$test = array();$/;"	v
testApply	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testApply() {$/;"	f
testCheck	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testCheck() {$/;"	f
testClassicExtract	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testClassicExtract() {$/;"	f
testClassicExtractMaxInt	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testClassicExtractMaxInt() {$/;"	f
testCombine	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testCombine() {$/;"	f
testContains	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testContains() {$/;"	f
testCountDim	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testCountDim() {$/;"	f
testDiff	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testDiff() {$/;"	f
testEnum	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testEnum() {$/;"	f
testExpand	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testExpand() {$/;"	f
testExtract	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testExtract() {$/;"	f
testExtractMatchesNull	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testExtractMatchesNull() {$/;"	f
testExtractParentSelector	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testExtractParentSelector() {$/;"	f
testExtractWithArrays	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testExtractWithArrays() {$/;"	f
testExtractWithNonArrayElements	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testExtractWithNonArrayElements() {$/;"	f
testExtractWithNonZeroArrays	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testExtractWithNonZeroArrays() {$/;"	f
testFilter	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testFilter() {$/;"	f
testFlatten	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testFlatten() {$/;"	f
testFormatting	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testFormatting() {$/;"	f
testFormattingNullValues	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testFormattingNullValues() {$/;"	f
testInsert	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testInsert() {$/;"	f
testKeyCheck	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testKeyCheck() {$/;"	f
testMapNesting	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testMapNesting() {$/;"	f
testMapReverse	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testMapReverse() {$/;"	f
testMatches	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testMatches() {$/;"	f
testMerge	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testMerge() {$/;"	f
testMissingParent	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testMissingParent() {$/;"	f
testNest1Dimensional	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testNest1Dimensional() {$/;"	f
testNestModel	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testNestModel() {$/;"	f
testNestModelExplicitRoot	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testNestModelExplicitRoot() {$/;"	f
testNestedMappedData	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testNestedMappedData() {$/;"	f
testNormalizeArrays	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testNormalizeArrays() {$/;"	f
testNormalizeStrings	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testNormalizeStrings() {$/;"	f
testNumericArrayCheck	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testNumericArrayCheck() {$/;"	f
testNumericKeyExtraction	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testNumericKeyExtraction() {$/;"	f
testPushDiff	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testPushDiff() {$/;"	f
testRemove	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testRemove() {$/;"	f
testSetExtractReturnsEmptyArray	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testSetExtractReturnsEmptyArray() {$/;"	f
testSort	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testSort() {$/;"	f
testSortString	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testSortString() {$/;"	f
testSortWithOutOfOrderKeys	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testSortWithOutOfOrderKeys() {$/;"	f
testStrictKeyCheck	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testStrictKeyCheck() {$/;"	f
testWritingWithFunkyKeys	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testWritingWithFunkyKeys() {$/;"	f
testXmlSetReverse	lib/Cake/Test/Case/Utility/SetTest.php	/^	public function testXmlSetReverse() {$/;"	f
text	lib/Cake/Test/Case/Utility/SetTest.php	/^		$text = '<?xml version="1.0" encoding="UTF-8"?>$/;"	v
toSort	lib/Cake/Test/Case/Utility/SetTest.php	/^		$toSort = array($/;"	v
tree	lib/Cake/Test/Case/Utility/SetTest.php	/^		$tree = array($/;"	v
tricky	lib/Cake/Test/Case/Utility/SetTest.php	/^		$tricky = array($/;"	v
xml	lib/Cake/Test/Case/Utility/SetTest.php	/^		$xml = Xml::build($string);$/;"	v
xml	lib/Cake/Test/Case/Utility/SetTest.php	/^		$xml = Xml::build($text);$/;"	v
xml	lib/Cake/Test/Case/Utility/SetTest.php	/^		$xml = Xml::build('<example attr="ex_attr"><item attr="123"><titles>list<\/titles>textforitems<\/item><\/example>');$/;"	v
xml	lib/Cake/Test/Case/Utility/SetTest.php	/^		$xml = Xml::build('<example><item attr="123"><titles><title>title1<\/title><title>title2<\/title><\/titles><\/item><\/example>');$/;"	v
xml	lib/Cake/Test/Case/Utility/SetTest.php	/^		$xml = Xml::build('<example><item><title>An example of a correctly reversed SimpleXMLElement<\/title><desc\/><\/item><\/example>');$/;"	v
StringTest	lib/Cake/Test/Case/Utility/StringTest.php	/^class StringTest extends CakeTestCase {$/;"	c
Text	lib/Cake/Test/Case/Utility/StringTest.php	/^		$this->Text = new String();$/;"	v
check	lib/Cake/Test/Case/Utility/StringTest.php	/^		$check = array();$/;"	v
count	lib/Cake/Test/Case/Utility/StringTest.php	/^		$count = mt_rand(10, 1000);$/;"	v
data	lib/Cake/Test/Case/Utility/StringTest.php	/^		$data = array('foo' => 'alpha', 'bar' => 'beta', 'fale' => array());$/;"	v
elipsis	lib/Cake/Test/Case/Utility/StringTest.php	/^		$elipsis = "\\xe2\\x80\\xa6";$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = "I :verb cake. cake is fantastic.";$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = "Pre-pended result";$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = "We are of course passing.";$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = "We are passing.";$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = "this is a long string with a few? params you know";$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = "this is a test string";$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = "update saved_urls set url = http:\/\/www.testurl.com\/param1:url\/param2:id where id = 1";$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = $text;$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = '"1, 2"';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = '...a phrase w...';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = '...aaaaaaaaaabbbbbbbbaaaaaaaaaa...';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = '...ase with test text to ...';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = '1 2 :a 1';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = '1 3';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = '2 + 2 = %sum. Cake is yummy.';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = '2 + 2 = 4. Cake is 23adjective45.';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = '2 + 2 = 4. Cake is yummy.';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = '2 + 2 = :sum. Cake is yummy.';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = '2 + 2 = <sum. Cake is yummy.';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = '2 3';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = '2 and 3';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = '2 and 3?';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = '<b>&copy; 2005-2007, Cake Software F...<\/b>';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = '<b>&copy; 2005-2007, Cake Software...<\/b>';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = '<b>This<\/b> is a test <b>text<\/b>';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = '<b>This<\/b> is a test <em>text<\/em>';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = '<b>What<\/b> a <b>strong<\/b> mouse: <img src="what-a-strong-mouse.png" alt="What a strong mouse!" \/>';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = '<img src="foo" class="bar"\/>';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = '<img src="foo" class="foo bar"\/>';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = '<img src="foo"\/>';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = '<p><b>strong<\/b>bow <strong>isn&rsquo;t<\/strong> real cider<\/p>';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = '<p><b>strong<\/b>bow isn&rsquo;t real cider<\/p>';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = '<p><span style="font-size: medium;"><a>...<\/a><\/span><\/p>';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = '<p><span style="font-size: medium;">El biógrafo de Steve Jobs, Walter$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = 'Ich <b>saß<\/b> in einem <b>Café<\/b> am <b>Übergang<\/b>';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = 'The quick brown fox jumps.';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = 'The quick brown fox jumps..';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = 'This <b>is<\/b> a test <b>text<\/b>';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = 'This <strong>is<\/strong> a test and <abbr>some<\/abbr> other text';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = 'This <strong>is<\/strong> a test text';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = 'This is a <b>Test<\/b> text';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = 'This is a phras...';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = 'This is a test text';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = 'This is a...';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = 'This is the song th' . "\\n" .$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = 'some string';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = 'switching 10 by 5';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = 'switching 5 \/ 10';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = 'www http';$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = <<<TEXT$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = array('"single tag"');$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = array('A', '(short,boring test)');$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = array('A', '(short,more interesting( test)');$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = array('A', '(short,very interesting( test))');$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = array('tagA', '"single tag"', 'tagB');$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = array();$/;"	v
expected	lib/Cake/Test/Case/Utility/StringTest.php	/^		$expected = wordwrap($text, $width, $break, $cut);$/;"	v
match	lib/Cake/Test/Case/Utility/StringTest.php	/^			$match = (bool)preg_match($pattern, $result);$/;"	v
match	lib/Cake/Test/Case/Utility/StringTest.php	/^		$match = (bool)preg_match($pattern, $result);$/;"	v
options	lib/Cake/Test/Case/Utility/StringTest.php	/^		$options = array('format' => '<b>\\1<\/b>', 'html' => true);$/;"	v
pattern	lib/Cake/Test/Case/Utility/StringTest.php	/^		$pattern = "\/^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$\/";$/;"	v
phrase	lib/Cake/Test/Case/Utility/StringTest.php	/^		$phrase = 'This is a phrase with test text';$/;"	v
phrase	lib/Cake/Test/Case/Utility/StringTest.php	/^		$phrase = 'bbbbbbbb';$/;"	v
phrases	lib/Cake/Test/Case/Utility/StringTest.php	/^		$phrases = '(test';$/;"	v
phrases	lib/Cake/Test/Case/Utility/StringTest.php	/^		$phrases = array('This', 'text');$/;"	v
phrases	lib/Cake/Test/Case/Utility/StringTest.php	/^		$phrases = array('is', 'text');$/;"	v
phrases	lib/Cake/Test/Case/Utility/StringTest.php	/^		$phrases = array('saß', 'café', 'übergang');$/;"	v
phrases	lib/Cake/Test/Case/Utility/StringTest.php	/^		$phrases = null;$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^			$result = String::uuid();$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->excerpt($text, $phrase, 10);$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->excerpt($text, $phrase, 13, '...');$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->excerpt($text, 'NOT_FOUND', 9, '...');$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->excerpt($text, 'TEST', 9, '...');$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->excerpt($text, 'not_found', 9, '...');$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->excerpt($text, 'phrase', 2, '...');$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->excerpt($text, 'test', 9, '...');$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->excerpt($text, null, 200, '...');$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->excerpt($text, null, 9, '...');$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->highlight($text, $phrases, array('format' => '<b>\\1<\/b>'));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->highlight($text, $phrases, array('format' => '<b>\\1<\/b>', 'regex' => "|\\b%s\\b|iu"));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->highlight($text, $phrases, array('format' => array('<b>\\1<\/b>', '<em>\\1<\/em>')));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->highlight($text, 'test', array('format' => '<b>\\1<\/b>'));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->highlight($text, array('test'), array('format' => '<b>\\1<\/b>'));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->stripLinks($text);$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->tail($text1, 100);$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->tail($text1, 13);$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->tail($text1, 13, array('exact' => false));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->tail($text2, 10);$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->tail($text2, 10, array('exact' => false));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->tail($text3, 21);$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->tail($text3, 255);$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->tail($text4, 25);$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->tail($text5, 10);$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->tail($text5, 6, array('ellipsis' => ''));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->toList(array('Dusty', 'Lucky', 'Ned'), 'y');$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->toList(array('Larry', 'Curly', 'Moe'));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->toList(array('One'));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->toList(array('name1' => 'Dusty', 'name2' => 'Lucky'));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->toList(array('test_0' => 'banana', 'test_1' => 'apple', 'test_2' => 'lemon'));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->toList(array());$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->toList(array(1 => 'Dusty', 2 => 'Lucky', 3 => 'Ned'), 'and', ' + ');$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->toList(array(1 => 'Dusty', 2 => 'Lucky', 3 => 'Ned'), 'y');$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->truncate($text, 10, array($/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->truncate($text, 31, array($/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->truncate($text, 500, array($/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = $this->Text->truncate($text1, 31, array($/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::cleanInsert($/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::cleanInsert(':in.complete and', array($/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::cleanInsert(':in.complete or stuff', array($/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::cleanInsert(':in.complete', array($/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::cleanInsert(':incomplete', array($/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::insert("this is a ? string with a ? ? ?", array('long', 'few?', 'params', 'you know'));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::insert("this is a ? string", "test");$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::insert($/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::insert($string, array('a' => 1, 'b' => 2));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::insert($string, array('a' => 1, 'b' => 2), array('before' => '${', 'after' => '}', 'clean' => true));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::insert($string, array('a' => 1, 'b' => 2), array('clean' => true));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::insert($string, array('a' => 1, 'c' => 3), array('clean' => true));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::insert($string, array('b' => 2, 'c' => 3), array('clean' => true));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::insert($string, array('src' => 'foo'), array('clean' => 'html'));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::insert($string, array('src' => 'foo', 'extra' => 'bar'), array('clean' => 'html'));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::insert($string, array('sum' => '4', 'adjective' => 'yummy'));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::insert($string, array('sum' => '4', 'adjective' => 'yummy'), array('before' => '%'));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::insert($string, array('sum' => '4', 'adjective' => 'yummy'), array('before' => '<', 'after' => '>'));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::insert($string, array('sum' => '4', 'adjective' => 'yummy'), array('escape' => '!'));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::insert($string, array('sum' => '4', 'adjective' => 'yummy'), array('format' => '\/([\\d])%s\\\\1\/'));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::insert($string, array('sum' => '4', 'adjective' => 'yummy'), array('format' => '\/([\\d])([\\d])%s\\\\2\\\\1\/'));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::insert($string, array('timeout' => 5, 'timeout_count' => 10));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::insert($string, array('timeout_count' => 10, 'timeout' => 5));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::insert($string, array('web' => 'www', 'web_site' => 'http'));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::insert($string, array());$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::insert('(:foo > :bar || :fale!)', $data, array('clean' => 'text'));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::insert(':I.am: :not.yet: passing.', array('I.am' => 'We are'), array('before' => ':', 'after' => ':', 'clean' => array('replacement' => ' of course', 'method' => 'text')));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::insert(':me cake. :subject :verb fantastic.', array('me' => 'I :verb', 'subject' => 'cake', 'verb' => 'is'));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::insert('?-pended result', array('Pre'));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::insert('update saved_urls set url = :url where id = :id', array('id' => 1, 'url' => 'http:\/\/www.testurl.com\/param1:url\/param2:id'));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::insert('update saved_urls set url = :url where id = :id', array('url' => 'http:\/\/www.testurl.com\/param1:url\/param2:id', 'id' => 1));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::tokenize('"single tag"', ' ', '"', '"');$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::tokenize('');$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::tokenize('A,(short,boring test)');$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::tokenize('A,(short,more interesting( test)');$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::tokenize('A,(short,very interesting( test))');$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::tokenize('tagA "single tag" tagB', ' ', '"', '"');$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::uuid();$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::wordWrap($text, $width, $break, $cut);$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::wordWrap($text, 33, "\\n");$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::wordWrap($text, 33, "\\n", true);$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::wrap($text, 33);$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::wrap($text, array('width' => 20, 'wordWrap' => false));$/;"	v
result	lib/Cake/Test/Case/Utility/StringTest.php	/^		$result = String::wrap($text, array('width' => 33, 'indent' => "\\t", 'indentAt' => 1));$/;"	v
setUp	lib/Cake/Test/Case/Utility/StringTest.php	/^	public function setUp() {$/;"	f
string	lib/Cake/Test/Case/Utility/StringTest.php	/^		$string = '"${a}, ${b} and ${c}"';$/;"	v
string	lib/Cake/Test/Case/Utility/StringTest.php	/^		$string = '":a, :b and :c"';$/;"	v
string	lib/Cake/Test/Case/Utility/StringTest.php	/^		$string = '2 + 2 = !:sum. Cake is :adjective.';$/;"	v
string	lib/Cake/Test/Case/Utility/StringTest.php	/^		$string = '2 + 2 = %sum. Cake is %adjective.';$/;"	v
string	lib/Cake/Test/Case/Utility/StringTest.php	/^		$string = '2 + 2 = 12sum21. Cake is 23adjective45.';$/;"	v
string	lib/Cake/Test/Case/Utility/StringTest.php	/^		$string = '2 + 2 = 2sum2. Cake is 9adjective9.';$/;"	v
string	lib/Cake/Test/Case/Utility/StringTest.php	/^		$string = '2 + 2 = :sum. Cake is :adjective.';$/;"	v
string	lib/Cake/Test/Case/Utility/StringTest.php	/^		$string = '2 + 2 = <sum. Cake is <adjective>.';$/;"	v
string	lib/Cake/Test/Case/Utility/StringTest.php	/^		$string = '2 + 2 = \\%sum. Cake is %adjective.';$/;"	v
string	lib/Cake/Test/Case/Utility/StringTest.php	/^		$string = '2 + 2 = \\:sum. Cake is :adjective.';$/;"	v
string	lib/Cake/Test/Case/Utility/StringTest.php	/^		$string = ':a :b :c';$/;"	v
string	lib/Cake/Test/Case/Utility/StringTest.php	/^		$string = ':a :b \\:a :a';$/;"	v
string	lib/Cake/Test/Case/Utility/StringTest.php	/^		$string = ':a, :b and :c';$/;"	v
string	lib/Cake/Test/Case/Utility/StringTest.php	/^		$string = ':a, :b and :c?';$/;"	v
string	lib/Cake/Test/Case/Utility/StringTest.php	/^		$string = ':web :web_site';$/;"	v
string	lib/Cake/Test/Case/Utility/StringTest.php	/^		$string = '<img src=":src" alt=":alt" class="foo :extra bar"\/>';$/;"	v
string	lib/Cake/Test/Case/Utility/StringTest.php	/^		$string = '<img src=":src" class=":no :extra"\/>';$/;"	v
string	lib/Cake/Test/Case/Utility/StringTest.php	/^		$string = 'some string';$/;"	v
string	lib/Cake/Test/Case/Utility/StringTest.php	/^		$string = 'switching :timeout \/ :timeout_count';$/;"	v
string	lib/Cake/Test/Case/Utility/StringTest.php	/^		$string = 'switching :timeout_count by :timeout';$/;"	v
tearDown	lib/Cake/Test/Case/Utility/StringTest.php	/^	public function tearDown() {$/;"	f
testAutoIgnoreBadInsertData	lib/Cake/Test/Case/Utility/StringTest.php	/^	public function testAutoIgnoreBadInsertData() {$/;"	f
testCleanInsert	lib/Cake/Test/Case/Utility/StringTest.php	/^	public function testCleanInsert() {$/;"	f
testExcerpt	lib/Cake/Test/Case/Utility/StringTest.php	/^	public function testExcerpt() {$/;"	f
testExcerptCaseInsensitivity	lib/Cake/Test/Case/Utility/StringTest.php	/^	public function testExcerptCaseInsensitivity() {$/;"	f
testHighlight	lib/Cake/Test/Case/Utility/StringTest.php	/^	public function testHighlight() {$/;"	f
testHighlightCaseInsensitivity	lib/Cake/Test/Case/Utility/StringTest.php	/^	public function testHighlightCaseInsensitivity() {$/;"	f
testHighlightHtml	lib/Cake/Test/Case/Utility/StringTest.php	/^	public function testHighlightHtml() {$/;"	f
testHighlightMulti	lib/Cake/Test/Case/Utility/StringTest.php	/^	public function testHighlightMulti() {$/;"	f
testInsert	lib/Cake/Test/Case/Utility/StringTest.php	/^	public function testInsert() {$/;"	f
testListGeneration	lib/Cake/Test/Case/Utility/StringTest.php	/^	public function testListGeneration() {$/;"	f
testMultipleUuidGeneration	lib/Cake/Test/Case/Utility/StringTest.php	/^	public function testMultipleUuidGeneration() {$/;"	f
testReplaceWithQuestionMarkInString	lib/Cake/Test/Case/Utility/StringTest.php	/^	public function testReplaceWithQuestionMarkInString() {$/;"	f
testStripLinks	lib/Cake/Test/Case/Utility/StringTest.php	/^	public function testStripLinks() {$/;"	f
testTail	lib/Cake/Test/Case/Utility/StringTest.php	/^	public function testTail() {$/;"	f
testTokenize	lib/Cake/Test/Case/Utility/StringTest.php	/^	public function testTokenize() {$/;"	f
testTruncate	lib/Cake/Test/Case/Utility/StringTest.php	/^	public function testTruncate() {$/;"	f
testTruncateLegacy	lib/Cake/Test/Case/Utility/StringTest.php	/^	public function testTruncateLegacy() {$/;"	f
testUuidGeneration	lib/Cake/Test/Case/Utility/StringTest.php	/^	public function testUuidGeneration() {$/;"	f
testWordWrap	lib/Cake/Test/Case/Utility/StringTest.php	/^	public function testWordWrap($text, $width, $break = "\\n", $cut = false) {$/;"	f
testWordWrapUnicodeAware	lib/Cake/Test/Case/Utility/StringTest.php	/^	public function testWordWrapUnicodeAware() {$/;"	f
testWrap	lib/Cake/Test/Case/Utility/StringTest.php	/^	public function testWrap() {$/;"	f
testWrapIndent	lib/Cake/Test/Case/Utility/StringTest.php	/^	public function testWrapIndent() {$/;"	f
text	lib/Cake/Test/Case/Utility/StringTest.php	/^		$text = '<b>&copy; 2005-2007, Cake Software Foundation, Inc.<\/b><br \/>written by Alexander Wegener';$/;"	v
text	lib/Cake/Test/Case/Utility/StringTest.php	/^		$text = '<p><span style="font-size: medium;"><a>Iamatestwithnospacesandhtml<\/a><\/span><\/p>';$/;"	v
text	lib/Cake/Test/Case/Utility/StringTest.php	/^		$text = '<p><span style="font-size: medium;">El biógrafo de Steve Jobs, Walter$/;"	v
text	lib/Cake/Test/Case/Utility/StringTest.php	/^		$text = 'Ich saß in einem Café am Übergang';$/;"	v
text	lib/Cake/Test/Case/Utility/StringTest.php	/^		$text = 'This <strong>is<\/strong> a <a href="#">test<\/a> <a href="#">text<\/a>';$/;"	v
text	lib/Cake/Test/Case/Utility/StringTest.php	/^		$text = 'This <strong>is<\/strong> a <a href="#">test<\/a> and <abbr>some<\/abbr> other <a href="#">text<\/a>';$/;"	v
text	lib/Cake/Test/Case/Utility/StringTest.php	/^		$text = 'This is a (test) text';$/;"	v
text	lib/Cake/Test/Case/Utility/StringTest.php	/^		$text = 'This is a <a href="#">test<\/a> text';$/;"	v
text	lib/Cake/Test/Case/Utility/StringTest.php	/^		$text = 'This is a Test text';$/;"	v
text	lib/Cake/Test/Case/Utility/StringTest.php	/^		$text = 'This is a phrase with test text to play with';$/;"	v
text	lib/Cake/Test/Case/Utility/StringTest.php	/^		$text = 'This is a test text';$/;"	v
text	lib/Cake/Test/Case/Utility/StringTest.php	/^		$text = 'This is the song that never ends. This is the song that never ends. This is the song that never ends.';$/;"	v
text	lib/Cake/Test/Case/Utility/StringTest.php	/^		$text = 'aaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaa';$/;"	v
text	lib/Cake/Test/Case/Utility/StringTest.php	/^		$text = 'Но вим омниюм факёльиси элыктрам, мюнырэ лэгыры векж ыт. Выльёт квюандо нюмквуам ты кюм. Зыд эю рыбюм.';$/;"	v
text1	lib/Cake/Test/Case/Utility/StringTest.php	/^		$text1 = '<p>strongbow isn&rsquo;t real cider<\/p>';$/;"	v
text1	lib/Cake/Test/Case/Utility/StringTest.php	/^		$text1 = 'The quick brown fox jumps over the lazy dog';$/;"	v
text10	lib/Cake/Test/Case/Utility/StringTest.php	/^		$text10 = 'http:\/\/example.com\/something\/foo:bar';$/;"	v
text2	lib/Cake/Test/Case/Utility/StringTest.php	/^		$text2 = '<p>strongbow <strong>isn&rsquo;t<\/strong> real cider<\/p>';$/;"	v
text2	lib/Cake/Test/Case/Utility/StringTest.php	/^		$text2 = 'Heiz&ouml;lr&uuml;cksto&szlig;abd&auml;mpfung';$/;"	v
text3	lib/Cake/Test/Case/Utility/StringTest.php	/^		$text3 = '<b>&copy; 2005-2007, Cake Software Foundation, Inc.<\/b><br \/>written by Alexander Wegener';$/;"	v
text3	lib/Cake/Test/Case/Utility/StringTest.php	/^		$text3 = '<img src="what-a-strong-mouse.png" alt="What a strong mouse!" \/>';$/;"	v
text3	lib/Cake/Test/Case/Utility/StringTest.php	/^		$text3 = 'El moño está en el lugar correcto. Eso fue lo que dijo la niña, ¿habrá dicho la verdad?';$/;"	v
text4	lib/Cake/Test/Case/Utility/StringTest.php	/^		$text4 = '<img src="mypic.jpg"> This image tag is not XHTML conform!<br><hr\/><b>But the following image tag should be conform <img src="mypic.jpg" alt="Me, myself and I" \/><\/b><br \/>Great, or?';$/;"	v
text4	lib/Cake/Test/Case/Utility/StringTest.php	/^		$text4 = 'Vive la R' . chr(195) . chr(169) . 'publique de France';$/;"	v
text4	lib/Cake/Test/Case/Utility/StringTest.php	/^		$text4 = 'What a strong mouse: <img src="what-a-strong-mouse.png" alt="What a strong mouse!" \/>';$/;"	v
text5	lib/Cake/Test/Case/Utility/StringTest.php	/^		$text5 = '0<b>1<i>2<span class="myclass">3<\/span>4<u>5<\/u>6<\/i>7<\/b>8<b>9<\/b>0';$/;"	v
text5	lib/Cake/Test/Case/Utility/StringTest.php	/^		$text5 = 'НОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыь';$/;"	v
text6	lib/Cake/Test/Case/Utility/StringTest.php	/^		$text6 = '<p><strong>Extra dates have been announced for this year\\'s tour.<\/strong><\/p><p>Tickets for the new shows in<\/p>';$/;"	v
text7	lib/Cake/Test/Case/Utility/StringTest.php	/^		$text7 = 'El moño está en el lugar correcto. Eso fue lo que dijo la niña, ¿habrá dicho la verdad?';$/;"	v
text8	lib/Cake/Test/Case/Utility/StringTest.php	/^		$text8 = 'Vive la R' . chr(195) . chr(169) . 'publique de France';$/;"	v
text9	lib/Cake/Test/Case/Utility/StringTest.php	/^		$text9 = 'НОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыь';$/;"	v
wordWrapProvider	lib/Cake/Test/Case/Utility/StringTest.php	/^	public function wordWrapProvider() {$/;"	f
CustomValidator	lib/Cake/Test/Case/Utility/ValidationTest.php	/^class CustomValidator {$/;"	c
File	lib/Cake/Test/Case/Utility/ValidationTest.php	/^		$File = new File($image, false);$/;"	v
TestDeValidation	lib/Cake/Test/Case/Utility/ValidationTest.php	/^class TestDeValidation {$/;"	c
TestNlValidation	lib/Cake/Test/Case/Utility/ValidationTest.php	/^class TestNlValidation {$/;"	c
ValidationTest	lib/Cake/Test/Case/Utility/ValidationTest.php	/^class ValidationTest extends CakeTestCase {$/;"	c
_appEncoding	lib/Cake/Test/Case/Utility/ValidationTest.php	/^		$this->_appEncoding = Configure::read('App.encoding');$/;"	v
_appLocale	lib/Cake/Test/Case/Utility/ValidationTest.php	/^		$this->_appLocale = array();$/;"	v
customValidate	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public static function customValidate($check) {$/;"	f
image	lib/Cake/Test/Case/Utility/ValidationTest.php	/^		$image = CORE_PATH . 'Cake' . DS . 'Test' . DS . 'test_app' . DS . 'webroot' . DS . 'img' . DS . 'cake.power.gif';$/;"	v
phone	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public static function phone($check) {$/;"	f
postal	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public static function postal($check) {$/;"	f
restore	lib/Cake/Test/Case/Utility/ValidationTest.php	/^		$restore = setlocale(LC_NUMERIC, 0);$/;"	v
setUp	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function setUp() {$/;"	f
ssn	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public static function ssn($check) {$/;"	f
tearDown	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function tearDown() {$/;"	f
testAllCc	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testAllCc() {$/;"	f
testAllCcDeep	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testAllCcDeep() {$/;"	f
testAlphaNumeric	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testAlphaNumeric() {$/;"	f
testAlphaNumericPassedAsArray	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testAlphaNumericPassedAsArray() {$/;"	f
testBetween	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testBetween() {$/;"	f
testBlank	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testBlank() {$/;"	f
testBlankAsArray	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testBlankAsArray() {$/;"	f
testBoolean	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testBoolean() {$/;"	f
testCc	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testCc() {$/;"	f
testComparison	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testComparison() {$/;"	f
testComparisonAsArray	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testComparisonAsArray() {$/;"	f
testCustom	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testCustom() {$/;"	f
testCustomAsArray	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testCustomAsArray() {$/;"	f
testCustomRegexForCc	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testCustomRegexForCc() {$/;"	f
testCustomRegexForCcWithLuhnCheck	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testCustomRegexForCcWithLuhnCheck() {$/;"	f
testDateCustomRegx	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDateCustomRegx() {$/;"	f
testDateDdMMMMyyyy	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDateDdMMMMyyyy() {$/;"	f
testDateDdMMMMyyyyLeapYear	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDateDdMMMMyyyyLeapYear() {$/;"	f
testDateDdmmyy	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDateDdmmyy() {$/;"	f
testDateDdmmyyLeapYear	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDateDdmmyyLeapYear() {$/;"	f
testDateDdmmyyyy	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDateDdmmyyyy() {$/;"	f
testDateDdmmyyyyLeapYear	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDateDdmmyyyyLeapYear() {$/;"	f
testDateDmyy	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDateDmyy() {$/;"	f
testDateDmyyLeapYear	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDateDmyyLeapYear() {$/;"	f
testDateDmyyyy	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDateDmyyyy() {$/;"	f
testDateDmyyyyLeapYear	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDateDmyyyyLeapYear() {$/;"	f
testDateMdyy	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDateMdyy() {$/;"	f
testDateMdyyLeapYear	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDateMdyyLeapYear() {$/;"	f
testDateMdyyyy	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDateMdyyyy() {$/;"	f
testDateMdyyyyLeapYear	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDateMdyyyyLeapYear() {$/;"	f
testDateMmddyy	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDateMmddyy() {$/;"	f
testDateMmddyyLeapYear	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDateMmddyyLeapYear() {$/;"	f
testDateMmddyyyy	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDateMmddyyyy() {$/;"	f
testDateMmddyyyyLeapYear	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDateMmddyyyyLeapYear() {$/;"	f
testDateMmmmDdyyyy	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDateMmmmDdyyyy() {$/;"	f
testDateMmmmDdyyyyLeapYear	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDateMmmmDdyyyyLeapYear() {$/;"	f
testDateMultiple	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDateMultiple() {$/;"	f
testDateMy	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDateMy() {$/;"	f
testDateMyNumeric	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDateMyNumeric() {$/;"	f
testDateY	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDateY() {$/;"	f
testDateYmNumeric	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDateYmNumeric() {$/;"	f
testDateYymmdd	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDateYymmdd() {$/;"	f
testDateYymmddLeapYear	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDateYymmddLeapYear() {$/;"	f
testDateYyyymmdd	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDateYyyymmdd() {$/;"	f
testDateYyyymmddLeapYear	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDateYyyymmddLeapYear() {$/;"	f
testDatetime	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDatetime() {$/;"	f
testDecimalCustomRegex	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDecimalCustomRegex() {$/;"	f
testDecimalLocaleSet	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDecimalLocaleSet() {$/;"	f
testDecimalWithInvalidPlaces	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDecimalWithInvalidPlaces() {$/;"	f
testDecimalWithPlacesNull	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDecimalWithPlacesNull() {$/;"	f
testDecimalWithPlacesNumeric	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDecimalWithPlacesNumeric() {$/;"	f
testDecimalWithPlacesTrue	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testDecimalWithPlacesTrue() {$/;"	f
testEmail	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testEmail() {$/;"	f
testEmailCustomRegex	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testEmailCustomRegex() {$/;"	f
testEmailDeep	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testEmailDeep() {$/;"	f
testEqualTo	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testEqualTo() {$/;"	f
testExtension	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testExtension() {$/;"	f
testFastCc	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testFastCc() {$/;"	f
testFileSize	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testFileSize() {$/;"	f
testInList	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testInList() {$/;"	f
testIpV4	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testIpV4() {$/;"	f
testIpv6	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testIpv6() {$/;"	f
testLuhn	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testLuhn() {$/;"	f
testMaxLength	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testMaxLength() {$/;"	f
testMimeType	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testMimeType() {$/;"	f
testMimeTypeFalse	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testMimeTypeFalse() {$/;"	f
testMinLength	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testMinLength() {$/;"	f
testMoney	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testMoney() {$/;"	f
testMultiple	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testMultiple() {$/;"	f
testNaturalNumber	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testNaturalNumber() {$/;"	f
testNotEmpty	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testNotEmpty() {$/;"	f
testNotEmptyISO88591AppEncoding	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testNotEmptyISO88591AppEncoding() {$/;"	f
testNumeric	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testNumeric() {$/;"	f
testPassThroughClassFailure	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testPassThroughClassFailure() {$/;"	f
testPassThroughMethod	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testPassThroughMethod() {$/;"	f
testPassThroughMethodFailure	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testPassThroughMethodFailure() {$/;"	f
testPhone	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testPhone() {$/;"	f
testPhonePostalSsnPass	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testPhonePostalSsnPass() {$/;"	f
testPostal	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testPostal() {$/;"	f
testRange	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testRange() {$/;"	f
testSsn	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testSsn() {$/;"	f
testTime	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testTime() {$/;"	f
testUploadError	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testUploadError() {$/;"	f
testUrl	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testUrl() {$/;"	f
testUserDefined	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testUserDefined() {$/;"	f
testUuid	lib/Cake/Test/Case/Utility/ValidationTest.php	/^	public function testUuid() {$/;"	f
validator	lib/Cake/Test/Case/Utility/ValidationTest.php	/^		$validator = new CustomValidator;$/;"	v
XmlArticle	lib/Cake/Test/Case/Utility/XmlTest.php	/^class XmlArticle extends CakeTestModel {$/;"	c
XmlTest	lib/Cake/Test/Case/Utility/XmlTest.php	/^class XmlTest extends CakeTestCase {$/;"	c
XmlUser	lib/Cake/Test/Case/Utility/XmlTest.php	/^class XmlUser extends CakeTestModel {$/;"	c
_appEncoding	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$this->_appEncoding = Configure::read('App.encoding');$/;"	v
array	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$array = array($/;"	v
atomLink	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$atomLink = array('@href' => 'http:\/\/bakery.cakephp.org\/articles\/rss', '@rel' => 'self', '@type' => 'application\/rss+xml');$/;"	v
autoFixtures	lib/Cake/Test/Case/Utility/XmlTest.php	/^	public $autoFixtures = false;$/;"	v
belongsTo	lib/Cake/Test/Case/Utility/XmlTest.php	/^	public $belongsTo = array($/;"	v
data	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$data = $user->find('all', array('limit' => 2));$/;"	v
data	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$data = $user->read(null, 1);$/;"	v
data	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$data = array($/;"	v
data	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$data = array('records' => $data);$/;"	v
expected	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$expected = '<' . '?xml version="1.0" encoding="UTF-8"?><root xmlns:ns="http:\/\/cakephp.org"\/>';$/;"	v
expected	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$expected = '<' . '?xml version="1.0" encoding="UTF-8"?><root xmlns="http:\/\/cakephp.org"\/>';$/;"	v
expected	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$expected = '<' . '?xml version="1.0" encoding="UTF-8"?><root><ns:attr xmlns:ns="http:\/\/cakephp.org">1<\/ns:attr><\/root>';$/;"	v
expected	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$expected = '<' . '?xml version="1.0" encoding="UTF-8"?><root><tag xmlns="http:\/\/cakephp.org"\/><\/root>';$/;"	v
expected	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$expected = <<<XML$/;"	v
expected	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$expected = array($/;"	v
file	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$file = CAKE . 'VERSION.txt';$/;"	v
fixtures	lib/Cake/Test/Case/Utility/XmlTest.php	/^	public $fixtures = array($/;"	v
hasMany	lib/Cake/Test/Case/Utility/XmlTest.php	/^	public $hasMany = array($/;"	v
input	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$input = '<derp';$/;"	v
invalidArrayDataProvider	lib/Cake/Test/Case/Utility/XmlTest.php	/^	public static function invalidArrayDataProvider() {$/;"	f
invalidDataProvider	lib/Cake/Test/Case/Utility/XmlTest.php	/^	public static function invalidDataProvider() {$/;"	f
invalidToArrayDataProvider	lib/Cake/Test/Case/Utility/XmlTest.php	/^	public static function invalidToArrayDataProvider() {$/;"	f
name	lib/Cake/Test/Case/Utility/XmlTest.php	/^	public $name = 'Article';$/;"	v
name	lib/Cake/Test/Case/Utility/XmlTest.php	/^	public $name = 'User';$/;"	v
obj	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$obj = Xml::build($data);$/;"	v
obj	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$obj = Xml::build($xml);$/;"	v
obj	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$obj = Xml::build($xml, array('return' => 'domdocument'));$/;"	v
obj	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$obj = Xml::build($xml, array('return' => 'domdocument', 'encoding' => null));$/;"	v
obj	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$obj = Xml::build(compact('data'));$/;"	v
obj	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$obj = Xml::fromArray($xml);$/;"	v
obj	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$obj = Xml::fromArray($xml, 'attributes');$/;"	v
obj	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$obj = Xml::fromArray($xml, 'tags');$/;"	v
obj	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$obj = Xml::fromArray($xmlArray);$/;"	v
result	lib/Cake/Test/Case/Utility/XmlTest.php	/^			$result = Xml::build($xml);$/;"	v
result	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$result = $obj->asXml();$/;"	v
result	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$result = Xml::build($xml);$/;"	v
rss	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$rss = array($/;"	v
rss	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$rss = file_get_contents(CAKE . 'Test' . DS . 'Fixture' . DS . 'rss.xml');$/;"	v
rssAsArray	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$rssAsArray = Xml::toArray(Xml::build($rss));$/;"	v
rssAsSimpleXML	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$rssAsSimpleXML = Xml::fromArray($rss);$/;"	v
setUp	lib/Cake/Test/Case/Utility/XmlTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/Utility/XmlTest.php	/^	public function tearDown() {$/;"	f
testAmpInText	lib/Cake/Test/Case/Utility/XmlTest.php	/^	public function testAmpInText() {$/;"	f
testBuild	lib/Cake/Test/Case/Utility/XmlTest.php	/^	public function testBuild() {$/;"	f
testBuildEmptyTag	lib/Cake/Test/Case/Utility/XmlTest.php	/^	public function testBuildEmptyTag() {$/;"	f
testBuildInvalidData	lib/Cake/Test/Case/Utility/XmlTest.php	/^	public function testBuildInvalidData($value) {$/;"	f
testBuildInvalidDataSimpleXml	lib/Cake/Test/Case/Utility/XmlTest.php	/^	public function testBuildInvalidDataSimpleXml() {$/;"	f
testCdata	lib/Cake/Test/Case/Utility/XmlTest.php	/^	public function testCdata() {$/;"	f
testFromArray	lib/Cake/Test/Case/Utility/XmlTest.php	/^	public function testFromArray() {$/;"	f
testFromArrayFail	lib/Cake/Test/Case/Utility/XmlTest.php	/^	public function testFromArrayFail($value) {$/;"	f
testFromArrayNonSequentialKeys	lib/Cake/Test/Case/Utility/XmlTest.php	/^	public function testFromArrayNonSequentialKeys() {$/;"	f
testFromArrayPretty	lib/Cake/Test/Case/Utility/XmlTest.php	/^	public function testFromArrayPretty() {$/;"	f
testFromArrayUnterminatedError	lib/Cake/Test/Case/Utility/XmlTest.php	/^	public function testFromArrayUnterminatedError() {$/;"	f
testNamespace	lib/Cake/Test/Case/Utility/XmlTest.php	/^	public function testNamespace() {$/;"	f
testNoEntityLoading	lib/Cake/Test/Case/Utility/XmlTest.php	/^	public function testNoEntityLoading() {$/;"	f
testRss	lib/Cake/Test/Case/Utility/XmlTest.php	/^	public function testRss() {$/;"	f
testSoap	lib/Cake/Test/Case/Utility/XmlTest.php	/^	public function testSoap() {$/;"	f
testToArray	lib/Cake/Test/Case/Utility/XmlTest.php	/^	public function testToArray() {$/;"	f
testToArrayFail	lib/Cake/Test/Case/Utility/XmlTest.php	/^	public function testToArrayFail($value) {$/;"	f
testWithModel	lib/Cake/Test/Case/Utility/XmlTest.php	/^	public function testWithModel() {$/;"	f
testXmlRpc	lib/Cake/Test/Case/Utility/XmlTest.php	/^	public function testXmlRpc() {$/;"	f
user	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$user = new XmlUser();$/;"	v
xml	lib/Cake/Test/Case/Utility/XmlTest.php	/^				$xml = array($/;"	v
xml	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$xml = '<' . '?xml version="1.0" encoding="UTF-8"?>' .$/;"	v
xml	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$xml = '<?xml version="1.0" encoding="UTF-8"?><tag>value<\/tag>';$/;"	v
xml	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$xml = '<tag type="myType">0<\/tag>';$/;"	v
xml	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$xml = '<tag>name<\/tag>';$/;"	v
xml	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$xml = '<tag>value<\/tag>';$/;"	v
xml	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$xml = <<<XML$/;"	v
xml	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$xml = CAKE . 'Test' . DS . 'Fixture' . DS . 'sample.xml';$/;"	v
xml	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$xml = Xml::build($input, array('return' => 'simplexml'));$/;"	v
xml	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$xml = Xml::build($xmlText);$/;"	v
xml	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$xml = Xml::build('<methodCall><methodName>test<\/methodName><params \/><\/methodCall>');$/;"	v
xml	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$xml = Xml::build('<methodCall><methodName>test<\/methodName><params><param><value><array><data><value><int>12<\/int><\/value><value><string>Egypt<\/string><\/value><value><boolean>0<\/boolean><\/value><value><int>-31<\/int><\/value><\/data><\/array><\/value><\/param><\/params><\/methodCall>');$/;"	v
xml	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$xml = Xml::fromArray($expected, 'tags');$/;"	v
xml	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$xml = Xml::fromArray(array('products' => $data), 'tags');$/;"	v
xml	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$xml = array($/;"	v
xml	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$xml = array('tag' => 'value');$/;"	v
xml	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$xml = array('tag' => array('@' => 'value'));$/;"	v
xml	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$xml = array('tag' => null);$/;"	v
xmlArray	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$xmlArray = array($/;"	v
xmlRequest	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$xmlRequest = Xml::build(CAKE . 'Test' . DS . 'Fixture' . DS . 'soap_request.xml');$/;"	v
xmlRequest	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$xmlRequest = Xml::fromArray($xml, array('encoding' => null));$/;"	v
xmlResponse	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$xmlResponse = Xml::build($xml);$/;"	v
xmlResponse	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$xmlResponse = Xml::build('<root xmlns:ns="http:\/\/cakephp.org"><ns:attr>1<\/ns:attr><\/root>');$/;"	v
xmlResponse	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$xmlResponse = Xml::build('<root xmlns:ns="http:\/\/cakephp.org"><ns:tag id="1" \/><tag><id>1<\/id><\/tag><\/root>');$/;"	v
xmlResponse	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$xmlResponse = Xml::build('<root><ns:attr xmlns:ns="http:\/\/cakephp.org">1<\/ns:attr><\/root>');$/;"	v
xmlResponse	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$xmlResponse = Xml::build(CAKE . 'Test' . DS . 'Fixture' . DS . 'soap_response.xml');$/;"	v
xmlResponse	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$xmlResponse = Xml::fromArray($xml);$/;"	v
xmlResponse	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$xmlResponse = Xml::fromArray($xml, array('pretty' => false));$/;"	v
xmlResponse	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$xmlResponse = Xml::fromArray($xml, array('pretty' => false, 'format' => 'attributes'));$/;"	v
xmlResponse	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$xmlResponse = Xml::fromArray($xml, array('pretty' => true));$/;"	v
xmlResponse	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$xmlResponse = Xml::fromArray($xml, array('pretty' => true, 'format' => 'attributes'));$/;"	v
xmlText	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$xmlText = '<' . '?xml version="1.0" encoding="UTF-8"?><tags><tag id="1">defect<\/tag><\/tags>';$/;"	v
xmlText	lib/Cake/Test/Case/Utility/XmlTest.php	/^		$xmlText = <<<XML$/;"	v
Cache	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^		$Cache = $this->getMock('CacheHelper', array('_parseContent'), array($View));$/;"	v
Cache	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^		$Cache = $this->getMock('CacheHelper', array('cache'), array($View));$/;"	v
Cache	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^		$this->Cache = new CacheHelper($View);$/;"	v
CacheHelperTest	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^class CacheHelperTest extends CakeTestCase {$/;"	c
CacheTestController	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^class CacheTestController extends Controller {$/;"	c
Controller	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^		$this->Controller = new CacheTestController($request);$/;"	v
View	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^		$View = new View($this->Controller);$/;"	v
_GET	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^		$_GET = array();$/;"	v
cache_parsing	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^	public function cache_parsing() {$/;"	f
contents	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^		$contents = file_get_contents($filename);$/;"	v
filename	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^		$filename = CACHE . 'views' . DS . 'cache_cachetest_cache_name.php';$/;"	v
filename	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^		$filename = CACHE . 'views' . DS . 'cache_test_cache_parsing.php';$/;"	v
filename	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^		$filename = CACHE . 'views' . DS . 'cache_test_cache_parsing_1_2_name_mark_ice_cream.php';$/;"	v
filename	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^		$filename = CACHE . 'views' . DS . 'cache_test_cache_parsing_q_cakephp.php';$/;"	v
filename	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^		$filename = CACHE . 'views' . DS . 'cachetest_cache_complex.php';$/;"	v
filename	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^		$filename = CACHE . 'views' . DS . 'cachetest_cache_empty_sections.php';$/;"	v
filename	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^		$filename = CACHE . 'views' . DS . 'cachetest_cache_parsing.php';$/;"	v
filename	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^		$filename = CACHE . 'views' . DS . 'en_cache_test_cache_parsing.php';$/;"	v
filename	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^		$filename = CACHE . 'views' . DS . 'posts_view_風街ろまん.php';$/;"	v
helpers	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^	public $helpers = array('Html', 'Cache');$/;"	v
layout	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^		$this->layout = 'cache_layout';$/;"	v
request	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^		$request = new CakeRequest();$/;"	v
result	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^		$result = $View->render('cache_empty_sections');$/;"	v
result	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^		$result = $View->render('index');$/;"	v
result	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^		$result = $View->render('multiple_nocache');$/;"	v
result	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^		$result = $View->render('sequencial_nocache');$/;"	v
result	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^		$result = $View->render('test_nocache_tags');$/;"	v
setUp	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^	public function setUp() {$/;"	f
skip	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^	public function skip() {$/;"	f
tearDown	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^	public function tearDown() {$/;"	f
testAfterLayoutConditions	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^	public function testAfterLayoutConditions() {$/;"	f
testAfterRenderConditions	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^	public function testAfterRenderConditions() {$/;"	f
testCacheActionArray	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^	public function testCacheActionArray() {$/;"	f
testCacheActionArrayCamelCase	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^	public function testCacheActionArrayCamelCase() {$/;"	f
testCacheBaseNameControllerName	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^	public function testCacheBaseNameControllerName() {$/;"	f
testCacheCallbacks	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^	public function testCacheCallbacks() {$/;"	f
testCacheEmptySections	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^	public function testCacheEmptySections() {$/;"	f
testCacheNonLatinCharactersInRoute	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^	public function testCacheNonLatinCharactersInRoute() {$/;"	f
testCacheViewVars	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^	public function testCacheViewVars() {$/;"	f
testCacheWithCustomRoutes	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^	public function testCacheWithCustomRoutes() {$/;"	f
testCacheWithNamedAndPassedArgs	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^	public function testCacheWithNamedAndPassedArgs() {$/;"	f
testCacheWithQueryStringParams	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^	public function testCacheWithQueryStringParams() {$/;"	f
testComplexNoCache	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^	public function testComplexNoCache() {$/;"	f
testLayoutCacheParsingNoTagsInView	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^	public function testLayoutCacheParsingNoTagsInView() {$/;"	f
testLayoutCacheParsingWithTagsInView	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^	public function testLayoutCacheParsingWithTagsInView() {$/;"	f
testMultipleNoCacheTagsInViewfile	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^	public function testMultipleNoCacheTagsInViewfile() {$/;"	f
viewPath	lib/Cake/Test/Case/View/Helper/CacheHelperTest.php	/^		$this->viewPath = 'Posts';$/;"	v
Address	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$Address = ClassRegistry::init(array('class' => 'Address', 'table' => false, 'ds' => 'test'));$/;"	v
Contact	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$Contact = ClassRegistry::getObject('Contact');$/;"	v
Contact	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^class Contact extends CakeTestModel {$/;"	c
ContactMock	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$ContactMock = $this->getMockBuilder('Contact')$/;"	v
ContactNonStandardPk	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^class ContactNonStandardPk extends Contact {$/;"	c
ContactTag	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^class ContactTag extends Model {$/;"	c
ContactTagsContact	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^class ContactTagsContact extends CakeTestModel {$/;"	c
ContactTestController	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^class ContactTestController extends Controller {$/;"	c
Controller	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$this->Controller = new ContactTestController();$/;"	v
Form	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$this->Form = new FormHelper($this->View);$/;"	v
FormHelperTest	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^class FormHelperTest extends CakeTestCase {$/;"	c
OpenidUrl	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^class OpenidUrl extends CakeTestModel {$/;"	c
TestMail	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^class TestMail extends CakeTestModel {$/;"	c
UserForm	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$this->UserForm = ClassRegistry::getObject('UserForm');$/;"	v
UserForm	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^class UserForm extends CakeTestModel {$/;"	c
ValidateItem	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^class ValidateItem extends CakeTestModel {$/;"	c
ValidateProfile	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$ValidateProfile = ClassRegistry::getObject('ValidateProfile');$/;"	v
ValidateProfile	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^class ValidateProfile extends CakeTestModel {$/;"	c
ValidateUser	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$ValidateUser = ClassRegistry::getObject('ValidateUser');$/;"	v
ValidateUser	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$this->ValidateUser = ClassRegistry::getObject('ValidateUser');$/;"	v
ValidateUser	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^class ValidateUser extends CakeTestModel {$/;"	c
View	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$this->View = new View($this->Controller);$/;"	v
_schema	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$this->_schema = $schema;$/;"	v
_schema	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$this->_schema = parent::schema();$/;"	v
_schema	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	protected $_schema = array($/;"	v
after	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$after = '--after--';$/;"	v
autoFixtures	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public $autoFixtures = false;$/;"	v
before	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$before = '--before--';$/;"	v
beforeValidate	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function beforeValidate($options = array()) {$/;"	f
belongsTo	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public $belongsTo = array('User' => array('className' => 'UserForm'));$/;"	v
belongsTo	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public $belongsTo = array('UserForm' => array($/;"	v
belongsTo	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public $belongsTo = array('ValidateProfile' => array('foreignKey' => 'profile_id'));$/;"	v
belongsTo	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public $belongsTo = array('ValidateUser' => array($/;"	v
data	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$data = array($/;"	v
dateRegex	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$this->dateRegex = array($/;"	v
disabled	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$disabled = array('2', '3x');$/;"	v
disabled	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$disabled = array('2', 3);$/;"	v
disabled	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$disabled = array(1);$/;"	v
disabled	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$disabled = array(2, 3);$/;"	v
disabled	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$disabled = array(50);$/;"	v
disabled	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$disabled = true;$/;"	v
encoding	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$encoding = strtolower(Configure::read('App.encoding'));$/;"	v
expected	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^			$expected = array($/;"	v
expected	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$expected = '0ff0c85cd70584d8fd18fa136846d22c66c21e2d%3A';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$expected = 'c890c5f041b1d83d1610dee8f52cd257df7ce618%3A';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$expected = 'ece0693fb1b19ca116133db1832ac29baaf41ce5%3A';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$expected = array('Model.select');$/;"	v
expected	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$expected = array('Option.General.default_role');$/;"	v
expected	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$expected = array('Option.General.default_role', 'Option.General.select_role');$/;"	v
expected	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$expected = array('Test.test');$/;"	v
expected	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$expected = array('form' => array($/;"	v
expected	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$expected = array('input' => array($/;"	v
expected	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$expected = array('input' => array('type' => 'submit', 'value' => 'Test Submit', 'class' => 'save'));$/;"	v
expected	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$expected = range(1900, 1881);$/;"	v
expected	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$expected = range(2050, date('Y') - 20);$/;"	v
expected	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$expected = range(date('Y') + 20, 1930);$/;"	v
fields	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$fields = array($/;"	v
fields	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$fields = array('Model.password', 'Model.username', 'Model.valid' => '0');$/;"	v
fixtures	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public $fixtures = array('core.post');$/;"	v
hasAndBelongsToMany	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public $hasAndBelongsToMany = array('ContactTag' => array('with' => 'ContactTagsContact'));$/;"	v
hasMany	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public $hasMany = array($/;"	v
hasOne	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public $hasOne = array('ValidateItem' => array($/;"	v
hasOne	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public $hasOne = array('ValidateProfile' => array($/;"	v
hash	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$hash = '40289bd07811587887ff56585a8526ff9da59d7a%3AAddresses.id';$/;"	v
hash	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$hash = '51e3b55a6edd82020b3f29c9ae200e14bbeb7ee5%3AModel.0.hidden%7CModel.0.valid';$/;"	v
hash	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$hash = '5c9cadf9da008cc444d3960b481391a425a5d979%3AAddresses.0.id%7CAddresses.1.id';$/;"	v
hash	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$hash = '6014b4e1c4f39eb62389712111dbe6435bec66cb%3AUserForm.hidden%7CUserForm.stuff';$/;"	v
hash	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$hash = 'a3b9b2ba1cb688838f92818a5970e17dd7943a78%3AAddresses.0.id%7CAddresses.1.id';$/;"	v
hash	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$hash = Security::hash($/;"	v
hash	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$hash = Security::hash(serialize($fields) . Configure::read('Security.salt'));$/;"	v
hash	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$hash = urlencode($hash);$/;"	v
key	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$key = 'f7d573650a295b94e0938d32b323fde775e5f32b%3A';$/;"	v
key	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$key = 'testKey';$/;"	v
model	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$model = ClassRegistry::getObject('Contact');$/;"	v
monthNames	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$monthNames = array($/;"	v
now	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$now = strtotime($this->Form->data['Model']['field']);$/;"	v
now	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$now = strtotime('2013-03-09 00:42:21');$/;"	v
now	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$now = strtotime('now');$/;"	v
oldSalt	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$this->oldSalt = Configure::read('Security.salt');$/;"	v
optValue	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$optValue = date('G');$/;"	v
options	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$options = array($/;"	v
options	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$options = array('1' => 'one', '2' => 'two');$/;"	v
options	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$options = array('1' => 'option1', '2' => 'option2');$/;"	v
options	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$options = array('50' => 'Fifty', '50f5c0cf' => 'Stringy');$/;"	v
options	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$options = array('first', 'second', 'third');$/;"	v
options	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$options = array(1 => 'Nate', 2 => 'Garrett', 3 => 'Larry');$/;"	v
options	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$options = array(1 => 'One', 2 => 'Two', '3' => 'Three');$/;"	v
options	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$options = array(1 => 'One', 2 => 'Two', '3' => 'Three', '3x' => 'Stringy');$/;"	v
options	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$options = array(1 => 'One', 2 => 'Two', 'Three' => array($/;"	v
primaryKey	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public $primaryKey = 'pk';$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^			$result = $this->Form->input("Contact.{$i}.email", array('type' => 'checkbox', 'value' => $i));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $matches[1];$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->button('<Clear Form>', array('type' => 'reset', 'escape' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->button('Clear Form >', array('type' => 'reset'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->button('Clear Form >', array('type' => 'reset', 'id' => 'clearForm'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->button('Hi');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->button('No type', array('type' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->button('Upload Text', array('onClick' => "$('#postAddForm').ajaxSubmit({target: '#postTextUpload', url: '\/posts\/text'});return false;'", 'escape' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->checkbox('Account.show_name', array('disabled' => 'disabled'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->checkbox('Account.show_name', array('disabled' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->checkbox('Contact.field', array('id' => 'theID'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->checkbox('Contact.field', array('id' => 'theID', 'value' => 'myvalue'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->checkbox('Contact.field', array('value' => 'myvalue'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->checkbox('Contact.published', array('id' => 'theID'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->checkbox('CustomField.1.value');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->checkbox('Model.CustomField.1.value');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->checkbox('Model.field');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->checkbox('Model.field', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->checkbox('Model.field', array('checked' => 'checked'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->checkbox('Model.field', array('checked' => 1));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->checkbox('Model.field', array('checked' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->checkbox('Model.field', array('checked' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->checkbox('Model.field', array('default' => false, 'hiddenField' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->checkbox('Model.field', array('default' => true, 'hiddenField' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->checkbox('Test.test', array('name' => 'myField'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->create('Contact');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->create('Contact', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->create('Contact', array('id' => 'TestId'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->create('Contact', array('type' => 'GET'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->create('Contact', array('type' => 'file'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->create('Contact', array('type' => 'get'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->create('Contact', array('type' => 'get', 'url' => '\/contacts\/add'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->create('Contact', array('type' => 'put'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->create('Contact', array('url' => '\/contacts\/add'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->create('Contact', array('url' => '\/contacts\/add', 'id' => 'MyForm'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->create('ContactNonStandardPk', array('url' => array('action' => 'edit')));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->create('User', array('action' => 'login'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->create('User', array('action' => 'signup'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->create('User', array('url' => '\/users\/login'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->create('User', array('url' => array('action' => 'login')));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->create('UserForm', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->create('UserForm', array('type' => 'post', 'action' => 'login'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->create('ValidateUser');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->create('ValidateUser', array('type' => 'post', 'action' => 'add'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->create(array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->create(array('url' => array('action' => 'index', 'param')));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->create(array('url' => array('action' => 'index', 'param'), 'default' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->create(false, array('type' => 'get', 'url' => array('controller' => 'contact_test')));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->dateTime('Contact.1.updated');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->dateTime('Contact.2.updated');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->dateTime('Contact.date', 'DMY', '12');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->dateTime('Contact.date', 'DMY', '12', array('empty' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->dateTime('Contact.date', 'DMY', '12', array('interval' => 15));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->dateTime('Contact.date', 'DMY', '12', array('interval' => 15, 'round' => 'up'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->dateTime('Contact.date', 'DMY', '12', array('interval' => 5, 'round' => 'down'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->dateTime('Contact.date', 'DMY', '12', array('interval' => 5, 'value' => ''));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->dateTime('Contact.date', 'DMY', '12', array('minuteInterval' => 5, 'value' => ''));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->dateTime('Contact.date', 'DMY', '12', array('value' => ''));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->dateTime('Contact.date', 'DMY', '12', array('value' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->dateTime('Contact.date',$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->dateTime('Contact.updated', 'DMY', '12', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->dateTime('Contact.updated', 'DMY', '12', array('value' => '2009-06-01 11:15:30'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->dateTime('Contact.updated', 'DMY', '12', array('value' => 'CURRENT_TIMESTAMP'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->dateTime('Model.field', 'DMY', '12', array('empty' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->dateTime('Model.field', 'DMY', '12', array('value' => $selected));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->datetime('created');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->day('Model.field');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->day('Model.field', array('value' => '10'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->day('Model.field', array('value' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->day('Model.field', array('value' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->day('Project.release');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->domIdSuffix('1 string with 1$-dollar signs');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->domIdSuffix('1 string with 1$-dollar signs', 'html5');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->domIdSuffix('1 string with 1$-dollar');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->domIdSuffix('<abc x="foo" y=\\'bar\\'>');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->domIdSuffix('<abc x="foo" y=\\'bar\\'>', 'html5');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->domIdSuffix('a<b');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->domIdSuffix('a>b');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->domIdSuffix('a\\'b');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->email('User.email');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->end('');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->end('', array('form' => 'form-name'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->end('Save');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->end('save');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->end(array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->end(array('label' => ''));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->end(array('label' => 'save'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->end(array('label' => 'save', 'name' => 'Whatever'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->end(array('label' => 'save', 'name' => 'Whatever', 'div' => 'good'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->end(array('name' => 'Whatever'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->end(null);$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->error($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->error('0.ValidateUser.ValidateItem.name');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->error('2.city');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->error('Contact.field');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->error('Contact.field', "<strong>Badness!<\/strong>", array('wrap' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->error('Contact.field', "<strong>Badness!<\/strong>", array('wrap' => false, 'escape' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->error('Contact.field', "<strong>Badness!<\/strong>", array('wrap' => false, 'escape' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->error('Contact.field', 'There is an error fool!', array('wrap' => 'span'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->error('Contact.field', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->error('Contact.field', array('attributes' => array('class' => 'field-error'), 'email' => 'No good!'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->error('Contact.field', null, array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->error('Contact.field', null, array('listOptions' => 'ol'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->error('Contact.field', null, array('listOptions' => array('tag' => 'ol')));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->error('Contact.field', null, array('wrap' => 'span'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->error('Contact.field', null, array('wrap' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->error('Thing.field', null, array('wrap' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->error('ValidateProfile.2.ValidateItem.1.name');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->error('ValidateProfile.2.city');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->error('ValidateUser.0.city');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->fields;$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->file('Model.upload');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->file('ValidateProfile.city');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->hidden('Contact.field', array('id' => 'theID'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->hidden('Contact.idontexist');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->hidden('UserForm.hidden', array('value' => '0'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->hidden('UserForm.stuff');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->hour('Model.field', false);$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->hour('Model.field', false, array('value' => '23'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->hour('Model.field', true);$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->hour('Model.field', true, array('value' => '23'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->hour('Model.field', true, array('value' => 'now'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input("1.name");$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input("Model.1.name");$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('0');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('1.id');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Address.0.first_name');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Address.0.last_name');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Address.0.title');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Address.1.last_name');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Address.non_existing_field_in_model');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Address.street');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.1.id');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.2.name');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.5.email', array('type' => 'text'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.boolean_field', array('type' => 'checkbox'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.boolean_field', array('type' => 'checkbox', 'required' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.created', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.created', array('empty' => 'Date Unknown'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.created', array('type' => 'datetime', 'dateFormat' => 'NONE'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.created', array('type' => 'datetime', 'timeFormat' => 'NONE'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.created', array('type' => 'time', 'timeFormat' => 24));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.date', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.email', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.email', array('div' => array('class' => false)));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.email', array('id' => 'custom'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.email', array('type' => 'text'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.field');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.field', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.field', array('after' => 'A message to you, Rudy'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.field1');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.iamrequiredalways');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.iamrequiredalways', array('type' => 'file'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.imalsonotrequired');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.imalsonotrequired2');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.imalsorequired');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.imnotrequired');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.imnotrequiredeither');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.imrequired');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.imrequired', array('required' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.imrequired', array('required' => null));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.imrequired', array('required' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.imrequiredonboth');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.imrequiredoncreate');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.imrequiredonupdate');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.imrequiredtoo');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.method', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.multiple', array('multiple' => 'checkbox', 'disabled' => $disabled, 'options' => $options));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.multiple', array('multiple' => 'checkbox', 'disabled' => 'disabled', 'options' => $options));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.multiple', array('multiple' => 'checkbox', 'disabled' => true, 'options' => $options));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.multiple', array('multiple' => 'multiple', 'disabled' => $disabled, 'options' => $options));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.name', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.name', array('div' => false, 'label' => 'My label'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.name', array('div' => false, 'label' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.non_existing');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.non_existing_nor_validated', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.non_existing_nor_validated', array('div' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.password');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.password', array('error' => ''));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.password', array('error' => '', 'errorMessage' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.password', array('errorMessage' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.phone');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.published', array('div' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.required_one');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.string_required');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.tags', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Contact.updated', array('div' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('ContactTag', array('div' => false, 'label' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('ContactTag.iwillberequired');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Model.0.OtherModel.field', array('id' => 'myId'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Model.1.field', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Model.created', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Model.date', array('type' => 'date'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Model.date', array('type' => 'date', 'dateFormat' => 'DMY'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Model.date', array('type' => 'date', 'dateFormat' => 'YMD'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Model.field', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Model.field', array('disabled' => $disabled, 'options' => $options));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Model.multi_field', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Model.start_time', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Model.tags', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Model.type');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Model.upload', array('type' => 'file'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Model.user', array('type' => 'checkbox'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Model.user_id', array('empty' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Model.user_id', array('type' => 'radio'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Model.user_id', array('type' => 'text'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Object.field', array('after' => 'A message to you, Rudy'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Post.content', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Publisher.id', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Random.start_time', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('Thing.user_id', array('empty' => 'Some Empty'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('User', array('type' => 'text'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('User.User', array('empty' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('User.active', array('label' => false, 'checked' => '1'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('User.active', array('label' => false, 'checked' => 1));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('User.active', array('label' => false, 'checked' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('User.disabled', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('User.get_spam', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('User.website', array('type' => 'url', 'value' => 'http:\/\/domain.tld', 'div' => false, 'label' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('UserForm.other', array('type' => 'text'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('UserForm.published', array('type' => 'text'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('UserForm.something', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('UserForm.something', array('type' => 'checkbox'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('UserForm.stuff');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('ValidateItem.id');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('ValidateItem.name');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('ValidateProfile.1.ValidateItem.2.created', array('empty' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('ValidateProfile.1.ValidateItem.2.name');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('ValidateProfile.1.ValidateItem.2.profile_id');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('ValidateUser.balance');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('ValidateUser.cost_decimal');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('ValidateUser.id');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('ValidateUser.name');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('ValidateUser.population');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('ValidateUser.ratio');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('birthday',$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('category', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('city', array('error' => array('attributes' => array('escape' => false))));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('city', array('error' => array('attributes' => array('escape' => true))));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('email', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('foo');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('foo', array('step' => 0.5));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('id');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('just_day',$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('just_month',$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('just_year',$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('model_id');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('month_year',$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('name');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('name', array('div' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('non_existing_field_in_contact_model');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('prueba', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('published');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('published', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('published', array('monthNames' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('published', array('type' => 'time'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('published', array('type' => 'time', 'selected' => $now));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('published2', array('type' => 'date'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('username');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('username', array('div' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('username', array('div' => true, 'label' => 'username'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->input('username', array('label' => 'Username', 'format' => array('input', 'label')));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->inputDefaults();$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->inputs($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->inputs('Field of Dreams', null, array('fieldset' => 'classy-stuff'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->inputs('Hello');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->inputs('The Legend');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->inputs();$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->inputs(array('fieldset' => false, 'legend' => 'Hello'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->inputs(array('fieldset' => false, 'legend' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->inputs(array('fieldset' => true, 'legend' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->inputs(array('legend' => 'Field of Dreams', 'fieldset' => 'classy-stuff'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->inputs(array('legend' => 'Hello'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->inputs(false);$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->inputs(null, null, array('fieldset' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->inputs(null, null, array('fieldset' => false, 'legend' => 'Hello'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->inputs(null, null, array('legend' => 'Field of Dreams', 'fieldset' => 'classy-stuff'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->inputs(null, null, array('legend' => 'Hello'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->label('Person.2.name', '');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->label('Person.first_name');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->label('Person.first_name', '');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->label('Person.first_name', 'Your first name');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->label('Person.first_name', 'Your first name', array('class' => 'my-class'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->label('Person.first_name', 'Your first name', array('class' => 'my-class', 'id' => 'LabelID'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->label();$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->minute('Model.field');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->minute('Model.field', array('interval' => 5));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->minute('Model.field', array('value' => '#invalid#'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->month('Model.field');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->month('Model.field', array('empty' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->month('Model.field', array('monthNames' => $monthNames));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->month('Model.field', array('monthNames' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->month('Project.release');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->password('Contact.field');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->password('Contact.passwd', array('id' => 'theID'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->password('password');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->postButton('Delete', '\/posts\/delete\/1');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->postButton('Hi', '\/controller\/action');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->postButton('Send', '\/', array('data' => $data));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->postButton('Send', '\/', array('data' => array('extra' => 'value')));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->postLink($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->postLink('Delete', '\/posts\/delete', array('data' => array('id' => 1)));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->postLink('Delete', '\/posts\/delete\/1');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->postLink('Delete', '\/posts\/delete\/1', array('block' => 'foobar'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->postLink('Delete', '\/posts\/delete\/1', array('escape' => false), '\\'Confirm\\' this "deletion"?');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->postLink('Delete', '\/posts\/delete\/1', array('inline' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->postLink('Delete', '\/posts\/delete\/1', array('method' => 'delete'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->postLink('Delete', '\/posts\/delete\/1', array('target' => '_blank'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->postLink('Delete', '\/posts\/delete\/1', array(), 'Confirm?');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->postLink('Delete', '\/posts\/delete\/2',$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->postLink('Send', '\/', array('data' => $data));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->radio($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->radio('Contact.1.imrequired', array('option A'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->radio('Model.1.field', array('option A'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->radio('Model.1.field', array('option A'), array('hiddenField' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->radio('Model.field', array('1' => 'Yes', '0' => 'No'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->radio('Model.field', array('1' => 'Yes', '0' => 'No'), array('value' => ''));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->radio('Model.field', array('1' => 'Yes', '0' => 'No'), array('value' => '0'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->radio('Model.field', array('1' => 'Yes', '0' => 'No'), array('value' => '1'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->radio('Model.field', array('1' => 'Yes', '0' => 'No'), array('value' => 0));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->radio('Model.field', array('1' => 'Yes', '0' => 'No'), array('value' => 1));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->radio('Model.field', array('1' => 'Yes', '0' => 'No'), array('value' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->radio('Model.field', array('1' => 'Yes', '0' => 'No'), array('value' => null));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->radio('Model.field', array('1' => 'Yes', '0' => 'No'), array('value' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->radio('Model.field', array('1\/2' => 'half'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->radio('Model.field', array('option A'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->radio('Model.field', array('option A', 'option B'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->radio('Model.field', array('option A', 'option B'), array('name' => 'data[Model][custom]'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->radio('Model.field', array('option A', 'option B'), array('separator' => '<br\/>'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->radio('Officer.gender', array('male' => 'Male', 'female' => 'Female'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->radio('recipient',$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->search('User.query');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->search('User.query', array('type' => 'text', 'value' => 'test'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->search('User.query', array('value' => 'test'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->secure($expected);$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->secure($fields);$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->secure($fields, $secureAttributes);$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->secure($this->Form->fields);$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->secure();$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->secure(array('anything'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->select($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->select('Contact.multiple', $options, array('multiple' => 'multiple', 'disabled' => $disabled));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->select('Contact.required_one', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->select('Contact.required_one', array('option A'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->select('Contact.required_one', array('option A'), array('disabled' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->select('Model.field', $options, array('disabled' => $disabled));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->select('Model.field', $options, array('empty' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->select('Model.field', $options, array('empty' => false, 'escape' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->select('Model.field', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->select('Model.field', array('0' => 'No', '1' => 'Yes'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->select('Model.field', array('50f5c0cf' => 'Stringy', '50' => 'fifty'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->select('Model.field', array('first', 'second'), array('empty' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->select('Model.field', array('value' => 'good', 'other' => 'bad'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->select('Model.field', array());$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->select('Model.multi_field', array('1\/2' => 'half'), array('multiple' => 'checkbox'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->select('Model.multi_field', array('first', 'second', 'third'), array('multiple' => 'checkbox', 'value' => array(0, 1)));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->select('Model.multi_field',$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->select('People.People', $options, array('multiple' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->submit('');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->submit('Cancel', array('name' => 'cancel'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->submit('Next >');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->submit('Next >', array('escape' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->submit('Not.an.image');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->submit('Not.an.image', array('before' => $before, 'after' => $after));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->submit('Reset!', array('type' => 'reset'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->submit('Save', array('name' => 'save'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->submit('Test Submit');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->submit('Test Submit', array('class' => 'save', 'div' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->submit('Test Submit', array('div' => array('id' => 'SaveButton')));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->submit('Test Submit', array('div' => array('tag' => 'span')));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->submit('Test', array('after' => $after));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->submit('Test', array('before' => $before));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->submit('Test', array('before' => $before, 'after' => $after));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->submit('\/relative\/cake.power.gif');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->submit('cake.power.gif');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->submit('cake.power.gif', array('after' => $after));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->submit('cake.power.gif', array('before' => $before));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->submit('cake.power.gif', array('before' => $before, 'after' => $after));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->submit('http:\/\/example.com\/cake.power.gif');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->submit('save.png');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->submit('save.png', array('name' => 'test'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->tagIsInvalid();$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->text('0.Node.title');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->text('Contact.name');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->text('Contact.text', array('id' => 'theID'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->text('Model.0.OtherModel.field', array('id' => 'myId'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->text('Model.field');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->text('Model.field', array('default' => 'default value'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->text('Model.field', array('id' => 'theID'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->text('Model.field', array('type' => 'password'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->text('Model.text');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->text('reason');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->text('user_form');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->textarea('Model.0.OtherModel.field');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->textarea('Model.field');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->textarea('Model.field', array('escape' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->textarea('Model.tmp');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->unlockField();$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->year('Contact.published', 2006, 2007, array('class' => 'year'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->year('Contact.published', 2006, 2007, array('empty' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->year('Contact.published', 2006, 2007, array('empty' => false, 'value' => 2007));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->year('Contact.published', 2006, 2007, array('empty' => false, 'value' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->year('Contact.published', 2006, 2007, array('value' => 2007));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->year('Contact.published', 2006, 2007, array('value' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->year('Contact.published', 2006, 2008, array('empty' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->year('Contact.published', 2006, 2008, array('empty' => false, 'value' => 2007));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->year('Contact.published', 2010, 2011);$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->year('Model.field', 2006, 2007);$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->year('Model.field', 2006, 2007, array('orderYear' => 'asc'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->year('Project.release');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->year('Project.release', 1890, 1900);$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->year('User.birthday');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->year('published', 2006, 2008, array('empty' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->Form->year('published', array(), array(), array('empty' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->UserForm->OpenidUrl->create($data);$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->ValidateUser->create($data);$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->View->fetch('foobar');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = $this->View->fetch('postLink');$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = explode(':', $result);$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = explode(':', $result[1]);$/;"	v
result	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$result = explode('<\/select><select', $result);$/;"	v
schema	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function schema($field = false) {$/;"	f
secureAttributes	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$secureAttributes = array('form' => 'MyTestForm');$/;"	v
selected	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$selected = array('2', '3x');$/;"	v
selected	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$selected = strtotime('2008-10-26 12:33:00');$/;"	v
setSchema	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function setSchema($schema) {$/;"	f
setUp	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function tearDown() {$/;"	f
testBrokenness	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testBrokenness() {$/;"	f
testButton	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testButton() {$/;"	f
testButtonUnlockedByDefault	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testButtonUnlockedByDefault() {$/;"	f
testCheckbox	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testCheckbox() {$/;"	f
testCheckboxCheckedOption	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testCheckboxCheckedOption() {$/;"	f
testCheckboxCustomNameAttribute	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testCheckboxCustomNameAttribute() {$/;"	f
testCheckboxDefaultValue	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testCheckboxDefaultValue() {$/;"	f
testCheckboxDisabling	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testCheckboxDisabling() {$/;"	f
testCheckboxHiddenField	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testCheckboxHiddenField() {$/;"	f
testCheckboxZeroValue	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testCheckboxZeroValue() {$/;"	f
testCreate	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testCreate() {$/;"	f
testCreateAutoUrl	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testCreateAutoUrl() {$/;"	f
testCreateClearingFields	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testCreateClearingFields() {$/;"	f
testCreateCustomRoute	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testCreateCustomRoute() {$/;"	f
testCreateEndGetNoSecurity	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testCreateEndGetNoSecurity() {$/;"	f
testCreateNoErrorsWithMockModel	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testCreateNoErrorsWithMockModel() {$/;"	f
testCreateOnSubmit	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testCreateOnSubmit() {$/;"	f
testCreatePassedArgs	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testCreatePassedArgs() {$/;"	f
testCreateQuerystringrequest	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testCreateQuerystringrequest() {$/;"	f
testCreateWithAcceptCharset	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testCreateWithAcceptCharset() {$/;"	f
testCreateWithInputDefaults	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testCreateWithInputDefaults() {$/;"	f
testCreateWithMultipleIdInData	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testCreateWithMultipleIdInData() {$/;"	f
testCreateWithSecurity	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testCreateWithSecurity() {$/;"	f
testCustomValidationErrors	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testCustomValidationErrors() {$/;"	f
testDateTime	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testDateTime() {$/;"	f
testDateTimeAllZeros	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testDateTimeAllZeros() {$/;"	f
testDateTimeEmptyAsArray	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testDateTimeEmptyAsArray() {$/;"	f
testDateTimeLabelIdMatchesFirstInput	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testDateTimeLabelIdMatchesFirstInput() {$/;"	f
testDateTimeNoErrorsOnEmptyData	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testDateTimeNoErrorsOnEmptyData() {$/;"	f
testDateTimeRounding	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testDateTimeRounding() {$/;"	f
testDateTimeWithBogusData	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testDateTimeWithBogusData() {$/;"	f
testDateTimeWithGetForms	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testDateTimeWithGetForms() {$/;"	f
testDatetimeWithDefault	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testDatetimeWithDefault() {$/;"	f
testDay	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testDay() {$/;"	f
testDbLessModel	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testDbLessModel() {$/;"	f
testDefaultValue	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testDefaultValue() {$/;"	f
testDisableSecurityUsingForm	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testDisableSecurityUsingForm() {$/;"	f
testDomIdSuffix	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testDomIdSuffix() {$/;"	f
testDomIdSuffixCollisionResolvement	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testDomIdSuffixCollisionResolvement() {$/;"	f
testDuplicateFieldNameResolution	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testDuplicateFieldNameResolution() {$/;"	f
testEditFormWithData	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testEditFormWithData() {$/;"	f
testEmptyErrorValidation	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testEmptyErrorValidation() {$/;"	f
testEmptyInputErrorValidation	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testEmptyInputErrorValidation() {$/;"	f
testError	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testError() {$/;"	f
testFileUploadField	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testFileUploadField() {$/;"	f
testFileUploadFieldTypeGenerationForBinaries	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testFileUploadFieldTypeGenerationForBinaries() {$/;"	f
testFileUploadOnOtherModel	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testFileUploadOnOtherModel() {$/;"	f
testForMagicInputNonExistingNorValidated	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testForMagicInputNonExistingNorValidated() {$/;"	f
testFormDateTimeMulti	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testFormDateTimeMulti() {$/;"	f
testFormEnd	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testFormEnd() {$/;"	f
testFormInputRequiredDetection	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testFormInputRequiredDetection() {$/;"	f
testFormInputRequiredDetectionModelValidator	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testFormInputRequiredDetectionModelValidator() {$/;"	f
testFormInputs	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testFormInputs() {$/;"	f
testFormMagicInput	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testFormMagicInput() {$/;"	f
testFormMagicInputLabel	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testFormMagicInputLabel() {$/;"	f
testFormSecureWithCustomNameAttribute	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testFormSecureWithCustomNameAttribute() {$/;"	f
testFormSecuredInput	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testFormSecuredInput() {$/;"	f
testFormSecurityArrayFields	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testFormSecurityArrayFields() {$/;"	f
testFormSecurityFields	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testFormSecurityFields() {$/;"	f
testFormSecurityInputUnlockedFields	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testFormSecurityInputUnlockedFields() {$/;"	f
testFormSecurityMultipleFields	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testFormSecurityMultipleFields() {$/;"	f
testFormSecurityMultipleInputDisabledFields	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testFormSecurityMultipleInputDisabledFields() {$/;"	f
testFormSecurityMultipleInputFields	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testFormSecurityMultipleInputFields() {$/;"	f
testFormSecurityMultipleSubmitButtons	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testFormSecurityMultipleSubmitButtons() {$/;"	f
testFormValidationAssociated	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testFormValidationAssociated() {$/;"	f
testFormValidationAssociatedFirstLevel	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testFormValidationAssociatedFirstLevel() {$/;"	f
testFormValidationAssociatedSecondLevel	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testFormValidationAssociatedSecondLevel() {$/;"	f
testFormValidationMultiRecord	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testFormValidationMultiRecord() {$/;"	f
testGetFormCreate	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testGetFormCreate() {$/;"	f
testGetFormWithFalseModel	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testGetFormWithFalseModel() {$/;"	f
testHabtmSelectBox	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testHabtmSelectBox() {$/;"	f
testHiddenField	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testHiddenField() {$/;"	f
testHour	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testHour() {$/;"	f
testHtml5InputException	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testHtml5InputException() {$/;"	f
testHtml5Inputs	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testHtml5Inputs() {$/;"	f
testInput	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testInput() {$/;"	f
testInputCheckbox	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testInputCheckbox() {$/;"	f
testInputCheckboxWithDisabledElements	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testInputCheckboxWithDisabledElements() {$/;"	f
testInputCheckboxesInLoop	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testInputCheckboxesInLoop() {$/;"	f
testInputDate	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testInputDate() {$/;"	f
testInputDateMaxYear	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testInputDateMaxYear() {$/;"	f
testInputDatetime	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testInputDatetime() {$/;"	f
testInputDefaults	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testInputDefaults() {$/;"	f
testInputErrorEscape	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testInputErrorEscape() {$/;"	f
testInputMagicSelectChangeToRadio	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testInputMagicSelectChangeToRadio() {$/;"	f
testInputMagicSelectForTypeNumber	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testInputMagicSelectForTypeNumber() {$/;"	f
testInputMagicTypeDoesNotOverride	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testInputMagicTypeDoesNotOverride() {$/;"	f
testInputMultipleCheckboxes	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testInputMultipleCheckboxes() {$/;"	f
testInputOverridingMagicSelectType	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testInputOverridingMagicSelectType() {$/;"	f
testInputSelectType	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testInputSelectType() {$/;"	f
testInputTemplate	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testInputTemplate() {$/;"	f
testInputTime	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testInputTime() {$/;"	f
testInputTimeWithIntervalAnd12HourFormat	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testInputTimeWithIntervalAnd12HourFormat() {$/;"	f
testInputWithLeadingInteger	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testInputWithLeadingInteger() {$/;"	f
testInputWithMatchingFieldAndModelName	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testInputWithMatchingFieldAndModelName() {$/;"	f
testInputWithNonStandardPrimaryKeyMakesHidden	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testInputWithNonStandardPrimaryKeyMakesHidden() {$/;"	f
testInputZero	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testInputZero() {$/;"	f
testInputsPluginModel	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testInputsPluginModel() {$/;"	f
testIntrospectModelFromRequest	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testIntrospectModelFromRequest() {$/;"	f
testLabel	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testLabel() {$/;"	f
testMinute	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testMinute() {$/;"	f
testMonth	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testMonth() {$/;"	f
testMultiRecordForm	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testMultiRecordForm() {$/;"	f
testMultiRecordFormValidationErrors	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testMultiRecordFormValidationErrors() {$/;"	f
testMultipleFormWithIdFields	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testMultipleFormWithIdFields() {$/;"	f
testMultipleInputValidation	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testMultipleInputValidation() {$/;"	f
testNestedSelect	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testNestedSelect() {$/;"	f
testNoCheckboxLocking	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testNoCheckboxLocking() {$/;"	f
testPassword	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testPassword() {$/;"	f
testPasswordValidation	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testPasswordValidation() {$/;"	f
testPostButton	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testPostButton() {$/;"	f
testPostButtonNestedData	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testPostButtonNestedData() {$/;"	f
testPostLink	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testPostLink() {$/;"	f
testPostLinkAfterGetForm	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testPostLinkAfterGetForm() {$/;"	f
testPostLinkFormBuffer	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testPostLinkFormBuffer() {$/;"	f
testPostLinkNestedData	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testPostLinkNestedData() {$/;"	f
testPostLinkSecurityHash	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testPostLinkSecurityHash() {$/;"	f
testRadio	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testRadio() {$/;"	f
testRadioAddEmptyOption	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testRadioAddEmptyOption() {$/;"	f
testRadioBetween	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testRadioBetween() {$/;"	f
testRadioDifferentModel	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testRadioDifferentModel() {$/;"	f
testRadioDisabled	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testRadioDisabled() {$/;"	f
testRadioHiddenInputDisabling	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testRadioHiddenInputDisabling() {$/;"	f
testRadioLabelArray	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testRadioLabelArray() {$/;"	f
testRadioOptionWithBooleanishValues	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testRadioOptionWithBooleanishValues() {$/;"	f
testRadioWithCreate	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testRadioWithCreate() {$/;"	f
testRequiredOnCreate	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testRequiredOnCreate() {$/;"	f
testRequiredOnUpdate	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testRequiredOnUpdate() {$/;"	f
testSaveManyRecordFormValidationErrors	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSaveManyRecordFormValidationErrors() {$/;"	f
testSecurePostButton	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSecurePostButton() {$/;"	f
testSecurePostLink	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSecurePostLink() {$/;"	f
testSecuredAndDisabled	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSecuredAndDisabled() {$/;"	f
testSecuredAndDisabledNotAssoc	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSecuredAndDisabledNotAssoc() {$/;"	f
testSecuredFileInput	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSecuredFileInput() {$/;"	f
testSecuredFormUrlHasHtmlAndIdentifer	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSecuredFormUrlHasHtmlAndIdentifer() {$/;"	f
testSecuredFormUrlIgnoresHost	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSecuredFormUrlIgnoresHost() {$/;"	f
testSecuredFormUrlWorksWithNamedParameter	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSecuredFormUrlWorksWithNamedParameter() {$/;"	f
testSecuredInputCustomName	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSecuredInputCustomName() {$/;"	f
testSecuredMultipleSelect	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSecuredMultipleSelect() {$/;"	f
testSecuredRadio	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSecuredRadio() {$/;"	f
testSecurityButtonNestedNamed	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSecurityButtonNestedNamed() {$/;"	f
testSecuritySubmitImageName	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSecuritySubmitImageName() {$/;"	f
testSecuritySubmitImageNoName	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSecuritySubmitImageNoName() {$/;"	f
testSecuritySubmitNestedNamed	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSecuritySubmitNestedNamed() {$/;"	f
testSelect	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSelect() {$/;"	f
testSelectAsCheckbox	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSelectAsCheckbox() {$/;"	f
testSelectCheckboxMultipleId	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSelectCheckboxMultipleId() {$/;"	f
testSelectCheckboxMultipleOverrideName	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSelectCheckboxMultipleOverrideName() {$/;"	f
testSelectHiddenFieldOmission	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSelectHiddenFieldOmission() {$/;"	f
testSelectMultiple	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSelectMultiple() {$/;"	f
testSelectMultipleCheckboxDiv	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSelectMultipleCheckboxDiv() {$/;"	f
testSelectMultipleCheckboxSecurity	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSelectMultipleCheckboxSecurity() {$/;"	f
testSelectMultipleCheckboxes	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSelectMultipleCheckboxes() {$/;"	f
testSelectMultipleSecureWithNoOptions	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSelectMultipleSecureWithNoOptions() {$/;"	f
testSelectMultipleWithDisabledElements	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSelectMultipleWithDisabledElements() {$/;"	f
testSelectNoSecureWithNoOptions	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSelectNoSecureWithNoOptions() {$/;"	f
testSelectOptionGroupEscaping	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSelectOptionGroupEscaping() {$/;"	f
testSelectWithDisabledElements	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSelectWithDisabledElements() {$/;"	f
testSelectWithNullAttributes	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSelectWithNullAttributes() {$/;"	f
testSubmitButton	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSubmitButton() {$/;"	f
testSubmitImage	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSubmitImage() {$/;"	f
testSubmitImageTimestamp	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSubmitImageTimestamp() {$/;"	f
testSubmitUnlockedByDefault	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testSubmitUnlockedByDefault() {$/;"	f
testTagIsInvalid	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testTagIsInvalid() {$/;"	f
testTagIsInvalidSaveMany	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testTagIsInvalidSaveMany() {$/;"	f
testTextArea	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testTextArea() {$/;"	f
testTextAreaWithStupidCharacters	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testTextAreaWithStupidCharacters() {$/;"	f
testTextFieldGenerationForFloats	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testTextFieldGenerationForFloats() {$/;"	f
testTextFieldTypeNumberGenerationForIntegers	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testTextFieldTypeNumberGenerationForIntegers() {$/;"	f
testTextbox	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testTextbox() {$/;"	f
testTimeSelectedWithInterval	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testTimeSelectedWithInterval() {$/;"	f
testTimeSelectedWithIntervalTwelve	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testTimeSelectedWithIntervalTwelve() {$/;"	f
testUnlockFieldAddsToList	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testUnlockFieldAddsToList() {$/;"	f
testUnlockFieldRemovingFromFields	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testUnlockFieldRemovingFromFields() {$/;"	f
testValidateHashNoModel	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testValidateHashNoModel() {$/;"	f
testYear	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testYear() {$/;"	f
testYearAutoExpandRange	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public function testYearAutoExpandRange() {$/;"	f
thisHour	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^		$thisHour = date('H');$/;"	v
useTable	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public $useTable = false;$/;"	v
uses	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public $uses = null;$/;"	v
validate	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public $validate = array($/;"	v
validate	lib/Cake/Test/Case/View/Helper/FormHelperTest.php	/^	public $validate = array('openid_not_registered' => array());$/;"	v
FULL_BASE_URL	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	define('FULL_BASE_URL', 'http:\/\/cakephp.org');$/;"	d
Folder	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$Folder = new Folder(WWW_ROOT . 'theme' . DS . 'test_theme');$/;"	v
Html	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$this->Html = new TestHtmlHelper($this->View);$/;"	v
Html	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public $Html = null;$/;"	v
Html5TestHelper	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^class Html5TestHelper extends TestHtmlHelper {$/;"	c
HtmlHelperTest	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^class HtmlHelperTest extends CakeTestCase {$/;"	c
TestHtmlHelper	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^class TestHtmlHelper extends HtmlHelper {$/;"	c
TheHtmlTestController	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^class TheHtmlTestController extends Controller {$/;"	c
View	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$this->View = $this->getMock('View', array('append'), array(new TheHtmlTestController()));$/;"	v
_attributeFormat	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	protected $_attributeFormat = 'data-%s="%s"';$/;"	v
_minimizedAttributeFormat	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	protected $_minimizedAttributeFormat = '%s';$/;"	v
_minimizedAttributes	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	protected $_minimizedAttributes = array('require', 'checked');$/;"	v
attrs	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^				$attrs = array($attribute => $value);$/;"	v
attrs	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$attrs = array('class' => array('foo', 'bar'));$/;"	v
cDataEnd	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public $cDataEnd = 'preg:\/[^\\]]*\\]\\]\\>[\\s\\r\\n]*\/';$/;"	v
cDataStart	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public $cDataStart = 'preg:\/^\\\/\\\/<!\\[CDATA\\[[\\n\\r]*\/';$/;"	v
compact	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$compact = array('compact', 'checked', 'declare', 'readonly', 'disabled',$/;"	v
dir	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^			$dir = new Folder(WWW_ROOT . 'theme');$/;"	v
dir	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$dir = new Folder(WWW_ROOT . 'theme' . DS . 'test_theme');$/;"	v
expected	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^				$expected = ' ' . $attribute . '="' . $attribute . '"';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$expected = "<tr class=\\"even\\"><td>td content 1<\/td> <td>td content 2<\/td> <td>td content 3<\/td><\/tr>\\n<tr class=\\"odd\\"><td>td content 1<\/td> <td>td content 2<\/td> <td>td content 3<\/td><\/tr>\\n<tr class=\\"even\\"><td>td content 1<\/td> <td>td content 2<\/td> <td>td content 3<\/td><\/tr>";$/;"	v
expected	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$expected = "<tr class=\\"odd\\"><td>td content 1<\/td> <td>td content 2<\/td> <td>td content 3<\/td><\/tr>\\n<tr class=\\"even\\"><td>td content 1<\/td> <td>td content 2<\/td> <td>td content 3<\/td><\/tr>\\n<tr class=\\"odd\\"><td>td content 1<\/td> <td>td content 2<\/td> <td>td content 3<\/td><\/tr>";$/;"	v
expected	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$expected = "<tr class=\\"odd\\"><td>td content 1<\/td> <td>td content 2<\/td> <td>td content 3<\/td><\/tr>\\n<tr class=\\"even\\"><td>td content 1<\/td> <td>td content 2<\/td> <td>td content 3<\/td><\/tr>\\n<tr class=\\"odd\\"><td>td content 1<\/td> <td>td content 2<\/td> <td>td content 3<\/td><\/tr>\\n<tr class=\\"even\\"><td>td content 1<\/td> <td>td content 2<\/td> <td>td content 3<\/td><\/tr>";$/;"	v
expected	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$expected = ' class="foo bar"';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$expected = ' require';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$expected = '<!DOCTYPE HTML PUBLIC "-\/\/W3C\/\/DTD HTML 4.01\/\/EN" "http:\/\/www.w3.org\/TR\/html4\/strict.dtd">';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$expected = '<!DOCTYPE html>';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$expected = 'display:none; margin:10px;';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$expected = array('<tr', '<th', 'ID', '\/th', '<th class="highlight" width="120px"', 'Name', '\/th', '<th', 'Date', '\/th', '\/tr');$/;"	v
expected	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$expected = array('<tr', '<th', 'ID', '\/th', '<th class="highlight"', 'Name', '\/th', '<th', 'Date', '\/th', '\/tr');$/;"	v
expected	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$expected = array('<tr', '<th', 'ID', '\/th', '<th', 'Name', '\/th', '<th', 'Date', '\/th', '\/tr');$/;"	v
expected	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$expected = array('a' => array('href' => '\/home'), 'preg:\/\\\/home\/', '\/a');$/;"	v
expected	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$expected = array('a' => array('href' => 'http:\/\/www.example.org?param1=value1&amp;param2=value2'), 'http:\/\/www.example.org?param1=value1&amp;param2=value2', '\/a');$/;"	v
expected	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$expected = array('a' => array('href' => 'javascript:alert(&#039;cakephp&#039;);'), 'alert', '\/a');$/;"	v
expected	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$expected = array('a' => array('href' => 'mailto:example@cakephp.org'), 'write me', '\/a');$/;"	v
expected	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$expected = array('a' => array('href' => 'sms:0123465-798'), 'text me on 0123465-798', '\/a');$/;"	v
expected	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$expected = array('a' => array('href' => 'sms:0123465-798?body=hello &quot;cakephp&quot;'), 'say hello to 0123465-798', '\/a');$/;"	v
expected	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$expected = array('a' => array('href' => 'sms:0123465-798?body=hello there'), 'say hello to 0123465-798', '\/a');$/;"	v
expected	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$expected = array('a' => array('href' => 'tel:0123465-798'), 'call me on 0123465-798', '\/a');$/;"	v
expected	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$expected = array('a' => array('href' => Router::fullBaseUrl() . '\/posts'), 'Posts', '\/a');$/;"	v
expected	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$expected = array('audio' => array('src' => 'files\/audio.mp3'), '\/audio');$/;"	v
expected	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$expected = array('video' => array('src' => 'files\/video.ogv'), '\/video');$/;"	v
expected	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$expected = array('video' => array('src' => 'files\/video.webm'), 'Your browser does not support the HTML5 Video element.', '\/video');$/;"	v
expected	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$expected = array('video' => array('src' => 'files\/video.webm'), '\/video');$/;"	v
getAttribute	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function getAttribute($attribute) {$/;"	f
helper	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$helper = new Html5TestHelper($this->View);$/;"	v
helper	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$helper = new TestHtmlHelper($this->View);$/;"	v
here	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$here = $this->Html->url('\/', true);$/;"	v
lines	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$lines = explode("\\n", $result);$/;"	v
list	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$list = array($/;"	v
name	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public $name = 'TheTest';$/;"	v
parseAttributes	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function parseAttributes($options, $exclude = null, $insertBefore = ' ', $insertAfter = null) {$/;"	f
path	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$path = CAKE . 'Test' . DS . 'test_app' . DS . 'Config' . DS;$/;"	v
pluginJsPath	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$pluginJsPath = $pluginPath . 'webroot\/js';$/;"	v
pluginPath	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$pluginPath = App::pluginPath('TestPlugin');$/;"	v
previousConfig	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$previousConfig = Configure::read('App.cssBaseUrl');$/;"	v
previousConfig	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$previousConfig = Configure::read('App.imageBaseUrl');$/;"	v
previousConfig	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$previousConfig = Configure::read('App.jsBaseUrl');$/;"	v
request	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$request = $this->Html->request;$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->charset('UTF-7');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->charset();$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->css('TestPlugin.my.css.library');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->css('TestPlugin.style', array('plugin' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->css('TestPlugin.style', null, array('plugin' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->css('TestPlugin.test_plugin_asset');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->css('TestPlugin.test_plugin_asset.css');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->css('TestPlugin.test_plugin_asset.css?1234');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->css('\/\/example.com\/css\/cake.generic.css');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->css('cake.generic');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->css('cake.generic', array('pathPrefix' => '\/my\/custom\/path\/'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->css('cake.generic', array('pathPrefix' => 'http:\/\/cakephp.org\/assets\/css\/'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->css('css_in_head', array('inline' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->css('css_in_head', null, array('inline' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->css('http:\/\/whatever.com\/screen.css?1234');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->css('more_css_in_head', array('inline' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->css('more_css_in_head', null, array('inline' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->css('my.css.library');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->css('screen');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->css('screen', 'import');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->css('screen', array('rel' => 'import'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->css('screen', null, array('fullBase' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->css('screen.css');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->css('screen.css?1234');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->css('screen.css?with=param&other=param');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->css('theme_webroot');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->css('webroot_test');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->div('class-name');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->div('class-name', '<text>', array('escape' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->div('class-name', 'text');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->docType('html4-strict');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->docType();$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->getCrumbList($/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->getCrumbList(array($/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->getCrumbList(null, 'Home');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->getCrumbList(null, array('url' => '\/home', 'text' => '<img src="\/home.png" \/>', 'escape' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->getCrumbs(' &gt; ');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->getCrumbs(' - ', array('url' => '\/home', 'text' => '<img src="\/home.png" \/>', 'escape' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->getCrumbs('-', 'Start');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->getCrumbs();$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->image('..\/favicon.ico', array('url' => '#'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->image('\/\/google.com\/logo.gif');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->image('\/test\/view\/1.gif');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->image('__cake_test_image.gif');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->image('cake.icon.png');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->image('http:\/\/google.com\/logo.gif');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->image('sub\/test.gif', array('fullBase' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->image('test.gif');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->image('test.gif', array('fullBase' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->image('test.gif', array('pathPrefix' => '\/\/cakephp.org\/assets\/img\/'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->image('test.gif', array('pathPrefix' => '\/my\/custom\/path\/'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->image('test.gif', array('pathPrefix' => 'http:\/\/cakephp.org\/assets\/img\/'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->image('test.gif', array('url' => '#'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->image('test.gif?one=two&three=four');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->image(array($/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->image(array('controller' => 'test', 'action' => 'view', 1, 'ext' => 'gif'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->link($this->Html->image('..\/favicon.ico'), '#', array('escape' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->link($this->Html->image('test.gif'), '#', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->link($this->Html->image('test.gif'), '#', array('escape' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->link('Home', '\/home', array('confirm' => 'Are you sure you want to do this?'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->link('Home', '\/home', array('default' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->link('Home', '\/home', array('default' => false, 'onclick' => 'someFunction();'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->link('Home', '\/home', array('escape' => false, 'confirm' => 'Confirm\\'s "nightmares"'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->link('Next >', '#');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->link('Next >', '#', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->link('Next >', '#', array('escape' => 'utf-8'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->link('Next >', '#', array('escape' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->link('Next >', '#', array('escape' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->link('Original size', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->link('Posts', array('controller' => 'posts', 'action' => 'index', 'full_base' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->link('\/home');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->link('alert', 'javascript:alert(\\'cakephp\\');');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->link('call me on 0123465-798', 'tel:0123465-798');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->link('http:\/\/www.example.org?param1=value1&param2=value2');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->link('say hello to 0123465-798', 'sms:0123465-798?body=hello "cakephp"');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->link('say hello to 0123465-798', 'sms:0123465-798?body=hello there');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->link('text me on 0123465-798', 'sms:0123465-798');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->link('write me', 'mailto:example@cakephp.org');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->link(array('action' => 'login', '<[You]>'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->loadConfig('htmlhelper_tags', $path);$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->loadConfig(array('htmlhelper_minimized.ini', 'ini'), $path);$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->media($/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->media('audio.mp3');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->media('video.ogv', array('tag' => 'video'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->media('video.webm');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->media('video.webm', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->media('video.webm', array('autoload', 'muted' => 'muted'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->media(null, array('src' => 'video.webm'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->meta('atom', array('controller' => 'posts', 'ext' => 'xml'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->meta('atom', array('controller' => 'posts', 'ext' => 'xml'), array('link' => '\/articles.rss'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->meta('description', 'this is the meta description');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->meta('icon');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->meta('icon', '\/favicon.png?one=two&three=four');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->meta('icon', 'favicon.ico');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->meta('icon', 'favicon.ico', array('block' => 'metaTags'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->meta('keywords', 'these, are, some, meta, keywords');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->meta('non-existing');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->meta('non-existing', '\/posts.xpp');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->meta('non-existing', '\/posts.xpp', array('type' => 'atom'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->meta('rss', array('controller' => 'posts', 'ext' => 'rss'), array('title' => 'this is an rss feed'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->meta('this is an rss feed', array('controller' => 'posts', 'ext' => 'rss'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->meta(array('link' => 'favicon.ico', 'rel' => 'icon'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->meta(array('name' => 'ROBOTS', 'content' => 'ALL'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->meta(array('name' => 'ROBOTS', 'content' => 'ALL'), null, array('inline' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->nestedList($list);$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->nestedList($list, 'ol');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->nestedList($list, array('class' => 'list'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->nestedList($list, array('class' => 'list'), array('class' => 'item'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->nestedList($list, array(), array('class' => 'item'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->nestedList($list, array(), array('even' => 'even', 'odd' => 'odd'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->nestedList($list, array(), array(), 'ol');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->nestedList($list, null);$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->para('class-name', '');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->para('class-name', '<text>', array('escape' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->para('class-name', 'text');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->script('TestPlugin.\/jquery-1.3.2.js?someparam=foo');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->script('TestPlugin.__cake_js_test', array('inline' => true, 'once' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->script('TestPlugin.foo');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->script('TestPlugin.foo', array('inline' => true, 'once' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->script('TestPlugin.jquery-1.3');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->script('TestPlugin.jquery-1.3.2', array('defer' => true, 'encoding' => 'utf-8'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->script('TestPlugin.test.json');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->script('TestPlugin.test.json.js?foo=bar');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->script('\/\/example.com\/js\/jquery-1.3.js');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->script('\/plugin\/js\/jquery-1.3.2.js?someparam=foo');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->script('__cake_js_test', array('inline' => true, 'once' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->script('__test_js.js');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->script('bool_false', false);$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->script('foo');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->script('foo', array('fullBase' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->script('foo', array('inline' => true, 'once' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->script('foo2', array('pathPrefix' => '\/my\/custom\/path\/'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->script('foo3', array('pathPrefix' => 'http:\/\/cakephp.org\/assets\/js\/'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->script('foo4');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->script('http:\/\/example.com\/test.json');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->script('jquery-1.3');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->script('jquery-1.3.2', array('defer' => true, 'encoding' => 'utf-8'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->script('script_in_head', array('inline' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->script('second_script', array('block' => 'headScripts'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->script('test.json');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->script('test.json.js?foo=bar&other=test');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->script('test.json.js?foo=bar');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->script(array('TestPlugin.foo', 'TestPlugin.bar', 'TestPlugin.baz'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->script(array('TestPlugin.foobar', 'TestPlugin.bar'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->script(array('foo', 'bar', 'baz'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->script(array('foobar', 'bar'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->script(array('foobar', 'bar'), array('fullBase' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->scriptBlock('alert("hi")', array('block' => 'scriptTop'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->scriptBlock('window.foo = 2;');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->scriptBlock('window.foo = 2;', array('inline' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->scriptBlock('window.foo = 2;', array('safe' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->scriptBlock('window.foo = 2;', array('safe' => false, 'encoding' => 'utf-8'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->scriptBlock('window.foo = 2;', array('safe' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->scriptBlock('window.foo = 2;', array('type' => 'text\/x-handlebars-template'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->scriptEnd();$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->scriptStart(array('safe' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->scriptStart(array('safe' => false, 'inline' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->scriptStart(array('safe' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->scriptStart(array('safe' => true, 'type' => 'text\/x-handlebars-template'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->style('display: none;');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->style(array('display' => 'none', 'margin' => '10px'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->style(array('display' => 'none', 'margin' => '10px'), false);$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->tableCells($tr);$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->tableCells($tr, array('class' => 'odd'), array('class' => 'even'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->tableCells($tr, array('class' => 'odd'), array('class' => 'even'), false, false);$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->tableCells($tr, null, null, true);$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->tableCells($tr, true);$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->tableHeaders(array('ID', 'Name', 'Date'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->tableHeaders(array('ID', array('Name' => array('class' => 'highlight')), 'Date'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->tableHeaders(array('ID', array('Name' => array('class' => 'highlight', 'width' => '120px')), 'Date'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->tableHeaders(array('ID', array('Name' => array()), 'Date'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->tag('', '<em>stuff<\/em>');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->tag('div');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->tag('div', '<text>', array('class' => 'class-name', 'escape' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->tag('div', 'text');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->tag(false, '<em>stuff<\/em>');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->tag(null, '<em>stuff<\/em>');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->useTag('form', 'example.com', array('test' => 'ok'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->useTag('form', 'url', ' test');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->useTag('formend');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = $this->Html->useTag('unknowntag');$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = explode("\\n", trim($this->Html->css(array('TestPlugin.test_plugin_asset', 'TestPlugin.vendor.generic'))));$/;"	v
result	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$result = explode("\\n", trim($this->Html->css(array('cake.generic', 'vendor.generic'))));$/;"	v
setUp	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function setUp() {$/;"	f
tags	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$tags = $this->Html->getAttribute('_tags');$/;"	v
tearDown	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function tearDown() {$/;"	f
testBreadcrumb	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testBreadcrumb() {$/;"	f
testCharsetTag	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testCharsetTag() {$/;"	f
testCrumbList	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testCrumbList() {$/;"	f
testCrumbListBootstrapStyle	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testCrumbListBootstrapStyle() {$/;"	f
testCrumbListFirstLink	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testCrumbListFirstLink() {$/;"	f
testCrumbListZurbStyle	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testCrumbListZurbStyle() {$/;"	f
testCssLink	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testCssLink() {$/;"	f
testCssLinkBC	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testCssLinkBC() {$/;"	f
testCssTimestamping	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testCssTimestamping() {$/;"	f
testCssWithFullBase	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testCssWithFullBase() {$/;"	f
testDiv	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testDiv() {$/;"	f
testDocType	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testDocType() {$/;"	f
testGetCrumbFirstLink	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testGetCrumbFirstLink() {$/;"	f
testImagePathPrefix	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testImagePathPrefix() {$/;"	f
testImageQueryString	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testImageQueryString() {$/;"	f
testImageTag	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testImageTag() {$/;"	f
testImageTagWithTheme	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testImageTagWithTheme() {$/;"	f
testImageWithFullBase	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testImageWithFullBase() {$/;"	f
testImageWithTimestampping	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testImageWithTimestampping() {$/;"	f
testLink	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testLink() {$/;"	f
testLoadConfig	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testLoadConfig() {$/;"	f
testLoadConfigWrongFile	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testLoadConfigWrongFile() {$/;"	f
testLoadConfigWrongReader	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testLoadConfigWrongReader() {$/;"	f
testMedia	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testMedia() {$/;"	f
testMeta	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testMeta() {$/;"	f
testMetaIcon	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testMetaIcon() {$/;"	f
testMetaWithBlocks	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testMetaWithBlocks() {$/;"	f
testNestedList	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testNestedList() {$/;"	f
testPara	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testPara() {$/;"	f
testParseAttributeCompact	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testParseAttributeCompact() {$/;"	f
testPluginCssLink	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testPluginCssLink() {$/;"	f
testPluginCssTimestamping	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testPluginCssTimestamping() {$/;"	f
testPluginScript	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testPluginScript() {$/;"	f
testPluginScriptTimestamping	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testPluginScriptTimestamping() {$/;"	f
testScript	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testScript() {$/;"	f
testScriptAssetFilter	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testScriptAssetFilter() {$/;"	f
testScriptBlock	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testScriptBlock() {$/;"	f
testScriptInTheme	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testScriptInTheme() {$/;"	f
testScriptStartAndScriptEnd	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testScriptStartAndScriptEnd() {$/;"	f
testScriptTimestamping	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testScriptTimestamping() {$/;"	f
testScriptWithBlocks	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testScriptWithBlocks() {$/;"	f
testScriptWithFullBase	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testScriptWithFullBase() {$/;"	f
testStyle	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testStyle() {$/;"	f
testTableCells	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testTableCells() {$/;"	f
testTableHeaders	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testTableHeaders() {$/;"	f
testTag	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testTag() {$/;"	f
testThemeAssetsInMainWebrootPath	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testThemeAssetsInMainWebrootPath() {$/;"	f
testUseTag	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public function testUseTag() {$/;"	f
testfile	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$testfile = WWW_ROOT . 'theme' . DS . 'test_theme' . DS . 'img' . DS . '__cake_test_image.gif';$/;"	v
testfile	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$testfile = WWW_ROOT . 'theme' . DS . 'test_theme' . DS . 'js' . DS . '__test_js.js';$/;"	v
themeExists	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$themeExists = is_dir(WWW_ROOT . 'theme');$/;"	v
timestamp	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$timestamp = substr(strtotime('now'), 0, 8);$/;"	v
tr	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$tr = array($/;"	v
tr	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$tr = array('td content 1', 'td content 2', 'td content 3');$/;"	v
url	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$url = '\/favicon.png?one=two&amp;three=four';$/;"	v
uses	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^	public $uses = null;$/;"	v
webRoot	lib/Cake/Test/Case/View/Helper/HtmlHelperTest.php	/^		$webRoot = Configure::read('App.www_root');$/;"	v
Jquery	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$this->Jquery = new JqueryEngineHelper($this->View);$/;"	v
JqueryEngineHelperTest	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^class JqueryEngineHelperTest extends CakeTestCase {$/;"	c
View	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$this->View = $this->getMock('View', array('addScript'), array(&$controller));$/;"	v
controller	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$controller = null;$/;"	v
drag	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$("#element").draggable({containment:"#content", drag:function (event, ui) {onDrag}, grid:[10,10], start:function (event, ui) {onStart}, stop:function (event, ui) {onStop}});';$/;"	j
drop	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$("#element").droppable({accept:".items", drop:function (event, ui) {onDrop}, out:function (event, ui) {onExit}, over:function (event, ui) {onHover}});';$/;"	j
expected	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$("#element").closest("form").serialize()';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$("#element").closest("form").serialize();';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$("#element").draggable({containment:"#content", drag:function (event, ui) {onDrag}, grid:[10,10], start:function (event, ui) {onStart}, stop:function (event, ui) {onStop}});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$("#element").draggable({containment:"#content", drag:onDrag, grid:[10,10], start:onStart, stop:onStop});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$("#element").droppable({accept:".items", drop:function (event, ui) {onDrop}, out:function (event, ui) {onExit}, over:function (event, ui) {onHover}});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$("#element").droppable({accept:".items", drop:onDrop, out:onExit, over:onHover});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$("#element").serialize();';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$("#element").slider({change:function (event, ui) {onChange}, max:10, min:0, orientation:"vertical", stop:function (event, ui) {onComplete}, value:2});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$("#element").slider({change:onChange, max:10, min:0, orientation:"vertical", stop:onComplete, value:2});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$("#foo").each(function () {$(this).hide();});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$("#foo").fadeIn();';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$("#foo").fadeOut();';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$("#foo").hide("fast");';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$("#foo").hide();';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$("#foo").show();';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$("#foo").slideDown();';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$("#foo").slideUp();';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$("#myLink").bind("click", doClick);';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$("#myLink").bind("click", function (event) {$(this).hide();' . "\\n" . 'return false;});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$("#myLink").bind("click", function (event) {$(this).show();});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$("#myList").sortable({containment:"parent", distance:5, sort:function (event, ui) {onSort}, start:function (event, ui) {onStart}, stop:function (event, ui) {onStop}});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$("#myList").sortable({containment:"parent", distance:5, sort:onSort, start:onStart, stop:onStop});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$(document).ready(function () {foo.name = "bar";});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$.ajax({async:true, data:$("#someId").serialize(), success:function (data, textStatus) {doFoo}, type:"post", url:"\\\/people\\\/edit\\\/1", xhr:function () {return jQuery.ajaxSettings.xhr();}});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$.ajax({beforeSend:doBefore, complete:doComplete, data:"name=jim&height=185cm", dataType:"json", error:handleError, success:doSuccess, type:"post", url:"\\\\\/people\\\\\/edit\\\\\/1"});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$.ajax({beforeSend:function (XMLHttpRequest) {doBefore}, data:$("#someId").serialize(), success:function (data, textStatus) {doFoo}, type:"post", url:"\\\\\/people\\\\\/edit\\\\\/1"});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$.ajax({data:$("#someId").serialize(), dataType:"html", success:function (data, textStatus) {doFoo$("#updated").html(data);}, type:"post", url:"\\\\\/people\\\\\/edit\\\\\/1"});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$.ajax({dataType:"html", success:function (data, textStatus) {$("#content").html(data);}, url:"\\\/posts\\\/view\\\/1"});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$.ajax({dataType:"html", success:function (data, textStatus) {doFoo$("#updated").html(data);}, type:"post", url:"\\\\\/people\\\\\/edit\\\\\/1"});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$.ajax({url:"\\\\\/posts\\\\\/view\\\\\/1"});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$.ajax({url:"\\\\\/users\\\\\/search\\\\\/sort:User.name\\\\\/direction:desc?nome=&cpm=&audience=public"});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$j.ajax({data:$j("#someId").serialize(), dataType:"html", success:function (data, textStatus) {doFoo$j("#updated").html(data);}, type:"post", url:"\\\\\/people\\\\\/edit\\\\\/1"});';$/;"	v
result	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$result = $this->Jquery->domReady('foo.name = "bar";');$/;"	v
result	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$result = $this->Jquery->drag(array($/;"	v
result	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$result = $this->Jquery->drop(array($/;"	v
result	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$result = $this->Jquery->each('$(this).hide();');$/;"	v
result	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$result = $this->Jquery->effect('fadeIn');$/;"	v
result	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$result = $this->Jquery->effect('fadeOut');$/;"	v
result	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$result = $this->Jquery->effect('hide');$/;"	v
result	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$result = $this->Jquery->effect('hide', array('speed' => 'fast'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$result = $this->Jquery->effect('show');$/;"	v
result	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$result = $this->Jquery->effect('slideDown');$/;"	v
result	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$result = $this->Jquery->effect('slideIn');$/;"	v
result	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$result = $this->Jquery->effect('slideOut');$/;"	v
result	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$result = $this->Jquery->effect('slideUp');$/;"	v
result	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$result = $this->Jquery->event('click', '$(this).hide();');$/;"	v
result	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$result = $this->Jquery->event('click', '$(this).show();', array('stop' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$result = $this->Jquery->event('click', 'doClick', array('wrap' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$result = $this->Jquery->get('#content');$/;"	v
result	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$result = $this->Jquery->get('document');$/;"	v
result	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$result = $this->Jquery->get('ul');$/;"	v
result	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$result = $this->Jquery->get('window');$/;"	v
result	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$result = $this->Jquery->request($url);$/;"	v
result	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$result = $this->Jquery->request('\/people\/edit\/1', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$result = $this->Jquery->request(array('controller' => 'posts', 'action' => 'view', 1));$/;"	v
result	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$result = $this->Jquery->request(array('controller' => 'posts', 'action' => 'view', 1), array($/;"	v
result	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$result = $this->Jquery->serializeForm(array('isForm' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$result = $this->Jquery->serializeForm(array('isForm' => false, 'inline' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$result = $this->Jquery->serializeForm(array('isForm' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$result = $this->Jquery->slider(array($/;"	v
result	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$result = $this->Jquery->sortable(array($/;"	v
setUp	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^	public function setUp() {$/;"	f
sort	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$("#myList").sortable({containment:"parent", distance:5, sort:function (event, ui) {onSort}, start:function (event, ui) {onStart}, stop:function (event, ui) {onStop}});';$/;"	j
stop	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$("#element").slider({change:function (event, ui) {onChange}, max:10, min:0, orientation:"vertical", stop:function (event, ui) {onComplete}, value:2});';$/;"	j
success	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$.ajax({async:true, data:$("#someId").serialize(), success:function (data, textStatus) {doFoo}, type:"post", url:"\\\/people\\\/edit\\\/1", xhr:function () {return jQuery.ajaxSettings.xhr();}});';$/;"	j
success	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$.ajax({beforeSend:function (XMLHttpRequest) {doBefore}, data:$("#someId").serialize(), success:function (data, textStatus) {doFoo}, type:"post", url:"\\\\\/people\\\\\/edit\\\\\/1"});';$/;"	j
success	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$.ajax({data:$("#someId").serialize(), dataType:"html", success:function (data, textStatus) {doFoo$("#updated").html(data);}, type:"post", url:"\\\\\/people\\\\\/edit\\\\\/1"});';$/;"	j
success	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$.ajax({dataType:"html", success:function (data, textStatus) {$("#content").html(data);}, url:"\\\/posts\\\/view\\\/1"});';$/;"	j
success	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$.ajax({dataType:"html", success:function (data, textStatus) {doFoo$("#updated").html(data);}, type:"post", url:"\\\\\/people\\\\\/edit\\\\\/1"});';$/;"	j
success	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$expected = '$j.ajax({data:$j("#someId").serialize(), dataType:"html", success:function (data, textStatus) {doFoo$j("#updated").html(data);}, type:"post", url:"\\\\\/people\\\\\/edit\\\\\/1"});';$/;"	j
tearDown	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^	public function tearDown() {$/;"	f
testDomReady	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^	public function testDomReady() {$/;"	f
testDrag	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^	public function testDrag() {$/;"	f
testDrop	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^	public function testDrop() {$/;"	f
testEach	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^	public function testEach() {$/;"	f
testEffect	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^	public function testEffect() {$/;"	f
testEvent	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^	public function testEvent() {$/;"	f
testRequest	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^	public function testRequest() {$/;"	f
testRequestWithAlternateJqueryObject	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^	public function testRequestWithAlternateJqueryObject() {$/;"	f
testRequestWithQueryStringArguments	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^	public function testRequestWithQueryStringArguments() {$/;"	f
testSelector	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^	public function testSelector() {$/;"	f
testSerializeForm	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^	public function testSerializeForm() {$/;"	f
testSlider	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^	public function testSlider() {$/;"	f
testSortable	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^	public function testSortable() {$/;"	f
url	lib/Cake/Test/Case/View/Helper/JqueryEngineHelperTest.php	/^		$url = '\/users\/search\/sort:User.name\/direction:desc?nome=&cpm=&audience=public';$/;"	v
Js	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$this->Js = new JsHelper($this->View, 'Option');$/;"	v
Js	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$this->Js = new JsHelper($this->View, array('TestJs'));$/;"	v
JsBaseEngineTest	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^class JsBaseEngineTest extends CakeTestCase {$/;"	c
JsEncodingObject	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^class JsEncodingObject {$/;"	c
JsEngine	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$JsEngine = new OptionEngineHelper($this->View);$/;"	v
JsEngine	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$this->JsEngine = new OptionEngineHelper($this->View);$/;"	v
JsHelperTest	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^class JsHelperTest extends CakeTestCase {$/;"	c
OptionEngineHelper	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^class OptionEngineHelper extends JsBaseEngineHelper {$/;"	c
View	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$this->View = $this->getMock('View', array('append'), array(&$controller));$/;"	v
__noshow	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	private $__noshow = 'Never ever';$/;"	v
_optionMap	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	protected $_optionMap = array($/;"	v
_title	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	protected $_title = 'Old thing';$/;"	v
_useMock	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	protected function _useMock() {$/;"	f
buffer	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$buffer = $this->Js->getBuffer();$/;"	v
cDataEnd	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public $cDataEnd = 'preg:\/[^\\]]*\\]\\]\\>[\\s\\r\\n]*\/';$/;"	v
cDataStart	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public $cDataStart = 'preg:\/^\\\/\\\/<!\\[CDATA\\[[\\n\\r]*\/';$/;"	v
contents	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$contents = file_get_contents(WWW_ROOT . $filename[1]);$/;"	v
controller	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$controller = null;$/;"	v
domReady	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function domReady($functionBody) {$/;"	f
drag	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function drag($options = array()) {$/;"	f
drop	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function drop($options = array()) {$/;"	f
each	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function each($callback) {$/;"	f
effect	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function effect($name, $options = array()) {$/;"	f
event	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function event($type, $callback, $options = array()) {$/;"	f
expected	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$expected = "CakePHP: 'Rapid Development Framework'";$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$expected = '"string \\"quote\\""';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$expected = '';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$expected = 'Application.variables = {"loggedIn":true,"height":"tall","color":"purple"};';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$expected = 'CakePHP: \\\\"Rapid Development Framework\\\\"';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$expected = 'CakePHP\\\\nRapid Development Framework';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$expected = 'CakePHP\\\\r\\\\nRapid Development Framework\\\\rFor PHP';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$expected = 'alert("Hey there");';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$expected = 'alert("\\"Hey\\"");';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$expected = 'confirm("Are you sure?");';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$expected = 'confirm("\\"Are you sure?\\"");';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$expected = 'key:1, url:"\\\\\/posts\\\\\/view\\\\\/1"';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$expected = 'my \\\\\\\\\\\\"string\\\\\\\\\\\\"';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$expected = 'prompt("Hey, hey you", "hi!");';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$expected = 'prompt("\\"Hey\\"", "\\"hi\\"");';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$expected = 'success:doSuccess, url:"\\\\\/posts\\\\\/view\\\\\/1"';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$expected = 'window.WICKED = {"loggedIn":true,"height":"tall","color":"purple"};';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$expected = 'window.app = {"height":"tall","color":"purple"};';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$expected = 'window.app = {"loggedIn":true,"height":"tall","color":"purple"};';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$expected = 'window.location = "\/posts\/view\/1";';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$expected = '{"2007":{"Spring":{"1":{"id":1,"name":"Josh"},"2":{"id":2,"name":"Becky"}},"Fall":{"1":{"id":1,"name":"Josh"},"2":{"id":2,"name":"Becky"}}},"2006":{"Spring":{"1":{"id":1,"name":"Josh"},"2":{"id":2,"name":"Becky"}},"Fall":{"1":{"id":1,"name":"Josh"},"2":{"id":2,"name":"Becky"}}}}';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$expected = '{"default":0}';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$expected = '{"one":"first","two":"second"}';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$expected = '{"title":"New thing","indexes":[5,6,7,8]}';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$expected = array($/;"	v
get	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function get($selector) {$/;"	f
js	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$js = new JsHelper($this->View);$/;"	v
js	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$js = new JsHelper($this->View, 'MyPlugin.Dojo');$/;"	v
js	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$js = new JsHelper($this->View, 'prototype');$/;"	v
js	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$js = new JsHelper($this->View, array('mootools'));$/;"	v
object	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$object = array('title' => 'New thing', 'indexes' => array(5, 6, 7, 8));$/;"	v
object	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$object = array('title' => 'New thing', 'indexes' => array(5, 6, 7, 8), 'object' => array('inner' => array('value' => 1)));$/;"	v
object	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$object = new JsEncodingObject();$/;"	v
options	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$options = array($/;"	v
options	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$options = array('id' => 'something', 'htmlAttributes' => array('arbitrary' => 'value', 'batman' => 'robin'));$/;"	v
options	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$options = array('update' => '#content');$/;"	v
options	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$options = array('update' => '#content', 'buffer' => false);$/;"	v
options	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$options = array('update' => '#content', 'buffer' => false, 'safe' => false);$/;"	v
options	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$options = array('update' => '#content', 'id' => 'test-submit', 'buffer' => false, 'safe' => false);$/;"	v
options	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$options = array('update' => '#content', 'id' => 'test-submit', 'style' => 'margin: 0');$/;"	v
options	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$options = array('update' => '#content', 'id' => 'test-submit', 'url' => '\/custom\/url');$/;"	v
params	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$params = array($/;"	v
request	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$request = new CakeRequest(null, false);$/;"	v
request	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function request($url, $options = array()) {$/;"	f
requestParams	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$requestParams = array($/;"	v
requestWith	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^			$requestWith = $_SERVER['HTTP_X_REQUESTED_WITH'];$/;"	v
requestWith	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$requestWith = null;$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^			$result = $this->JsEngine->object($data);$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $JsEngine->testMap();$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $JsEngine->testMap(array('complete' => 'myFunc', 'type' => 'json', 'update' => '#element'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $JsEngine->testMap(array('foo' => 'bar', 'baz' => 'sho'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $JsEngine->testMap(array('success' => 'myFunc', 'dataType' => 'json', 'update' => '#element'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $JsEngine->testParseOptions(array('url' => '\/posts\/view\/1', 'key' => 1));$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $JsEngine->testParseOptions(array('url' => '\/posts\/view\/1', 'success' => 'doSuccess'), array('success'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->Js->effect('slideIn');$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->Js->effect('slideIn', array('speed' => 'slow'), true);$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->Js->effect('slideIn', array('speed' => 'slow', 'buffer' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->Js->effect('slideIn', true);$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->Js->event('click', 'foo', array('buffer' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->Js->event('click', 'foo', false);$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->Js->getBuffer();$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->Js->getBuffer(false);$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->Js->link('test link »', '\/posts\/view\/1', $options);$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->Js->link('test link', '\/posts\/view\/1', $options);$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->Js->object(array('one' => 'first', 'two' => 'second'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->Js->submit('Save', $options);$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->Js->value('string "quote"', true);$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->Js->writeBuffer(array('onDomReady' => false, 'cache' => false, 'clear' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->Js->writeBuffer(array('onDomReady' => false, 'cache' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->Js->writeBuffer(array('onDomReady' => false, 'inline' => false, 'cache' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->Js->writeBuffer(array('onDomReady' => true, 'cache' => false, 'clear' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->JsEngine->alert('"Hey"');$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->JsEngine->alert('Hey there');$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->JsEngine->confirm('"Are you sure?"');$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->JsEngine->confirm('Are you sure?');$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->JsEngine->escape("CakePHP: 'Rapid Development Framework'");$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->JsEngine->escape('');$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->JsEngine->escape('CakePHP' . "\\n" . 'Rapid Development Framework');$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->JsEngine->escape('CakePHP' . "\\r\\n" . 'Rapid Development Framework' . "\\r" . 'For PHP');$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->JsEngine->escape('CakePHP: "Rapid Development Framework"');$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->JsEngine->escape('my \\\\"string\\\\"');$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->JsEngine->object($object);$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->JsEngine->object($object, array('prefix' => 'PREFIX', 'postfix' => 'POSTFIX'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->JsEngine->object(array($/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->JsEngine->object(array('default' => 0));$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->JsEngine->prompt('"Hey"', '"hi"');$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->JsEngine->prompt('Hey, hey you', 'hi!');$/;"	v
result	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^		$result = $this->JsEngine->redirect(array('controller' => 'posts', 'action' => 'view', 1));$/;"	v
serializeForm	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function serializeForm($options = array()) {$/;"	f
setUp	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function setUp() {$/;"	f
slider	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function slider($options = array()) {$/;"	f
sortable	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function sortable($options = array()) {$/;"	f
tearDown	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function tearDown() {$/;"	f
testAlert	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function testAlert() {$/;"	f
testConfirm	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function testConfirm() {$/;"	f
testConstruction	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function testConstruction() {$/;"	f
testEffectDispatchWithBuffering	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function testEffectDispatchWithBuffering() {$/;"	f
testEscaping	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function testEscaping() {$/;"	f
testEventDispatchWithBuffering	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function testEventDispatchWithBuffering() {$/;"	f
testLinkWithAribtraryAttributes	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function testLinkWithAribtraryAttributes() {$/;"	f
testLinkWithMock	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function testLinkWithMock() {$/;"	f
testLinkWithMockAndConfirm	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function testLinkWithMockAndConfirm() {$/;"	f
testLinkWithNoBuffering	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function testLinkWithNoBuffering() {$/;"	f
testLinkWithNoBufferingAndSafe	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function testLinkWithNoBufferingAndSafe() {$/;"	f
testMap	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function testMap($options = array()) {$/;"	f
testMethodDispatching	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function testMethodDispatching() {$/;"	f
testObject	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function testObject() {$/;"	f
testObjectPassThrough	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function testObjectPassThrough() {$/;"	f
testOptionMapping	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function testOptionMapping() {$/;"	f
testOptionParsing	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function testOptionParsing() {$/;"	f
testParseOptions	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function testParseOptions($options, $safe = array()) {$/;"	f
testPrompt	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function testPrompt() {$/;"	f
testRedirect	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function testRedirect() {$/;"	f
testSet	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function testSet() {$/;"	f
testSetVarsAtTopOfBufferedScripts	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function testSetVarsAtTopOfBufferedScripts() {$/;"	f
testSubmitWithMock	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function testSubmitWithMock() {$/;"	f
testSubmitWithMockRequestParams	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function testSubmitWithMockRequestParams() {$/;"	f
testSubmitWithNoBuffer	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function testSubmitWithNoBuffer() {$/;"	f
testValuePassThrough	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function testValuePassThrough() {$/;"	f
testWriteBufferAndXhr	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function testWriteBufferAndXhr() {$/;"	f
testWriteBufferNotInline	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function testWriteBufferNotInline() {$/;"	f
testWriteScriptsInFile	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function testWriteScriptsInFile() {$/;"	f
testWriteScriptsNoFile	lib/Cake/Test/Case/View/Helper/JsHelperTest.php	/^	public function testWriteScriptsNoFile() {$/;"	f
Moo	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$this->Moo = new MootoolsEngineHelper($this->View);$/;"	v
MootoolsEngineHelperTest	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^class MootoolsEngineHelperTest extends CakeTestCase {$/;"	c
View	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$this->View = $this->getMock('View', array('addScript'), array(&$controller));$/;"	v
controller	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$controller = null;$/;"	v
expected	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = "\\$(\\"myLink\\").addEvent(\\"click\\", function (event) {event.stop();\\nthis.setStyle(\\"display\\", \\"none\\");});";$/;"	v
expected	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = '$("drag-me").makeDraggable({onComplete:onStop, onDrag:onDrag, onStart:onStart, snap:[10,10]});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = '$("element").toQueryString()';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = '$("element").toQueryString();';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = '$("foo").each(function (item, index) {item.setStyle("display", "none");});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = '$("foo").fade("in");';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = '$("foo").fade("out");';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = '$("foo").set("slide", {duration:"long"}).slide("out");';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = '$("foo").set("slide", {duration:"short"}).slide("out");';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = '$("foo").setStyle("display", "");';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = '$("foo").setStyle("display", "none");';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = '$("foo").slide("in");';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = '$("foo").slide("out");';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = '$("my-drag").makeDraggable({droppables:$("drop-me"), onDrop:function (element, droppable, event) {onDrop}, onEnter:function (element, droppable) {onHover}, onLeave:function (element, droppable) {onLeave}});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = '$("my-drag").makeDraggable({droppables:$("drop-me"), onDrop:onDrop, onEnter:onHover, onLeave:onLeave});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = '$("myLink").addEvent("click", doClick);';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = '$("myLink").addEvent("click", function (event) {this.setStyle("display", "");});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = '$($("element").form).toQueryString()';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = '$($("element").form).toQueryString();';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = 'var jsRequest = new Request({url:"\\\\\/posts\\\\\/view\\\\\/1"}).send();';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = 'var jsRequest = new Request.HTML({method:"post", onComplete:doComplete, onFailure:doFailure, onRequest:doBefore, onSuccess:doSuccess, update:"update-zone", url:"\\\\\/people\\\\\/edit\\\\\/1"}).send($("foo").toQueryString());';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = 'var jsRequest = new Request.HTML({method:"post", onComplete:doComplete, onFailure:doFailure, onRequest:doBefore, onSuccess:doSuccess, update:"update-zone", url:"\\\\\/people\\\\\/edit\\\\\/1"}).send();';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = 'var jsRequest = new Request.HTML({method:"post", onComplete:doSuccess, update:"update-zone", url:"\\\\\/people\\\\\/edit\\\\\/1"}).send();';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = 'var jsRequest = new Request.HTML({method:"post", onComplete:function () {doComplete}, onRequest:function () {doBefore}, onSuccess:function (responseText, responseXML) {doSuccess}, update:"update-zone", url:"\\\\\/people\\\\\/edit\\\\\/1"}).send();';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = 'var jsRequest = new Request.HTML({update:"content", url:"\\\\\/posts\\\\\/view\\\\\/1"}).send();';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = 'var jsRequest = new Request.JSON({method:"post", onComplete:doSuccess, onFailure:handleError, url:"\\\\\/people\\\\\/edit\\\\\/1"}).send({"name":"jim","height":"185cm"});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = 'var jsSlider = new Slider($("slider"), $("my-handle"), {mode:"horizontal", onChange:function (step) {change;}, onComplete:function (event) {complete;}});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = 'var jsSlider = new Slider($("slider"), $("my-handle"), {mode:"horizontal", onChange:onChange, onComplete:onComplete, range:[10,40]});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = 'var jsSlider = new Slider($("slider"), $("my-handle"), {mode:"horizontal", onChange:onChange, onComplete:onComplete});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = 'var jsSortable = new Sortables($("myList"), {constrain:"parent", onComplete:onStop, onSort:onSort, onStart:onStart, snap:5});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = 'window.addEvent("domready", function (event) {foo.name = "bar";});';$/;"	v
onChange	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = 'var jsSlider = new Slider($("slider"), $("my-handle"), {mode:"horizontal", onChange:function (step) {change;}, onComplete:function (event) {complete;}});';$/;"	j
onComplete	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = 'var jsRequest = new Request.HTML({method:"post", onComplete:function () {doComplete}, onRequest:function () {doBefore}, onSuccess:function (responseText, responseXML) {doSuccess}, update:"update-zone", url:"\\\\\/people\\\\\/edit\\\\\/1"}).send();';$/;"	j
onDrop	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$expected = '$("my-drag").makeDraggable({droppables:$("drop-me"), onDrop:function (element, droppable, event) {onDrop}, onEnter:function (element, droppable) {onHover}, onLeave:function (element, droppable) {onLeave}});';$/;"	j
result	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$result = $this->Moo->domReady('foo.name = "bar";');$/;"	v
result	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$result = $this->Moo->drag(array($/;"	v
result	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$result = $this->Moo->drop(array($/;"	v
result	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$result = $this->Moo->each('item.setStyle("display", "none");');$/;"	v
result	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$result = $this->Moo->effect('fadeIn');$/;"	v
result	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$result = $this->Moo->effect('fadeOut');$/;"	v
result	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$result = $this->Moo->effect('hide');$/;"	v
result	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$result = $this->Moo->effect('show');$/;"	v
result	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$result = $this->Moo->effect('slideIn');$/;"	v
result	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$result = $this->Moo->effect('slideOut');$/;"	v
result	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$result = $this->Moo->effect('slideOut', array('speed' => 'fast'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$result = $this->Moo->effect('slideOut', array('speed' => 'slow'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$result = $this->Moo->event('click', 'doClick', array('wrap' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$result = $this->Moo->event('click', 'this.setStyle("display", "");', array('stop' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$result = $this->Moo->event('click', 'this.setStyle("display", "none");');$/;"	v
result	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$result = $this->Moo->get('#content');$/;"	v
result	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$result = $this->Moo->get('#some_long-id.class');$/;"	v
result	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$result = $this->Moo->get('a .remove');$/;"	v
result	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$result = $this->Moo->get('document');$/;"	v
result	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$result = $this->Moo->get('ul');$/;"	v
result	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$result = $this->Moo->get('window');$/;"	v
result	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$result = $this->Moo->request('\/people\/edit\/1', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$result = $this->Moo->request('\/posts\/view\/1', array('update' => 'content'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$result = $this->Moo->request(array('controller' => 'posts', 'action' => 'view', 1));$/;"	v
result	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$result = $this->Moo->serializeForm(array('isForm' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$result = $this->Moo->serializeForm(array('isForm' => false, 'inline' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$result = $this->Moo->serializeForm(array('isForm' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$result = $this->Moo->serializeForm(array('isForm' => true, 'inline' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$result = $this->Moo->slider(array($/;"	v
result	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^		$result = $this->Moo->sortable(array($/;"	v
setUp	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^	public function tearDown() {$/;"	f
testDomReady	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^	public function testDomReady() {$/;"	f
testDrag	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^	public function testDrag() {$/;"	f
testDrop	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^	public function testDrop() {$/;"	f
testDropWithMissingOption	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^	public function testDropWithMissingOption() {$/;"	f
testEach	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^	public function testEach() {$/;"	f
testEffect	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^	public function testEffect() {$/;"	f
testEvent	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^	public function testEvent() {$/;"	f
testRequest	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^	public function testRequest() {$/;"	f
testSelector	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^	public function testSelector() {$/;"	f
testSerializeForm	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^	public function testSerializeForm() {$/;"	f
testSlider	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^	public function testSlider() {$/;"	f
testSortable	lib/Cake/Test/Case/View/Helper/MootoolsEngineHelperTest.php	/^	public function testSortable() {$/;"	f
CakeNumber	lib/Cake/Test/Case/View/Helper/NumberHelperTest.php	/^		$CakeNumber = $this->getMock('CakeNumberMock', $methods);$/;"	v
CakeNumberMock	lib/Cake/Test/Case/View/Helper/NumberHelperTest.php	/^class CakeNumberMock {$/;"	c
Number	lib/Cake/Test/Case/View/Helper/NumberHelperTest.php	/^		$Number = new NumberHelperTestObject($this->View, array('engine' => 'CakeNumberMock'));$/;"	v
Number	lib/Cake/Test/Case/View/Helper/NumberHelperTest.php	/^		$Number = new NumberHelperTestObject($this->View, array('engine' => 'TestAppEngine'));$/;"	v
Number	lib/Cake/Test/Case/View/Helper/NumberHelperTest.php	/^		$Number = new NumberHelperTestObject($this->View, array('engine' => 'TestPlugin.TestPluginEngine'));$/;"	v
NumberHelperTest	lib/Cake/Test/Case/View/Helper/NumberHelperTest.php	/^class NumberHelperTest extends CakeTestCase {$/;"	c
NumberHelperTestObject	lib/Cake/Test/Case/View/Helper/NumberHelperTest.php	/^class NumberHelperTestObject extends NumberHelper {$/;"	c
View	lib/Cake/Test/Case/View/Helper/NumberHelperTest.php	/^		$this->View = new View(null);$/;"	v
_engine	lib/Cake/Test/Case/View/Helper/NumberHelperTest.php	/^		$this->_engine = $cakeNumber;$/;"	v
attach	lib/Cake/Test/Case/View/Helper/NumberHelperTest.php	/^	public function attach(CakeNumberMock $cakeNumber) {$/;"	f
engine	lib/Cake/Test/Case/View/Helper/NumberHelperTest.php	/^	public function engine() {$/;"	f
methods	lib/Cake/Test/Case/View/Helper/NumberHelperTest.php	/^		$methods = array($/;"	v
setUp	lib/Cake/Test/Case/View/Helper/NumberHelperTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/View/Helper/NumberHelperTest.php	/^	public function tearDown() {$/;"	f
testEngineOverride	lib/Cake/Test/Case/View/Helper/NumberHelperTest.php	/^	public function testEngineOverride() {$/;"	f
testNumberHelperProxyMethodCalls	lib/Cake/Test/Case/View/Helper/NumberHelperTest.php	/^	public function testNumberHelperProxyMethodCalls() {$/;"	f
FULL_BASE_URL	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	define('FULL_BASE_URL', 'http:\/\/cakephp.org');$/;"	d
Paginator	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$Paginator = new PaginatorHelper($this->View, array('ajax' => 'PaginatorMockJs'));$/;"	v
Paginator	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$this->Paginator = new PaginatorHelper($this->View);$/;"	v
PaginatorHelperTest	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^class PaginatorHelperTest extends CakeTestCase {$/;"	c
View	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$this->View = new View($controller);$/;"	v
controller	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$controller = null;$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$expected = '';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$expected = '0 of 1';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$expected = '1 - 3 of 13';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$expected = '1 of 5';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$expected = '<span class="next">Next<\/span>';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$expected = 'Page 1 of 5';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$expected = 'Page 1 of 5, showing 3 records out of 13 total, starting on record 1, ';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$expected = '\/';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$expected = '\/?page=4&amp;something=bar';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$expected = '\/?page=4';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$expected = '\/index\/something:else?limit=10';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$expected = '\/index\/something:else?page=4&amp;limit=10';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$expected = '\/members\/posts\/index\/page:2';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$expected = '\/members\/posts\/index\/page:2\/sort:name\/direction:desc';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$expected = '\/posts\/index\/page:2\/sort:Article.name\/direction:desc';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$expected = 'asc';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$expected = 'desc';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$expected = array('Article' => array($/;"	v
input	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$input = 'Page %page% of %pages%';$/;"	v
input	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$input = 'Page %page% of %pages%, showing %current% records out of %count% total, ';$/;"	v
input	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$input = 'Page {:page} of {:pages}, showing {:current} records out of {:count} total, ';$/;"	v
mock	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$mock = $this->getMock('PaginatorHelper', array(), array($this->View), 'PaginatorMockJsHelper');$/;"	v
options	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$options = array('Article' => array($/;"	v
options	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$options = array('controller' => 'posts', 'order' => array('Article.name' => 'desc'));$/;"	v
options	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$options = array('members' => true);$/;"	v
options	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$options = array('members' => true, 'controller' => 'posts', 'order' => array('name' => 'desc'));$/;"	v
options	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$options = array('modulus' => 10);$/;"	v
options	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$options = array('order' => array('Article' => 'desc'));$/;"	v
options	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$options = array('order' => array('Article.name' => 'desc'));$/;"	v
options	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$options = array('paging' => array('Article' => array($/;"	v
request	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$request = new CakeRequest();$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->counter($input);$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->counter('Showing %page% of %pages% %model%');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->counter(array('format' => $input));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->counter(array('format' => 'pages'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->counter(array('format' => 'range'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->current('Incorrect');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->current();$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->first('<<', array('tag' => 'li', 'class' => 'first'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->first();$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->first(2);$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->first(3);$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->hasPage('Article', 15);$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->hasPage('Article', 2);$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->hasPage('UndefinedModel', 2);$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->hasPage(2);$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->last();$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->last(1);$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->last(2);$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->last(2, array('ellipsis' => '<span class="ellipsis">...<\/span>'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->last(2, array('tag' => 'li', 'class' => 'last'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->last(3);$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->link('Foo!', array('page' => 1));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->link('Page 3', array('page' => 3));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->link('Sort by title on page 4', array('sort' => 'Article.title', 'direction' => 'desc'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->link('Sort by title on page 5', array('sort' => 'title', 'page' => 5, 'direction' => 'desc'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->link('Sort by title', array('sort' => 'title', 'direction' => 'desc'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->link('test', array('controller' => 'posts'), array('update' => '#content'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->next('Next >>', array('escape' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->next('Next');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->next('Next', array('model' => 'Client'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->next('Next', array('model' => 'Server'), 'No Next', array('model' => 'Server'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->next('Next', array('tag' => 'li'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->next('Next', array('tag' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->next('Next', array(), null, array('tag' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->next('Next', array(), true);$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->next('next', array('url' => $options));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->numbers($options);$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->numbers();$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->numbers(array('class' => 'page-link'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->numbers(array('first' => 1));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->numbers(array('first' => 1, 'class' => 'page-link'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->numbers(array('first' => 1, 'class' => 'page-link', 'currentClass' => 'active'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->numbers(array('first' => 1, 'currentClass' => 'active'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->numbers(array('first' => 1, 'last' => 1));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->numbers(array('first' => 1, 'tag' => 'li', 'currentClass' => 'active', 'currentTag' => 'a'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->numbers(array('first' => 2, 'modulus' => 2, 'last' => 2));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->numbers(array('first' => 2, 'modulus' => 2, 'last' => 2, 'separator' => ' - '));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->numbers(array('first' => 2, 'modulus' => 2, 'last' => 2, 'separator' => ' - ', 'ellipsis' => ' ~~~ '));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->numbers(array('first' => 2, 'modulus' => 2, 'last' => 2, 'separator' => ' - ', 'ellipsis' => '<span class="ellipsis">...<\/span>'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->numbers(array('first' => 5, 'modulus' => 4, 'last' => 5, 'separator' => ' - '));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->numbers(array('first' => 5, 'modulus' => 5, 'last' => 5, 'separator' => ' - '));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->numbers(array('last' => 1));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->numbers(array('modulus' => 3, 'currentTag' => 'span', 'tag' => 'li'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->numbers(array('tag' => 'li'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->numbers(array('tag' => 'li', 'separator' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->numbers(true);$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->param('count');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->param('imaginary');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->params();$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->prev($/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->prev('<< Previous', array('escape' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->prev('<< Previous', array('escape' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->prev('<< Previous', array('tag' => false), '<strong>Disabled<\/strong>');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->prev('<< Previous', array('tag' => false), null, array('class' => 'disabled'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->prev('<< Previous', null, '<strong>Disabled<\/strong>');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->prev('<< Previous', null, '<strong>Disabled<\/strong>', array('escape' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->prev('<< Previous', null, '<strong>Disabled<\/strong>', array('escape' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->prev('<< Previous', null, null, array('class' => 'disabled'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->prev('<< Previous', null, null, array('class' => 'disabled', 'tag' => 'div'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->prev('Prev');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->prev('Prev', array('url' => array('foo' => 'bar')));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->prev('prev', array('update' => 'theList', 'indicator' => 'loading', 'url' => array('controller' => 'posts')), null, array('class' => 'disabled', 'tag' => 'span'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->prev('prev', array('url' => $options));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->sort('Article.full_name');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->sort('Article.title');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->sort('Article.title', 'Title');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->sort('controller');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->sort('date');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->sort('distance', null, array('lock' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->sort('full_name');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->sort('name', null, array('url' => $options));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->sort('title');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->sort('title', 'TestTitle');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->sort('title', 'TestTitle', array('direction' => 'desc'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->sort('title', 'Title', array('direction' => 'asc'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->sort('title', 'Title', array('direction' => 'desc'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->sort('title', 'Title', array('direction' => 'desc', 'class' => 'foo'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->sort('title', array('asc' => 'ascending', 'desc' => 'descending'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->sort('title', array('asc' => 'ascending', 'desc' => 'descending'), array('direction' => 'desc'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->sortDir('Article');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->sortDir('Article', array('direction' => 'asc'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->sortDir('Article', array('direction' => 'desc'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->sortDir();$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->sortKey('Article');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->sortKey('Article', array('order' => 'Article.title'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->sortKey('Article', array('sort' => 'Article'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->sortKey('Article', array('sort' => 'Article.title'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->sortKey();$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->sortKey(null, array($/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->url($options);$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->url();$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->url(array('page' => '1'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->url(array('page' => '1', 'limit' => 10, 'something' => 'else'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->url(array('page' => '4'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->url(array('page' => '4', 'limit' => 10, 'something' => 'else'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$result = $this->Paginator->url(array('page' => '4', 'something' => 'bar'));$/;"	v
setUp	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function tearDown() {$/;"	f
test	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^		$test = array('url' => array($/;"	v
testAjaxLinkGenerationLink	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testAjaxLinkGenerationLink() {$/;"	f
testAjaxLinkGenerationNumbers	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testAjaxLinkGenerationNumbers() {$/;"	f
testCounter	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testCounter() {$/;"	f
testCurrent	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testCurrent() {$/;"	f
testDisabledLink	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testDisabledLink() {$/;"	f
testFirstAndLastTag	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testFirstAndLastTag() {$/;"	f
testFirstBoundaries	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testFirstBoundaries() {$/;"	f
testFirstEmpty	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testFirstEmpty() {$/;"	f
testFirstFullBaseUrl	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testFirstFullBaseUrl() {$/;"	f
testGenericLinks	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testGenericLinks() {$/;"	f
testGenericLinksWithPresetOptions	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testGenericLinksWithPresetOptions() {$/;"	f
testHasNext	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testHasNext() {$/;"	f
testHasPage	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testHasPage() {$/;"	f
testHasPrevious	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testHasPrevious() {$/;"	f
testLast	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testLast() {$/;"	f
testLastNoOutput	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testLastNoOutput() {$/;"	f
testLastOptions	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testLastOptions() {$/;"	f
testMockAjaxProviderClassInjection	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testMockAjaxProviderClassInjection() {$/;"	f
testNextLinkUsingDotNotation	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testNextLinkUsingDotNotation() {$/;"	f
testNoDefaultModel	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testNoDefaultModel() {$/;"	f
testNumbers	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testNumbers() {$/;"	f
testOptions	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testOptions() {$/;"	f
testOptionsConvertKeys	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testOptionsConvertKeys() {$/;"	f
testPagingLinks	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testPagingLinks() {$/;"	f
testPagingLinksNotDefaultModel	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testPagingLinksNotDefaultModel() {$/;"	f
testPagingLinksOptionsReplaceEmptyDisabledOptions	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testPagingLinksOptionsReplaceEmptyDisabledOptions() {$/;"	f
testParam	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testParam() {$/;"	f
testParams	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testParams() {$/;"	f
testPassedArgsMergingWithUrlOptions	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testPassedArgsMergingWithUrlOptions() {$/;"	f
testPassedArgsMergingWithUrlOptionsParamTypeQuerystring	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testPassedArgsMergingWithUrlOptionsParamTypeQuerystring() {$/;"	f
testQuerystringNextAndPrev	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testQuerystringNextAndPrev() {$/;"	f
testQuerystringUrlGeneration	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testQuerystringUrlGeneration() {$/;"	f
testSortAdminLinks	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testSortAdminLinks() {$/;"	f
testSortDir	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testSortDir() {$/;"	f
testSortDirFallbackToParams	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testSortDirFallbackToParams() {$/;"	f
testSortKey	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testSortKey() {$/;"	f
testSortKeyFallbackToParams	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testSortKeyFallbackToParams() {$/;"	f
testSortLinkWithVirtualField	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testSortLinkWithVirtualField() {$/;"	f
testSortLinks	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testSortLinks() {$/;"	f
testSortLinksUsingDirectionOption	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testSortLinksUsingDirectionOption() {$/;"	f
testSortLinksUsingDotNotation	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testSortLinksUsingDotNotation() {$/;"	f
testSortLinksWithLockOption	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testSortLinksWithLockOption() {$/;"	f
testUrlGeneration	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testUrlGeneration() {$/;"	f
testUrlGenerationWithPrefixes	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testUrlGenerationWithPrefixes() {$/;"	f
testWithOnePage	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testWithOnePage() {$/;"	f
testWithPlugin	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testWithPlugin() {$/;"	f
testWithZeroPages	lib/Cake/Test/Case/View/Helper/PaginatorHelperTest.php	/^	public function testWithZeroPages() {$/;"	f
Proto	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$this->Proto = new PrototypeEngineHelper($this->View);$/;"	v
PrototypeEngineHelperTest	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^class PrototypeEngineHelperTest extends CakeTestCase {$/;"	c
View	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$this->View = $this->getMock('View', array('addScript'), array(&$controller));$/;"	v
controller	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$controller = null;$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = "\\$(\\"myLink\\").observe(\\"click\\", function (event) {event.stop();\\nElement.hide(this);});";$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = '$$("#foo li").each(function (item, index) {item.hide();});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = '$$("div.dragger").each(function (item, index) {new Draggable(item, {onDrag:onDrag, onEnd:onStop, onStart:onStart, snap:[10,10]});});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = '$("element").serialize()';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = '$("element").serialize();';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = '$("foo").appear();';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = '$("foo").appear({duration:0.50000000000});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = '$("foo").appear({duration:2});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = '$("foo").fade();';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = '$("foo").fade({duration:0.50000000000});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = '$("foo").fade({duration:2});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = '$("foo").hide();';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = '$("foo").show();';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = '$("myLink").observe("click", doClick);';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = '$("myLink").observe("click", function (event) {Element.hide(this);});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = '$($("element").form).serialize()';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = '$($("element").form).serialize();';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = 'Droppables.add($("element"), {accept:".drag-me", onDrop:onDrop, onHover:onHover});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = 'Effect.slideDown($("foo"));';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = 'Effect.slideUp($("foo"));';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = 'Effect.slideUp($("foo"), {duration:0.50000000000});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = 'Effect.slideUp($("foo"), {duration:2});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = 'document.observe("dom:loaded", function (event) {foo.name = "bar";});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = 'var jsDrag = new Draggable($("element"), {onDrag:onDrag, onEnd:onStop, onStart:onStart, snap:[10,10]});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = 'var jsRequest = new Ajax.Request("\/people\/edit\/1", {asynchronous:false, method:"post", onComplete:function (transport) {doComplete();}, onCreate:function (transport) {doBefore();}, onFailure:function (response, jsonHeader) {handleError();}, onSuccess:function (response, jsonHeader) {doSuccess();}});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = 'var jsRequest = new Ajax.Request("\/people\/edit\/1", {method:"post", onComplete:doSuccess, onFailure:handleError, parameters:$("element").serialize()});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = 'var jsRequest = new Ajax.Request("\/people\/edit\/1", {method:"post", onComplete:doSuccess, onFailure:handleError, parameters:{"name":"jim","height":"185cm"}});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = 'var jsRequest = new Ajax.Request("\/people\/edit\/1", {method:"post", onComplete:function (transport) {doComplete();}, onCreate:function (transport) {doBefore();}, onFailure:function (response, jsonHeader) {handleError();}, onSuccess:function (response, jsonHeader) {doSuccess();}});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = 'var jsRequest = new Ajax.Request("\/posts\/view\/1");';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = 'var jsRequest = new Ajax.Request("\/posts\/view\/1", {method:"post", onComplete:doComplete, onCreate:doBefore, onFailure:doError, onSuccess:doSuccess, parameters:{"name":"jim","height":"185cm"}});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = 'var jsRequest = new Ajax.Updater("content", "\/posts\/view\/1");';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = 'var jsRequest = new Ajax.Updater("update-zone", "\/people\/edit\/1", {method:"post", onComplete:doSuccess});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = 'var jsSlider = new Control.Slider($("handle"), $("element"), {axis:"horizontal", onChange:onComplete, onSlide:onChange, sliderValue:4});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = 'var jsSlider = new Control.Slider($("handle"), $("element"), {onChange:function (value) {complete();}, onSlide:function (value) {change();}, range:$R(10,100), sliderValue:4});';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = 'var jsSortable = Sortable.create($("myList"), {onChange:onSort, onUpdate:onComplete});';$/;"	v
onComplete	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = 'var jsRequest = new Ajax.Request("\/people\/edit\/1", {asynchronous:false, method:"post", onComplete:function (transport) {doComplete();}, onCreate:function (transport) {doBefore();}, onFailure:function (response, jsonHeader) {handleError();}, onSuccess:function (response, jsonHeader) {doSuccess();}});';$/;"	j
onComplete	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = 'var jsRequest = new Ajax.Request("\/people\/edit\/1", {method:"post", onComplete:function (transport) {doComplete();}, onCreate:function (transport) {doBefore();}, onFailure:function (response, jsonHeader) {handleError();}, onSuccess:function (response, jsonHeader) {doSuccess();}});';$/;"	j
onSlide	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$expected = 'var jsSlider = new Control.Slider($("handle"), $("element"), {onChange:function (value) {complete();}, onSlide:function (value) {change();}, range:$R(10,100), sliderValue:4});';$/;"	j
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->domReady('foo.name = "bar";');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->drag(array($/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->drop(array($/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->each('item.hide();');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->effect('fadeIn');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->effect('fadeIn', array('speed' => 'fast'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->effect('fadeIn', array('speed' => 'slow'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->effect('fadeOut');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->effect('fadeOut', array('speed' => 'fast'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->effect('fadeOut', array('speed' => 'slow'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->effect('hide');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->effect('show');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->effect('slideIn');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->effect('slideOut');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->effect('slideOut', array('speed' => 'fast'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->effect('slideOut', array('speed' => 'slow'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->event('click', 'Element.hide(this);');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->event('click', 'Element.hide(this);', array('stop' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->event('click', 'doClick', array('wrap' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->get('#content');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->get('#some_long-id.class');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->get('a .remove');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->get('document');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->get('ul');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->get('window');$/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->request('\/people\/edit\/1', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->request('\/posts\/view\/1', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->request('\/posts\/view\/1', array('update' => 'content'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->request('\/users\/login', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->request(array('controller' => 'posts', 'action' => 'view', 1));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->serializeForm(array('isForm' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->serializeForm(array('isForm' => false, 'inline' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->serializeForm(array('isForm' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->serializeForm(array('isForm' => true, 'inline' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->slider(array($/;"	v
result	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^		$result = $this->Proto->sortable(array($/;"	v
setUp	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^	public function tearDown() {$/;"	f
testDomReady	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^	public function testDomReady() {$/;"	f
testDrag	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^	public function testDrag() {$/;"	f
testDrop	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^	public function testDrop() {$/;"	f
testEach	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^	public function testEach() {$/;"	f
testEffect	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^	public function testEffect() {$/;"	f
testEvent	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^	public function testEvent() {$/;"	f
testRequest	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^	public function testRequest() {$/;"	f
testSelector	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^	public function testSelector() {$/;"	f
testSerializeForm	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^	public function testSerializeForm() {$/;"	f
testSlider	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^	public function testSlider() {$/;"	f
testSortable	lib/Cake/Test/Case/View/Helper/PrototypeEngineHelperTest.php	/^	public function testSortable() {$/;"	f
File	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^		$File = new File($tmpFile, true);$/;"	v
Folder	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^			$Folder = new Folder(WWW_ROOT . 'tests');$/;"	v
Rss	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^		$this->Rss = new RssHelper($this->View);$/;"	v
RssHelperTest	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^class RssHelperTest extends CakeTestCase {$/;"	c
View	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^		$this->View = new View($controller);$/;"	v
attrib	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^		$attrib = array('a' => '1', 'b' => '2');$/;"	v
attrib	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^		$attrib = array();$/;"	v
attributes	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^		$attributes = array($/;"	v
content	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^		$content = 'content';$/;"	v
content	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^		$content = 'content-here';$/;"	v
controller	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^		$controller = null;$/;"	v
elements	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^		$elements = array($/;"	v
elements	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^		$elements = array('enclosure' => array('url' => 'http:\/\/test.com'));$/;"	v
elements	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^		$elements = array('title' => 'Title');$/;"	v
expected	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^		$expected = '';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^		$expected = array($/;"	v
item	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^		$item = array($/;"	v
items	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^		$items = array($/;"	v
result	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^		$result = $this->Rss->channel($attrib, $elements, $content);$/;"	v
result	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^		$result = $this->Rss->document();$/;"	v
result	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^		$result = $this->Rss->document(array('contrived' => 'parameter'), 'content');$/;"	v
result	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^		$result = $this->Rss->document(null, 'content');$/;"	v
result	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^		$result = $this->Rss->item($attributes, $elements);$/;"	v
result	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^		$result = $this->Rss->item($attributes, $item);$/;"	v
result	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^		$result = $this->Rss->item(null, $item);$/;"	v
result	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^		$result = $this->Rss->items($items);$/;"	v
result	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^		$result = $this->Rss->items($items, create_function('$v', '$v[\\'title\\'] = $v[\\'title\\'] . \\'-transformed\\'; return $v;'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^		$result = $this->Rss->items(array());$/;"	v
setUp	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^	public function tearDown() {$/;"	f
testChannel	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^	public function testChannel() {$/;"	f
testChannelElementAttributes	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^	public function testChannelElementAttributes() {$/;"	f
testChannelElements	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^	public function testChannelElements() {$/;"	f
testDocument	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^	public function testDocument() {$/;"	f
testElementAttrNotInParent	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^	public function testElementAttrNotInParent() {$/;"	f
testElementNamespaceWithPrefix	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^	public function testElementNamespaceWithPrefix() {$/;"	f
testElementNamespaceWithoutPrefix	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^	public function testElementNamespaceWithoutPrefix() {$/;"	f
testExists	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^		$testExists = is_dir(WWW_ROOT . 'tests');$/;"	v
testItem	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^	public function testItem() {$/;"	f
testItemCdata	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^	public function testItemCdata() {$/;"	f
testItemEnclosureLength	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^	public function testItemEnclosureLength() {$/;"	f
testItems	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^	public function testItems() {$/;"	f
tmpFile	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^		$tmpFile = WWW_ROOT . 'tests' . DS . 'cakephp.file.test.tmp';$/;"	v
type	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^			$type = mime_content_type($tmpFile);$/;"	v
type	lib/Cake/Test/Case/View/Helper/RssHelperTest.php	/^			$type = null;$/;"	v
Session	lib/Cake/Test/Case/View/Helper/SessionHelperTest.php	/^		$this->Session = new SessionHelper($this->View);$/;"	v
SessionHelperTest	lib/Cake/Test/Case/View/Helper/SessionHelperTest.php	/^class SessionHelperTest extends CakeTestCase {$/;"	c
View	lib/Cake/Test/Case/View/Helper/SessionHelperTest.php	/^		$this->View = new View($controller);$/;"	v
_SESSION	lib/Cake/Test/Case/View/Helper/SessionHelperTest.php	/^		$_SESSION = array($/;"	v
_SESSION	lib/Cake/Test/Case/View/Helper/SessionHelperTest.php	/^		$_SESSION = array();$/;"	v
controller	lib/Cake/Test/Case/View/Helper/SessionHelperTest.php	/^		$controller = null;$/;"	v
expected	lib/Cake/Test/Case/View/Helper/SessionHelperTest.php	/^		$expected = "<div id=\\"notificationLayout\\">\\n\\t<h1>Alert!<\/h1>\\n\\t<h3>Notice!<\/h3>\\n\\t<p>This is a calling<\/p>\\n<\/div>";$/;"	v
expected	lib/Cake/Test/Case/View/Helper/SessionHelperTest.php	/^		$expected = "<div id=\\"notificationLayout\\">\\n\\t<h1>Alert!<\/h1>\\n\\t<h3>Notice!<\/h3>\\n\\t<p>This is a test of the emergency broadcasting system<\/p>\\n<\/div>";$/;"	v
expected	lib/Cake/Test/Case/View/Helper/SessionHelperTest.php	/^		$expected = '<div id="classyMessage" class="positive">Recorded<\/div>';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/SessionHelperTest.php	/^		$expected = '<div id="flashMessage" class="message">This is a calling<\/div>';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/SessionHelperTest.php	/^		$expected = '<div id="flashMessage" class="test-message">This is a calling<\/div>';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/SessionHelperTest.php	/^		$expected = 'Bare message';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/SessionHelperTest.php	/^		$expected = 'this is the plugin element using params[plugin]';$/;"	v
result	lib/Cake/Test/Case/View/Helper/SessionHelperTest.php	/^		$result = $this->Session->flash('bare');$/;"	v
result	lib/Cake/Test/Case/View/Helper/SessionHelperTest.php	/^		$result = $this->Session->flash('classy');$/;"	v
result	lib/Cake/Test/Case/View/Helper/SessionHelperTest.php	/^		$result = $this->Session->flash('flash');$/;"	v
result	lib/Cake/Test/Case/View/Helper/SessionHelperTest.php	/^		$result = $this->Session->flash('flash', array($/;"	v
result	lib/Cake/Test/Case/View/Helper/SessionHelperTest.php	/^		$result = $this->Session->flash('flash', array('params' => array('class' => 'test-message')));$/;"	v
result	lib/Cake/Test/Case/View/Helper/SessionHelperTest.php	/^		$result = $this->Session->flash('notification');$/;"	v
result	lib/Cake/Test/Case/View/Helper/SessionHelperTest.php	/^		$result = $this->Session->read('Deeply.nested.key');$/;"	v
result	lib/Cake/Test/Case/View/Helper/SessionHelperTest.php	/^		$result = $this->Session->read('test');$/;"	v
result	lib/Cake/Test/Case/View/Helper/SessionHelperTest.php	/^		$result = str_replace("\\r\\n", "\\n", $result);$/;"	v
setUp	lib/Cake/Test/Case/View/Helper/SessionHelperTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/View/Helper/SessionHelperTest.php	/^	public function tearDown() {$/;"	f
testCheck	lib/Cake/Test/Case/View/Helper/SessionHelperTest.php	/^	public function testCheck() {$/;"	f
testFlash	lib/Cake/Test/Case/View/Helper/SessionHelperTest.php	/^	public function testFlash() {$/;"	f
testFlashAttributes	lib/Cake/Test/Case/View/Helper/SessionHelperTest.php	/^	public function testFlashAttributes() {$/;"	f
testFlashElementInAttrs	lib/Cake/Test/Case/View/Helper/SessionHelperTest.php	/^	public function testFlashElementInAttrs() {$/;"	f
testFlashWithPluginElement	lib/Cake/Test/Case/View/Helper/SessionHelperTest.php	/^	public function testFlashWithPluginElement() {$/;"	f
testRead	lib/Cake/Test/Case/View/Helper/SessionHelperTest.php	/^	public function testRead() {$/;"	f
String	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$String = $this->getMock('StringMock', $methods);$/;"	v
StringMock	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^class StringMock {$/;"	c
Text	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$Text = new TextHelperTestObject($this->View, array('engine' => 'StringMock'));$/;"	v
Text	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$Text = new TextHelperTestObject($this->View, array('engine' => 'TestAppEngine'));$/;"	v
Text	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$Text = new TextHelperTestObject($this->View, array('engine' => 'TestPlugin.TestPluginEngine'));$/;"	v
Text	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$this->Text = new TextHelper($this->View);$/;"	v
TextHelperTest	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^class TextHelperTest extends CakeTestCase {$/;"	c
TextHelperTestObject	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^class TextHelperTestObject extends TextHelper {$/;"	c
View	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$this->View = new View(null);$/;"	v
_engine	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$this->_engine = $string;$/;"	v
attach	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^	public function attach(StringMock $string) {$/;"	f
autoLinkProvider	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^	public static function autoLinkProvider() {$/;"	f
engine	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^	public function engine() {$/;"	f
expected	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$expected = "This is a test text with URL <a href=\\"http:\/\/www.cakephp.org\\">http:\/\/www.cakephp.org<\/a>\\tand some more text";$/;"	v
expected	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$expected = '(<a href="mailto:email@example.com">email@example.com<\/a>) address';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$expected = '<a href="mailto:email@example.com">email@example.com<\/a> address';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$expected = 'Text with <a href="mailto:düsentrieb@küchenschöhn-not-working.de">düsentrieb@küchenschöhn-not-working.de<\/a> address';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$expected = 'Text with <a href="mailto:email@example.com" class="link">email@example.com<\/a> address';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$expected = 'Text with <a href="mailto:email@example.com">email@example.com<\/a> address';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$expected = 'Text with <a href="mailto:me@subdomain.küchenschöhn.de">me@subdomain.küchenschöhn.de<\/a> address';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$expected = 'Text with <a href="mailto:o&#039;hare._-bob@example.com">o&#039;hare._-bob@example.com<\/a> address';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$expected = 'Text with a partial &lt;iframe src=&quot;http:\/\/www.cakephp.org&quot; \/&gt; link';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$expected = 'Text with a partial <a href="http:\/\/WWW.cakephp.org"\\s*>WWW.cakephp.org<\/a> &copy; URL';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$expected = 'Text with a partial <a href="http:\/\/www.cakephp.org" \\s*class="link">www.cakephp.org<\/a> URL';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$expected = 'Text with a partial <a href="http:\/\/www.cakephp.org">link<\/a> link';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$expected = 'Text with a partial <a href="http:\/\/www.cakephp.org">www.cakephp.org<\/a> URL and <a href="mailto:test@cakephp\\.org">test@cakephp\\.org<\/a> email address';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$expected = 'Text with a partial <a href="http:\/\/www.cakephp.org?product_id=123&amp;foo=bar">http:\/\/www.cakephp.org?product_id=123&amp;foo=bar<\/a> link';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$expected = 'Text with a partial <iframe src="http:\/\/www.cakephp.org" \/> link';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$expected = 'Text with a url &lt;a href=&quot;http:\/\/www.not-working-www.com&quot;&gt;www.not-working-www.com&lt;\/a&gt; and more';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$expected = 'Text with a url <a href="http:\/\/www.not-working-www.com">http:\/\/www.not-working-www.com<\/a> and more';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$expected = 'Text with a url <a href="http:\/\/www.not-working-www.com">www.not-working-www.com<\/a> and more';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$expected = 'Text with a url <a href="http:\/\/www.www.not-working-www.com">http:\/\/www.www.not-working-www.com<\/a> and more';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$expected = 'Text with a url\/email <a href="http:\/\/example.com\/store?email=mark@example.com">' .$/;"	v
expected	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$expected = 'This is a &lt;b&gt;test&lt;\/b&gt; text with URL <a href="http:\/\/www.cakephp.org">http:\/\/www.cakephp.org<\/a>';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$expected = 'This is a <b>test<\/b> text with URL <a href="http:\/\/www.cakephp.org">http:\/\/www.cakephp.org<\/a>';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$expected = 'This is a test text with URL <a href="http:\/\/www.cakephp.org" class="link" id="MyLink">http:\/\/www.cakephp.org<\/a>';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$expected = 'This is a test text with URL <a href="http:\/\/www.cakephp.org" class="link">http:\/\/www.cakephp.org<\/a>';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$expected = 'This is a test text with URL <a href="http:\/\/www.cakephp.org">http:\/\/www.cakephp.org<\/a> and some more text';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$expected = 'This is a test text with URL <a href="http:\/\/www.cakephp.org">http:\/\/www.cakephp.org<\/a>';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$expected = 'This is a test text with URL <a href="http:\/\/www.cakephp.org">http:\/\/www.cakephp.org<\/a>(and some more text)';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$expected = 'This is a test text';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$expected = 'test <ul>$/;"	v
expected	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$expected = 'this is a myaddress@gmx-de test';$/;"	v
expected	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$expected = <<<TEXT$/;"	v
methods	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$methods = array($/;"	v
result	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$result = $this->Text->autoLink($text);$/;"	v
result	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$result = $this->Text->autoLink($text, array('class' => 'link'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$result = $this->Text->autoLink($text, array('class' => 'link', 'id' => 'MyLink'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$result = $this->Text->autoLink($text, array('escape' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$result = $this->Text->autoLinkEmails($text);$/;"	v
result	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$result = $this->Text->autoLinkEmails($text, array('class' => 'link'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$result = $this->Text->autoLinkEmails('this is a myaddress@gmx-de test');$/;"	v
result	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$result = $this->Text->autoLinkUrls($text);$/;"	v
result	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$result = $this->Text->autoLinkUrls($text, array('class' => 'link'));$/;"	v
result	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$result = $this->Text->autoLinkUrls($text, array('escape' => false));$/;"	v
result	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$result = $this->Text->autoLinkUrls($text, array('escape' => true));$/;"	v
result	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$result = $this->Text->autoParagraph($text);$/;"	v
setUp	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^	public function tearDown() {$/;"	f
testAutoLink	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^	public function testAutoLink() {$/;"	f
testAutoLinkEmailInvalid	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^	public function testAutoLinkEmailInvalid() {$/;"	f
testAutoLinkEmails	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^	public function testAutoLinkEmails() {$/;"	f
testAutoLinkEscape	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^	public function testAutoLinkEscape() {$/;"	f
testAutoLinkMixed	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^	public function testAutoLinkMixed() {$/;"	f
testAutoLinkOptions	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^	public function testAutoLinkOptions() {$/;"	f
testAutoLinkUrls	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^	public function testAutoLinkUrls($text, $expected) {$/;"	f
testAutoLinkUrlsEscape	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^	public function testAutoLinkUrlsEscape() {$/;"	f
testAutoLinkUrlsOptions	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^	public function testAutoLinkUrlsOptions() {$/;"	f
testAutoLinkUrlsQueryString	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^	public function testAutoLinkUrlsQueryString() {$/;"	f
testAutoParagraph	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^	public function testAutoParagraph() {$/;"	f
testEngineOverride	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^	public function testEngineOverride() {$/;"	f
testTextHelperProxyMethodCalls	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^	public function testTextHelperProxyMethodCalls() {$/;"	f
text	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$text = "Text with o'hare._-bob@example.com address";$/;"	v
text	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$text = "This is a test text with URL http:\/\/www.cakephp.org\\tand some more text";$/;"	v
text	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$text = '(email@example.com) address';$/;"	v
text	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$text = 'Text with a partial <a href="http:\/\/www.cakephp.org">link<\/a> link';$/;"	v
text	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$text = 'Text with a partial <iframe src="http:\/\/www.cakephp.org" \/> link';$/;"	v
text	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$text = 'Text with a partial WWW.cakephp.org &copy; URL';$/;"	v
text	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$text = 'Text with a partial http:\/\/www.cakephp.org?product_id=123&foo=bar link';$/;"	v
text	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$text = 'Text with a partial www.cakephp.org URL and test@cakephp.org email address';$/;"	v
text	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$text = 'Text with a partial www.cakephp.org URL';$/;"	v
text	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$text = 'Text with a url <a href="http:\/\/www.not-working-www.com">www.not-working-www.com<\/a> and more';$/;"	v
text	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$text = 'Text with a url http:\/\/www.not-working-www.com and more';$/;"	v
text	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$text = 'Text with a url http:\/\/www.www.not-working-www.com and more';$/;"	v
text	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$text = 'Text with a url www.not-working-www.com and more';$/;"	v
text	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$text = 'Text with a url\/email http:\/\/example.com\/store?email=mark@example.com and email.';$/;"	v
text	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$text = 'Text with düsentrieb@küchenschöhn-not-working.de address';$/;"	v
text	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$text = 'Text with email@example.com address';$/;"	v
text	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$text = 'Text with me@subdomain.küchenschöhn.de address';$/;"	v
text	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$text = 'This is a <BR id="test"\/><br class="test"> test text';$/;"	v
text	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$text = 'This is a <b>test<\/b> text with URL http:\/\/www.cakephp.org';$/;"	v
text	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$text = 'This is a <br\/> <BR> test text';$/;"	v
text	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$text = 'This is a test text with URL http:\/\/www.cakephp.org and some more text';$/;"	v
text	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$text = 'This is a test text with URL http:\/\/www.cakephp.org';$/;"	v
text	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$text = 'This is a test text with URL http:\/\/www.cakephp.org(and some more text)';$/;"	v
text	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$text = 'This is a test text';$/;"	v
text	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$text = 'email@example.com address';$/;"	v
text	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$text = 'test <ul>$/;"	v
text	lib/Cake/Test/Case/View/Helper/TextHelperTest.php	/^		$text = <<<TEXT$/;"	v
CakeTime	lib/Cake/Test/Case/View/Helper/TimeHelperTest.php	/^		$CakeTime = $this->getMock('CakeTimeMock', $methods);$/;"	v
CakeTime	lib/Cake/Test/Case/View/Helper/TimeHelperTest.php	/^		$CakeTime = $this->getMock('CakeTimeMock', array('timeAgoInWords'));$/;"	v
CakeTime	lib/Cake/Test/Case/View/Helper/TimeHelperTest.php	/^	public $CakeTime = null;$/;"	v
CakeTimeMock	lib/Cake/Test/Case/View/Helper/TimeHelperTest.php	/^class CakeTimeMock {$/;"	c
Time	lib/Cake/Test/Case/View/Helper/TimeHelperTest.php	/^		$Time = new TimeHelper($this->View);$/;"	v
Time	lib/Cake/Test/Case/View/Helper/TimeHelperTest.php	/^		$Time = new TimeHelperTestObject($this->View, array('engine' => 'CakeTimeMock'));$/;"	v
Time	lib/Cake/Test/Case/View/Helper/TimeHelperTest.php	/^		$Time = new TimeHelperTestObject($this->View, array('engine' => 'TestAppEngine'));$/;"	v
Time	lib/Cake/Test/Case/View/Helper/TimeHelperTest.php	/^		$Time = new TimeHelperTestObject($this->View, array('engine' => 'TestPlugin.TestPluginEngine'));$/;"	v
Time	lib/Cake/Test/Case/View/Helper/TimeHelperTest.php	/^	public $Time = null;$/;"	v
TimeHelperTest	lib/Cake/Test/Case/View/Helper/TimeHelperTest.php	/^class TimeHelperTest extends CakeTestCase {$/;"	c
TimeHelperTestObject	lib/Cake/Test/Case/View/Helper/TimeHelperTest.php	/^class TimeHelperTestObject extends TimeHelper {$/;"	c
View	lib/Cake/Test/Case/View/Helper/TimeHelperTest.php	/^		$this->View = new View(null);$/;"	v
_engine	lib/Cake/Test/Case/View/Helper/TimeHelperTest.php	/^		$this->_engine = $cakeTime;$/;"	v
attach	lib/Cake/Test/Case/View/Helper/TimeHelperTest.php	/^	public function attach(CakeTimeMock $cakeTime) {$/;"	f
engine	lib/Cake/Test/Case/View/Helper/TimeHelperTest.php	/^	public function engine() {$/;"	f
expected	lib/Cake/Test/Case/View/Helper/TimeHelperTest.php	/^		$expected = array($/;"	v
methods	lib/Cake/Test/Case/View/Helper/TimeHelperTest.php	/^		$methods = array($/;"	v
result	lib/Cake/Test/Case/View/Helper/TimeHelperTest.php	/^		$result = $Time->timeAgoInWords($/;"	v
result	lib/Cake/Test/Case/View/Helper/TimeHelperTest.php	/^		$result = $Time->timeAgoInWords($timestamp, array($/;"	v
setUp	lib/Cake/Test/Case/View/Helper/TimeHelperTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/View/Helper/TimeHelperTest.php	/^	public function tearDown() {$/;"	f
testEngineOverride	lib/Cake/Test/Case/View/Helper/TimeHelperTest.php	/^	public function testEngineOverride() {$/;"	f
testTimeAgoInWords	lib/Cake/Test/Case/View/Helper/TimeHelperTest.php	/^	public function testTimeAgoInWords() {$/;"	f
testTimeHelperProxyMethodCalls	lib/Cake/Test/Case/View/Helper/TimeHelperTest.php	/^	public function testTimeHelperProxyMethodCalls() {$/;"	f
timestamp	lib/Cake/Test/Case/View/Helper/TimeHelperTest.php	/^		$timestamp = strtotime('+2 weeks');$/;"	v
timestamp	lib/Cake/Test/Case/View/Helper/TimeHelperTest.php	/^		$timestamp = strtotime('+8 years, +4 months +2 weeks +3 days');$/;"	v
HelperCollectionTest	lib/Cake/Test/Case/View/HelperCollectionTest.php	/^class HelperCollectionTest extends CakeTestCase {$/;"	c
Helpers	lib/Cake/Test/Case/View/HelperCollectionTest.php	/^		$this->Helpers = new HelperCollection($this->View);$/;"	v
HtmlAliasHelper	lib/Cake/Test/Case/View/HelperCollectionTest.php	/^class HtmlAliasHelper extends HtmlHelper {$/;"	c
View	lib/Cake/Test/Case/View/HelperCollectionTest.php	/^		$this->View = $this->getMock('View', array(), array(null));$/;"	v
result	lib/Cake/Test/Case/View/HelperCollectionTest.php	/^		$result = $this->Helpers->Form;$/;"	v
result	lib/Cake/Test/Case/View/HelperCollectionTest.php	/^		$result = $this->Helpers->Html;$/;"	v
result	lib/Cake/Test/Case/View/HelperCollectionTest.php	/^		$result = $this->Helpers->OtherHelper;$/;"	v
result	lib/Cake/Test/Case/View/HelperCollectionTest.php	/^		$result = $this->Helpers->load('Html');$/;"	v
result	lib/Cake/Test/Case/View/HelperCollectionTest.php	/^		$result = $this->Helpers->load('Html', array('className' => 'HtmlAlias'));$/;"	v
result	lib/Cake/Test/Case/View/HelperCollectionTest.php	/^		$result = $this->Helpers->load('Html', array('enabled' => false));$/;"	v
result	lib/Cake/Test/Case/View/HelperCollectionTest.php	/^		$result = $this->Helpers->load('SomeOther', array('className' => 'TestPlugin.OtherHelper'));$/;"	v
result	lib/Cake/Test/Case/View/HelperCollectionTest.php	/^		$result = $this->Helpers->load('TestPlugin.OtherHelper');$/;"	v
result	lib/Cake/Test/Case/View/HelperCollectionTest.php	/^		$result = $this->Helpers->loaded();$/;"	v
setUp	lib/Cake/Test/Case/View/HelperCollectionTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/View/HelperCollectionTest.php	/^	public function tearDown() {$/;"	f
testLazyLoad	lib/Cake/Test/Case/View/HelperCollectionTest.php	/^	public function testLazyLoad() {$/;"	f
testLazyLoadException	lib/Cake/Test/Case/View/HelperCollectionTest.php	/^	public function testLazyLoadException() {$/;"	f
testLoad	lib/Cake/Test/Case/View/HelperCollectionTest.php	/^	public function testLoad() {$/;"	f
testLoadMissingHelper	lib/Cake/Test/Case/View/HelperCollectionTest.php	/^	public function testLoadMissingHelper() {$/;"	f
testLoadPluginHelper	lib/Cake/Test/Case/View/HelperCollectionTest.php	/^	public function testLoadPluginHelper() {$/;"	f
testLoadWithAlias	lib/Cake/Test/Case/View/HelperCollectionTest.php	/^	public function testLoadWithAlias() {$/;"	f
testLoadWithEnabledFalse	lib/Cake/Test/Case/View/HelperCollectionTest.php	/^	public function testLoadWithEnabledFalse() {$/;"	f
testUnload	lib/Cake/Test/Case/View/HelperCollectionTest.php	/^	public function testUnload() {$/;"	f
Helper	lib/Cake/Test/Case/View/HelperTest.php	/^		$Helper = new TestHelper($this->View);$/;"	v
Helper	lib/Cake/Test/Case/View/HelperTest.php	/^		$Helper = new TestHelper($this->View, array($/;"	v
Helper	lib/Cake/Test/Case/View/HelperTest.php	/^		$this->Helper = new Helper($this->View);$/;"	v
HelperTest	lib/Cake/Test/Case/View/HelperTest.php	/^class HelperTest extends CakeTestCase {$/;"	c
HelperTestComment	lib/Cake/Test/Case/View/HelperTest.php	/^class HelperTestComment extends Model {$/;"	c
HelperTestPost	lib/Cake/Test/Case/View/HelperTest.php	/^class HelperTestPost extends Model {$/;"	c
HelperTestPostsTag	lib/Cake/Test/Case/View/HelperTest.php	/^class HelperTestPostsTag extends Model {$/;"	c
HelperTestTag	lib/Cake/Test/Case/View/HelperTest.php	/^class HelperTestTag extends Model {$/;"	c
TestHelper	lib/Cake/Test/Case/View/HelperTest.php	/^class TestHelper extends Helper {$/;"	c
View	lib/Cake/Test/Case/View/HelperTest.php	/^		$this->View = new View($null);$/;"	v
_schema	lib/Cake/Test/Case/View/HelperTest.php	/^		$this->_schema = array($/;"	v
entity	lib/Cake/Test/Case/View/HelperTest.php	/^		$entity = '1.HelperTestComment.1.HelperTestTag.created.year';$/;"	v
entity	lib/Cake/Test/Case/View/HelperTest.php	/^		$entity = 'HelperTestPost.0.HelperTestComment.1.HelperTestTag.1.fake';$/;"	v
entity	lib/Cake/Test/Case/View/HelperTest.php	/^		$entity = 'HelperTestPost.1.HelperTestComment.1.HelperTestTag.1.created';$/;"	v
entity	lib/Cake/Test/Case/View/HelperTest.php	/^		$entity = 'HelperTestPost.2.HelperTestComment.1.title';$/;"	v
entityProvider	lib/Cake/Test/Case/View/HelperTest.php	/^	public static function entityProvider() {$/;"	f
expected	lib/Cake/Test/Case/View/HelperTest.php	/^			$expected = array('HelperTestPost', 'date', $d);$/;"	v
expected	lib/Cake/Test/Case/View/HelperTest.php	/^		$expected = '\/img\/cake.icon.gif';$/;"	v
expected	lib/Cake/Test/Case/View/HelperTest.php	/^		$expected = '\/img\/cake.icon.gif?some=param';$/;"	v
expected	lib/Cake/Test/Case/View/HelperTest.php	/^		$expected = '\/img\/cake.power.gif';$/;"	v
expected	lib/Cake/Test/Case/View/HelperTest.php	/^		$expected = '\/theme\/test_theme\/img\/cake.power.gif';$/;"	v
expected	lib/Cake/Test/Case/View/HelperTest.php	/^		$expected = '\/theme\/test_theme\/img\/test.jpg';$/;"	v
expected	lib/Cake/Test/Case/View/HelperTest.php	/^		$expected = FULL_BASE_URL . '\/cake_dev\/app\/webroot\/img\/cake.icon.png';$/;"	v
expected	lib/Cake/Test/Case/View/HelperTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/View/HelperTest.php	/^		$expected = array('0', 'HelperTestPost', 'id');$/;"	v
expected	lib/Cake/Test/Case/View/HelperTest.php	/^		$expected = array('HelperTestComment', 'body');$/;"	v
expected	lib/Cake/Test/Case/View/HelperTest.php	/^		$expected = array('HelperTestComment', 'created', 'year');$/;"	v
expected	lib/Cake/Test/Case/View/HelperTest.php	/^		$expected = array('HelperTestComment', 'id', 'time');$/;"	v
expected	lib/Cake/Test/Case/View/HelperTest.php	/^		$expected = array('HelperTestComment', 5, 'id');$/;"	v
expected	lib/Cake/Test/Case/View/HelperTest.php	/^		$expected = array('HelperTestPost');$/;"	v
expected	lib/Cake/Test/Case/View/HelperTest.php	/^		$expected = array('HelperTestPost', '1', 'HelperTestComment', '1', 'title');$/;"	v
expected	lib/Cake/Test/Case/View/HelperTest.php	/^		$expected = array('HelperTestPost', '2', 'body');$/;"	v
expected	lib/Cake/Test/Case/View/HelperTest.php	/^		$expected = array('HelperTestPost', 'body');$/;"	v
expected	lib/Cake/Test/Case/View/HelperTest.php	/^		$expected = array('HelperTestPost', 'id');$/;"	v
expected	lib/Cake/Test/Case/View/HelperTest.php	/^		$expected = array('HelperTestTag', 'HelperTestTag');$/;"	v
expected	lib/Cake/Test/Case/View/HelperTest.php	/^		$expected = array('HelperTestTag', 'helper_test_post');$/;"	v
expected	lib/Cake/Test/Case/View/HelperTest.php	/^		$expected = array('HelperTestTag', 'id');$/;"	v
expected	lib/Cake/Test/Case/View/HelperTest.php	/^		$expected = array('ModelThatDoesntExist', 'field_that_doesnt_exist');$/;"	v
expected	lib/Cake/Test/Case/View/HelperTest.php	/^		$expected = array('My', 'id');$/;"	v
expected	lib/Cake/Test/Case/View/HelperTest.php	/^		$expected = array('MyOther', 'id');$/;"	v
expected	lib/Cake/Test/Case/View/HelperTest.php	/^		$expected = array('Something', 'else');$/;"	v
expected	lib/Cake/Test/Case/View/HelperTest.php	/^		$expected = array('what', 'how', 'how', 'what', 'how', 'how');$/;"	v
hasAndBelongsToMany	lib/Cake/Test/Case/View/HelperTest.php	/^	public $hasAndBelongsToMany = array('HelperTestTag' => array('with' => 'HelperTestPostsTag'));$/;"	v
helpers	lib/Cake/Test/Case/View/HelperTest.php	/^	public $helpers = array('Html', 'TestPlugin.OtherHelper');$/;"	v
null	lib/Cake/Test/Case/View/HelperTest.php	/^		$null = null;$/;"	v
parseAttributes	lib/Cake/Test/Case/View/HelperTest.php	/^	public function parseAttributes($options, $exclude = null, $insertBefore = ' ', $insertAfter = null) {$/;"	f
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->assetTimestamp('\/%3Cb%3E\/cake.generic.css');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->assetTimestamp('\/some\/dir\/' . Configure::read('App.cssBaseUrl') . 'cake.generic.css');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->assetTimestamp('\/test_plugin\/css\/i_dont_exist.css');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->assetTimestamp('\/test_plugin\/css\/test_plugin_asset.css');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->assetTimestamp('\/theme\/test_theme\/js\/non_existant.js');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->assetTimestamp('\/theme\/test_theme\/js\/theme.js');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->assetTimestamp(Configure::read('App.cssBaseUrl') . 'cake.generic.css');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->assetTimestamp(Configure::read('App.cssBaseUrl') . 'cake.generic.css?someparam');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->assetUrl('TestPlugin.style', array('ext' => '.css'));$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->assetUrl('TestPlugin.style', array('ext' => '.css', 'plugin' => false));$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->assetUrl('cake.generic.css', array('pathPrefix' => Configure::read('App.cssBaseUrl')));$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->assetUrl('dir\/big+tall\/image', array('ext' => '.jpg'));$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->assetUrl('dir\/sub dir\/my image', array('ext' => '.jpg'));$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->assetUrl('foo.jpg', array('fullBase' => true));$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->assetUrl('foo.jpg', array('pathPrefix' => 'img\/'));$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->assetUrl('foo.jpg?one=two&three=four');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->assetUrl('img\/cake.icon.png', array('fullBase' => true));$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->assetUrl('style', array('ext' => '.css'));$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->assetUrl(array($/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->clean("<script \\ntype=\\"text\/javascript\\">\\n\\talert('ruined');\\n\\n\\t\\t<\/script>");$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->clean('&lt;script&gt;alert(document.cookie)&lt;\/script&gt;');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->clean('<body\/onload=do(\/something\/)>');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->clean('<script type="text\/javascript">alert("ruined");<\/script>');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->clean('<script>with something<\/script>');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->clean(array('<script>with something<\/script>', '<applet>something else<\/applet>'));$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->clean(array());$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->domId('Foo.bar');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->url('\/controller\/action\/1');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->url('\/controller\/action\/1?one=1&two=2');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->url('\/controller\/action\/1\/param:%7Baround%20here%7D%5Bthings%5D%5Bare%5D%24%24');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->url('\/controller\/action\/1\/param:this%20one%20more');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->url('\/controller\/action\/1\/param:this+one+more');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->url(array($/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->url(array('controller' => 'posts', 'action' => 'index', 'page' => '1" onclick="alert(\\'XSS\\');"'));$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->value('5.created.month');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->value('HelperTestComment.5.id');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->value('HelperTestPost.0.id');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->value('HelperTestPost.2.HelperTestComment.1.created.year');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->value('HelperTestPost.2.HelperTestComment.1.title');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->value('HelperTestTag.HelperTestTag');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->value('HelperTestTag.body');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->value('My.title');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->value('Post.2.created');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->value('Post.2.created.year');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->value('Post.2.name');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->value('Post.name');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->value('fullname');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->value('title');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->value(array('default' => 'something'), 'inexistent');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->value(array('default' => 'something'), 'zero');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->webroot('\/img\/cake.icon.gif');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->webroot('\/img\/cake.icon.gif?some=param');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->webroot('\/img\/cake.power.gif');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->Helper->webroot('\/img\/test.jpg');$/;"	v
result	lib/Cake/Test/Case/View/HelperTest.php	/^		$result = $this->View->Helpers->enabled();$/;"	v
resultA	lib/Cake/Test/Case/View/HelperTest.php	/^		$resultA = $Helper->Html;$/;"	v
resultB	lib/Cake/Test/Case/View/HelperTest.php	/^		$resultB = $Helper->Html;$/;"	v
schema	lib/Cake/Test/Case/View/HelperTest.php	/^	public function schema($field = false) {$/;"	f
setUp	lib/Cake/Test/Case/View/HelperTest.php	/^	public function setUp() {$/;"	f
settings	lib/Cake/Test/Case/View/HelperTest.php	/^	public $settings = array($/;"	v
tearDown	lib/Cake/Test/Case/View/HelperTest.php	/^	public function tearDown() {$/;"	f
testAssetTimestamp	lib/Cake/Test/Case/View/HelperTest.php	/^	public function testAssetTimestamp() {$/;"	f
testAssetTimestampPluginsAndThemes	lib/Cake/Test/Case/View/HelperTest.php	/^	public function testAssetTimestampPluginsAndThemes() {$/;"	f
testAssetUrl	lib/Cake/Test/Case/View/HelperTest.php	/^	public function testAssetUrl() {$/;"	f
testAssetUrlNoRewrite	lib/Cake/Test/Case/View/HelperTest.php	/^	public function testAssetUrlNoRewrite() {$/;"	f
testAssetUrlPlugin	lib/Cake/Test/Case/View/HelperTest.php	/^	public function testAssetUrlPlugin() {$/;"	f
testAssetUrlTimestampForce	lib/Cake/Test/Case/View/HelperTest.php	/^	public function testAssetUrlTimestampForce() {$/;"	f
testClean	lib/Cake/Test/Case/View/HelperTest.php	/^	public function testClean() {$/;"	f
testDomId	lib/Cake/Test/Case/View/HelperTest.php	/^	public function testDomId() {$/;"	f
testFieldSameAsModel	lib/Cake/Test/Case/View/HelperTest.php	/^	public function testFieldSameAsModel() {$/;"	f
testFieldSuffixForDate	lib/Cake/Test/Case/View/HelperTest.php	/^	public function testFieldSuffixForDate() {$/;"	f
testFieldsWithSameName	lib/Cake/Test/Case/View/HelperTest.php	/^	public function testFieldsWithSameName() {$/;"	f
testLazyLoadingHelpers	lib/Cake/Test/Case/View/HelperTest.php	/^	public function testLazyLoadingHelpers() {$/;"	f
testLazyLoadingUsesReferences	lib/Cake/Test/Case/View/HelperTest.php	/^	public function testLazyLoadingUsesReferences() {$/;"	f
testMultiDimensionValue	lib/Cake/Test/Case/View/HelperTest.php	/^	public function testMultiDimensionValue() {$/;"	f
testMultiDimensionalField	lib/Cake/Test/Case/View/HelperTest.php	/^	public function testMultiDimensionalField() {$/;"	f
testSetEntity	lib/Cake/Test/Case/View/HelperTest.php	/^	public function testSetEntity($entity, $expected, $modelKey, $fieldKey) {$/;"	f
testSetEntityAssociated	lib/Cake/Test/Case/View/HelperTest.php	/^	public function testSetEntityAssociated() {$/;"	f
testSetEntityAssociatedCamelCaseField	lib/Cake/Test/Case/View/HelperTest.php	/^	public function testSetEntityAssociatedCamelCaseField() {$/;"	f
testSetEntityAssociatedCamelCaseFieldHabtmMultiple	lib/Cake/Test/Case/View/HelperTest.php	/^	public function testSetEntityAssociatedCamelCaseFieldHabtmMultiple() {$/;"	f
testSetEntityHabtmPropertyFieldNames	lib/Cake/Test/Case/View/HelperTest.php	/^	public function testSetEntityHabtmPropertyFieldNames() {$/;"	f
testSetEntitySaveMany	lib/Cake/Test/Case/View/HelperTest.php	/^	public function testSetEntitySaveMany() {$/;"	f
testSetEntityScoped	lib/Cake/Test/Case/View/HelperTest.php	/^	public function testSetEntityScoped() {$/;"	f
testSetEntityWithView	lib/Cake/Test/Case/View/HelperTest.php	/^	public function testSetEntityWithView() {$/;"	f
testSettingsMerging	lib/Cake/Test/Case/View/HelperTest.php	/^	public function testSettingsMerging() {$/;"	f
testThatHelperHelpersAreNotAttached	lib/Cake/Test/Case/View/HelperTest.php	/^	public function testThatHelperHelpersAreNotAttached() {$/;"	f
testUrlConversion	lib/Cake/Test/Case/View/HelperTest.php	/^	public function testUrlConversion() {$/;"	f
testValue	lib/Cake/Test/Case/View/HelperTest.php	/^	public function testValue() {$/;"	f
testValueHabtmKeys	lib/Cake/Test/Case/View/HelperTest.php	/^	public function testValueHabtmKeys() {$/;"	f
testValueWithDefault	lib/Cake/Test/Case/View/HelperTest.php	/^	public function testValueWithDefault() {$/;"	f
testWebrootPaths	lib/Cake/Test/Case/View/HelperTest.php	/^	public function testWebrootPaths() {$/;"	f
useTable	lib/Cake/Test/Case/View/HelperTest.php	/^	public $useTable = false;$/;"	v
webRoot	lib/Cake/Test/Case/View/HelperTest.php	/^		$webRoot = Configure::read('App.www_root');$/;"	v
Controller	lib/Cake/Test/Case/View/JsonViewTest.php	/^		$Controller = new Controller($Request, $Response);$/;"	v
JsonViewTest	lib/Cake/Test/Case/View/JsonViewTest.php	/^class JsonViewTest extends CakeTestCase {$/;"	c
Request	lib/Cake/Test/Case/View/JsonViewTest.php	/^		$Request = new CakeRequest();$/;"	v
Request	lib/Cake/Test/Case/View/JsonViewTest.php	/^		$Request = new CakeRequest(null, false);$/;"	v
Response	lib/Cake/Test/Case/View/JsonViewTest.php	/^		$Response = new CakeResponse();$/;"	v
View	lib/Cake/Test/Case/View/JsonViewTest.php	/^		$View = new JsonView($Controller);$/;"	v
data	lib/Cake/Test/Case/View/JsonViewTest.php	/^		$data = array($/;"	v
data	lib/Cake/Test/Case/View/JsonViewTest.php	/^		$data = array('user' => 'fake', 'list' => array('item1', 'item2'));$/;"	v
expected	lib/Cake/Test/Case/View/JsonViewTest.php	/^		$expected = 'jfunc(' . json_encode($data) . ')';$/;"	v
expected	lib/Cake/Test/Case/View/JsonViewTest.php	/^		$expected = 'jfunc(' . json_encode($expected) . ')';$/;"	v
expected	lib/Cake/Test/Case/View/JsonViewTest.php	/^		$expected = array('user' => 'fake', 'list' => array('item1', 'item2'), 'paging' => array('page' => 2));$/;"	v
expected	lib/Cake/Test/Case/View/JsonViewTest.php	/^		$expected = json_encode(array('user' => 'fake', 'list' => array('item1', 'item2'), 'paging' => null));$/;"	v
output	lib/Cake/Test/Case/View/JsonViewTest.php	/^		$output = $View->render('index');$/;"	v
output	lib/Cake/Test/Case/View/JsonViewTest.php	/^		$output = $View->render(false);$/;"	v
renderWithoutViewProvider	lib/Cake/Test/Case/View/JsonViewTest.php	/^	public static function renderWithoutViewProvider() {$/;"	f
setUp	lib/Cake/Test/Case/View/JsonViewTest.php	/^	public function setUp() {$/;"	f
testJsonpResponse	lib/Cake/Test/Case/View/JsonViewTest.php	/^	public function testJsonpResponse() {$/;"	f
testRenderSerializeNoHelpers	lib/Cake/Test/Case/View/JsonViewTest.php	/^	public function testRenderSerializeNoHelpers() {$/;"	f
testRenderWithView	lib/Cake/Test/Case/View/JsonViewTest.php	/^	public function testRenderWithView() {$/;"	f
testRenderWithViewAndNamed	lib/Cake/Test/Case/View/JsonViewTest.php	/^	public function testRenderWithViewAndNamed() {$/;"	f
testRenderWithoutView	lib/Cake/Test/Case/View/JsonViewTest.php	/^	public function testRenderWithoutView($data, $serialize, $expected) {$/;"	f
MediaView	lib/Cake/Test/Case/View/MediaViewTest.php	/^		$this->MediaView = new MediaView();$/;"	v
MediaViewTest	lib/Cake/Test/Case/View/MediaViewTest.php	/^class MediaViewTest extends CakeTestCase {$/;"	c
setUp	lib/Cake/Test/Case/View/MediaViewTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/View/MediaViewTest.php	/^	public function tearDown() {$/;"	f
testRender	lib/Cake/Test/Case/View/MediaViewTest.php	/^	public function testRender() {$/;"	f
testRenderCachingAndName	lib/Cake/Test/Case/View/MediaViewTest.php	/^	public function testRenderCachingAndName() {$/;"	f
testRenderUpperExtension	lib/Cake/Test/Case/View/MediaViewTest.php	/^	public function testRenderUpperExtension() {$/;"	f
vars	lib/Cake/Test/Case/View/MediaViewTest.php	/^		$vars = array($/;"	v
Controller	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^		$Controller = new ScaffoldViewMockController($this->request);$/;"	v
Controller	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^		$this->Controller = new ScaffoldViewMockController($this->request);$/;"	v
ScaffoldView	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^		$ScaffoldView = new TestScaffoldView($Controller);$/;"	v
ScaffoldView	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^		$ScaffoldView = new TestScaffoldView($this->Controller);$/;"	v
ScaffoldViewMockController	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^class ScaffoldViewMockController extends Controller {$/;"	c
ScaffoldViewTest	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^class ScaffoldViewTest extends CakeTestCase {$/;"	c
TestScaffoldView	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^class TestScaffoldView extends ScaffoldView {$/;"	c
_admin	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^		$_admin = Configure::read('Routing.prefixes');$/;"	v
_backAdmin	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^		$_backAdmin = Configure::read('Routing.prefixes');$/;"	v
expected	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^		$expected = CAKE . 'Test' . DS . 'test_app' . DS . 'Plugin' .$/;"	v
expected	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^		$expected = CAKE . 'Test' . DS . 'test_app' . DS . 'View' . DS . 'Posts' . DS . 'scaffold.form.ctp';$/;"	v
expected	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^		$expected = CAKE . 'Test' . DS . 'test_app' . DS . 'View' . DS .$/;"	v
expected	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^		$expected = CAKE . 'View' . DS . 'Errors' . DS . 'scaffold_error.ctp';$/;"	v
expected	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^		$expected = CAKE . 'View' . DS . 'Scaffolds' . DS . 'form.ctp';$/;"	v
expected	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^		$expected = CAKE . 'View' . DS . 'Scaffolds' . DS . 'index.ctp';$/;"	v
expected	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^		$expected = CAKE . 'View' . DS . 'Scaffolds' . DS . 'view.ctp';$/;"	v
fixtures	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^	public $fixtures = array('core.article', 'core.user', 'core.comment', 'core.join_thing', 'core.tag');$/;"	v
name	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^	public $name = 'ScaffoldMock';$/;"	v
params	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^		$params = array($/;"	v
request	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^		$this->request = new CakeRequest(null, false);$/;"	v
result	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^		$result = $ScaffoldView->testGetFilename('add');$/;"	v
result	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^		$result = $ScaffoldView->testGetFilename('admin_add');$/;"	v
result	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^		$result = $ScaffoldView->testGetFilename('admin_edit');$/;"	v
result	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^		$result = $ScaffoldView->testGetFilename('admin_index');$/;"	v
result	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^		$result = $ScaffoldView->testGetFilename('admin_view');$/;"	v
result	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^		$result = $ScaffoldView->testGetFilename('edit');$/;"	v
result	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^		$result = $ScaffoldView->testGetFilename('error');$/;"	v
result	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^		$result = $ScaffoldView->testGetFilename('index');$/;"	v
result	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^		$result = $ScaffoldView->testGetFilename('view');$/;"	v
result	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^		$result = ob_get_clean();$/;"	v
scaffold	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^	public $scaffold;$/;"	v
setUp	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^	public function setUp() {$/;"	f
tearDown	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^	public function tearDown() {$/;"	f
testAdminEditScaffold	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^	public function testAdminEditScaffold() {$/;"	f
testAdminIndexScaffold	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^	public function testAdminIndexScaffold() {$/;"	f
testEditScaffold	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^	public function testEditScaffold() {$/;"	f
testGetFilename	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^	public function testGetFilename($action) {$/;"	f
testGetViewFileNameWithTheme	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^	public function testGetViewFileNameWithTheme() {$/;"	f
testGetViewFilename	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^	public function testGetViewFilename() {$/;"	f
testIndexScaffold	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^	public function testIndexScaffold() {$/;"	f
testMultiplePrefixScaffold	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^	public function testMultiplePrefixScaffold() {$/;"	f
testViewScaffold	lib/Cake/Test/Case/View/ScaffoldViewTest.php	/^	public function testViewScaffold() {$/;"	f
Controller	lib/Cake/Test/Case/View/ThemeViewTest.php	/^		$this->Controller = new Controller($request);$/;"	v
PostsController	lib/Cake/Test/Case/View/ThemeViewTest.php	/^		$this->PostsController = new ThemePosts2Controller($request);$/;"	v
TestTheme2View	lib/Cake/Test/Case/View/ThemeViewTest.php	/^class TestTheme2View extends ThemeView {$/;"	c
ThemePosts2Controller	lib/Cake/Test/Case/View/ThemeViewTest.php	/^class ThemePosts2Controller extends Controller {$/;"	c
ThemeView	lib/Cake/Test/Case/View/ThemeViewTest.php	/^		$ThemeView = new TestTheme2View($this->Controller);$/;"	v
ThemeView	lib/Cake/Test/Case/View/ThemeViewTest.php	/^		$this->ThemeView = new ThemeView($this->PostsController);$/;"	v
ThemeViewTest	lib/Cake/Test/Case/View/ThemeViewTest.php	/^class ThemeViewTest extends CakeTestCase {$/;"	c
View	lib/Cake/Test/Case/View/ThemeViewTest.php	/^		$View = new TestTheme2View($this->Controller);$/;"	v
View	lib/Cake/Test/Case/View/ThemeViewTest.php	/^		$View = new ThemeView($this->Controller);$/;"	v
end	lib/Cake/Test/Case/View/ThemeViewTest.php	/^		$end = memory_get_usage();$/;"	v
expected	lib/Cake/Test/Case/View/ThemeViewTest.php	/^		$expected = CAKE . 'Test' . DS . 'test_app' . DS . 'View' . DS . 'Layouts' . DS . 'Emails' . DS . 'html' . DS . 'default.ctp';$/;"	v
expected	lib/Cake/Test/Case/View/ThemeViewTest.php	/^		$expected = CAKE . 'Test' . DS . 'test_app' . DS . 'View' . DS . 'Layouts' . DS . 'rss' . DS . 'default.ctp';$/;"	v
expected	lib/Cake/Test/Case/View/ThemeViewTest.php	/^		$expected = CAKE . 'Test' . DS . 'test_app' . DS . 'View' . DS . 'Pages' . DS . 'home.ctp';$/;"	v
expected	lib/Cake/Test/Case/View/ThemeViewTest.php	/^		$expected = CAKE . 'Test' . DS . 'test_app' . DS . 'View' . DS . 'Themed' . DS . 'TestTheme' . DS . 'Layouts' . DS . 'default.ctp';$/;"	v
expected	lib/Cake/Test/Case/View/ThemeViewTest.php	/^		$expected = CAKE . 'Test' . DS . 'test_app' . DS . 'View' . DS . 'Themed' . DS . 'TestTheme' . DS . 'Plugin' . DS . 'TestPlugin' . DS . 'Layouts' . DS . 'plugin_default.ctp';$/;"	v
expected	lib/Cake/Test/Case/View/ThemeViewTest.php	/^		$expected = CAKE . 'Test' . DS . 'test_app' . DS . 'View' . DS . 'Themed' . DS . 'TestTheme' . DS . 'Plugin' . DS . 'TestPlugin' . DS . 'Tests' . DS . 'index.ctp';$/;"	v
expected	lib/Cake/Test/Case/View/ThemeViewTest.php	/^		$expected = CAKE . 'Test' . DS . 'test_app' . DS . 'View' . DS . 'Themed' . DS . 'TestTheme' . DS . 'Posts' . DS . 'index.ctp';$/;"	v
expected	lib/Cake/Test/Case/View/ThemeViewTest.php	/^		$expected = ob_get_clean();$/;"	v
getLayoutFileName	lib/Cake/Test/Case/View/ThemeViewTest.php	/^	public function getLayoutFileName($name = null) {$/;"	f
getViewFileName	lib/Cake/Test/Case/View/ThemeViewTest.php	/^	public function getViewFileName($name = null) {$/;"	f
index	lib/Cake/Test/Case/View/ThemeViewTest.php	/^	public function index() {$/;"	f
name	lib/Cake/Test/Case/View/ThemeViewTest.php	/^	public $name = 'ThemePosts';$/;"	v
renderElement	lib/Cake/Test/Case/View/ThemeViewTest.php	/^	public function renderElement($name, $params = array()) {$/;"	f
request	lib/Cake/Test/Case/View/ThemeViewTest.php	/^		$request = new CakeRequest('posts\/index');$/;"	v
result	lib/Cake/Test/Case/View/ThemeViewTest.php	/^		$result = $ThemeView->getLayoutFileName('default');$/;"	v
result	lib/Cake/Test/Case/View/ThemeViewTest.php	/^		$result = $ThemeView->getLayoutFileName('plugin_default');$/;"	v
result	lib/Cake/Test/Case/View/ThemeViewTest.php	/^		$result = $ThemeView->getLayoutFileName();$/;"	v
result	lib/Cake/Test/Case/View/ThemeViewTest.php	/^		$result = $ThemeView->getViewFileName('\/Posts\/index');$/;"	v
result	lib/Cake/Test/Case/View/ThemeViewTest.php	/^		$result = $ThemeView->getViewFileName('home');$/;"	v
result	lib/Cake/Test/Case/View/ThemeViewTest.php	/^		$result = $ThemeView->getViewFileName('index');$/;"	v
setUp	lib/Cake/Test/Case/View/ThemeViewTest.php	/^	public function setUp() {$/;"	f
start	lib/Cake/Test/Case/View/ThemeViewTest.php	/^		$start = memory_get_usage();$/;"	v
tearDown	lib/Cake/Test/Case/View/ThemeViewTest.php	/^	public function tearDown() {$/;"	f
testGetTemplate	lib/Cake/Test/Case/View/ThemeViewTest.php	/^	public function testGetTemplate() {$/;"	f
testMemoryLeakInPaths	lib/Cake/Test/Case/View/ThemeViewTest.php	/^	public function testMemoryLeakInPaths() {$/;"	f
testMissingLayout	lib/Cake/Test/Case/View/ThemeViewTest.php	/^	public function testMissingLayout() {$/;"	f
testMissingView	lib/Cake/Test/Case/View/ThemeViewTest.php	/^	public function testMissingView() {$/;"	f
testPluginThemedGetTemplate	lib/Cake/Test/Case/View/ThemeViewTest.php	/^	public function testPluginThemedGetTemplate() {$/;"	f
theme	lib/Cake/Test/Case/View/ThemeViewTest.php	/^	public $theme = null;$/;"	v
Controller	lib/Cake/Test/Case/View/ViewTest.php	/^		$Controller = new ViewPostsController();$/;"	v
Controller	lib/Cake/Test/Case/View/ViewTest.php	/^		$this->Controller = new Controller($request);$/;"	v
Helper	lib/Cake/Test/Case/View/ViewTest.php	/^		$Helper = $this->getMock('Helper', array(), array($this->View), 'ElementCallbackMockHtmlHelper');$/;"	v
PostsController	lib/Cake/Test/Case/View/ViewTest.php	/^		$this->PostsController = new ViewPostsController($request);$/;"	v
TestBeforeAfterHelper	lib/Cake/Test/Case/View/ViewTest.php	/^class TestBeforeAfterHelper extends Helper {$/;"	c
TestObjectWithToString	lib/Cake/Test/Case/View/ViewTest.php	/^class TestObjectWithToString {$/;"	c
TestObjectWithoutToString	lib/Cake/Test/Case/View/ViewTest.php	/^class TestObjectWithoutToString {$/;"	c
TestThemeView	lib/Cake/Test/Case/View/ViewTest.php	/^class TestThemeView extends View {$/;"	c
TestView	lib/Cake/Test/Case/View/ViewTest.php	/^class TestView extends View {$/;"	c
ThemeController	lib/Cake/Test/Case/View/ViewTest.php	/^		$this->ThemeController = new Controller($themeRequest);$/;"	v
ThemePostsController	lib/Cake/Test/Case/View/ViewTest.php	/^		$this->ThemePostsController = new ThemePostsController($themeRequest);$/;"	v
ThemePostsController	lib/Cake/Test/Case/View/ViewTest.php	/^class ThemePostsController extends Controller {$/;"	c
ThemeView	lib/Cake/Test/Case/View/ViewTest.php	/^		$ThemeView = new TestThemeView($this->Controller);$/;"	v
ThemeView	lib/Cake/Test/Case/View/ViewTest.php	/^		$this->ThemeView = new View($this->ThemePostsController);$/;"	v
View	lib/Cake/Test/Case/View/ViewTest.php	/^		$View = new TestThemeView($this->ThemeController);$/;"	v
View	lib/Cake/Test/Case/View/ViewTest.php	/^		$View = new TestView($Controller);$/;"	v
View	lib/Cake/Test/Case/View/ViewTest.php	/^		$View = new TestView($this->Controller);$/;"	v
View	lib/Cake/Test/Case/View/ViewTest.php	/^		$View = new TestView($this->PostsController);$/;"	v
View	lib/Cake/Test/Case/View/ViewTest.php	/^		$View = new View($Controller);$/;"	v
View	lib/Cake/Test/Case/View/ViewTest.php	/^		$View = new View($this->PostsController);$/;"	v
View	lib/Cake/Test/Case/View/ViewTest.php	/^		$View = new View($this->ThemeController);$/;"	v
View	lib/Cake/Test/Case/View/ViewTest.php	/^		$this->View = new View($this->PostsController);$/;"	v
ViewPostsController	lib/Cake/Test/Case/View/ViewTest.php	/^class ViewPostsController extends Controller {$/;"	c
ViewTest	lib/Cake/Test/Case/View/ViewTest.php	/^class ViewTest extends CakeTestCase {$/;"	c
__toString	lib/Cake/Test/Case/View/ViewTest.php	/^	public function __toString() {$/;"	f
afterLayout	lib/Cake/Test/Case/View/ViewTest.php	/^	public function afterLayout($layoutFile) {$/;"	f
attached	lib/Cake/Test/Case/View/ViewTest.php	/^		$attached = $View->Helpers->loaded();$/;"	v
beforeLayout	lib/Cake/Test/Case/View/ViewTest.php	/^	public function beforeLayout($viewFile) {$/;"	f
blockValueProvider	lib/Cake/Test/Case/View/ViewTest.php	/^	public static function blockValueProvider() {$/;"	f
cacheText	lib/Cake/Test/Case/View/ViewTest.php	/^		$cacheText = '<!--cachetime:' . (time() + 10) . '-->some cacheText';$/;"	v
cacheText	lib/Cake/Test/Case/View/ViewTest.php	/^		$cacheText = '<!--cachetime:' . time() . '-->some cacheText';$/;"	v
content	lib/Cake/Test/Case/View/ViewTest.php	/^		$content = $this->View->render('extend_element');$/;"	v
content	lib/Cake/Test/Case/View/ViewTest.php	/^		$content = $this->View->render('nested_extends');$/;"	v
content	lib/Cake/Test/Case/View/ViewTest.php	/^		$content = 'This is my view output';$/;"	v
default	lib/Cake/Test/Case/View/ViewTest.php	/^		$default = 'Default';$/;"	v
element	lib/Cake/Test/Case/View/ViewTest.php	/^		$element = 'test_element';$/;"	v
end	lib/Cake/Test/Case/View/ViewTest.php	/^		$end = memory_get_usage();$/;"	v
expected	lib/Cake/Test/Case/View/ViewTest.php	/^		$expected = $pluginPath . 'View' . DS . 'Layouts' . DS . 'default.ctp';$/;"	v
expected	lib/Cake/Test/Case/View/ViewTest.php	/^		$expected = 'Back to the Future';$/;"	v
expected	lib/Cake/Test/Case/View/ViewTest.php	/^		$expected = 'My Title';$/;"	v
expected	lib/Cake/Test/Case/View/ViewTest.php	/^		$expected = 'this is the test element';$/;"	v
expected	lib/Cake/Test/Case/View/ViewTest.php	/^		$expected = <<<TEXT$/;"	v
expected	lib/Cake/Test/Case/View/ViewTest.php	/^		$expected = CAKE . 'Test' . DS . 'test_app' . DS . 'Plugin' . DS . 'TestPlugin' . DS . 'View' . DS . 'Layouts' . DS . 'default.ctp';$/;"	v
expected	lib/Cake/Test/Case/View/ViewTest.php	/^		$expected = CAKE . 'Test' . DS . 'test_app' . DS . 'Plugin' . DS . 'TestPlugin' . DS . 'View' . DS . 'Tests' . DS . 'index.ctp';$/;"	v
expected	lib/Cake/Test/Case/View/ViewTest.php	/^		$expected = CAKE . 'Test' . DS . 'test_app' . DS . 'Plugin' . DS . 'TestPlugin' .$/;"	v
expected	lib/Cake/Test/Case/View/ViewTest.php	/^		$expected = CAKE . 'Test' . DS . 'test_app' . DS . 'View' . DS . 'Layouts' . DS . 'Emails' . DS . 'html' . DS . 'default.ctp';$/;"	v
expected	lib/Cake/Test/Case/View/ViewTest.php	/^		$expected = CAKE . 'Test' . DS . 'test_app' . DS . 'View' . DS . 'Layouts' . DS . 'default.ctp';$/;"	v
expected	lib/Cake/Test/Case/View/ViewTest.php	/^		$expected = CAKE . 'Test' . DS . 'test_app' . DS . 'View' . DS . 'Layouts' . DS . 'rss' . DS . 'default.ctp';$/;"	v
expected	lib/Cake/Test/Case/View/ViewTest.php	/^		$expected = CAKE . 'Test' . DS . 'test_app' . DS . 'View' . DS . 'Pages' . DS . 'home.ctp';$/;"	v
expected	lib/Cake/Test/Case/View/ViewTest.php	/^		$expected = CAKE . 'Test' . DS . 'test_app' . DS . 'View' . DS . 'Pages' . DS . 'page.home.ctp';$/;"	v
expected	lib/Cake/Test/Case/View/ViewTest.php	/^		$expected = CAKE . 'Test' . DS . 'test_app' . DS . 'View' . DS . 'Posts' . DS . 'index.ctp';$/;"	v
expected	lib/Cake/Test/Case/View/ViewTest.php	/^		$expected = CAKE . 'Test' . DS . 'test_app' . DS . 'View' . DS . 'Themed' . DS . 'TestTheme' . DS . 'Layouts' . DS . 'default.ctp';$/;"	v
expected	lib/Cake/Test/Case/View/ViewTest.php	/^		$expected = CAKE . 'Test' . DS . 'test_app' . DS . 'View' . DS . 'Themed' . DS . 'TestTheme' . DS . 'Plugin' . DS . 'TestPlugin' . DS . 'Layouts' . DS . 'plugin_default.ctp';$/;"	v
expected	lib/Cake/Test/Case/View/ViewTest.php	/^		$expected = CAKE . 'Test' . DS . 'test_app' . DS . 'View' . DS . 'Themed' . DS . 'TestTheme' . DS . 'Plugin' . DS . 'TestPlugin' . DS . 'Tests' . DS . 'index.ctp';$/;"	v
expected	lib/Cake/Test/Case/View/ViewTest.php	/^		$expected = CAKE . 'Test' . DS . 'test_app' . DS . 'View' . DS . 'Themed' . DS . 'TestTheme' . DS . 'Posts' . DS . 'index.ctp';$/;"	v
expected	lib/Cake/Test/Case/View/ViewTest.php	/^		$expected = CakePlugin::path('TestPlugin') . 'View' . DS . 'Layouts' . DS . 'default.ctp';$/;"	v
expected	lib/Cake/Test/Case/View/ViewTest.php	/^		$expected = CakePlugin::path('TestPlugin') . 'View' . DS . 'Tests' . DS . 'index.ctp';$/;"	v
expected	lib/Cake/Test/Case/View/ViewTest.php	/^		$expected = array($/;"	v
expected	lib/Cake/Test/Case/View/ViewTest.php	/^		$expected = array('Html', 'Form', 'Number', 'PluggedHelper');$/;"	v
expected	lib/Cake/Test/Case/View/ViewTest.php	/^		$expected = array(3 => 'three', 4 => 'four', 1 => 'one', 2 => 'two');$/;"	v
expected	lib/Cake/Test/Case/View/ViewTest.php	/^		$expected = array_merge(App::path('View'), App::core('View'), App::core('Console\/Templates\/skel\/View'));$/;"	v
f	lib/Cake/Test/Case/View/ViewTest.php	/^		$f = fopen($path, 'w+');$/;"	v
fixtures	lib/Cake/Test/Case/View/ViewTest.php	/^	public $fixtures = array('core.user', 'core.post');$/;"	v
getLayoutFileName	lib/Cake/Test/Case/View/ViewTest.php	/^	public function getLayoutFileName($name = null) {$/;"	f
getViewFileName	lib/Cake/Test/Case/View/ViewTest.php	/^	public function getViewFileName($name = null) {$/;"	f
index	lib/Cake/Test/Case/View/ViewTest.php	/^	public function index() {$/;"	f
keys	lib/Cake/Test/Case/View/ViewTest.php	/^		$keys = array('key1', 'key2');$/;"	v
name	lib/Cake/Test/Case/View/ViewTest.php	/^	public $name = 'Posts';$/;"	v
nocache_multiple_element	lib/Cake/Test/Case/View/ViewTest.php	/^	public function nocache_multiple_element() {$/;"	f
object	lib/Cake/Test/Case/View/ViewTest.php	/^		$object = new TestObjectWithoutToString();$/;"	v
objectWithToString	lib/Cake/Test/Case/View/ViewTest.php	/^		$objectWithToString = new TestObjectWithToString();$/;"	v
objectWithToString	lib/Cake/Test/Case/View/ViewTest.php	/^		$objectWithToString = new TestObjectWithoutToString();$/;"	v
path	lib/Cake/Test/Case/View/ViewTest.php	/^		$path = CACHE . 'views' . DS . 'view_cache_' . $view;$/;"	v
paths	lib/Cake/Test/Case/View/ViewTest.php	/^		$paths = $View->paths('TestPlugin');$/;"	v
paths	lib/Cake/Test/Case/View/ViewTest.php	/^		$paths = $View->paths();$/;"	v
paths	lib/Cake/Test/Case/View/ViewTest.php	/^	public function paths($plugin = null, $cached = true) {$/;"	f
pluginPath	lib/Cake/Test/Case/View/ViewTest.php	/^		$pluginPath = CakePlugin::path('TestPlugin');$/;"	v
property	lib/Cake/Test/Case/View/ViewTest.php	/^		$this->property = 'Valuation';$/;"	v
property	lib/Cake/Test/Case/View/ViewTest.php	/^	public $property = '';$/;"	v
renderElement	lib/Cake/Test/Case/View/ViewTest.php	/^	public function renderElement($name, $params = array()) {$/;"	f
request	lib/Cake/Test/Case/View/ViewTest.php	/^		$request = $this->getMock('CakeRequest');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $ThemeView->getLayoutFileName('default');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $ThemeView->getLayoutFileName('plugin_default');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $ThemeView->getLayoutFileName();$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $ThemeView->getViewFileName('\/Posts\/index');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $ThemeView->getViewFileName('home');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $ThemeView->getViewFileName('index');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $View->element($element);$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $View->element('test_element', array('param' => 'one', 'foo' => 'two'), array('cache' => true));$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $View->element('test_element', array('ram' => 'val', 'test' => array('foo', 'bar')));$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $View->element('test_element', array(), array('cache' => true));$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $View->element('type_check', array('form' => 'string'), array('callbacks' => true));$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $View->element('type_check', array(), array('callbacks' => true));$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $View->getLayoutFileName('TestPlugin.default');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $View->getLayoutFileName('default');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $View->getLayoutFileName();$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $View->getViewFileName('..\/Elements\/test_element');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $View->getViewFileName('..\/Posts\/index');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $View->getViewFileName('..\/Themed\/TestTheme\/Posts\/index');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $View->getViewFileName('TestPlugin.home');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $View->getViewFileName('TestPlugin.index');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $View->getViewFileName('\/Pages\/home');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $View->getViewFileName('\/Posts\/index');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $View->getViewFileName('home');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $View->getViewFileName('index');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $View->getViewFileName('page.home');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $View->render('alt_ext', false);$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $View->render('helper_overwrite', false);$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $View->render('index');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $View->render('index', false);$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $View->render();$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $View->render(false, 'flash');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $View->renderCache($path, '+1 second');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $View->renderLayout($content, 'default');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $this->View->element('TestPlugin.plugin_element');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $this->View->element('plugin_element', array(), array('plugin' => 'TestPlugin'));$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $this->View->element('plugin_element', array(), array('plugin' => 'test_plugin'));$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $this->View->element('test_element');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $this->View->element('test_plugin_element');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $this->View->elementExists('TestPlugin.element');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $this->View->elementExists('TestPlugin.plugin_element');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $this->View->elementExists('non_existent_element');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $this->View->elementExists('test_element');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $this->View->elementExists('test_plugin_element');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $this->View->fetch('test');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $this->View->fetch('test', 'This should not be returned');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $this->View->fetch('testBlock');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $this->View->fetch('testWithDecimal');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $this->View->fetch('testWithNull');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $this->View->fetch('testWithObjectWithToString');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $this->View->fetch('title', $default);$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $this->View->get('title', $default);$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $this->View->render('extend_with_element');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = $this->View->uuid('form', array('controller' => 'posts', 'action' => 'index'));$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = Cache::read('element__test_element_cache_callbacks', 'test_view');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = Cache::read('element__test_element_cache_callbacks_param_foo', 'test_view');$/;"	v
result	lib/Cake/Test/Case/View/ViewTest.php	/^		$result = Cache::read('element_custom_key', 'test_view');$/;"	v
scripts	lib/Cake/Test/Case/View/ViewTest.php	/^	public function scripts() {$/;"	f
setUp	lib/Cake/Test/Case/View/ViewTest.php	/^	public function setUp() {$/;"	f
start	lib/Cake/Test/Case/View/ViewTest.php	/^		$start = memory_get_usage();$/;"	v
tearDown	lib/Cake/Test/Case/View/ViewTest.php	/^	public function tearDown() {$/;"	f
test2	lib/Cake/Test/Case/View/ViewTest.php	/^		$test2 = 'more data';$/;"	v
test3	lib/Cake/Test/Case/View/ViewTest.php	/^		$test3 = 'even more data';$/;"	v
testAddInlineScripts	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testAddInlineScripts() {$/;"	f
testAfterLayout	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testAfterLayout() {$/;"	f
testAltBadExt	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testAltBadExt() {$/;"	f
testAltExt	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testAltExt() {$/;"	f
testBadExt	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testBadExt() {$/;"	f
testBeforeLayout	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testBeforeLayout() {$/;"	f
testBlockAppend	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testBlockAppend($value) {$/;"	f
testBlockAppendObjectWithoutToString	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testBlockAppendObjectWithoutToString() {$/;"	f
testBlockAppendUndefined	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testBlockAppendUndefined() {$/;"	f
testBlockCapture	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testBlockCapture() {$/;"	f
testBlockCaptureAppend	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testBlockCaptureAppend() {$/;"	f
testBlockCaptureStartIfEmpty	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testBlockCaptureStartIfEmpty() {$/;"	f
testBlockCaptureStartStartIfEmpty	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testBlockCaptureStartStartIfEmpty() {$/;"	f
testBlockDefaultValue	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testBlockDefaultValue() {$/;"	f
testBlockPrepend	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testBlockPrepend($value) {$/;"	f
testBlockPrependObjectWithoutToString	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testBlockPrependObjectWithoutToString() {$/;"	f
testBlockPrependUndefined	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testBlockPrependUndefined() {$/;"	f
testBlockReset	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testBlockReset() {$/;"	f
testBlockSet	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testBlockSet() {$/;"	f
testBlockSetDecimal	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testBlockSetDecimal() {$/;"	f
testBlockSetNull	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testBlockSetNull() {$/;"	f
testBlockSetObjectWithToString	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testBlockSetObjectWithToString() {$/;"	f
testBlockSetObjectWithoutToString	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testBlockSetObjectWithoutToString() {$/;"	f
testBlocks	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testBlocks() {$/;"	f
testCamelCasePluginGetTemplate	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testCamelCasePluginGetTemplate() {$/;"	f
testElement	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testElement() {$/;"	f
testElementCache	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testElementCache() {$/;"	f
testElementCacheHelperNoCache	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testElementCacheHelperNoCache() {$/;"	f
testElementCallbacks	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testElementCallbacks() {$/;"	f
testElementCtpFallback	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testElementCtpFallback() {$/;"	f
testElementExists	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testElementExists() {$/;"	f
testElementInexistent	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testElementInexistent() {$/;"	f
testElementInexistent2	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testElementInexistent2() {$/;"	f
testElementInexistent3	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testElementInexistent3() {$/;"	f
testElementParamsDontOverwriteHelpers	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testElementParamsDontOverwriteHelpers() {$/;"	f
testExceptionOnOpenBlock	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testExceptionOnOpenBlock() {$/;"	f
testExtendElement	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testExtendElement() {$/;"	f
testExtendLoop	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testExtendLoop() {$/;"	f
testExtendMissingElement	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testExtendMissingElement() {$/;"	f
testExtendNested	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testExtendNested() {$/;"	f
testExtendSelf	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testExtendSelf() {$/;"	f
testExtendWithElementBeforeExtend	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testExtendWithElementBeforeExtend() {$/;"	f
testGetLayoutFileName	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testGetLayoutFileName() {$/;"	f
testGetLayoutFileNamePlugin	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testGetLayoutFileNamePlugin() {$/;"	f
testGetTemplate	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testGetTemplate() {$/;"	f
testGetViewFileNameSubdirWithPluginAndViewPath	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testGetViewFileNameSubdirWithPluginAndViewPath() {$/;"	f
testGetViewFileNames	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testGetViewFileNames() {$/;"	f
testHelperCallbackTriggering	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testHelperCallbackTriggering() {$/;"	f
testLazyLoadHelpers	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testLazyLoadHelpers() {$/;"	f
testLoadHelpers	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testLoadHelpers() {$/;"	f
testMagicGet	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testMagicGet() {$/;"	f
testMemoryLeakInPaths	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testMemoryLeakInPaths() {$/;"	f
testMissingLayout	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testMissingLayout() {$/;"	f
testMissingView	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testMissingView() {$/;"	f
testNestedBlocks	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testNestedBlocks() {$/;"	f
testPluginGetTemplate	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testPluginGetTemplate() {$/;"	f
testPluginPathGeneration	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testPluginPathGeneration() {$/;"	f
testPluginThemedGetTemplate	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testPluginThemedGetTemplate() {$/;"	f
testPropertySettingMagicGet	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testPropertySettingMagicGet() {$/;"	f
testRender	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testRender() {$/;"	f
testRenderCache	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testRenderCache() {$/;"	f
testRenderLoadHelper	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testRenderLoadHelper() {$/;"	f
testRenderStrippingNoCacheTagsOnlyCacheCheck	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testRenderStrippingNoCacheTagsOnlyCacheCheck() {$/;"	f
testRenderStrippingNoCacheTagsOnlyCacheHelper	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testRenderStrippingNoCacheTagsOnlyCacheHelper() {$/;"	f
testRenderUsingViewProperty	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testRenderUsingViewProperty() {$/;"	f
testSet	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testSet() {$/;"	f
testStartBlocksTwice	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testStartBlocksTwice() {$/;"	f
testUUIDGeneration	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testUUIDGeneration() {$/;"	f
testViewFileName	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testViewFileName() {$/;"	f
testViewVarDefaultValue	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testViewVarDefaultValue() {$/;"	f
testViewVarOverwritingLocalHelperVar	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testViewVarOverwritingLocalHelperVar() {$/;"	f
testViewVars	lib/Cake/Test/Case/View/ViewTest.php	/^	public function testViewVars() {$/;"	f
theme	lib/Cake/Test/Case/View/ViewTest.php	/^	public $theme = null;$/;"	v
themeRequest	lib/Cake/Test/Case/View/ViewTest.php	/^		$themeRequest = new CakeRequest('posts\/index');$/;"	v
uses	lib/Cake/Test/Case/View/ViewTest.php	/^	public $uses = null;$/;"	v
values	lib/Cake/Test/Case/View/ViewTest.php	/^		$values = array('value1', 'value2');$/;"	v
view	lib/Cake/Test/Case/View/ViewTest.php	/^		$view = 'test_view';$/;"	v
Controller	lib/Cake/Test/Case/View/XmlViewTest.php	/^		$Controller = new Controller($Request, $Response);$/;"	v
Request	lib/Cake/Test/Case/View/XmlViewTest.php	/^		$Request = new CakeRequest();$/;"	v
Response	lib/Cake/Test/Case/View/XmlViewTest.php	/^		$Response = new CakeResponse();$/;"	v
View	lib/Cake/Test/Case/View/XmlViewTest.php	/^		$View = new XmlView($Controller);$/;"	v
XmlViewTest	lib/Cake/Test/Case/View/XmlViewTest.php	/^class XmlViewTest extends CakeTestCase {$/;"	c
data	lib/Cake/Test/Case/View/XmlViewTest.php	/^		$data = array($/;"	v
data	lib/Cake/Test/Case/View/XmlViewTest.php	/^		$data = array('no' => 'nope', 'user' => 'fake', 'list' => array('item1', 'item2'));$/;"	v
data	lib/Cake/Test/Case/View/XmlViewTest.php	/^		$data = array('original_name' => 'my epic name', 'user' => 'fake', 'list' => array('item1', 'item2'));$/;"	v
data	lib/Cake/Test/Case/View/XmlViewTest.php	/^		$data = array('users' => array('user' => array('user1', 'user2')));$/;"	v
expected	lib/Cake/Test/Case/View/XmlViewTest.php	/^		$expected = Xml::build($expected)->asXML();$/;"	v
expected	lib/Cake/Test/Case/View/XmlViewTest.php	/^		$expected = Xml::build(array('custom_name' => array('users' => $data)))->asXML();$/;"	v
expected	lib/Cake/Test/Case/View/XmlViewTest.php	/^		$expected = Xml::build(array('response' => array('users' => $data)))->asXML();$/;"	v
expected	lib/Cake/Test/Case/View/XmlViewTest.php	/^		$expected = array($/;"	v
output	lib/Cake/Test/Case/View/XmlViewTest.php	/^		$output = $View->render('index');$/;"	v
output	lib/Cake/Test/Case/View/XmlViewTest.php	/^		$output = $View->render(false);$/;"	v
setUp	lib/Cake/Test/Case/View/XmlViewTest.php	/^	public function setUp() {$/;"	f
testRenderSerializeNoHelpers	lib/Cake/Test/Case/View/XmlViewTest.php	/^	public function testRenderSerializeNoHelpers() {$/;"	f
testRenderWithView	lib/Cake/Test/Case/View/XmlViewTest.php	/^	public function testRenderWithView() {$/;"	f
testRenderWithoutView	lib/Cake/Test/Case/View/XmlViewTest.php	/^	public function testRenderWithoutView() {$/;"	f
testRenderWithoutViewMultiple	lib/Cake/Test/Case/View/XmlViewTest.php	/^	public function testRenderWithoutViewMultiple() {$/;"	f
testRenderWithoutViewMultipleAndAlias	lib/Cake/Test/Case/View/XmlViewTest.php	/^	public function testRenderWithoutViewMultipleAndAlias() {$/;"	f
AccountFixture	lib/Cake/Test/Fixture/AccountFixture.php	/^class AccountFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/AccountFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/AccountFixture.php	/^	public $records = array($/;"	v
table	lib/Cake/Test/Fixture/AccountFixture.php	/^	public $table = 'Accounts';$/;"	v
AcoActionFixture	lib/Cake/Test/Fixture/AcoActionFixture.php	/^class AcoActionFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/AcoActionFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/AcoActionFixture.php	/^	public $records = array();$/;"	v
AcoFixture	lib/Cake/Test/Fixture/AcoFixture.php	/^class AcoFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/AcoFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/AcoFixture.php	/^	public $records = array($/;"	v
AcoTwoFixture	lib/Cake/Test/Fixture/AcoTwoFixture.php	/^class AcoTwoFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/AcoTwoFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/AcoTwoFixture.php	/^	public $records = array($/;"	v
AdFixture	lib/Cake/Test/Fixture/AdFixture.php	/^class AdFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/AdFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/AdFixture.php	/^	public $records = array($/;"	v
AdvertisementFixture	lib/Cake/Test/Fixture/AdvertisementFixture.php	/^class AdvertisementFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/AdvertisementFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/AdvertisementFixture.php	/^	public $records = array($/;"	v
AfterTreeFixture	lib/Cake/Test/Fixture/AfterTreeFixture.php	/^class AfterTreeFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/AfterTreeFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/AfterTreeFixture.php	/^	public $records = array($/;"	v
AnotherArticleFixture	lib/Cake/Test/Fixture/AnotherArticleFixture.php	/^class AnotherArticleFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/AnotherArticleFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/AnotherArticleFixture.php	/^	public $records = array($/;"	v
AppleFixture	lib/Cake/Test/Fixture/AppleFixture.php	/^class AppleFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/AppleFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/AppleFixture.php	/^	public $records = array($/;"	v
ArmorFixture	lib/Cake/Test/Fixture/ArmorFixture.php	/^class ArmorFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/ArmorFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/ArmorFixture.php	/^	public $records = array($/;"	v
useDbConfig	lib/Cake/Test/Fixture/ArmorFixture.php	/^	public $useDbConfig = 'test2';$/;"	v
ArmorsPlayerFixture	lib/Cake/Test/Fixture/ArmorsPlayerFixture.php	/^class ArmorsPlayerFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/ArmorsPlayerFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/ArmorsPlayerFixture.php	/^	public $records = array($/;"	v
useDbConfig	lib/Cake/Test/Fixture/ArmorsPlayerFixture.php	/^	public $useDbConfig = 'test_database_three';$/;"	v
AroFixture	lib/Cake/Test/Fixture/AroFixture.php	/^class AroFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/AroFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/AroFixture.php	/^	public $records = array($/;"	v
AroTwoFixture	lib/Cake/Test/Fixture/AroTwoFixture.php	/^class AroTwoFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/AroTwoFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/AroTwoFixture.php	/^	public $records = array($/;"	v
ArosAcoFixture	lib/Cake/Test/Fixture/ArosAcoFixture.php	/^class ArosAcoFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/ArosAcoFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/ArosAcoFixture.php	/^	public $records = array();$/;"	v
ArosAcoTwoFixture	lib/Cake/Test/Fixture/ArosAcoTwoFixture.php	/^class ArosAcoTwoFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/ArosAcoTwoFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/ArosAcoTwoFixture.php	/^	public $records = array($/;"	v
ArticleFeaturedFixture	lib/Cake/Test/Fixture/ArticleFeaturedFixture.php	/^class ArticleFeaturedFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/ArticleFeaturedFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/ArticleFeaturedFixture.php	/^	public $records = array($/;"	v
ArticleFeaturedsTagsFixture	lib/Cake/Test/Fixture/ArticleFeaturedsTagsFixture.php	/^class ArticleFeaturedsTagsFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/ArticleFeaturedsTagsFixture.php	/^	public $fields = array($/;"	v
ArticleFixture	lib/Cake/Test/Fixture/ArticleFixture.php	/^class ArticleFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/ArticleFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/ArticleFixture.php	/^	public $records = array($/;"	v
ArticlesTagFixture	lib/Cake/Test/Fixture/ArticlesTagFixture.php	/^class ArticlesTagFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/ArticlesTagFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/ArticlesTagFixture.php	/^	public $records = array($/;"	v
AssertTagsTestCase	lib/Cake/Test/Fixture/AssertTagsTestCase.php	/^class AssertTagsTestCase extends CakeTestCase {$/;"	c
input	lib/Cake/Test/Fixture/AssertTagsTestCase.php	/^		$input = "<a href='\/test.html' class='active'>My link<\/a>";$/;"	v
input	lib/Cake/Test/Fixture/AssertTagsTestCase.php	/^		$input = '<a href="\/test.html" class="active">My link<\/a>';$/;"	v
input	lib/Cake/Test/Fixture/AssertTagsTestCase.php	/^		$input = '<p><strong>' . $value . '<\/strong><\/p>';$/;"	v
input	lib/Cake/Test/Fixture/AssertTagsTestCase.php	/^		$input = '<p><strong>' . $value . '<\/strong><\/p><p id="' . $value . '"><strong>' . $value . '<\/strong><\/p>';$/;"	v
input	lib/Cake/Test/Fixture/AssertTagsTestCase.php	/^		$input = '<p><strong>' . $value . '<\/strong><\/p><p><strong>' . $value . '<\/strong><\/p>';$/;"	v
pattern	lib/Cake/Test/Fixture/AssertTagsTestCase.php	/^		$pattern = array($/;"	v
testAssertTagsQuotes	lib/Cake/Test/Fixture/AssertTagsTestCase.php	/^	public function testAssertTagsQuotes() {$/;"	f
testBadAssertTags	lib/Cake/Test/Fixture/AssertTagsTestCase.php	/^	public function testBadAssertTags() {$/;"	f
testBadAssertTags2	lib/Cake/Test/Fixture/AssertTagsTestCase.php	/^	public function testBadAssertTags2() {$/;"	f
testNumericValuesInExpectationForAssertTags	lib/Cake/Test/Fixture/AssertTagsTestCase.php	/^	public function testNumericValuesInExpectationForAssertTags() {$/;"	f
value	lib/Cake/Test/Fixture/AssertTagsTestCase.php	/^		$value = 220985;$/;"	v
AttachmentFixture	lib/Cake/Test/Fixture/AttachmentFixture.php	/^class AttachmentFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/AttachmentFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/AttachmentFixture.php	/^	public $records = array($/;"	v
AuthUserCustomFieldFixture	lib/Cake/Test/Fixture/AuthUserCustomFieldFixture.php	/^class AuthUserCustomFieldFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/AuthUserCustomFieldFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/AuthUserCustomFieldFixture.php	/^	public $records = array($/;"	v
AuthUserFixture	lib/Cake/Test/Fixture/AuthUserFixture.php	/^class AuthUserFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/AuthUserFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/AuthUserFixture.php	/^	public $records = array($/;"	v
AuthorFixture	lib/Cake/Test/Fixture/AuthorFixture.php	/^class AuthorFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/AuthorFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/AuthorFixture.php	/^	public $records = array($/;"	v
BakeArticleFixture	lib/Cake/Test/Fixture/BakeArticleFixture.php	/^class BakeArticleFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/BakeArticleFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/BakeArticleFixture.php	/^	public $records = array();$/;"	v
BakeArticlesBakeTagFixture	lib/Cake/Test/Fixture/BakeArticlesBakeTagFixture.php	/^class BakeArticlesBakeTagFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/BakeArticlesBakeTagFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/BakeArticlesBakeTagFixture.php	/^	public $records = array();$/;"	v
BakeCommentFixture	lib/Cake/Test/Fixture/BakeCommentFixture.php	/^class BakeCommentFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/BakeCommentFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/BakeCommentFixture.php	/^	public $records = array();$/;"	v
BakeTagFixture	lib/Cake/Test/Fixture/BakeTagFixture.php	/^class BakeTagFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/BakeTagFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/BakeTagFixture.php	/^	public $records = array();$/;"	v
BasketFixture	lib/Cake/Test/Fixture/BasketFixture.php	/^class BasketFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/BasketFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/BasketFixture.php	/^	public $records = array($/;"	v
BidFixture	lib/Cake/Test/Fixture/BidFixture.php	/^class BidFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/BidFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/BidFixture.php	/^	public $records = array($/;"	v
BiddingFixture	lib/Cake/Test/Fixture/BiddingFixture.php	/^class BiddingFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/BiddingFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/BiddingFixture.php	/^	public $records = array($/;"	v
BiddingMessageFixture	lib/Cake/Test/Fixture/BiddingMessageFixture.php	/^class BiddingMessageFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/BiddingMessageFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/BiddingMessageFixture.php	/^	public $records = array($/;"	v
BinaryTestFixture	lib/Cake/Test/Fixture/BinaryTestFixture.php	/^class BinaryTestFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/BinaryTestFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/BinaryTestFixture.php	/^	public $records = array();$/;"	v
BookFixture	lib/Cake/Test/Fixture/BookFixture.php	/^class BookFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/BookFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/BookFixture.php	/^	public $records = array($/;"	v
CacheTestModelFixture	lib/Cake/Test/Fixture/CacheTestModelFixture.php	/^class CacheTestModelFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/CacheTestModelFixture.php	/^	public $fields = array($/;"	v
CakeSessionFixture	lib/Cake/Test/Fixture/CakeSessionFixture.php	/^class CakeSessionFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/CakeSessionFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/CakeSessionFixture.php	/^	public $records = array();$/;"	v
CallbackFixture	lib/Cake/Test/Fixture/CallbackFixture.php	/^class CallbackFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/CallbackFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/CallbackFixture.php	/^	public $records = array($/;"	v
CampaignFixture	lib/Cake/Test/Fixture/CampaignFixture.php	/^class CampaignFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/CampaignFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/CampaignFixture.php	/^	public $records = array($/;"	v
CategoryFixture	lib/Cake/Test/Fixture/CategoryFixture.php	/^class CategoryFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/CategoryFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/CategoryFixture.php	/^	public $records = array($/;"	v
CategoryThreadFixture	lib/Cake/Test/Fixture/CategoryThreadFixture.php	/^class CategoryThreadFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/CategoryThreadFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/CategoryThreadFixture.php	/^	public $records = array($/;"	v
CdFixture	lib/Cake/Test/Fixture/CdFixture.php	/^class CdFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/CdFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/CdFixture.php	/^	public $records = array($/;"	v
CommentFixture	lib/Cake/Test/Fixture/CommentFixture.php	/^class CommentFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/CommentFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/CommentFixture.php	/^	public $records = array($/;"	v
ContentAccountFixture	lib/Cake/Test/Fixture/ContentAccountFixture.php	/^class ContentAccountFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/ContentAccountFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/ContentAccountFixture.php	/^	public $records = array($/;"	v
table	lib/Cake/Test/Fixture/ContentAccountFixture.php	/^	public $table = 'ContentAccounts';$/;"	v
ContentFixture	lib/Cake/Test/Fixture/ContentFixture.php	/^class ContentFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/ContentFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/ContentFixture.php	/^	public $records = array($/;"	v
table	lib/Cake/Test/Fixture/ContentFixture.php	/^	public $table = 'Content';$/;"	v
CounterCachePostFixture	lib/Cake/Test/Fixture/CounterCachePostFixture.php	/^class CounterCachePostFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/CounterCachePostFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/CounterCachePostFixture.php	/^	public $records = array($/;"	v
CounterCachePostNonstandardPrimaryKeyFixture	lib/Cake/Test/Fixture/CounterCachePostNonstandardPrimaryKeyFixture.php	/^class CounterCachePostNonstandardPrimaryKeyFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/CounterCachePostNonstandardPrimaryKeyFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/CounterCachePostNonstandardPrimaryKeyFixture.php	/^	public $records = array($/;"	v
CounterCacheUserFixture	lib/Cake/Test/Fixture/CounterCacheUserFixture.php	/^class CounterCacheUserFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/CounterCacheUserFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/CounterCacheUserFixture.php	/^	public $records = array($/;"	v
CounterCacheUserNonstandardPrimaryKeyFixture	lib/Cake/Test/Fixture/CounterCacheUserNonstandardPrimaryKeyFixture.php	/^class CounterCacheUserNonstandardPrimaryKeyFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/CounterCacheUserNonstandardPrimaryKeyFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/CounterCacheUserNonstandardPrimaryKeyFixture.php	/^	public $records = array($/;"	v
DataTestFixture	lib/Cake/Test/Fixture/DataTestFixture.php	/^class DataTestFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/DataTestFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/DataTestFixture.php	/^	public $records = array($/;"	v
DatatypeFixture	lib/Cake/Test/Fixture/DatatypeFixture.php	/^class DatatypeFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/DatatypeFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/DatatypeFixture.php	/^	public $records = array($/;"	v
DependencyFixture	lib/Cake/Test/Fixture/DependencyFixture.php	/^class DependencyFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/DependencyFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/DependencyFixture.php	/^	public $records = array($/;"	v
DeviceFixture	lib/Cake/Test/Fixture/DeviceFixture.php	/^class DeviceFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/DeviceFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/DeviceFixture.php	/^	public $records = array($/;"	v
DeviceTypeCategoryFixture	lib/Cake/Test/Fixture/DeviceTypeCategoryFixture.php	/^class DeviceTypeCategoryFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/DeviceTypeCategoryFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/DeviceTypeCategoryFixture.php	/^	public $records = array($/;"	v
DeviceTypeFixture	lib/Cake/Test/Fixture/DeviceTypeFixture.php	/^class DeviceTypeFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/DeviceTypeFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/DeviceTypeFixture.php	/^	public $records = array($/;"	v
DocumentDirectoryFixture	lib/Cake/Test/Fixture/DocumentDirectoryFixture.php	/^class DocumentDirectoryFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/DocumentDirectoryFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/DocumentDirectoryFixture.php	/^	public $records = array($/;"	v
DocumentFixture	lib/Cake/Test/Fixture/DocumentFixture.php	/^class DocumentFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/DocumentFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/DocumentFixture.php	/^	public $records = array($/;"	v
DomainFixture	lib/Cake/Test/Fixture/DomainFixture.php	/^class DomainFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/DomainFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/DomainFixture.php	/^	public $records = array($/;"	v
DomainsSiteFixture	lib/Cake/Test/Fixture/DomainsSiteFixture.php	/^class DomainsSiteFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/DomainsSiteFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/DomainsSiteFixture.php	/^	public $records = array($/;"	v
ExteriorTypeCategoryFixture	lib/Cake/Test/Fixture/ExteriorTypeCategoryFixture.php	/^class ExteriorTypeCategoryFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/ExteriorTypeCategoryFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/ExteriorTypeCategoryFixture.php	/^	public $records = array($/;"	v
FeatureSetFixture	lib/Cake/Test/Fixture/FeatureSetFixture.php	/^class FeatureSetFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/FeatureSetFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/FeatureSetFixture.php	/^	public $records = array($/;"	v
FeaturedFixture	lib/Cake/Test/Fixture/FeaturedFixture.php	/^class FeaturedFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/FeaturedFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/FeaturedFixture.php	/^	public $records = array($/;"	v
FilmFileFixture	lib/Cake/Test/Fixture/FilmFileFixture.php	/^class FilmFileFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/FilmFileFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/FilmFileFixture.php	/^	public $records = array($/;"	v
FixturizedTestCase	lib/Cake/Test/Fixture/FixturizedTestCase.php	/^class FixturizedTestCase extends CakeTestCase {$/;"	c
fixtures	lib/Cake/Test/Fixture/FixturizedTestCase.php	/^	public $fixtures = array('core.category');$/;"	v
testFixtureLoadOnDemand	lib/Cake/Test/Fixture/FixturizedTestCase.php	/^	public function testFixtureLoadOnDemand() {$/;"	f
testFixturePresent	lib/Cake/Test/Fixture/FixturizedTestCase.php	/^	public function testFixturePresent() {$/;"	f
testSkipIfFalse	lib/Cake/Test/Fixture/FixturizedTestCase.php	/^	public function testSkipIfFalse() {$/;"	f
testSkipIfTrue	lib/Cake/Test/Fixture/FixturizedTestCase.php	/^	public function testSkipIfTrue() {$/;"	f
testThrowException	lib/Cake/Test/Fixture/FixturizedTestCase.php	/^	public function testThrowException() {$/;"	f
FlagTreeFixture	lib/Cake/Test/Fixture/FlagTreeFixture.php	/^class FlagTreeFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/FlagTreeFixture.php	/^	public $fields = array($/;"	v
FruitFixture	lib/Cake/Test/Fixture/FruitFixture.php	/^class FruitFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/FruitFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/FruitFixture.php	/^	public $records = array($/;"	v
FruitsUuidTagFixture	lib/Cake/Test/Fixture/FruitsUuidTagFixture.php	/^class FruitsUuidTagFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/FruitsUuidTagFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/FruitsUuidTagFixture.php	/^	public $records = array($/;"	v
GroupUpdateAllFixture	lib/Cake/Test/Fixture/GroupUpdateAllFixture.php	/^class GroupUpdateAllFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/GroupUpdateAllFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/GroupUpdateAllFixture.php	/^	public $records = array($/;"	v
table	lib/Cake/Test/Fixture/GroupUpdateAllFixture.php	/^	public $table = 'group_update_all';$/;"	v
GuildFixture	lib/Cake/Test/Fixture/GuildFixture.php	/^class GuildFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/GuildFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/GuildFixture.php	/^	public $records = array($/;"	v
GuildsPlayerFixture	lib/Cake/Test/Fixture/GuildsPlayerFixture.php	/^class GuildsPlayerFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/GuildsPlayerFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/GuildsPlayerFixture.php	/^	public $records = array($/;"	v
useDbConfig	lib/Cake/Test/Fixture/GuildsPlayerFixture.php	/^	public $useDbConfig = 'test2';$/;"	v
HomeFixture	lib/Cake/Test/Fixture/HomeFixture.php	/^class HomeFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/HomeFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/HomeFixture.php	/^	public $records = array($/;"	v
ImageFixture	lib/Cake/Test/Fixture/ImageFixture.php	/^class ImageFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/ImageFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/ImageFixture.php	/^	public $records = array($/;"	v
InnoFixture	lib/Cake/Test/Fixture/InnoFixture.php	/^class InnoFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/InnoFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/InnoFixture.php	/^	public $records = array($/;"	v
ItemFixture	lib/Cake/Test/Fixture/ItemFixture.php	/^class ItemFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/ItemFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/ItemFixture.php	/^	public $records = array($/;"	v
ItemsPortfolioFixture	lib/Cake/Test/Fixture/ItemsPortfolioFixture.php	/^class ItemsPortfolioFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/ItemsPortfolioFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/ItemsPortfolioFixture.php	/^	public $records = array($/;"	v
JoinABFixture	lib/Cake/Test/Fixture/JoinABFixture.php	/^class JoinABFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/JoinABFixture.php	/^	public $fields = array($/;"	v
name	lib/Cake/Test/Fixture/JoinABFixture.php	/^	public $name = 'JoinAsJoinB';$/;"	v
records	lib/Cake/Test/Fixture/JoinABFixture.php	/^	public $records = array($/;"	v
JoinACFixture	lib/Cake/Test/Fixture/JoinACFixture.php	/^class JoinACFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/JoinACFixture.php	/^	public $fields = array($/;"	v
name	lib/Cake/Test/Fixture/JoinACFixture.php	/^	public $name = 'JoinAsJoinC';$/;"	v
records	lib/Cake/Test/Fixture/JoinACFixture.php	/^	public $records = array($/;"	v
JoinAFixture	lib/Cake/Test/Fixture/JoinAFixture.php	/^class JoinAFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/JoinAFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/JoinAFixture.php	/^	public $records = array($/;"	v
JoinBFixture	lib/Cake/Test/Fixture/JoinBFixture.php	/^class JoinBFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/JoinBFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/JoinBFixture.php	/^	public $records = array($/;"	v
JoinCFixture	lib/Cake/Test/Fixture/JoinCFixture.php	/^class JoinCFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/JoinCFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/JoinCFixture.php	/^	public $records = array($/;"	v
JoinThingFixture	lib/Cake/Test/Fixture/JoinThingFixture.php	/^class JoinThingFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/JoinThingFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/JoinThingFixture.php	/^	public $records = array($/;"	v
MessageFixture	lib/Cake/Test/Fixture/MessageFixture.php	/^class MessageFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/MessageFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/MessageFixture.php	/^	public $records = array($/;"	v
MyCategoriesMyProductsFixture	lib/Cake/Test/Fixture/MyCategoriesMyProductsFixture.php	/^class MyCategoriesMyProductsFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/MyCategoriesMyProductsFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/MyCategoriesMyProductsFixture.php	/^	public $records = array($/;"	v
MyCategoriesMyUsersFixture	lib/Cake/Test/Fixture/MyCategoriesMyUsersFixture.php	/^class MyCategoriesMyUsersFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/MyCategoriesMyUsersFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/MyCategoriesMyUsersFixture.php	/^	public $records = array($/;"	v
MyCategoryFixture	lib/Cake/Test/Fixture/MyCategoryFixture.php	/^class MyCategoryFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/MyCategoryFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/MyCategoryFixture.php	/^	public $records = array($/;"	v
MyProductFixture	lib/Cake/Test/Fixture/MyProductFixture.php	/^class MyProductFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/MyProductFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/MyProductFixture.php	/^	public $records = array($/;"	v
MyUserFixture	lib/Cake/Test/Fixture/MyUserFixture.php	/^class MyUserFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/MyUserFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/MyUserFixture.php	/^	public $records = array($/;"	v
NodeFixture	lib/Cake/Test/Fixture/NodeFixture.php	/^class NodeFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/NodeFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/NodeFixture.php	/^	public $records = array($/;"	v
NumberTreeFixture	lib/Cake/Test/Fixture/NumberTreeFixture.php	/^class NumberTreeFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/NumberTreeFixture.php	/^	public $fields = array($/;"	v
NumberTreeTwoFixture	lib/Cake/Test/Fixture/NumberTreeTwoFixture.php	/^class NumberTreeTwoFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/NumberTreeTwoFixture.php	/^	public $fields = array($/;"	v
NumericArticleFixture	lib/Cake/Test/Fixture/NumericArticleFixture.php	/^class NumericArticleFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/NumericArticleFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/NumericArticleFixture.php	/^	public $records = array($/;"	v
OverallFavoriteFixture	lib/Cake/Test/Fixture/OverallFavoriteFixture.php	/^class OverallFavoriteFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/OverallFavoriteFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/OverallFavoriteFixture.php	/^	public $records = array($/;"	v
PersonFixture	lib/Cake/Test/Fixture/PersonFixture.php	/^class PersonFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/PersonFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/PersonFixture.php	/^	public $records = array($/;"	v
PlayerFixture	lib/Cake/Test/Fixture/PlayerFixture.php	/^class PlayerFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/PlayerFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/PlayerFixture.php	/^	public $records = array($/;"	v
PortfolioFixture	lib/Cake/Test/Fixture/PortfolioFixture.php	/^class PortfolioFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/PortfolioFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/PortfolioFixture.php	/^	public $records = array($/;"	v
PostFixture	lib/Cake/Test/Fixture/PostFixture.php	/^class PostFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/PostFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/PostFixture.php	/^	public $records = array($/;"	v
PostsTagFixture	lib/Cake/Test/Fixture/PostsTagFixture.php	/^class PostsTagFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/PostsTagFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/PostsTagFixture.php	/^	public $records = array($/;"	v
PrefixTestFixture	lib/Cake/Test/Fixture/PrefixTestFixture.php	/^class PrefixTestFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/PrefixTestFixture.php	/^	public $fields = array($/;"	v
table	lib/Cake/Test/Fixture/PrefixTestFixture.php	/^	public $table = 'prefix_prefix_tests';$/;"	v
PrimaryModelFixture	lib/Cake/Test/Fixture/PrimaryModelFixture.php	/^class PrimaryModelFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/PrimaryModelFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/PrimaryModelFixture.php	/^	public $records = array($/;"	v
ProductFixture	lib/Cake/Test/Fixture/ProductFixture.php	/^class ProductFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/ProductFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/ProductFixture.php	/^	public $records = array($/;"	v
ProductUpdateAllFixture	lib/Cake/Test/Fixture/ProductUpdateAllFixture.php	/^class ProductUpdateAllFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/ProductUpdateAllFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/ProductUpdateAllFixture.php	/^	public $records = array($/;"	v
table	lib/Cake/Test/Fixture/ProductUpdateAllFixture.php	/^	public $table = 'product_update_all';$/;"	v
ProjectFixture	lib/Cake/Test/Fixture/ProjectFixture.php	/^class ProjectFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/ProjectFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/ProjectFixture.php	/^	public $records = array($/;"	v
SampleFixture	lib/Cake/Test/Fixture/SampleFixture.php	/^class SampleFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/SampleFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/SampleFixture.php	/^	public $records = array($/;"	v
SecondaryModelFixture	lib/Cake/Test/Fixture/SecondaryModelFixture.php	/^class SecondaryModelFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/SecondaryModelFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/SecondaryModelFixture.php	/^	public $records = array($/;"	v
SessionFixture	lib/Cake/Test/Fixture/SessionFixture.php	/^class SessionFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/SessionFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/SessionFixture.php	/^	public $records = array();$/;"	v
SiteFixture	lib/Cake/Test/Fixture/SiteFixture.php	/^class SiteFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/SiteFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/SiteFixture.php	/^	public $records = array($/;"	v
SomethingElseFixture	lib/Cake/Test/Fixture/SomethingElseFixture.php	/^class SomethingElseFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/SomethingElseFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/SomethingElseFixture.php	/^	public $records = array($/;"	v
SomethingFixture	lib/Cake/Test/Fixture/SomethingFixture.php	/^class SomethingFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/SomethingFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/SomethingFixture.php	/^	public $records = array($/;"	v
StoriesTagFixture	lib/Cake/Test/Fixture/StoriesTagFixture.php	/^class StoriesTagFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/StoriesTagFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/StoriesTagFixture.php	/^	public $records = array($/;"	v
StoryFixture	lib/Cake/Test/Fixture/StoryFixture.php	/^class StoryFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/StoryFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/StoryFixture.php	/^	public $records = array($/;"	v
SyfileFixture	lib/Cake/Test/Fixture/SyfileFixture.php	/^class SyfileFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/SyfileFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/SyfileFixture.php	/^	public $records = array($/;"	v
TagFixture	lib/Cake/Test/Fixture/TagFixture.php	/^class TagFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/TagFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/TagFixture.php	/^	public $records = array($/;"	v
TestPluginArticleFixture	lib/Cake/Test/Fixture/TestPluginArticleFixture.php	/^class TestPluginArticleFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/TestPluginArticleFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/TestPluginArticleFixture.php	/^	public $records = array($/;"	v
TestPluginCommentFixture	lib/Cake/Test/Fixture/TestPluginCommentFixture.php	/^class TestPluginCommentFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/TestPluginCommentFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/TestPluginCommentFixture.php	/^	public $records = array($/;"	v
ThePaperMonkiesFixture	lib/Cake/Test/Fixture/ThePaperMonkiesFixture.php	/^class ThePaperMonkiesFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/ThePaperMonkiesFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/ThePaperMonkiesFixture.php	/^	public $records = array();$/;"	v
ThreadFixture	lib/Cake/Test/Fixture/ThreadFixture.php	/^class ThreadFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/ThreadFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/ThreadFixture.php	/^	public $records = array($/;"	v
TranslateArticleFixture	lib/Cake/Test/Fixture/TranslateArticleFixture.php	/^class TranslateArticleFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/TranslateArticleFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/TranslateArticleFixture.php	/^	public $records = array($/;"	v
table	lib/Cake/Test/Fixture/TranslateArticleFixture.php	/^	public $table = 'article_i18n';$/;"	v
TranslateFixture	lib/Cake/Test/Fixture/TranslateFixture.php	/^class TranslateFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/TranslateFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/TranslateFixture.php	/^	public $records = array($/;"	v
table	lib/Cake/Test/Fixture/TranslateFixture.php	/^	public $table = 'i18n';$/;"	v
TranslateTableFixture	lib/Cake/Test/Fixture/TranslateTableFixture.php	/^class TranslateTableFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/TranslateTableFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/TranslateTableFixture.php	/^	public $records = array($/;"	v
table	lib/Cake/Test/Fixture/TranslateTableFixture.php	/^	public $table = 'another_i18n';$/;"	v
TranslateWithPrefixFixture	lib/Cake/Test/Fixture/TranslateWithPrefixFixture.php	/^class TranslateWithPrefixFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/TranslateWithPrefixFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/TranslateWithPrefixFixture.php	/^	public $records = array($/;"	v
table	lib/Cake/Test/Fixture/TranslateWithPrefixFixture.php	/^	public $table = 'i18n_translate_with_prefixes';$/;"	v
TranslatedArticleFixture	lib/Cake/Test/Fixture/TranslatedArticleFixture.php	/^class TranslatedArticleFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/TranslatedArticleFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/TranslatedArticleFixture.php	/^	public $records = array($/;"	v
TranslatedItemFixture	lib/Cake/Test/Fixture/TranslatedItemFixture.php	/^class TranslatedItemFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/TranslatedItemFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/TranslatedItemFixture.php	/^	public $records = array($/;"	v
UnconventionalTreeFixture	lib/Cake/Test/Fixture/UnconventionalTreeFixture.php	/^class UnconventionalTreeFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/UnconventionalTreeFixture.php	/^	public $fields = array($/;"	v
UnderscoreFieldFixture	lib/Cake/Test/Fixture/UnderscoreFieldFixture.php	/^class UnderscoreFieldFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/UnderscoreFieldFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/UnderscoreFieldFixture.php	/^	public $records = array($/;"	v
UnsignedFixture	lib/Cake/Test/Fixture/UnsignedFixture.php	/^class UnsignedFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/UnsignedFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/UnsignedFixture.php	/^	public $records = array();$/;"	v
table	lib/Cake/Test/Fixture/UnsignedFixture.php	/^	public $table = 'unsigned';$/;"	v
UserFixture	lib/Cake/Test/Fixture/UserFixture.php	/^class UserFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/UserFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/UserFixture.php	/^	public $records = array($/;"	v
UuidFixture	lib/Cake/Test/Fixture/UuidFixture.php	/^class UuidFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/UuidFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/UuidFixture.php	/^	public $records = array($/;"	v
UuidTagFixture	lib/Cake/Test/Fixture/UuidTagFixture.php	/^class UuidTagFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/UuidTagFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/UuidTagFixture.php	/^	public $records = array($/;"	v
UuidTreeFixture	lib/Cake/Test/Fixture/UuidTreeFixture.php	/^class UuidTreeFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/UuidTreeFixture.php	/^	public $fields = array($/;"	v
UuiditemFixture	lib/Cake/Test/Fixture/UuiditemFixture.php	/^class UuiditemFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/UuiditemFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/UuiditemFixture.php	/^	public $records = array($/;"	v
UuiditemsUuidportfolioFixture	lib/Cake/Test/Fixture/UuiditemsUuidportfolioFixture.php	/^class UuiditemsUuidportfolioFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/UuiditemsUuidportfolioFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/UuiditemsUuidportfolioFixture.php	/^	public $records = array($/;"	v
UuiditemsUuidportfolioNumericidFixture	lib/Cake/Test/Fixture/UuiditemsUuidportfolioNumericidFixture.php	/^class UuiditemsUuidportfolioNumericidFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/UuiditemsUuidportfolioNumericidFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/UuiditemsUuidportfolioNumericidFixture.php	/^	public $records = array($/;"	v
UuidportfolioFixture	lib/Cake/Test/Fixture/UuidportfolioFixture.php	/^class UuidportfolioFixture extends CakeTestFixture {$/;"	c
fields	lib/Cake/Test/Fixture/UuidportfolioFixture.php	/^	public $fields = array($/;"	v
records	lib/Cake/Test/Fixture/UuidportfolioFixture.php	/^	public $records = array($/;"	v
config	lib/Cake/Test/test_app/Config/htmlhelper_tags.php	/^$config = array($/;"	v
config	lib/Cake/Test/test_app/Config/var_test.php	/^$config = array($/;"	v
config	lib/Cake/Test/test_app/Config/var_test2.php	/^$config = array($/;"	v
SampleShell	lib/Cake/Test/test_app/Console/Command/SampleShell.php	/^class SampleShell extends Shell {$/;"	c
main	lib/Cake/Test/test_app/Console/Command/SampleShell.php	/^	public function main() {$/;"	f
AppController	lib/Cake/Test/test_app/Controller/AppController.php	/^class AppController extends Controller {$/;"	c
PagesController	lib/Cake/Test/test_app/Controller/PagesController.php	/^class PagesController extends AppController {$/;"	c
count	lib/Cake/Test/test_app/Controller/PagesController.php	/^		$count = count($path);$/;"	v
display	lib/Cake/Test/test_app/Controller/PagesController.php	/^	public function display() {$/;"	f
helpers	lib/Cake/Test/test_app/Controller/PagesController.php	/^	public $helpers = array('Html', 'Session');$/;"	v
page	lib/Cake/Test/test_app/Controller/PagesController.php	/^			$page = $path[0];$/;"	v
page	lib/Cake/Test/test_app/Controller/PagesController.php	/^		$page = $subpage = $titleForLayout = null;$/;"	v
path	lib/Cake/Test/test_app/Controller/PagesController.php	/^		$path = func_get_args();$/;"	v
subpage	lib/Cake/Test/test_app/Controller/PagesController.php	/^			$subpage = $path[1];$/;"	v
titleForLayout	lib/Cake/Test/test_app/Controller/PagesController.php	/^			$titleForLayout = Inflector::humanize($path[$count - 1]);$/;"	v
uses	lib/Cake/Test/test_app/Controller/PagesController.php	/^	public $uses = array();$/;"	v
TestAppsErrorController	lib/Cake/Test/test_app/Controller/TestAppsErrorController.php	/^class TestAppsErrorController extends CakeErrorController {$/;"	c
helpers	lib/Cake/Test/test_app/Controller/TestAppsErrorController.php	/^	public $helpers = array($/;"	v
TestConfigsController	lib/Cake/Test/test_app/Controller/TestConfigsController.php	/^class TestConfigsController extends CakeErrorController {$/;"	c
components	lib/Cake/Test/test_app/Controller/TestConfigsController.php	/^	public $components = array($/;"	v
TestsAppsController	lib/Cake/Test/test_app/Controller/TestsAppsController.php	/^class TestsAppsController extends AppController {$/;"	c
components	lib/Cake/Test/test_app/Controller/TestsAppsController.php	/^	public $components = array('RequestHandler');$/;"	v
index	lib/Cake/Test/test_app/Controller/TestsAppsController.php	/^	public function index() {$/;"	f
redirect_to	lib/Cake/Test/test_app/Controller/TestsAppsController.php	/^	public function redirect_to() {$/;"	f
set_action	lib/Cake/Test/test_app/Controller/TestsAppsController.php	/^	public function set_action() {$/;"	f
some_method	lib/Cake/Test/test_app/Controller/TestsAppsController.php	/^	public function some_method() {$/;"	f
uses	lib/Cake/Test/test_app/Controller/TestsAppsController.php	/^	public $uses = array();$/;"	v
var	lib/Cake/Test/test_app/Controller/TestsAppsController.php	/^			$var = $this->request->query['var'];$/;"	v
var	lib/Cake/Test/test_app/Controller/TestsAppsController.php	/^		$var = '';$/;"	v
TestsAppsPostsController	lib/Cake/Test/test_app/Controller/TestsAppsPostsController.php	/^class TestsAppsPostsController extends AppController {$/;"	c
add	lib/Cake/Test/test_app/Controller/TestsAppsPostsController.php	/^	public function add() {$/;"	f
data	lib/Cake/Test/test_app/Controller/TestsAppsPostsController.php	/^		$data = array($/;"	v
fixtured	lib/Cake/Test/test_app/Controller/TestsAppsPostsController.php	/^	public function fixtured() {$/;"	f
input_data	lib/Cake/Test/test_app/Controller/TestsAppsPostsController.php	/^	public function input_data() {$/;"	f
post_var	lib/Cake/Test/test_app/Controller/TestsAppsPostsController.php	/^	public function post_var() {$/;"	f
url_var	lib/Cake/Test/test_app/Controller/TestsAppsPostsController.php	/^	public function url_var() {$/;"	f
uses	lib/Cake/Test/test_app/Controller/TestsAppsPostsController.php	/^	public $uses = array('Post');$/;"	v
viewPath	lib/Cake/Test/test_app/Controller/TestsAppsPostsController.php	/^	public $viewPath = 'TestsApps';$/;"	v
TestAppsExceptionRenderer	lib/Cake/Test/test_app/Error/TestAppsExceptionRenderer.php	/^class TestAppsExceptionRenderer extends ExceptionRenderer {$/;"	c
_getController	lib/Cake/Test/test_app/Error/TestAppsExceptionRenderer.php	/^	protected function _getController($exception) {$/;"	f
controller	lib/Cake/Test/test_app/Error/TestAppsExceptionRenderer.php	/^			$controller = new Controller($request, $response);$/;"	v
controller	lib/Cake/Test/test_app/Error/TestAppsExceptionRenderer.php	/^			$controller = new TestAppsErrorController($request, $response);$/;"	v
request	lib/Cake/Test/test_app/Error/TestAppsExceptionRenderer.php	/^			$request = new CakeRequest();$/;"	v
response	lib/Cake/Test/test_app/Error/TestAppsExceptionRenderer.php	/^		$response = new CakeResponse();$/;"	v
TestAppCacheEngine	lib/Cake/Test/test_app/Lib/Cache/Engine/TestAppCacheEngine.php	/^class TestAppCacheEngine extends CacheEngine {$/;"	c
clear	lib/Cake/Test/test_app/Lib/Cache/Engine/TestAppCacheEngine.php	/^	public function clear($check) {$/;"	f
clearGroup	lib/Cake/Test/test_app/Lib/Cache/Engine/TestAppCacheEngine.php	/^	public function clearGroup($group) {$/;"	f
decrement	lib/Cake/Test/test_app/Lib/Cache/Engine/TestAppCacheEngine.php	/^	public function decrement($key, $offset = 1) {$/;"	f
delete	lib/Cake/Test/test_app/Lib/Cache/Engine/TestAppCacheEngine.php	/^	public function delete($key) {$/;"	f
increment	lib/Cake/Test/test_app/Lib/Cache/Engine/TestAppCacheEngine.php	/^	public function increment($key, $offset = 1) {$/;"	f
read	lib/Cake/Test/test_app/Lib/Cache/Engine/TestAppCacheEngine.php	/^	public function read($key) {$/;"	f
write	lib/Cake/Test/test_app/Lib/Cache/Engine/TestAppCacheEngine.php	/^	public function write($key, $value, $duration) {$/;"	f
Library	lib/Cake/Test/test_app/Lib/Library.php	/^class Library {$/;"	c
TestAppLog	lib/Cake/Test/test_app/Lib/Log/Engine/TestAppLog.php	/^class TestAppLog extends BaseLog {$/;"	c
write	lib/Cake/Test/test_app/Lib/Log/Engine/TestAppLog.php	/^	public function write($type, $message) {$/;"	f
TestUtilityClass	lib/Cake/Test/test_app/Lib/Utility/TestUtilityClass.php	/^class TestUtilityClass {$/;"	c
AppModel	lib/Cake/Test/test_app/Model/AppModel.php	/^class AppModel extends Model {$/;"	c
PersisterOneBehaviorBehavior	lib/Cake/Test/test_app/Model/Behavior/PersisterOneBehaviorBehavior.php	/^class PersisterOneBehaviorBehavior extends ModelBehavior {$/;"	c
PersisterTwoBehaviorBehavior	lib/Cake/Test/test_app/Model/Behavior/PersisterTwoBehaviorBehavior.php	/^class PersisterTwoBehaviorBehavior extends ModelBehavior {$/;"	c
Comment	lib/Cake/Test/test_app/Model/Comment.php	/^class Comment extends AppModel {$/;"	c
useTable	lib/Cake/Test/test_app/Model/Comment.php	/^	public $useTable = 'comments';$/;"	v
TestLocalDriver	lib/Cake/Test/test_app/Model/Datasource/Database/TestLocalDriver.php	/^class TestLocalDriver extends TestSource {$/;"	c
TestAppLibSession	lib/Cake/Test/test_app/Model/Datasource/Session/TestAppLibSession.php	/^class TestAppLibSession implements CakeSessionHandlerInterface {$/;"	c
close	lib/Cake/Test/test_app/Model/Datasource/Session/TestAppLibSession.php	/^	public function close() {$/;"	f
destroy	lib/Cake/Test/test_app/Model/Datasource/Session/TestAppLibSession.php	/^	public function destroy($id) {$/;"	f
gc	lib/Cake/Test/test_app/Model/Datasource/Session/TestAppLibSession.php	/^	public function gc($expires = null) {$/;"	f
open	lib/Cake/Test/test_app/Model/Datasource/Session/TestAppLibSession.php	/^	public function open() {$/;"	f
read	lib/Cake/Test/test_app/Model/Datasource/Session/TestAppLibSession.php	/^	public function read($id) {$/;"	f
write	lib/Cake/Test/test_app/Model/Datasource/Session/TestAppLibSession.php	/^	public function write($id, $data) {$/;"	f
Test2OtherSource	lib/Cake/Test/test_app/Model/Datasource/Test2OtherSource.php	/^class Test2OtherSource extends DataSource {$/;"	c
create	lib/Cake/Test/test_app/Model/Datasource/Test2OtherSource.php	/^	public function create(Model $model, $fields = null, $values = null) {$/;"	f
delete	lib/Cake/Test/test_app/Model/Datasource/Test2OtherSource.php	/^	public function delete(Model $model, $id = null) {$/;"	f
describe	lib/Cake/Test/test_app/Model/Datasource/Test2OtherSource.php	/^	public function describe($model) {$/;"	f
listSources	lib/Cake/Test/test_app/Model/Datasource/Test2OtherSource.php	/^	public function listSources($data = null) {$/;"	f
read	lib/Cake/Test/test_app/Model/Datasource/Test2OtherSource.php	/^	public function read(Model $model, $queryData = array(), $recursive = null) {$/;"	f
update	lib/Cake/Test/test_app/Model/Datasource/Test2OtherSource.php	/^	public function update(Model $model, $fields = array(), $values = array(), $conditions = null) {$/;"	f
Test2Source	lib/Cake/Test/test_app/Model/Datasource/Test2Source.php	/^class Test2Source extends DataSource {$/;"	c
create	lib/Cake/Test/test_app/Model/Datasource/Test2Source.php	/^	public function create(Model $model, $fields = null, $values = null) {$/;"	f
delete	lib/Cake/Test/test_app/Model/Datasource/Test2Source.php	/^	public function delete(Model $model, $id = null) {$/;"	f
describe	lib/Cake/Test/test_app/Model/Datasource/Test2Source.php	/^	public function describe($model) {$/;"	f
listSources	lib/Cake/Test/test_app/Model/Datasource/Test2Source.php	/^	public function listSources($data = null) {$/;"	f
read	lib/Cake/Test/test_app/Model/Datasource/Test2Source.php	/^	public function read(Model $model, $queryData = array(), $recursive = null) {$/;"	f
update	lib/Cake/Test/test_app/Model/Datasource/Test2Source.php	/^	public function update(Model $model, $fields = array(), $values = array(), $conditions = null) {$/;"	f
Extract	lib/Cake/Test/test_app/Model/Extract.php	/^class Extract extends AppModel {$/;"	c
useTable	lib/Cake/Test/test_app/Model/Extract.php	/^	public $useTable = false;$/;"	v
validate	lib/Cake/Test/test_app/Model/Extract.php	/^	public $validate = array($/;"	v
PersisterOne	lib/Cake/Test/test_app/Model/PersisterOne.php	/^class PersisterOne extends AppModel {$/;"	c
actsAs	lib/Cake/Test/test_app/Model/PersisterOne.php	/^	public $actsAs = array('PersisterOneBehavior', 'TestPlugin.TestPluginPersisterOne');$/;"	v
hasMany	lib/Cake/Test/test_app/Model/PersisterOne.php	/^	public $hasMany = array('Comment', 'TestPlugin.TestPluginComment');$/;"	v
useTable	lib/Cake/Test/test_app/Model/PersisterOne.php	/^	public $useTable = 'posts';$/;"	v
validate	lib/Cake/Test/test_app/Model/PersisterOne.php	/^	public $validate = array($/;"	v
PersisterTwo	lib/Cake/Test/test_app/Model/PersisterTwo.php	/^class PersisterTwo extends AppModel {$/;"	c
actsAs	lib/Cake/Test/test_app/Model/PersisterTwo.php	/^	public $actsAs = array('PersisterOneBehavior', 'TestPlugin.TestPluginPersisterOne');$/;"	v
hasMany	lib/Cake/Test/test_app/Model/PersisterTwo.php	/^	public $hasMany = array('Comment', 'TestPlugin.TestPluginComment');$/;"	v
useTable	lib/Cake/Test/test_app/Model/PersisterTwo.php	/^	public $useTable = 'posts';$/;"	v
Post	lib/Cake/Test/test_app/Model/Post.php	/^class Post extends AppModel {$/;"	c
useTable	lib/Cake/Test/test_app/Model/Post.php	/^	public $useTable = 'posts';$/;"	v
TestPluginAppSchema	lib/Cake/Test/test_app/Plugin/TestPlugin/Config/Schema/schema.php	/^class TestPluginAppSchema extends CakeSchema {$/;"	c
name	lib/Cake/Test/test_app/Plugin/TestPlugin/Config/Schema/schema.php	/^	public $name = 'TestPluginApp';$/;"	v
test_plugin_acos	lib/Cake/Test/test_app/Plugin/TestPlugin/Config/Schema/schema.php	/^	public $test_plugin_acos = array($/;"	v
ExampleShell	lib/Cake/Test/test_app/Plugin/TestPlugin/Console/Command/ExampleShell.php	/^class ExampleShell extends Shell {$/;"	c
main	lib/Cake/Test/test_app/Plugin/TestPlugin/Console/Command/ExampleShell.php	/^	public function main() {$/;"	f
OtherTaskTask	lib/Cake/Test/test_app/Plugin/TestPlugin/Console/Command/Task/OtherTaskTask.php	/^class OtherTaskTask extends Shell {$/;"	c
OtherComponent	lib/Cake/Test/test_app/Plugin/TestPlugin/Controller/Component/OtherComponent.php	/^class OtherComponent extends Component {$/;"	c
PluginsComponent	lib/Cake/Test/test_app/Plugin/TestPlugin/Controller/Component/PluginsComponent.php	/^class PluginsComponent extends Component {$/;"	c
components	lib/Cake/Test/test_app/Plugin/TestPlugin/Controller/Component/PluginsComponent.php	/^	public $components = array('TestPlugin.Other');$/;"	v
TestPluginComponent	lib/Cake/Test/test_app/Plugin/TestPlugin/Controller/Component/TestPluginComponent.php	/^class TestPluginComponent extends Component {$/;"	c
components	lib/Cake/Test/test_app/Plugin/TestPlugin/Controller/Component/TestPluginComponent.php	/^	public $components = array('TestPlugin.TestPluginOther');$/;"	v
TestPluginOtherComponent	lib/Cake/Test/test_app/Plugin/TestPlugin/Controller/Component/TestPluginOtherComponent.php	/^class TestPluginOtherComponent extends Component {$/;"	c
TestPluginAppController	lib/Cake/Test/test_app/Plugin/TestPlugin/Controller/TestPluginAppController.php	/^class TestPluginAppController extends AppController {$/;"	c
TestPluginController	lib/Cake/Test/test_app/Plugin/TestPlugin/Controller/TestPluginController.php	/^class TestPluginController extends TestPluginAppController {$/;"	c
add	lib/Cake/Test/test_app/Plugin/TestPlugin/Controller/TestPluginController.php	/^	public function add() {$/;"	f
autoRender	lib/Cake/Test/test_app/Plugin/TestPlugin/Controller/TestPluginController.php	/^		$this->autoRender = false;$/;"	v
index	lib/Cake/Test/test_app/Plugin/TestPlugin/Controller/TestPluginController.php	/^	public function index() {$/;"	f
uses	lib/Cake/Test/test_app/Plugin/TestPlugin/Controller/TestPluginController.php	/^	public $uses = array();$/;"	v
TestsController	lib/Cake/Test/test_app/Plugin/TestPlugin/Controller/TestsController.php	/^class TestsController extends TestPluginAppController {$/;"	c
components	lib/Cake/Test/test_app/Plugin/TestPlugin/Controller/TestsController.php	/^	public $components = array('TestPlugin.Plugins');$/;"	v
helpers	lib/Cake/Test/test_app/Plugin/TestPlugin/Controller/TestsController.php	/^	public $helpers = array('TestPlugin.OtherHelper', 'Html');$/;"	v
index	lib/Cake/Test/test_app/Plugin/TestPlugin/Controller/TestsController.php	/^	public function index() {$/;"	f
some_method	lib/Cake/Test/test_app/Plugin/TestPlugin/Controller/TestsController.php	/^	public function some_method() {$/;"	f
uses	lib/Cake/Test/test_app/Plugin/TestPlugin/Controller/TestsController.php	/^	public $uses = array();$/;"	v
TestPluginCacheEngine	lib/Cake/Test/test_app/Plugin/TestPlugin/Lib/Cache/Engine/TestPluginCacheEngine.php	/^class TestPluginCacheEngine extends CacheEngine {$/;"	c
clear	lib/Cake/Test/test_app/Plugin/TestPlugin/Lib/Cache/Engine/TestPluginCacheEngine.php	/^	public function clear($check) {$/;"	f
clearGroup	lib/Cake/Test/test_app/Plugin/TestPlugin/Lib/Cache/Engine/TestPluginCacheEngine.php	/^	public function clearGroup($group) {$/;"	f
decrement	lib/Cake/Test/test_app/Plugin/TestPlugin/Lib/Cache/Engine/TestPluginCacheEngine.php	/^	public function decrement($key, $offset = 1) {$/;"	f
delete	lib/Cake/Test/test_app/Plugin/TestPlugin/Lib/Cache/Engine/TestPluginCacheEngine.php	/^	public function delete($key) {$/;"	f
increment	lib/Cake/Test/test_app/Plugin/TestPlugin/Lib/Cache/Engine/TestPluginCacheEngine.php	/^	public function increment($key, $offset = 1) {$/;"	f
read	lib/Cake/Test/test_app/Plugin/TestPlugin/Lib/Cache/Engine/TestPluginCacheEngine.php	/^	public function read($key) {$/;"	f
write	lib/Cake/Test/test_app/Plugin/TestPlugin/Lib/Cache/Engine/TestPluginCacheEngine.php	/^	public function write($key, $value, $duration) {$/;"	f
CustomLibClass	lib/Cake/Test/test_app/Plugin/TestPlugin/Lib/Custom/Package/CustomLibClass.php	/^class CustomLibClass {$/;"	c
TestPluginExceptionRenderer	lib/Cake/Test/test_app/Plugin/TestPlugin/Lib/Error/TestPluginExceptionRenderer.php	/^class TestPluginExceptionRenderer extends ExceptionRenderer {$/;"	c
render	lib/Cake/Test/test_app/Plugin/TestPlugin/Lib/Error/TestPluginExceptionRenderer.php	/^	public function render() {$/;"	f
TestPluginLog	lib/Cake/Test/test_app/Plugin/TestPlugin/Lib/Log/Engine/TestPluginLog.php	/^class TestPluginLog implements CakeLogInterface {$/;"	c
write	lib/Cake/Test/test_app/Plugin/TestPlugin/Lib/Log/Engine/TestPluginLog.php	/^	public function write($type, $message) {$/;"	f
Test2DispatcherFilter	lib/Cake/Test/test_app/Plugin/TestPlugin/Lib/Routing/Filter/Test2DispatcherFilter.php	/^class Test2DispatcherFilter extends DispatcherFilter {$/;"	c
afterDispatch	lib/Cake/Test/test_app/Plugin/TestPlugin/Lib/Routing/Filter/Test2DispatcherFilter.php	/^	public function afterDispatch(CakeEvent $event) {$/;"	f
beforeDispatch	lib/Cake/Test/test_app/Plugin/TestPlugin/Lib/Routing/Filter/Test2DispatcherFilter.php	/^	public function beforeDispatch(CakeEvent $event) {$/;"	f
TestDispatcherFilter	lib/Cake/Test/test_app/Plugin/TestPlugin/Lib/Routing/Filter/TestDispatcherFilter.php	/^class TestDispatcherFilter extends DispatcherFilter {$/;"	c
afterDispatch	lib/Cake/Test/test_app/Plugin/TestPlugin/Lib/Routing/Filter/TestDispatcherFilter.php	/^	public function afterDispatch(CakeEvent $event) {$/;"	f
beforeDispatch	lib/Cake/Test/test_app/Plugin/TestPlugin/Lib/Routing/Filter/TestDispatcherFilter.php	/^	public function beforeDispatch(CakeEvent $event) {$/;"	f
TestRoute	lib/Cake/Test/test_app/Plugin/TestPlugin/Lib/Routing/Route/TestRoute.php	/^class TestRoute extends CakeRoute {$/;"	c
TestPluginLibrary	lib/Cake/Test/test_app/Plugin/TestPlugin/Lib/TestPluginLibrary.php	/^class TestPluginLibrary {$/;"	c
TestPluginOtherLibrary	lib/Cake/Test/test_app/Plugin/TestPlugin/Lib/TestPluginOtherLibrary.php	/^class TestPluginOtherLibrary {$/;"	c
TestPluginPersisterOneBehavior	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/Behavior/TestPluginPersisterOneBehavior.php	/^class TestPluginPersisterOneBehavior extends ModelBehavior {$/;"	c
TestPluginPersisterTwoBehavior	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/Behavior/TestPluginPersisterTwoBehavior.php	/^class TestPluginPersisterTwoBehavior extends ModelBehavior {$/;"	c
DboDummy	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/Datasource/Database/DboDummy.php	/^class DboDummy extends DboSource {$/;"	c
connect	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/Datasource/Database/DboDummy.php	/^	public function connect() {$/;"	f
TestDriver	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/Datasource/Database/TestDriver.php	/^class TestDriver extends TestSource {$/;"	c
TestPluginSession	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/Datasource/Session/TestPluginSession.php	/^class TestPluginSession implements CakeSessionHandlerInterface {$/;"	c
close	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/Datasource/Session/TestPluginSession.php	/^	public function close() {$/;"	f
destroy	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/Datasource/Session/TestPluginSession.php	/^	public function destroy($id) {$/;"	f
gc	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/Datasource/Session/TestPluginSession.php	/^	public function gc($expires = null) {$/;"	f
open	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/Datasource/Session/TestPluginSession.php	/^	public function open() {$/;"	f
read	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/Datasource/Session/TestPluginSession.php	/^	public function read($id) {$/;"	f
write	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/Datasource/Session/TestPluginSession.php	/^	public function write($id, $data) {$/;"	f
TestOtherSource	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/Datasource/TestOtherSource.php	/^class TestOtherSource extends DataSource {$/;"	c
create	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/Datasource/TestOtherSource.php	/^	public function create(Model $model, $fields = null, $values = array()) {$/;"	f
delete	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/Datasource/TestOtherSource.php	/^	public function delete(Model $model, $id = null) {$/;"	f
describe	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/Datasource/TestOtherSource.php	/^	public function describe($model) {$/;"	f
listSources	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/Datasource/TestOtherSource.php	/^	public function listSources($data = null) {$/;"	f
read	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/Datasource/TestOtherSource.php	/^	public function read(Model $model, $queryData = array(), $recursive = null) {$/;"	f
update	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/Datasource/TestOtherSource.php	/^	public function update(Model $model, $fields = array(), $values = array(), $conditions = null) {$/;"	f
TestSource	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/Datasource/TestSource.php	/^class TestSource extends DataSource {$/;"	c
create	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/Datasource/TestSource.php	/^	public function create(Model $model, $fields = array(), $values = array()) {$/;"	f
delete	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/Datasource/TestSource.php	/^	public function delete(Model $model, $id = null) {$/;"	f
describe	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/Datasource/TestSource.php	/^	public function describe($model) {$/;"	f
listSources	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/Datasource/TestSource.php	/^	public function listSources($data = null) {$/;"	f
read	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/Datasource/TestSource.php	/^	public function read(Model $model, $queryData = array(), $recursive = null) {$/;"	f
update	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/Datasource/TestSource.php	/^	public function update(Model $model, $fields = array(), $values = array(), $conditions = null) {$/;"	f
TestPluginAppModel	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/TestPluginAppModel.php	/^class TestPluginAppModel extends CakeTestModel {$/;"	c
TestPluginAuthUser	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/TestPluginAuthUser.php	/^class TestPluginAuthUser extends TestPluginAppModel {$/;"	c
name	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/TestPluginAuthUser.php	/^	public $name = 'TestPluginAuthUser';$/;"	v
useDbConfig	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/TestPluginAuthUser.php	/^	public $useDbConfig = 'test';$/;"	v
useTable	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/TestPluginAuthUser.php	/^	public $useTable = 'auth_users';$/;"	v
TestPluginAuthors	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/TestPluginAuthors.php	/^class TestPluginAuthors extends TestPluginAppModel {$/;"	c
name	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/TestPluginAuthors.php	/^	public $name = 'TestPluginAuthors';$/;"	v
useTable	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/TestPluginAuthors.php	/^	public $useTable = 'authors';$/;"	v
validate	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/TestPluginAuthors.php	/^	public $validate = array($/;"	v
TestPluginComment	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/TestPluginComment.php	/^class TestPluginComment extends TestPluginAppModel {$/;"	c
name	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/TestPluginComment.php	/^	public $name = 'TestPluginComment';$/;"	v
useTable	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/TestPluginComment.php	/^	public $useTable = 'test_plugin_comments';$/;"	v
TestPluginPost	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/TestPluginPost.php	/^class TestPluginPost extends TestPluginAppModel {$/;"	c
name	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/TestPluginPost.php	/^	public $name = 'Post';$/;"	v
useTable	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/TestPluginPost.php	/^	public $useTable = 'posts';$/;"	v
validate	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/TestPluginPost.php	/^	public $validate = array($/;"	v
validationDomain	lib/Cake/Test/test_app/Plugin/TestPlugin/Model/TestPluginPost.php	/^	public $validationDomain = 'test_plugin';$/;"	v
TestPluginEngine	lib/Cake/Test/test_app/Plugin/TestPlugin/Utility/TestPluginEngine.php	/^class TestPluginEngine {$/;"	c
ExampleExample	lib/Cake/Test/test_app/Plugin/TestPlugin/Vendor/Example/ExampleExample.php	/^class ExampleExample {$/;"	c
SamplePluginClassTestName	lib/Cake/Test/test_app/Plugin/TestPlugin/Vendor/sample/sample_plugin.php	/^class SamplePluginClassTestName {$/;"	c
OtherHelperHelper	lib/Cake/Test/test_app/Plugin/TestPlugin/View/Helper/OtherHelperHelper.php	/^class OtherHelperHelper extends AppHelper {$/;"	c
PluggedHelperHelper	lib/Cake/Test/test_app/Plugin/TestPlugin/View/Helper/PluggedHelperHelper.php	/^class PluggedHelperHelper extends AppHelper {$/;"	c
helpers	lib/Cake/Test/test_app/Plugin/TestPlugin/View/Helper/PluggedHelperHelper.php	/^	public $helpers = array('TestPlugin.OtherHelper');$/;"	v
TestPluginAppHelper	lib/Cake/Test/test_app/Plugin/TestPlugin/View/Helper/TestPluginAppHelper.php	/^class TestPluginAppHelper extends AppHelper {$/;"	c
ExampleShell	lib/Cake/Test/test_app/Plugin/TestPluginTwo/Console/Command/ExampleShell.php	/^class ExampleShell extends Shell {$/;"	c
main	lib/Cake/Test/test_app/Plugin/TestPluginTwo/Console/Command/ExampleShell.php	/^	public function main() {$/;"	f
WelcomeShell	lib/Cake/Test/test_app/Plugin/TestPluginTwo/Console/Command/WelcomeShell.php	/^class WelcomeShell extends Shell {$/;"	c
say_hello	lib/Cake/Test/test_app/Plugin/TestPluginTwo/Console/Command/WelcomeShell.php	/^	public function say_hello() {$/;"	f
TestAppEngine	lib/Cake/Test/test_app/Utility/TestAppEngine.php	/^class TestAppEngine {$/;"	c
ConfigureTestVendorSample	lib/Cake/Test/test_app/Vendor/sample/configure_test_vendor_sample.php	/^class ConfigureTestVendorSample {$/;"	c
BananaHelper	lib/Cake/Test/test_app/View/Helper/BananaHelper.php	/^class BananaHelper extends Helper {$/;"	c
peel	lib/Cake/Test/test_app/View/Helper/BananaHelper.php	/^	public function peel() {$/;"	f
CakeTestCase	lib/Cake/TestSuite/CakeTestCase.php	/^abstract class CakeTestCase extends PHPUnit_Framework_TestCase {$/;"	c
_assertAttributes	lib/Cake/TestSuite/CakeTestCase.php	/^	protected function _assertAttributes($assertions, $string) {$/;"	f
_configure	lib/Cake/TestSuite/CakeTestCase.php	/^			$this->_configure = Configure::read();$/;"	v
_configure	lib/Cake/TestSuite/CakeTestCase.php	/^	protected $_configure = array();$/;"	v
_pathRestore	lib/Cake/TestSuite/CakeTestCase.php	/^			$this->_pathRestore = App::paths();$/;"	v
_pathRestore	lib/Cake/TestSuite/CakeTestCase.php	/^	protected $_pathRestore = array();$/;"	v
args	lib/Cake/TestSuite/CakeTestCase.php	/^		$args = func_get_args();$/;"	v
assertEqual	lib/Cake/TestSuite/CakeTestCase.php	/^	protected static function assertEqual($result, $expected, $message = '') {$/;"	f
assertIdentical	lib/Cake/TestSuite/CakeTestCase.php	/^	protected static function assertIdentical($actual, $expected, $message = '') {$/;"	f
assertIsA	lib/Cake/TestSuite/CakeTestCase.php	/^	protected static function assertIsA($object, $type, $message = '') {$/;"	f
assertNoErrors	lib/Cake/TestSuite/CakeTestCase.php	/^	protected function assertNoErrors() {$/;"	f
assertNoPattern	lib/Cake/TestSuite/CakeTestCase.php	/^	protected static function assertNoPattern($pattern, $string, $message = '') {$/;"	f
assertNotEqual	lib/Cake/TestSuite/CakeTestCase.php	/^	protected static function assertNotEqual($result, $expected, $message = '') {$/;"	f
assertNotIdentical	lib/Cake/TestSuite/CakeTestCase.php	/^	protected static function assertNotIdentical($actual, $expected, $message = '') {$/;"	f
assertPattern	lib/Cake/TestSuite/CakeTestCase.php	/^	protected static function assertPattern($pattern, $string, $message = '') {$/;"	f
assertPostConditions	lib/Cake/TestSuite/CakeTestCase.php	/^	protected function assertPostConditions() {$/;"	f
assertPreConditions	lib/Cake/TestSuite/CakeTestCase.php	/^	protected function assertPreConditions() {$/;"	f
assertReference	lib/Cake/TestSuite/CakeTestCase.php	/^	protected static function assertReference(&$first, &$second, $message = '') {$/;"	f
assertTags	lib/Cake/TestSuite/CakeTestCase.php	/^	public function assertTags($string, $expected, $fullDebug = false) {$/;"	f
assertTextContains	lib/Cake/TestSuite/CakeTestCase.php	/^	public function assertTextContains($needle, $haystack, $message = '', $ignoreCase = false) {$/;"	f
assertTextEndsNotWith	lib/Cake/TestSuite/CakeTestCase.php	/^	public function assertTextEndsNotWith($suffix, $string, $message = '') {$/;"	f
assertTextEndsWith	lib/Cake/TestSuite/CakeTestCase.php	/^	public function assertTextEndsWith($suffix, $string, $message = '') {$/;"	f
assertTextEquals	lib/Cake/TestSuite/CakeTestCase.php	/^	public function assertTextEquals($expected, $result, $message = '') {$/;"	f
assertTextNotContains	lib/Cake/TestSuite/CakeTestCase.php	/^	public function assertTextNotContains($needle, $haystack, $message = '', $ignoreCase = false) {$/;"	f
assertTextNotEquals	lib/Cake/TestSuite/CakeTestCase.php	/^	public function assertTextNotEquals($expected, $result, $message = '') {$/;"	f
assertTextStartsNotWith	lib/Cake/TestSuite/CakeTestCase.php	/^	public function assertTextStartsNotWith($prefix, $string, $message = '') {$/;"	f
assertTextStartsWith	lib/Cake/TestSuite/CakeTestCase.php	/^	public function assertTextStartsWith($prefix, $string, $message = '') {$/;"	f
assertWithinMargin	lib/Cake/TestSuite/CakeTestCase.php	/^	protected static function assertWithinMargin($result, $expected, $margin, $message = '') {$/;"	f
asserts	lib/Cake/TestSuite/CakeTestCase.php	/^		$asserts = $assertions['attrs'];$/;"	v
attr	lib/Cake/TestSuite/CakeTestCase.php	/^							$attr = $val;$/;"	v
attributes	lib/Cake/TestSuite/CakeTestCase.php	/^					$attributes = array();$/;"	v
attrs	lib/Cake/TestSuite/CakeTestCase.php	/^				$attrs = array();$/;"	v
autoFixtures	lib/Cake/TestSuite/CakeTestCase.php	/^	public $autoFixtures = true;$/;"	v
config	lib/Cake/TestSuite/CakeTestCase.php	/^		$config = array_merge((array)$config, array('name' => $name));$/;"	v
date	lib/Cake/TestSuite/CakeTestCase.php	/^	public static function date($format = 'Y-m-d H:i:s') {$/;"	f
dropTables	lib/Cake/TestSuite/CakeTestCase.php	/^	public $dropTables = true;$/;"	v
endTest	lib/Cake/TestSuite/CakeTestCase.php	/^	public function endTest($method) {$/;"	f
expectError	lib/Cake/TestSuite/CakeTestCase.php	/^	protected function expectError($expected = false, $message = '') {$/;"	f
expectException	lib/Cake/TestSuite/CakeTestCase.php	/^	protected function expectException($name = 'Exception', $message = '') {$/;"	f
expected	lib/Cake/TestSuite/CakeTestCase.php	/^			$expected = 'Exception';$/;"	v
expected	lib/Cake/TestSuite/CakeTestCase.php	/^		$expected = str_replace(array("\\r\\n", "\\r"), "\\n", $expected);$/;"	v
explains	lib/Cake/TestSuite/CakeTestCase.php	/^		$explains = $assertions['explains'];$/;"	v
explanations	lib/Cake/TestSuite/CakeTestCase.php	/^				$explanations = array();$/;"	v
fixtureManager	lib/Cake/TestSuite/CakeTestCase.php	/^	public $fixtureManager = null;$/;"	v
getMockForModel	lib/Cake/TestSuite/CakeTestCase.php	/^	public function getMockForModel($model, $methods = array(), $config = array()) {$/;"	f
haystack	lib/Cake/TestSuite/CakeTestCase.php	/^		$haystack = str_replace(array("\\r\\n", "\\r"), "\\n", $haystack);$/;"	v
i	lib/Cake/TestSuite/CakeTestCase.php	/^				$i = 1;$/;"	v
i	lib/Cake/TestSuite/CakeTestCase.php	/^		$i = 0;$/;"	v
len	lib/Cake/TestSuite/CakeTestCase.php	/^			$len = count($asserts);$/;"	v
len	lib/Cake/TestSuite/CakeTestCase.php	/^		$len = count($asserts);$/;"	v
loadFixtures	lib/Cake/TestSuite/CakeTestCase.php	/^	public function loadFixtures() {$/;"	f
lower	lib/Cake/TestSuite/CakeTestCase.php	/^		$lower = $result - $margin;$/;"	v
matches	lib/Cake/TestSuite/CakeTestCase.php	/^					$matches = true;$/;"	v
matches	lib/Cake/TestSuite/CakeTestCase.php	/^			$matches = false;$/;"	v
mock	lib/Cake/TestSuite/CakeTestCase.php	/^		$mock = $this->getMock($name, $methods, array($config));$/;"	v
needle	lib/Cake/TestSuite/CakeTestCase.php	/^		$needle = str_replace(array("\\r\\n", "\\r"), "\\n", $needle);$/;"	v
normalized	lib/Cake/TestSuite/CakeTestCase.php	/^		$normalized = array();$/;"	v
prefix	lib/Cake/TestSuite/CakeTestCase.php	/^						$prefix = array('Anything, ', '.*?');$/;"	v
prefix	lib/Cake/TestSuite/CakeTestCase.php	/^					$prefix = array(null, null);$/;"	v
prefix	lib/Cake/TestSuite/CakeTestCase.php	/^		$prefix = str_replace(array("\\r\\n", "\\r"), "\\n", $prefix);$/;"	v
quotes	lib/Cake/TestSuite/CakeTestCase.php	/^							$quotes = $val !== $matches[1] ? '["\\']' : '["\\']?';$/;"	v
quotes	lib/Cake/TestSuite/CakeTestCase.php	/^						$quotes = '["\\']';$/;"	v
regex	lib/Cake/TestSuite/CakeTestCase.php	/^		$regex = array();$/;"	v
result	lib/Cake/TestSuite/CakeTestCase.php	/^		$result = parent::run($result);$/;"	v
result	lib/Cake/TestSuite/CakeTestCase.php	/^		$result = str_replace(array("\\r\\n", "\\r"), "\\n", $result);$/;"	v
run	lib/Cake/TestSuite/CakeTestCase.php	/^	public function run(PHPUnit_Framework_TestResult $result = null) {$/;"	f
setUp	lib/Cake/TestSuite/CakeTestCase.php	/^	public function setUp() {$/;"	f
skipIf	lib/Cake/TestSuite/CakeTestCase.php	/^	public function skipIf($shouldSkip, $message = '') {$/;"	f
skipUnless	lib/Cake/TestSuite/CakeTestCase.php	/^	protected function skipUnless($condition, $message = '') {$/;"	f
startTest	lib/Cake/TestSuite/CakeTestCase.php	/^	public function startTest($method) {$/;"	f
string	lib/Cake/TestSuite/CakeTestCase.php	/^					$string = substr($string, strlen($match[0]));$/;"	v
string	lib/Cake/TestSuite/CakeTestCase.php	/^				$string = $this->_assertAttributes($assertion, $string);$/;"	v
string	lib/Cake/TestSuite/CakeTestCase.php	/^		$string = str_replace(array("\\r\\n", "\\r"), "\\n", $string);$/;"	v
suffix	lib/Cake/TestSuite/CakeTestCase.php	/^		$suffix = str_replace(array("\\r\\n", "\\r"), "\\n", $suffix);$/;"	v
tags	lib/Cake/TestSuite/CakeTestCase.php	/^					$tags = $matches[1];$/;"	v
tags	lib/Cake/TestSuite/CakeTestCase.php	/^					$tags = preg_quote($tags, '\/');$/;"	v
tags	lib/Cake/TestSuite/CakeTestCase.php	/^				$tags = (string)$tags;$/;"	v
tags	lib/Cake/TestSuite/CakeTestCase.php	/^				$tags = array(substr($tags, 1) => array());$/;"	v
tagsTrimmed	lib/Cake/TestSuite/CakeTestCase.php	/^				$tagsTrimmed = preg_replace('\/\\s+\/m', '', $tags);$/;"	v
tearDown	lib/Cake/TestSuite/CakeTestCase.php	/^	public function tearDown() {$/;"	f
type	lib/Cake/TestSuite/CakeTestCase.php	/^					$type = 'Regex matches';$/;"	v
type	lib/Cake/TestSuite/CakeTestCase.php	/^					$type = 'Text equals';$/;"	v
upper	lib/Cake/TestSuite/CakeTestCase.php	/^		$upper = $result + $margin;$/;"	v
val	lib/Cake/TestSuite/CakeTestCase.php	/^							$val = '.+?';$/;"	v
val	lib/Cake/TestSuite/CakeTestCase.php	/^							$val = preg_quote($val, '\/');$/;"	v
val	lib/Cake/TestSuite/CakeTestCase.php	/^							$val = str_replace($/;"	v
CakeTestLoader	lib/Cake/TestSuite/CakeTestLoader.php	/^class CakeTestLoader extends PHPUnit_Runner_StandardTestSuiteLoader {$/;"	c
_basePath	lib/Cake/TestSuite/CakeTestLoader.php	/^	protected static function _basePath($params) {$/;"	f
_getRecursiveFileList	lib/Cake/TestSuite/CakeTestLoader.php	/^	protected static function _getRecursiveFileList($directory = '.') {$/;"	f
_resolveTestFile	lib/Cake/TestSuite/CakeTestLoader.php	/^	protected function _resolveTestFile($filePath, $params) {$/;"	f
basePath	lib/Cake/TestSuite/CakeTestLoader.php	/^		$basePath = $this->_basePath($params) . DS . $filePath;$/;"	v
case	lib/Cake/TestSuite/CakeTestLoader.php	/^			$case = str_replace($directory . DS, '', $testCaseFile);$/;"	v
case	lib/Cake/TestSuite/CakeTestLoader.php	/^			$case = str_replace('Test.php', '', $case);$/;"	v
directory	lib/Cake/TestSuite/CakeTestLoader.php	/^		$directory = self::_basePath($params);$/;"	v
ending	lib/Cake/TestSuite/CakeTestLoader.php	/^		$ending = 'Test.php';$/;"	v
file	lib/Cake/TestSuite/CakeTestLoader.php	/^		$file = $this->_resolveTestFile($filePath, $params);$/;"	v
fileList	lib/Cake/TestSuite/CakeTestLoader.php	/^		$fileList = array();$/;"	v
fileList	lib/Cake/TestSuite/CakeTestLoader.php	/^		$fileList = self::_getRecursiveFileList($directory);$/;"	v
files	lib/Cake/TestSuite/CakeTestLoader.php	/^		$files = new RegexIterator($/;"	v
generateTestList	lib/Cake/TestSuite/CakeTestLoader.php	/^	public static function generateTestList($params) {$/;"	f
load	lib/Cake/TestSuite/CakeTestLoader.php	/^	public function load($filePath, $params = '') {$/;"	f
result	lib/Cake/TestSuite/CakeTestLoader.php	/^					$result = CakePlugin::path($params['plugin']) . 'Test' . DS . 'Case';$/;"	v
result	lib/Cake/TestSuite/CakeTestLoader.php	/^				$result = CakePlugin::path($params['plugin']) . 'Test' . DS . 'Case';$/;"	v
result	lib/Cake/TestSuite/CakeTestLoader.php	/^			$result = APP_TEST_CASES;$/;"	v
result	lib/Cake/TestSuite/CakeTestLoader.php	/^			$result = CORE_TEST_CASES;$/;"	v
result	lib/Cake/TestSuite/CakeTestLoader.php	/^		$result = null;$/;"	v
testCases	lib/Cake/TestSuite/CakeTestLoader.php	/^		$testCases = array();$/;"	v
CakeTestRunner	lib/Cake/TestSuite/CakeTestRunner.php	/^class CakeTestRunner extends PHPUnit_TextUI_TestRunner {$/;"	c
__construct	lib/Cake/TestSuite/CakeTestRunner.php	/^	public function __construct($loader, $params) {$/;"	f
_getFixtureManager	lib/Cake/TestSuite/CakeTestRunner.php	/^	protected function _getFixtureManager($arguments) {$/;"	f
_params	lib/Cake/TestSuite/CakeTestRunner.php	/^		$this->_params = $params;$/;"	v
createTestResult	lib/Cake/TestSuite/CakeTestRunner.php	/^	protected function createTestResult() {$/;"	f
doRun	lib/Cake/TestSuite/CakeTestRunner.php	/^	public function doRun(PHPUnit_Framework_Test $suite, array $arguments = array()) {$/;"	f
fixture	lib/Cake/TestSuite/CakeTestRunner.php	/^		$fixture = $this->_getFixtureManager($arguments);$/;"	v
result	lib/Cake/TestSuite/CakeTestRunner.php	/^		$result = new PHPUnit_Framework_TestResult;$/;"	v
return	lib/Cake/TestSuite/CakeTestRunner.php	/^		$return = parent::doRun($suite, $arguments);$/;"	v
CakeTestSuite	lib/Cake/TestSuite/CakeTestSuite.php	/^class CakeTestSuite extends PHPUnit_Framework_TestSuite {$/;"	c
Folder	lib/Cake/TestSuite/CakeTestSuite.php	/^		$Folder = new Folder($directory);$/;"	v
addTestDirectory	lib/Cake/TestSuite/CakeTestSuite.php	/^	public function addTestDirectory($directory = '.') {$/;"	f
addTestDirectoryRecursive	lib/Cake/TestSuite/CakeTestSuite.php	/^	public function addTestDirectoryRecursive($directory = '.') {$/;"	f
files	lib/Cake/TestSuite/CakeTestSuite.php	/^		$files = $Folder->tree(null, true, 'files');$/;"	v
CakeTestSuiteCommand	lib/Cake/TestSuite/CakeTestSuiteCommand.php	/^class CakeTestSuiteCommand extends PHPUnit_TextUI_Command {$/;"	c
__construct	lib/Cake/TestSuite/CakeTestSuiteCommand.php	/^	public function __construct($loader, $params = array()) {$/;"	f
_params	lib/Cake/TestSuite/CakeTestSuiteCommand.php	/^		$this->_params = $params;$/;"	v
appClass	lib/Cake/TestSuite/CakeTestSuiteCommand.php	/^		$appClass = $reporter . 'Reporter';$/;"	v
coreClass	lib/Cake/TestSuite/CakeTestSuiteCommand.php	/^		$coreClass = 'Cake' . $reporter . 'Reporter';$/;"	v
getRunner	lib/Cake/TestSuite/CakeTestSuiteCommand.php	/^	public function getRunner($loader) {$/;"	f
groups	lib/Cake/TestSuite/CakeTestSuiteCommand.php	/^			$groups = $suite->getGroups();$/;"	v
handleFixture	lib/Cake/TestSuite/CakeTestSuiteCommand.php	/^	public function handleFixture($class) {$/;"	f
handleReporter	lib/Cake/TestSuite/CakeTestSuiteCommand.php	/^	public function handleReporter($reporter) {$/;"	f
object	lib/Cake/TestSuite/CakeTestSuiteCommand.php	/^			$object = new $appClass(null, $this->_params);$/;"	v
object	lib/Cake/TestSuite/CakeTestSuiteCommand.php	/^			$object = new $coreClass(null, $this->_params);$/;"	v
object	lib/Cake/TestSuite/CakeTestSuiteCommand.php	/^		$object = null;$/;"	v
reporter	lib/Cake/TestSuite/CakeTestSuiteCommand.php	/^		$reporter = ucwords($reporter);$/;"	v
result	lib/Cake/TestSuite/CakeTestSuiteCommand.php	/^			$result = $runner->doRun($suite, $this->arguments);$/;"	v
run	lib/Cake/TestSuite/CakeTestSuiteCommand.php	/^	public function run(array $argv, $exit = true) {$/;"	f
runner	lib/Cake/TestSuite/CakeTestSuiteCommand.php	/^		$runner = $this->getRunner($this->arguments['loader']);$/;"	v
suite	lib/Cake/TestSuite/CakeTestSuiteCommand.php	/^			$suite = $runner->getTest($/;"	v
suite	lib/Cake/TestSuite/CakeTestSuiteCommand.php	/^			$suite = $this->arguments['test'];$/;"	v
APP_TEST_CASES	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^define('APP_TEST_CASES', TESTS . 'Case');$/;"	d
CORE_TEST_CASES	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^define('CORE_TEST_CASES', CAKE . 'Test' . DS . 'Case');$/;"	d
CakeTestSuiteDispatcher	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^class CakeTestSuiteDispatcher {$/;"	c
Reporter	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^		$Reporter = $command->handleReporter($this->params['output']);$/;"	v
_Reporter	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^	protected static $_Reporter = null;$/;"	v
__construct	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^	public function __construct() {$/;"	f
_baseDir	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^		$this->_baseDir = ($dir === '\/') ? $dir : $dir . '\/';$/;"	v
_baseDir	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^	protected $_baseDir;$/;"	v
_baseUrl	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^		$this->_baseUrl = $_SERVER['PHP_SELF'];$/;"	v
_baseUrl	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^	protected $_baseUrl;$/;"	v
_checkPHPUnit	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^	protected function _checkPHPUnit() {$/;"	f
_checkXdebug	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^	protected function _checkXdebug() {$/;"	f
_paramsParsed	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^		$this->_paramsParsed = true;$/;"	v
_paramsParsed	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^	protected $_paramsParsed = false;$/;"	v
_parseParams	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^	protected function _parseParams() {$/;"	f
_runTestCase	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^	protected function _runTestCase() {$/;"	f
_testCaseList	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^	protected function _testCaseList() {$/;"	f
baseDir	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^			$baseDir = $this->_baseDir;$/;"	v
command	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^			$command = new CakeTestSuiteCommand('CakeTestLoader', $commandArgs);$/;"	v
command	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^		$command = new CakeTestSuiteCommand('', $this->params);$/;"	v
commandArgs	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^		$commandArgs = array($/;"	v
date	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^	public static function date($format) {$/;"	f
dir	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^		$dir = rtrim(dirname($this->_baseUrl), '\\\\');$/;"	v
dispatch	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^	public function dispatch() {$/;"	f
dispatcher	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^		$dispatcher = new CakeTestSuiteDispatcher();$/;"	v
found	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^		$found = $this->loadTestFramework();$/;"	v
loadTestFramework	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^	public function loadTestFramework() {$/;"	f
now	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^			$now = time();$/;"	v
now	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^		static $now;$/;"	v
options	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^		$options = array($/;"	v
output	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^		$output = ob_get_clean();$/;"	v
params	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^		$this->params = $params;$/;"	v
params	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^	public $params = array($/;"	v
phpunitPath	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^		$phpunitPath = 'phpunit' . DS . 'phpunit';$/;"	v
run	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^	public static function run() {$/;"	f
setParams	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^	public function setParams($params) {$/;"	f
time	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^	public static function time($reset = false) {$/;"	f
value	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^			$value = $this->_runTestCase();$/;"	v
value	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^			$value = $this->_testCaseList();$/;"	v
vendor	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^			$vendor = rtrim($vendor, DS);$/;"	v
vendors	lib/Cake/TestSuite/CakeTestSuiteDispatcher.php	/^		$vendors = array_merge(App::path('vendors'), $composerGlobalDir);$/;"	v
ControllerTestCase	lib/Cake/TestSuite/ControllerTestCase.php	/^abstract class ControllerTestCase extends CakeTestCase {$/;"	c
ControllerTestDispatcher	lib/Cake/TestSuite/ControllerTestCase.php	/^class ControllerTestDispatcher extends Dispatcher {$/;"	c
Dispatch	lib/Cake/TestSuite/ControllerTestCase.php	/^		$Dispatch = new ControllerTestDispatcher();$/;"	v
InterceptContentHelper	lib/Cake/TestSuite/ControllerTestCase.php	/^class InterceptContentHelper extends Helper {$/;"	c
_GET	lib/Cake/TestSuite/ControllerTestCase.php	/^				$_GET = $options['data'];$/;"	v
_GET	lib/Cake/TestSuite/ControllerTestCase.php	/^				$_GET = array();$/;"	v
_GET	lib/Cake/TestSuite/ControllerTestCase.php	/^		$_GET = $restore['get'];$/;"	v
_POST	lib/Cake/TestSuite/ControllerTestCase.php	/^				$_POST = $options['data'];$/;"	v
_POST	lib/Cake/TestSuite/ControllerTestCase.php	/^				$_POST = array();$/;"	v
_POST	lib/Cake/TestSuite/ControllerTestCase.php	/^		$_POST = $restore['post'];$/;"	v
__call	lib/Cake/TestSuite/ControllerTestCase.php	/^	public function __call($name, $arguments) {$/;"	f
_dirtyController	lib/Cake/TestSuite/ControllerTestCase.php	/^		$this->_dirtyController = false;$/;"	v
_dirtyController	lib/Cake/TestSuite/ControllerTestCase.php	/^		$this->_dirtyController = true;$/;"	v
_dirtyController	lib/Cake/TestSuite/ControllerTestCase.php	/^	protected $_dirtyController = false;$/;"	v
_getController	lib/Cake/TestSuite/ControllerTestCase.php	/^	protected function _getController($request, $response) {$/;"	f
_loadRoutes	lib/Cake/TestSuite/ControllerTestCase.php	/^	protected function _loadRoutes() {$/;"	f
_testAction	lib/Cake/TestSuite/ControllerTestCase.php	/^	protected function _testAction($url = '', $options = array()) {$/;"	f
afterRender	lib/Cake/TestSuite/ControllerTestCase.php	/^	public function afterRender($viewFile) {$/;"	f
autoMock	lib/Cake/TestSuite/ControllerTestCase.php	/^	public $autoMock = true;$/;"	v
component	lib/Cake/TestSuite/ControllerTestCase.php	/^				$component = $methods;$/;"	v
componentClass	lib/Cake/TestSuite/ControllerTestCase.php	/^			$componentClass = $name . 'Component';$/;"	v
componentObj	lib/Cake/TestSuite/ControllerTestCase.php	/^			$componentObj = $this->getMock($componentClass, $methods, array($controllerObj->Components, $config));$/;"	v
config	lib/Cake/TestSuite/ControllerTestCase.php	/^			$config = isset($controllerObj->components[$component]) ? $controllerObj->components[$component] : array();$/;"	v
config	lib/Cake/TestSuite/ControllerTestCase.php	/^		$config = ClassRegistry::config('Model');$/;"	v
contents	lib/Cake/TestSuite/ControllerTestCase.php	/^		$this->contents = $this->controller->response->body();$/;"	v
contents	lib/Cake/TestSuite/ControllerTestCase.php	/^	public $contents = null;$/;"	v
controller	lib/Cake/TestSuite/ControllerTestCase.php	/^			$this->controller = null;$/;"	v
controller	lib/Cake/TestSuite/ControllerTestCase.php	/^		$this->controller = $Dispatch->testController;$/;"	v
controller	lib/Cake/TestSuite/ControllerTestCase.php	/^		$this->controller = $controllerObj;$/;"	v
controller	lib/Cake/TestSuite/ControllerTestCase.php	/^	public $controller = null;$/;"	v
controllerObj	lib/Cake/TestSuite/ControllerTestCase.php	/^		$controllerObj = $this->getMock($name . 'Controller', $mocks['methods'], array(), '', false);$/;"	v
generate	lib/Cake/TestSuite/ControllerTestCase.php	/^	public function generate($controller, $mocks = array()) {$/;"	f
headers	lib/Cake/TestSuite/ControllerTestCase.php	/^			$this->headers = Router::currentRoute()->response->header();$/;"	v
headers	lib/Cake/TestSuite/ControllerTestCase.php	/^		$this->headers = $Dispatch->response->header();$/;"	v
headers	lib/Cake/TestSuite/ControllerTestCase.php	/^	public $headers = null;$/;"	v
loadRoutes	lib/Cake/TestSuite/ControllerTestCase.php	/^	public $loadRoutes = true;$/;"	v
methods	lib/Cake/TestSuite/ControllerTestCase.php	/^				$methods = array();$/;"	v
methods	lib/Cake/TestSuite/ControllerTestCase.php	/^				$methods = true;$/;"	v
mocks	lib/Cake/TestSuite/ControllerTestCase.php	/^		$mocks = array_merge_recursive(array($/;"	v
model	lib/Cake/TestSuite/ControllerTestCase.php	/^				$model = $methods;$/;"	v
object	lib/Cake/TestSuite/ControllerTestCase.php	/^			$object = $this->testController->Components->{$component};$/;"	v
params	lib/Cake/TestSuite/ControllerTestCase.php	/^		$params = array();$/;"	v
plugin	lib/Cake/TestSuite/ControllerTestCase.php	/^		$plugin = empty($request->params['plugin']) ? '' : Inflector::camelize($request->params['plugin']) . '.';$/;"	v
request	lib/Cake/TestSuite/ControllerTestCase.php	/^		$request = $this->getMock('CakeRequest');$/;"	v
request	lib/Cake/TestSuite/ControllerTestCase.php	/^		$request = $this->getMock('CakeRequest', array('_readInput'), array($url));$/;"	v
response	lib/Cake/TestSuite/ControllerTestCase.php	/^		$response = $this->getMock('CakeResponse', array('_sendHeader'));$/;"	v
restore	lib/Cake/TestSuite/ControllerTestCase.php	/^		$restore = array('get' => $_GET, 'post' => $_POST);$/;"	v
result	lib/Cake/TestSuite/ControllerTestCase.php	/^		$this->result = $Dispatch->dispatch($request, $Dispatch->response, $params);$/;"	v
result	lib/Cake/TestSuite/ControllerTestCase.php	/^	public $result = null;$/;"	v
testController	lib/Cake/TestSuite/ControllerTestCase.php	/^			$this->testController = parent::_getController($request, $response);$/;"	v
testController	lib/Cake/TestSuite/ControllerTestCase.php	/^	public $testController = null;$/;"	v
vars	lib/Cake/TestSuite/ControllerTestCase.php	/^		$this->vars = $this->controller->viewVars;$/;"	v
vars	lib/Cake/TestSuite/ControllerTestCase.php	/^		$this->vars = $this->result = $this->view = $this->contents = $this->headers = null;$/;"	v
vars	lib/Cake/TestSuite/ControllerTestCase.php	/^	public $vars = null;$/;"	v
view	lib/Cake/TestSuite/ControllerTestCase.php	/^			$this->view = $this->controller->View->fetch('__view_no_layout__');$/;"	v
view	lib/Cake/TestSuite/ControllerTestCase.php	/^	public $view = null;$/;"	v
BaseCoverageReport	lib/Cake/TestSuite/Coverage/BaseCoverageReport.php	/^abstract class BaseCoverageReport {$/;"	c
__construct	lib/Cake/TestSuite/Coverage/BaseCoverageReport.php	/^	public function __construct($coverage, CakeBaseReporter $reporter) {$/;"	f
_calculateCoveredLines	lib/Cake/TestSuite/Coverage/BaseCoverageReport.php	/^	protected function _calculateCoveredLines($fileLines, $coverageData) {$/;"	f
_rawCoverage	lib/Cake/TestSuite/Coverage/BaseCoverageReport.php	/^		$this->_rawCoverage = $coverage;$/;"	v
_rawCoverage	lib/Cake/TestSuite/Coverage/BaseCoverageReport.php	/^	protected $_rawCoverage;$/;"	v
_setParams	lib/Cake/TestSuite/Coverage/BaseCoverageReport.php	/^	protected function _setParams(CakeBaseReporter $reporter) {$/;"	f
_testNames	lib/Cake/TestSuite/Coverage/BaseCoverageReport.php	/^	protected $_testNames = array();$/;"	v
appTest	lib/Cake/TestSuite/Coverage/BaseCoverageReport.php	/^			$this->appTest = true;$/;"	v
appTest	lib/Cake/TestSuite/Coverage/BaseCoverageReport.php	/^	public $appTest = false;$/;"	v
covered	lib/Cake/TestSuite/Coverage/BaseCoverageReport.php	/^		$covered = $total = 0;$/;"	v
files	lib/Cake/TestSuite/Coverage/BaseCoverageReport.php	/^		$files = array();$/;"	v
filterCoverageDataByPath	lib/Cake/TestSuite/Coverage/BaseCoverageReport.php	/^	public function filterCoverageDataByPath($path) {$/;"	f
getPathFilter	lib/Cake/TestSuite/Coverage/BaseCoverageReport.php	/^	public function getPathFilter() {$/;"	f
path	lib/Cake/TestSuite/Coverage/BaseCoverageReport.php	/^			$path = App::pluginPath($this->pluginTest);$/;"	v
path	lib/Cake/TestSuite/Coverage/BaseCoverageReport.php	/^			$path = CAKE;$/;"	v
path	lib/Cake/TestSuite/Coverage/BaseCoverageReport.php	/^		$path = ROOT . DS;$/;"	v
pluginTest	lib/Cake/TestSuite/Coverage/BaseCoverageReport.php	/^			$this->pluginTest = Inflector::camelize($reporter->params['plugin']);$/;"	v
pluginTest	lib/Cake/TestSuite/Coverage/BaseCoverageReport.php	/^	public $pluginTest = false;$/;"	v
setCoverage	lib/Cake/TestSuite/Coverage/BaseCoverageReport.php	/^	public function setCoverage($coverage) {$/;"	f
HtmlCoverageReport	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^class HtmlCoverageReport extends BaseCoverageReport {$/;"	c
_covered	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^	protected $_covered = 0;$/;"	v
_guessSubjectName	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^	protected function _guessSubjectName($testReflection) {$/;"	f
_paintLine	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^	protected function _paintLine($line, $linenumber, $class, $coveringTests) {$/;"	f
_total	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^	protected $_total = 0;$/;"	v
basename	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^		$basename = basename($testReflection->getFilename());$/;"	v
class	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^					$class = (is_array($test) && isset($test['id'])) ? $test['id'] : $test;$/;"	v
class	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^				$class = 'covered';$/;"	v
class	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^				$class = 'uncovered';$/;"	v
class	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^			$class = 'ignored';$/;"	v
coverageData	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^		$coverageData = $this->filterCoverageDataByPath($pathFilter);$/;"	v
coverageFooter	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^	public function coverageFooter() {$/;"	f
coverageHeader	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^	public function coverageHeader($filename, $percent) {$/;"	f
coverageScript	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^	public function coverageScript() {$/;"	f
coverage_show_hide	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^		function coverage_show_hide(selector) {$/;"	f
coverage_toggle_all	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^		function coverage_toggle_all() {$/;"	f
coveredBy	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^			$coveredBy = "Covered by:\\n";$/;"	v
coveredBy	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^		$coveredBy = '';$/;"	v
coveringTests	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^				$coveringTests = array();$/;"	v
coveringTests	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^			$coveringTests = array();$/;"	v
diff	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^		$diff = array();$/;"	v
display	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^		$display = in_array($file, $this->_testNames) ? 'block' : 'none';$/;"	v
fileData	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^			$fileData = file($file);$/;"	v
filename	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^		$filename = basename($filename);$/;"	v
generateDiff	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^	public function generateDiff($filename, $fileLines, $coverageData) {$/;"	f
output	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^		$output = $this->coverageScript();$/;"	v
output	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^		$output = '';$/;"	v
pathFilter	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^		$pathFilter = $this->getPathFilter();$/;"	v
percentCovered	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^			$percentCovered = round(100 * $covered \/ $total, 2);$/;"	v
percentCovered	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^			$percentCovered = round(100 * $this->_covered \/ $this->_total, 2);$/;"	v
percentCovered	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^		$percentCovered = 100;$/;"	v
primary	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^		$primary = $display === 'block' ? 'primary' : '';$/;"	v
report	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^	public function report() {$/;"	f
subject	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^		$subject = str_replace('Test.php', '', $basename);$/;"	v
testReflection	lib/Cake/TestSuite/Coverage/HtmlCoverageReport.php	/^					$testReflection = new ReflectionClass(current(explode('::', $class)));$/;"	v
TextCoverageReport	lib/Cake/TestSuite/Coverage/TextCoverageReport.php	/^class TextCoverageReport extends BaseCoverageReport {$/;"	c
coverageData	lib/Cake/TestSuite/Coverage/TextCoverageReport.php	/^		$coverageData = $this->filterCoverageDataByPath($pathFilter);$/;"	v
fileData	lib/Cake/TestSuite/Coverage/TextCoverageReport.php	/^			$fileData = file($file);$/;"	v
generateDiff	lib/Cake/TestSuite/Coverage/TextCoverageReport.php	/^	public function generateDiff($filename, $fileLines, $coverageData) {$/;"	f
output	lib/Cake/TestSuite/Coverage/TextCoverageReport.php	/^		$output = "\\nCoverage Report:\\n\\n";$/;"	v
pathFilter	lib/Cake/TestSuite/Coverage/TextCoverageReport.php	/^		$pathFilter = $this->getPathFilter();$/;"	v
percentCovered	lib/Cake/TestSuite/Coverage/TextCoverageReport.php	/^		$percentCovered = round(100 * $covered \/ $total, 2);$/;"	v
report	lib/Cake/TestSuite/Coverage/TextCoverageReport.php	/^	public function report() {$/;"	f
CakeFixtureManager	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^class CakeFixtureManager {$/;"	c
_db	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^		$this->_db = $db;$/;"	v
_db	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^	protected $_db = null;$/;"	v
_fixtureMap	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^	protected $_fixtureMap = array();$/;"	v
_initDb	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^	protected function _initDb() {$/;"	f
_initialized	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^		$this->_initialized = true;$/;"	v
_initialized	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^	protected $_initialized = false;$/;"	v
_loadFixtures	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^	protected function _loadFixtures($fixtures) {$/;"	f
_loaded	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^	protected $_loaded = array();$/;"	v
_parseFixturePath	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^	protected function _parseFixturePath($fixturePath) {$/;"	f
_setupTable	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^	protected function _setupTable($fixture, $db = null, $drop = true) {$/;"	f
additionalPath	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^		$additionalPath = '';$/;"	v
className	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^				$className = Inflector::camelize($fixture);$/;"	v
db	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^						$db = ConnectionManager::getDataSource($ds);$/;"	v
db	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^					$db = ConnectionManager::getDataSource($ds);$/;"	v
db	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^				$db = $this->_db;$/;"	v
db	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^				$db = ConnectionManager::getDataSource($fixture->useDbConfig);$/;"	v
db	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^		$db = ConnectionManager::getDataSource('test');$/;"	v
exists	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^		$exists = in_array($table, $sources);$/;"	v
explodedFixture	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^				$explodedFixture = explode('.', $fixture, 3);$/;"	v
firstPath	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^				$firstPath = str_replace(array(APP, CAKE_CORE_INCLUDE_PATH, ROOT), '', $fixturePaths[0] . DS . $className . 'Fixture.php');$/;"	v
fixture	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^				$fixture = $fixtureParsedPath['fixture'];$/;"	v
fixture	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^				$fixture = $this->_loaded[$f];$/;"	v
fixture	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^				$fixture = substr($fixture, strlen('core.'));$/;"	v
fixture	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^			$fixture = $this->_fixtureMap[$name];$/;"	v
fixture	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^		$fixture = array_pop($pathTokenArray);$/;"	v
fixtureClass	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^					$fixtureClass = $className . 'Fixture';$/;"	v
fixtureFile	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^					$fixtureFile = $path . DS . $className . 'Fixture.php';$/;"	v
fixtureFile	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^			$fixtureFile = null;$/;"	v
fixtureIndex	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^			$fixtureIndex = $fixture;$/;"	v
fixtureParsedPath	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^				$fixtureParsedPath = $this->_parseFixturePath($explodedFixture[2]);$/;"	v
fixtureParsedPath	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^				$fixtureParsedPath = $this->_parseFixturePath($fixturePrefixLess);$/;"	v
fixturePaths	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^				$fixturePaths = array($/;"	v
fixturePrefixLess	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^				$fixturePrefixLess = substr($fixture, strlen('app.'));$/;"	v
fixtures	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^		$fixtures = !empty($test->fixtures) ? $test->fixtures : array();$/;"	v
fixtures	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^		$fixtures = $test->fixtures;$/;"	v
fixturize	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^	public function fixturize($test) {$/;"	f
load	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^	public function load(CakeTestCase $test) {$/;"	f
loadSingle	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^	public function loadSingle($name, $db = null, $dropTables = true) {$/;"	f
loaded	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^					$loaded = true;$/;"	v
loaded	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^			$loaded = false;$/;"	v
pathTokenArray	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^		$pathTokenArray = explode('\/', $fixturePath);$/;"	v
pluginName	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^				$pluginName = $explodedFixture[1];$/;"	v
shutDown	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^	public function shutDown() {$/;"	f
sources	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^		$sources = (array)$db->listSources();$/;"	v
table	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^		$table = $db->config['prefix'] . $fixture->table;$/;"	v
unload	lib/Cake/TestSuite/Fixture/CakeFixtureManager.php	/^	public function unload(CakeTestCase $test) {$/;"	f
CakeTestFixture	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^class CakeTestFixture {$/;"	c
Schema	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^		$this->Schema = new CakeSchema(array('name' => 'TestSuite', 'connection' => $connection));$/;"	v
__construct	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^	public function __construct() {$/;"	f
canUseMemory	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^					$canUseMemory = false;$/;"	v
canUseMemory	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^			$canUseMemory = $this->canUseMemory;$/;"	v
canUseMemory	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^	public $canUseMemory = true;$/;"	v
connection	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^			$connection = $this->useDbConfig;$/;"	v
connection	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^		$connection = 'test';$/;"	v
create	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^	public function create($db) {$/;"	f
created	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^			$this->created = array_diff($this->created, array($db->configKeyName));$/;"	v
created	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^	public $created = array();$/;"	v
db	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^				$db = $model->getDataSource();$/;"	v
db	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^				$db = ConnectionManager::getDataSource($import['connection']);$/;"	v
db	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^	public $db = null;$/;"	v
default	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^				$default = array_fill_keys($fields, null);$/;"	v
drop	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^	public function drop($db) {$/;"	f
fields	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^					$fields = array_merge($fields, array_keys(array_intersect_key($record, $this->fields)));$/;"	v
fields	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^				$fields = array();$/;"	v
fields	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^				$fields = array_unique($fields);$/;"	v
fields	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^				$this->fields = $model->schema(true);$/;"	v
fields	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^	public $fields = array();$/;"	v
fullDebug	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^		$fullDebug = $db->fullDebug;$/;"	v
import	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^			$import = array_merge($/;"	v
init	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^	public function init() {$/;"	f
insert	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^	public function insert($db) {$/;"	f
merge	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^					$merge = array_values(array_merge($default, $record));$/;"	v
message	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^				$message = __d($/;"	v
model	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^				$model = new $modelClass(null, null, $import['connection']);$/;"	v
model	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^				$model = new Model(null, $import['table'], $import['connection']);$/;"	v
msg	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^			$msg = __d($/;"	v
name	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^				$this->name = $matches[1];$/;"	v
name	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^				$this->name = get_class($this);$/;"	v
name	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^	public $name = null;$/;"	v
nested	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^				$nested = $db->useNestedTransactions;$/;"	v
primaryKey	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^				$this->primaryKey = $model->primaryKey;$/;"	v
primaryKey	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^			$this->primaryKey = 'id';$/;"	v
primaryKey	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^	public $primaryKey = null;$/;"	v
query	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^				$query = array($/;"	v
records	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^					$this->records = Hash::extract($records, '{n}.' . $model->alias);$/;"	v
records	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^				$records = $db->fetchAll($db->buildStatement($query, $model), false, $model->alias);$/;"	v
records	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^				$this->records = array();$/;"	v
records	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^	public $records = array();$/;"	v
result	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^				$result = $db->insertMulti($this->table, $fields, $values);$/;"	v
return	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^		$return = $db->truncate($this->table);$/;"	v
table	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^				$this->table = $db->fullTableName($model, false, false);$/;"	v
table	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^				$this->table = str_replace($db->config['prefix'], '', $this->table);$/;"	v
table	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^			$this->table = Inflector::underscore(Inflector::pluralize($this->name));$/;"	v
table	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^	public $table = null;$/;"	v
truncate	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^	public function truncate($db) {$/;"	f
type	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^					$type = $args;$/;"	v
type	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^					$type = $args['type'];$/;"	v
useDbConfig	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^	public $useDbConfig = 'test';$/;"	v
values	lib/Cake/TestSuite/Fixture/CakeTestFixture.php	/^			$values = array();$/;"	v
CakeTestModel	lib/Cake/TestSuite/Fixture/CakeTestModel.php	/^class CakeTestModel extends Model {$/;"	c
__construct	lib/Cake/TestSuite/Fixture/CakeTestModel.php	/^	public function __construct($id = false, $table = null, $ds = null) {$/;"	f
cacheSources	lib/Cake/TestSuite/Fixture/CakeTestModel.php	/^	public $cacheSources = false;$/;"	v
db	lib/Cake/TestSuite/Fixture/CakeTestModel.php	/^		$db = $this->getDataSource();$/;"	v
order	lib/Cake/TestSuite/Fixture/CakeTestModel.php	/^		$this->order = array($this->alias . '.' . $this->primaryKey => 'ASC');$/;"	v
save	lib/Cake/TestSuite/Fixture/CakeTestModel.php	/^	public function save($data = null, $validate = true, $fieldList = array()) {$/;"	f
useDbConfig	lib/Cake/TestSuite/Fixture/CakeTestModel.php	/^	public $useDbConfig = 'test';$/;"	v
CakeBaseReporter	lib/Cake/TestSuite/Reporter/CakeBaseReporter.php	/^class CakeBaseReporter extends PHPUnit_TextUI_ResultPrinter {$/;"	c
__construct	lib/Cake/TestSuite/Reporter/CakeBaseReporter.php	/^	public function __construct($charset = 'utf-8', $params = array()) {$/;"	f
_characterSet	lib/Cake/TestSuite/Reporter/CakeBaseReporter.php	/^		$this->_characterSet = $charset;$/;"	v
_characterSet	lib/Cake/TestSuite/Reporter/CakeBaseReporter.php	/^	protected $_characterSet;$/;"	v
_headerSent	lib/Cake/TestSuite/Reporter/CakeBaseReporter.php	/^	protected $_headerSent = false;$/;"	v
addError	lib/Cake/TestSuite/Reporter/CakeBaseReporter.php	/^	public function addError(PHPUnit_Framework_Test $test, Exception $e, $time) {$/;"	f
addFailure	lib/Cake/TestSuite/Reporter/CakeBaseReporter.php	/^	public function addFailure(PHPUnit_Framework_Test $test, PHPUnit_Framework_AssertionFailedError $e, $time) {$/;"	f
addIncompleteTest	lib/Cake/TestSuite/Reporter/CakeBaseReporter.php	/^	public function addIncompleteTest(PHPUnit_Framework_Test $test, Exception $e, $time) {$/;"	f
addSkippedTest	lib/Cake/TestSuite/Reporter/CakeBaseReporter.php	/^	public function addSkippedTest(PHPUnit_Framework_Test $test, Exception $e, $time) {$/;"	f
baseUrl	lib/Cake/TestSuite/Reporter/CakeBaseReporter.php	/^	public function baseUrl() {$/;"	f
charset	lib/Cake/TestSuite/Reporter/CakeBaseReporter.php	/^			$charset = 'utf-8';$/;"	v
endTest	lib/Cake/TestSuite/Reporter/CakeBaseReporter.php	/^	public function endTest(PHPUnit_Framework_Test $test, $time) {$/;"	f
endTestSuite	lib/Cake/TestSuite/Reporter/CakeBaseReporter.php	/^	public function endTestSuite(PHPUnit_Framework_TestSuite $suite) {$/;"	f
paintDocumentEnd	lib/Cake/TestSuite/Reporter/CakeBaseReporter.php	/^	public function paintDocumentEnd() {$/;"	f
paintDocumentStart	lib/Cake/TestSuite/Reporter/CakeBaseReporter.php	/^	public function paintDocumentStart() {$/;"	f
paintResult	lib/Cake/TestSuite/Reporter/CakeBaseReporter.php	/^	public function paintResult(PHPUnit_Framework_TestResult $result) {$/;"	f
paintTestMenu	lib/Cake/TestSuite/Reporter/CakeBaseReporter.php	/^	public function paintTestMenu() {$/;"	f
params	lib/Cake/TestSuite/Reporter/CakeBaseReporter.php	/^		$this->params = $params;$/;"	v
params	lib/Cake/TestSuite/Reporter/CakeBaseReporter.php	/^	public $params = array();$/;"	v
printResult	lib/Cake/TestSuite/Reporter/CakeBaseReporter.php	/^	public function printResult(PHPUnit_Framework_TestResult $result) {$/;"	f
startTest	lib/Cake/TestSuite/Reporter/CakeBaseReporter.php	/^	public function startTest(PHPUnit_Framework_Test $test) {$/;"	f
startTestSuite	lib/Cake/TestSuite/Reporter/CakeBaseReporter.php	/^	public function startTestSuite(PHPUnit_Framework_TestSuite $suite) {$/;"	f
testCaseList	lib/Cake/TestSuite/Reporter/CakeBaseReporter.php	/^	public function testCaseList() {$/;"	f
testList	lib/Cake/TestSuite/Reporter/CakeBaseReporter.php	/^		$testList = CakeTestLoader::generateTestList($this->params);$/;"	v
CakeHtmlReporter	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^class CakeHtmlReporter extends CakeBaseReporter {$/;"	c
_getStackTrace	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^	protected function _getStackTrace(Exception $e) {$/;"	f
_headerSent	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^		$this->_headerSent = true;$/;"	v
_htmlEntities	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^	protected function _htmlEntities($message) {$/;"	f
_paintLinks	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^	protected function _paintLinks() {$/;"	f
_queryString	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^	protected function _queryString($url) {$/;"	f
actualMsg	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^				$actualMsg = $failure->getActualAsString();$/;"	v
actualMsg	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^		$actualMsg = $expectedMsg = null;$/;"	v
baseDir	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^		$baseDir = $this->params['baseDir'];$/;"	v
buffer	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^			$buffer = "<h3>" . Inflector::humanize($plugin) . " Test Cases:<\/h3>\\n<ul>";$/;"	v
buffer	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^			$buffer = "<h3>Core Test Cases:<\/h3>\\n<ul>";$/;"	v
buffer	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^		$buffer = "<h3>App Test Cases:<\/h3>\\n<ul>";$/;"	v
cases	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^		$cases = $this->baseUrl() . '?show=cases';$/;"	v
colour	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^		$colour = ($result->failureCount() + $result->errorCount() > 0 ? "red" : "green");$/;"	v
core	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^		$core = $this->params['core'];$/;"	v
coverage	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^			$coverage = $result->getCodeCoverage();$/;"	v
expectedMsg	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^				$expectedMsg = $failure->getExpectedAsString();$/;"	v
failure	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^			$failure = $message->getComparisonFailure();$/;"	v
out	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^		$out = '?';$/;"	v
out	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^		$out = array();$/;"	v
paintCoverage	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^	public function paintCoverage(array $coverage) {$/;"	f
paintDocumentEnd	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^	public function paintDocumentEnd() {$/;"	f
paintDocumentStart	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^	public function paintDocumentStart() {$/;"	f
paintException	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^	public function paintException($message, $test) {$/;"	f
paintFail	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^	public function paintFail($message, $test) {$/;"	f
paintFooter	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^	public function paintFooter($result) {$/;"	f
paintFormattedMessage	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^	public function paintFormattedMessage($message) {$/;"	f
paintHeader	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^	public function paintHeader() {$/;"	f
paintPass	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^	public function paintPass(PHPUnit_Framework_Test $test, $time = null) {$/;"	f
paintSkip	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^	public function paintSkip($message, $test) {$/;"	f
paintTestMenu	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^	public function paintTestMenu() {$/;"	f
params	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^		$params = array();$/;"	v
plugin	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^		$plugin = $this->params['plugin'];$/;"	v
plugins	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^		$plugins = App::objects('plugin', null, false);$/;"	v
query	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^		$query = $this->_queryString($query);$/;"	v
report	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^				$report = $coverage->getData();$/;"	v
report	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^				$report = $coverage->getSummary();$/;"	v
reporter	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^		$reporter = new HtmlCoverageReport($coverage, $this);$/;"	v
sendContentType	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^	public function sendContentType() {$/;"	f
sendNoCacheHeaders	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^	public function sendNoCacheHeaders() {$/;"	f
show	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^		$show = $query = array();$/;"	v
show	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^		$show = $this->_queryString($show);$/;"	v
startTestSuite	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^	public function startTestSuite(PHPUnit_Framework_TestSuite $suite) {$/;"	f
testCaseList	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^	public function testCaseList() {$/;"	f
testCases	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^		$testCases = parent::testCaseList();$/;"	v
testName	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^		$testName = get_class($test) . '(' . $test->getName() . ')';$/;"	v
title	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^			$title = explode(DS, str_replace('.test.php', '', $testCase));$/;"	v
title	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^			$title = implode(' \/ ', $title);$/;"	v
trace	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^		$trace = $e->getTrace();$/;"	v
trace	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^		$trace = $this->_getStackTrace($message);$/;"	v
urlExtra	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^			$urlExtra = '&core=true';$/;"	v
urlExtra	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^			$urlExtra = '&plugin=' . $plugin;$/;"	v
urlExtra	lib/Cake/TestSuite/Reporter/CakeHtmlReporter.php	/^		$urlExtra = null;$/;"	v
CakeTextReporter	lib/Cake/TestSuite/Reporter/CakeTextReporter.php	/^class CakeTextReporter extends CakeBaseReporter {$/;"	c
app	lib/Cake/TestSuite/Reporter/CakeTextReporter.php	/^		$app = $this->params['app'];$/;"	v
buffer	lib/Cake/TestSuite/Reporter/CakeTextReporter.php	/^			$buffer = "App Test Cases:\\n";$/;"	v
buffer	lib/Cake/TestSuite/Reporter/CakeTextReporter.php	/^			$buffer = Inflector::humanize($plugin) . " Test Cases:\\n";$/;"	v
buffer	lib/Cake/TestSuite/Reporter/CakeTextReporter.php	/^		$buffer = "Core Test Cases:\\n";$/;"	v
context	lib/Cake/TestSuite/Reporter/CakeTextReporter.php	/^		$context = $context[2];$/;"	v
context	lib/Cake/TestSuite/Reporter/CakeTextReporter.php	/^		$context = $message->getTrace();$/;"	v
coverage	lib/Cake/TestSuite/Reporter/CakeTextReporter.php	/^			$coverage = $result->getCodeCoverage()->getSummary();$/;"	v
message	lib/Cake/TestSuite/Reporter/CakeTextReporter.php	/^		$message = 'Unexpected exception of type [' . get_class($exception) .$/;"	v
paintCoverage	lib/Cake/TestSuite/Reporter/CakeTextReporter.php	/^	public function paintCoverage($coverage) {$/;"	f
paintDocumentStart	lib/Cake/TestSuite/Reporter/CakeTextReporter.php	/^	public function paintDocumentStart() {$/;"	f
paintException	lib/Cake/TestSuite/Reporter/CakeTextReporter.php	/^	public function paintException($exception) {$/;"	f
paintFail	lib/Cake/TestSuite/Reporter/CakeTextReporter.php	/^	public function paintFail($message) {$/;"	f
paintFooter	lib/Cake/TestSuite/Reporter/CakeTextReporter.php	/^	public function paintFooter($result) {$/;"	f
paintFormattedMessage	lib/Cake/TestSuite/Reporter/CakeTextReporter.php	/^	public function paintFormattedMessage($message) {$/;"	f
paintHeader	lib/Cake/TestSuite/Reporter/CakeTextReporter.php	/^	public function paintHeader() {$/;"	f
paintPass	lib/Cake/TestSuite/Reporter/CakeTextReporter.php	/^	public function paintPass() {$/;"	f
paintSkip	lib/Cake/TestSuite/Reporter/CakeTextReporter.php	/^	public function paintSkip($message) {$/;"	f
plugin	lib/Cake/TestSuite/Reporter/CakeTextReporter.php	/^		$plugin = $this->params['plugin'];$/;"	v
realContext	lib/Cake/TestSuite/Reporter/CakeTextReporter.php	/^		$realContext = $context[3];$/;"	v
reporter	lib/Cake/TestSuite/Reporter/CakeTextReporter.php	/^		$reporter = new TextCoverageReport($coverage, $this);$/;"	v
testCaseList	lib/Cake/TestSuite/Reporter/CakeTextReporter.php	/^	public function testCaseList() {$/;"	f
testCases	lib/Cake/TestSuite/Reporter/CakeTextReporter.php	/^		$testCases = parent::testCaseList();$/;"	v
View	lib/Cake/TestSuite/templates/footer.php	/^			$View = new View($null, false);$/;"	v
null	lib/Cake/TestSuite/templates/footer.php	/^			$null = null;$/;"	v
CakeNumber	lib/Cake/Utility/CakeNumber.php	/^class CakeNumber {$/;"	c
_currencies	lib/Cake/Utility/CakeNumber.php	/^	protected static $_currencies = array($/;"	v
_currencyDefaults	lib/Cake/Utility/CakeNumber.php	/^	protected static $_currencyDefaults = array($/;"	v
_defaultCurrency	lib/Cake/Utility/CakeNumber.php	/^	protected static $_defaultCurrency = 'USD';$/;"	v
_numberFormat	lib/Cake/Utility/CakeNumber.php	/^	protected static function _numberFormat($value, $places = 0, $decimals = '.', $thousands = ',') {$/;"	f
_numberFormatSupport	lib/Cake/Utility/CakeNumber.php	/^	protected static $_numberFormatSupport = null;$/;"	v
abs	lib/Cake/Utility/CakeNumber.php	/^		$abs = abs($value);$/;"	v
addFormat	lib/Cake/Utility/CakeNumber.php	/^	public static function addFormat($formatName, $options) {$/;"	f
after	lib/Cake/Utility/CakeNumber.php	/^			$after = substr($value, $foundDecimal);$/;"	v
after	lib/Cake/Utility/CakeNumber.php	/^		$after = '';$/;"	v
before	lib/Cake/Utility/CakeNumber.php	/^			$before = $options;$/;"	v
before	lib/Cake/Utility/CakeNumber.php	/^		$before = $after = null;$/;"	v
currency	lib/Cake/Utility/CakeNumber.php	/^			$currency = self::defaultCurrency();$/;"	v
currency	lib/Cake/Utility/CakeNumber.php	/^	public static function currency($value, $currency = null, $options = array()) {$/;"	f
decimals	lib/Cake/Utility/CakeNumber.php	/^			$decimals = $options;$/;"	v
decimals	lib/Cake/Utility/CakeNumber.php	/^		$decimals = '.';$/;"	v
defaultCurrency	lib/Cake/Utility/CakeNumber.php	/^	public static function defaultCurrency($currency = null) {$/;"	f
defaults	lib/Cake/Utility/CakeNumber.php	/^			$defaults = array('before' => '$', 'places' => 2, 'thousands' => ',', 'decimals' => '.');$/;"	v
defaults	lib/Cake/Utility/CakeNumber.php	/^			$defaults = self::$_currencies[$currency];$/;"	v
defaults	lib/Cake/Utility/CakeNumber.php	/^		$defaults = self::$_currencyDefaults;$/;"	v
escape	lib/Cake/Utility/CakeNumber.php	/^		$escape = true;$/;"	v
format	lib/Cake/Utility/CakeNumber.php	/^	public static function format($value, $options = false) {$/;"	f
formatDelta	lib/Cake/Utility/CakeNumber.php	/^	public static function formatDelta($value, $options = array()) {$/;"	f
foundDecimal	lib/Cake/Utility/CakeNumber.php	/^		$foundDecimal = strpos($value, '.');$/;"	v
fromReadableSize	lib/Cake/Utility/CakeNumber.php	/^	public static function fromReadableSize($size, $default = false) {$/;"	f
i	lib/Cake/Utility/CakeNumber.php	/^			$i = array_search(substr($size, -1), array('K', 'M', 'G', 'T', 'P'));$/;"	v
i	lib/Cake/Utility/CakeNumber.php	/^		$i = array_search(substr($size, -2), array('KB', 'MB', 'GB', 'TB', 'PB'));$/;"	v
l	lib/Cake/Utility/CakeNumber.php	/^			$l = -1;$/;"	v
l	lib/Cake/Utility/CakeNumber.php	/^		$l = -2;$/;"	v
multiply	lib/Cake/Utility/CakeNumber.php	/^				$multiply = pow(10, $options['fractionExponent']);$/;"	v
out	lib/Cake/Utility/CakeNumber.php	/^		$out = $before . self::_numberFormat($value, $places, $decimals, $thousands) . $after;$/;"	v
places	lib/Cake/Utility/CakeNumber.php	/^			$places = $options;$/;"	v
places	lib/Cake/Utility/CakeNumber.php	/^		$places = 0;$/;"	v
places	lib/Cake/Utility/CakeNumber.php	/^		$places = isset($options['places']) ? $options['places'] : 0;$/;"	v
position	lib/Cake/Utility/CakeNumber.php	/^		$position = $options[$symbolKey . 'Position'] !== 'after' ? 'before' : 'after';$/;"	v
precision	lib/Cake/Utility/CakeNumber.php	/^	public static function precision($value, $precision = 3) {$/;"	f
result	lib/Cake/Utility/CakeNumber.php	/^				$result = $options['negative'] . $result;$/;"	v
result	lib/Cake/Utility/CakeNumber.php	/^				$result = '(' . $result . ')';$/;"	v
result	lib/Cake/Utility/CakeNumber.php	/^		$result = $options['before'] = $options['after'] = null;$/;"	v
result	lib/Cake/Utility/CakeNumber.php	/^		$result = self::format($abs, $options);$/;"	v
separators	lib/Cake/Utility/CakeNumber.php	/^		$separators = array(',', '.', '-', ':');$/;"	v
sign	lib/Cake/Utility/CakeNumber.php	/^		$sign = $value > 0 ? '+' : '';$/;"	v
size	lib/Cake/Utility/CakeNumber.php	/^			$size = substr($size, 0, $l);$/;"	v
size	lib/Cake/Utility/CakeNumber.php	/^			$size = substr($size, 0, -1);$/;"	v
size	lib/Cake/Utility/CakeNumber.php	/^		$size = strtoupper($size);$/;"	v
symbolKey	lib/Cake/Utility/CakeNumber.php	/^				$symbolKey = 'fraction';$/;"	v
symbolKey	lib/Cake/Utility/CakeNumber.php	/^		$symbolKey = 'whole';$/;"	v
thousands	lib/Cake/Utility/CakeNumber.php	/^			$thousands = $options;$/;"	v
thousands	lib/Cake/Utility/CakeNumber.php	/^		$thousands = ',';$/;"	v
toPercentage	lib/Cake/Utility/CakeNumber.php	/^	public static function toPercentage($value, $precision = 2, $options = array()) {$/;"	f
toReadableSize	lib/Cake/Utility/CakeNumber.php	/^	public static function toReadableSize($size) {$/;"	f
value	lib/Cake/Utility/CakeNumber.php	/^				$value = $value * $multiply;$/;"	v
value	lib/Cake/Utility/CakeNumber.php	/^			$value = $foundThousand;$/;"	v
value	lib/Cake/Utility/CakeNumber.php	/^			$value = substr($value, 0, $foundDecimal);$/;"	v
value	lib/Cake/Utility/CakeNumber.php	/^		$value = (float)$value;$/;"	v
value	lib/Cake/Utility/CakeNumber.php	/^		$value = number_format($value, $places, '.', '');$/;"	v
value	lib/Cake/Utility/CakeNumber.php	/^		$value = self::_numberFormat($value, $places, '.', '');$/;"	v
CakeTime	lib/Cake/Utility/CakeTime.php	/^class CakeTime {$/;"	c
__get	lib/Cake/Utility/CakeTime.php	/^	public function __get($name) {$/;"	f
__set	lib/Cake/Utility/CakeTime.php	/^	public function __set($name, $value) {$/;"	f
_strftime	lib/Cake/Utility/CakeTime.php	/^	protected static function _strftime($format, $date) {$/;"	f
_time	lib/Cake/Utility/CakeTime.php	/^	protected static $_time = null;$/;"	v
_translateSpecifier	lib/Cake/Utility/CakeTime.php	/^	protected static function _translateSpecifier($specifier) {$/;"	f
abday	lib/Cake/Utility/CakeTime.php	/^				$abday = __dc('cake', 'abday', 5);$/;"	v
aboutAgo	lib/Cake/Utility/CakeTime.php	/^			$aboutAgo = array($/;"	v
aboutIn	lib/Cake/Utility/CakeTime.php	/^			$aboutIn = array($/;"	v
absoluteString	lib/Cake/Utility/CakeTime.php	/^				$absoluteString = $options['absoluteString'];$/;"	v
absoluteString	lib/Cake/Utility/CakeTime.php	/^		$absoluteString = __d('cake', 'on %s');$/;"	v
accuracy	lib/Cake/Utility/CakeTime.php	/^					$accuracy = array_merge($accuracy, $options['accuracy']);$/;"	v
accuracy	lib/Cake/Utility/CakeTime.php	/^		$accuracy = self::$wordAccuracy;$/;"	v
backwards	lib/Cake/Utility/CakeTime.php	/^		$backwards = ($inSeconds > $now);$/;"	v
begin	lib/Cake/Utility/CakeTime.php	/^		$begin = date('Y-m-d', $begin) . ' 00:00:00';$/;"	v
begin	lib/Cake/Utility/CakeTime.php	/^		$begin = self::fromString($begin, $timezone);$/;"	v
clone	lib/Cake/Utility/CakeTime.php	/^			$clone = clone $dateString;$/;"	v
complete	lib/Cake/Utility/CakeTime.php	/^				$complete = __dc('cake', 't_fmt_ampm', 5);$/;"	v
containsDummyDate	lib/Cake/Utility/CakeTime.php	/^		$containsDummyDate = (is_string($dateString) && substr($dateString, 0, 10) === '0000-00-00');$/;"	v
convert	lib/Cake/Utility/CakeTime.php	/^	public static function convert($serverTime, $timezone) {$/;"	f
convertSpecifiers	lib/Cake/Utility/CakeTime.php	/^	public static function convertSpecifiers($format, $time = null) {$/;"	f
currentDate	lib/Cake/Utility/CakeTime.php	/^			$currentDate = new DateTime('@' . $date);$/;"	v
d	lib/Cake/Utility/CakeTime.php	/^		$d = self::_strftime("%w", $date);$/;"	v
date	lib/Cake/Utility/CakeTime.php	/^			$date = $dateString;$/;"	v
date	lib/Cake/Utility/CakeTime.php	/^			$date = (int)$clone->format('U') + $clone->getOffset();$/;"	v
date	lib/Cake/Utility/CakeTime.php	/^			$date = (int)$dateString->format('U');$/;"	v
date	lib/Cake/Utility/CakeTime.php	/^			$date = intval($dateString);$/;"	v
date	lib/Cake/Utility/CakeTime.php	/^			$date = new DateTime($dateString, $timezone);$/;"	v
date	lib/Cake/Utility/CakeTime.php	/^			$date = new DateTime('@' . $dateString);$/;"	v
date	lib/Cake/Utility/CakeTime.php	/^			$date = strtotime($dateString);$/;"	v
date	lib/Cake/Utility/CakeTime.php	/^		$date = ceil(date('m', $time) \/ 3);$/;"	v
date	lib/Cake/Utility/CakeTime.php	/^		$date = self::fromString($date, $timezone);$/;"	v
date	lib/Cake/Utility/CakeTime.php	/^		$date = self::fromString($dateString, $timezone);$/;"	v
dateString	lib/Cake/Utility/CakeTime.php	/^			$dateString = (int)$dateString;$/;"	v
dateString	lib/Cake/Utility/CakeTime.php	/^			$dateString = time();$/;"	v
day	lib/Cake/Utility/CakeTime.php	/^					$day = ' ' . $day;$/;"	v
day	lib/Cake/Utility/CakeTime.php	/^				$day = __dc('cake', 'day', 5);$/;"	v
day	lib/Cake/Utility/CakeTime.php	/^				$day = date('j', self::$_time);$/;"	v
day	lib/Cake/Utility/CakeTime.php	/^		$day = array($/;"	v
dayAsSql	lib/Cake/Utility/CakeTime.php	/^	public static function dayAsSql($dateString, $fieldName, $timezone = null) {$/;"	f
days	lib/Cake/Utility/CakeTime.php	/^					$days = ($daysInFutureMonth - $past['d']) + $future['d'];$/;"	v
days	lib/Cake/Utility/CakeTime.php	/^					$days = ($daysInPastMonth - $past['d']) + $future['d'];$/;"	v
days	lib/Cake/Utility/CakeTime.php	/^				$days = $days - ($weeks * 7);$/;"	v
days	lib/Cake/Utility/CakeTime.php	/^				$days = $future['d'] - $past['d'];$/;"	v
days	lib/Cake/Utility/CakeTime.php	/^			$days = floor($diff \/ 86400);$/;"	v
daysAsSql	lib/Cake/Utility/CakeTime.php	/^	public static function daysAsSql($begin, $end, $fieldName, $timezone = null) {$/;"	f
daysInFutureMonth	lib/Cake/Utility/CakeTime.php	/^				$daysInFutureMonth = date('t', mktime(0, 0, 0, $future['m'] - 1, 1, $future['Y']));$/;"	v
daysInPastMonth	lib/Cake/Utility/CakeTime.php	/^				$daysInPastMonth = date('t', $pastTime);$/;"	v
default	lib/Cake/Utility/CakeTime.php	/^				$default = array('am' => 0, 'pm' => 1);$/;"	v
diff	lib/Cake/Utility/CakeTime.php	/^			$diff = $diff - ($days * 86400);$/;"	v
diff	lib/Cake/Utility/CakeTime.php	/^			$diff = $diff - ($hours * 3600);$/;"	v
diff	lib/Cake/Utility/CakeTime.php	/^			$diff = $diff - ($minutes * 60);$/;"	v
diff	lib/Cake/Utility/CakeTime.php	/^		$diff = $futureTime - $pastTime;$/;"	v
encoding	lib/Cake/Utility/CakeTime.php	/^		$encoding = Configure::read('App.encoding');$/;"	v
end	lib/Cake/Utility/CakeTime.php	/^				$end = $options['end'];$/;"	v
end	lib/Cake/Utility/CakeTime.php	/^		$end = date('Y-m-d', $end) . ' 23:59:59';$/;"	v
end	lib/Cake/Utility/CakeTime.php	/^		$end = self::$wordEnd;$/;"	v
end	lib/Cake/Utility/CakeTime.php	/^		$end = self::fromString($end, $timezone);$/;"	v
fNum	lib/Cake/Utility/CakeTime.php	/^		$fNum = str_replace(array('year', 'month', 'week', 'day', 'hour', 'minute', 'second'), array(1, 2, 3, 4, 5, 6, 7), $fWord);$/;"	v
fWord	lib/Cake/Utility/CakeTime.php	/^			$fWord = $accuracy['day'];$/;"	v
fWord	lib/Cake/Utility/CakeTime.php	/^			$fWord = $accuracy['hour'];$/;"	v
fWord	lib/Cake/Utility/CakeTime.php	/^			$fWord = $accuracy['minute'];$/;"	v
fWord	lib/Cake/Utility/CakeTime.php	/^			$fWord = $accuracy['month'];$/;"	v
fWord	lib/Cake/Utility/CakeTime.php	/^			$fWord = $accuracy['week'];$/;"	v
fWord	lib/Cake/Utility/CakeTime.php	/^			$fWord = $accuracy['year'];$/;"	v
fWord	lib/Cake/Utility/CakeTime.php	/^		$fWord = $accuracy['second'];$/;"	v
filter	lib/Cake/Utility/CakeTime.php	/^				$filter = DateTimeZone::ALL;$/;"	v
filter	lib/Cake/Utility/CakeTime.php	/^			$filter = null;$/;"	v
format	lib/Cake/Utility/CakeTime.php	/^				$format = $options['format'];$/;"	v
format	lib/Cake/Utility/CakeTime.php	/^				$format = __dc('cake', 'am_pm', 5);$/;"	v
format	lib/Cake/Utility/CakeTime.php	/^				$format = __dc('cake', 'd_fmt', 5);$/;"	v
format	lib/Cake/Utility/CakeTime.php	/^				$format = __dc('cake', 'd_t_fmt', 5);$/;"	v
format	lib/Cake/Utility/CakeTime.php	/^				$format = __dc('cake', 't_fmt', 5);$/;"	v
format	lib/Cake/Utility/CakeTime.php	/^				$format = utf8_encode($format);$/;"	v
format	lib/Cake/Utility/CakeTime.php	/^			$format = $options;$/;"	v
format	lib/Cake/Utility/CakeTime.php	/^			$format = '%x';$/;"	v
format	lib/Cake/Utility/CakeTime.php	/^			$format = self::$niceFormat;$/;"	v
format	lib/Cake/Utility/CakeTime.php	/^		$format = self::$wordFormat;$/;"	v
format	lib/Cake/Utility/CakeTime.php	/^		$format = strftime($format, $date);$/;"	v
format	lib/Cake/Utility/CakeTime.php	/^	public static function format($date, $format = null, $default = false, $timezone = null) {$/;"	f
fromString	lib/Cake/Utility/CakeTime.php	/^	public static function fromString($dateString, $timezone = null) {$/;"	f
futureTime	lib/Cake/Utility/CakeTime.php	/^			$futureTime = $inSeconds;$/;"	v
futureTime	lib/Cake/Utility/CakeTime.php	/^		$futureTime = $now;$/;"	v
gmt	lib/Cake/Utility/CakeTime.php	/^	public static function gmt($dateString = null) {$/;"	f
gmtTime	lib/Cake/Utility/CakeTime.php	/^		$gmtTime = $serverTime - $serverOffset;$/;"	v
hours	lib/Cake/Utility/CakeTime.php	/^			$hours = (int)floor(abs($userOffset));$/;"	v
hours	lib/Cake/Utility/CakeTime.php	/^			$hours = floor($diff \/ 3600);$/;"	v
i18nFormat	lib/Cake/Utility/CakeTime.php	/^	public static function i18nFormat($date, $format = null, $default = false, $timezone = null) {$/;"	f
identifiers	lib/Cake/Utility/CakeTime.php	/^			$identifiers = DateTimeZone::listIdentifiers($filter, $country);$/;"	v
identifiers	lib/Cake/Utility/CakeTime.php	/^			$identifiers = DateTimeZone::listIdentifiers();$/;"	v
inSeconds	lib/Cake/Utility/CakeTime.php	/^		$inSeconds = self::fromString($dateTime, $timezone);$/;"	v
interval	lib/Cake/Utility/CakeTime.php	/^		$interval = self::fromString('+' . $timeInterval);$/;"	v
interval	lib/Cake/Utility/CakeTime.php	/^		$interval = self::fromString('-' . $timeInterval);$/;"	v
isFuture	lib/Cake/Utility/CakeTime.php	/^	public static function isFuture($dateString, $timezone = null) {$/;"	f
isPast	lib/Cake/Utility/CakeTime.php	/^	public static function isPast($dateString, $timezone = null) {$/;"	f
isThisMonth	lib/Cake/Utility/CakeTime.php	/^	public static function isThisMonth($dateString, $timezone = null) {$/;"	f
isThisWeek	lib/Cake/Utility/CakeTime.php	/^	public static function isThisWeek($dateString, $timezone = null) {$/;"	f
isThisYear	lib/Cake/Utility/CakeTime.php	/^	public static function isThisYear($dateString, $timezone = null) {$/;"	f
isToday	lib/Cake/Utility/CakeTime.php	/^	public static function isToday($dateString, $timezone = null) {$/;"	f
isTomorrow	lib/Cake/Utility/CakeTime.php	/^	public static function isTomorrow($dateString, $timezone = null) {$/;"	f
isWithinNext	lib/Cake/Utility/CakeTime.php	/^	public static function isWithinNext($timeInterval, $dateString, $timezone = null) {$/;"	f
item	lib/Cake/Utility/CakeTime.php	/^				$item = explode('\/', $tz, 2);$/;"	v
listTimezones	lib/Cake/Utility/CakeTime.php	/^	public static function listTimezones($filter = null, $country = null, $group = true) {$/;"	f
meridiem	lib/Cake/Utility/CakeTime.php	/^					$meridiem = $format[$meridiem];$/;"	v
meridiem	lib/Cake/Utility/CakeTime.php	/^				$meridiem = $default[date('a', self::$_time)];$/;"	v
minutes	lib/Cake/Utility/CakeTime.php	/^			$minutes = (int)(fmod(abs($userOffset), $hours) * 60);$/;"	v
minutes	lib/Cake/Utility/CakeTime.php	/^			$minutes = floor($diff \/ 60);$/;"	v
months	lib/Cake/Utility/CakeTime.php	/^				$months = $months - ($years * 12);$/;"	v
months	lib/Cake/Utility/CakeTime.php	/^				$months = $months - 12;$/;"	v
months	lib/Cake/Utility/CakeTime.php	/^				$months = 11;$/;"	v
months	lib/Cake/Utility/CakeTime.php	/^				$months = __dc('cake', 'abmon', 5);$/;"	v
months	lib/Cake/Utility/CakeTime.php	/^				$months = __dc('cake', 'mon', 5);$/;"	v
months	lib/Cake/Utility/CakeTime.php	/^			$months = $future['m'] + ((12 * $years) - $past['m']);$/;"	v
nice	lib/Cake/Utility/CakeTime.php	/^	public static function nice($dateString = null, $timezone = null, $format = null) {$/;"	f
niceFormat	lib/Cake/Utility/CakeTime.php	/^	public static $niceFormat = '%a, %b %eS %Y, %H:%M';$/;"	v
niceShort	lib/Cake/Utility/CakeTime.php	/^	public static function niceShort($dateString = null, $timezone = null) {$/;"	f
niceShortFormat	lib/Cake/Utility/CakeTime.php	/^	public static $niceShortFormat = '%B %d, %H:%M';$/;"	v
now	lib/Cake/Utility/CakeTime.php	/^		$now = self::fromString('now', $timezone);$/;"	v
now	lib/Cake/Utility/CakeTime.php	/^		$now = self::fromString(time(), $timezone);$/;"	v
pastTime	lib/Cake/Utility/CakeTime.php	/^			$pastTime = $now;$/;"	v
pastTime	lib/Cake/Utility/CakeTime.php	/^		$pastTime = $inSeconds;$/;"	v
regex	lib/Cake/Utility/CakeTime.php	/^				$regex = '#^((Africa|America|Antartica|Arctic|Asia|Atlantic|Australia|Europe|Indian|Pacific)\/|UTC)#';$/;"	v
regex	lib/Cake/Utility/CakeTime.php	/^			$regex = $filter;$/;"	v
regex	lib/Cake/Utility/CakeTime.php	/^		$regex = null;$/;"	v
relativeDate	lib/Cake/Utility/CakeTime.php	/^		$relativeDate = '';$/;"	v
relativeString	lib/Cake/Utility/CakeTime.php	/^				$relativeString = $options['relativeString'];$/;"	v
relativeString	lib/Cake/Utility/CakeTime.php	/^		$relativeString = __d('cake', '%s ago');$/;"	v
return	lib/Cake/Utility/CakeTime.php	/^			$return = array();$/;"	v
seconds	lib/Cake/Utility/CakeTime.php	/^			$seconds = $diff;$/;"	v
serverOffset	lib/Cake/Utility/CakeTime.php	/^		$serverOffset = $serverTimezone->getOffset(new DateTime('@' . $serverTime));$/;"	v
serverOffset	lib/Cake/Utility/CakeTime.php	/^	public static function serverOffset() {$/;"	f
serverTimezone	lib/Cake/Utility/CakeTime.php	/^			$serverTimezone = new DateTimeZone(date_default_timezone_get());$/;"	v
serverTimezone	lib/Cake/Utility/CakeTime.php	/^		static $serverTimezone = null;$/;"	v
time	lib/Cake/Utility/CakeTime.php	/^			$time = self::fromString($dateString);$/;"	v
time	lib/Cake/Utility/CakeTime.php	/^			$time = time();$/;"	v
time	lib/Cake/Utility/CakeTime.php	/^		$time = self::fromString($dateString);$/;"	v
time	lib/Cake/Utility/CakeTime.php	/^		$time = self::fromString($format, $timezone);$/;"	v
time	lib/Cake/Utility/CakeTime.php	/^		$time = time();$/;"	v
timeAgoInWords	lib/Cake/Utility/CakeTime.php	/^	public static function timeAgoInWords($dateTime, $options = array()) {$/;"	f
timeInterval	lib/Cake/Utility/CakeTime.php	/^			$timeInterval = $tmp . ' ' . __d('cake', 'days');$/;"	v
timestamp	lib/Cake/Utility/CakeTime.php	/^		$timestamp = self::fromString($dateString, $timezone);$/;"	v
timezone	lib/Cake/Utility/CakeTime.php	/^					$timezone = date_default_timezone_get();$/;"	v
timezone	lib/Cake/Utility/CakeTime.php	/^				$timezone = $options['timezone'];$/;"	v
timezone	lib/Cake/Utility/CakeTime.php	/^				$timezone = $options['userOffset'];$/;"	v
timezone	lib/Cake/Utility/CakeTime.php	/^				$timezone = Configure::read('Config.timezone');$/;"	v
timezone	lib/Cake/Utility/CakeTime.php	/^				$timezone = new DateTimeZone($timezone);$/;"	v
timezone	lib/Cake/Utility/CakeTime.php	/^			$timezone = ($userOffset < 0 ? '-' : '+') . str_pad($hours, 2, '0', STR_PAD_LEFT) . str_pad($minutes, 2, '0', STR_PAD_LEFT);$/;"	v
timezone	lib/Cake/Utility/CakeTime.php	/^			$timezone = Configure::read('Config.timezone');$/;"	v
timezone	lib/Cake/Utility/CakeTime.php	/^			$timezone = new DateTimeZone($timezone);$/;"	v
timezone	lib/Cake/Utility/CakeTime.php	/^			$timezone = new DateTimeZone('UTC');$/;"	v
timezone	lib/Cake/Utility/CakeTime.php	/^			$timezone = self::timezone($timezone);$/;"	v
timezone	lib/Cake/Utility/CakeTime.php	/^		$timezone = '+0000';$/;"	v
timezone	lib/Cake/Utility/CakeTime.php	/^		$timezone = null;$/;"	v
timezone	lib/Cake/Utility/CakeTime.php	/^	public static function timezone($timezone = null) {$/;"	f
tmp	lib/Cake/Utility/CakeTime.php	/^		$tmp = str_replace(' ', '', $timeInterval);$/;"	v
toAtom	lib/Cake/Utility/CakeTime.php	/^	public static function toAtom($dateString, $timezone = null) {$/;"	f
toQuarter	lib/Cake/Utility/CakeTime.php	/^	public static function toQuarter($dateString, $range = false) {$/;"	f
toRSS	lib/Cake/Utility/CakeTime.php	/^	public static function toRSS($dateString, $timezone = null) {$/;"	f
toServer	lib/Cake/Utility/CakeTime.php	/^	public static function toServer($dateString, $timezone = null, $format = 'Y-m-d H:i:s') {$/;"	f
toUnix	lib/Cake/Utility/CakeTime.php	/^	public static function toUnix($dateString, $timezone = null) {$/;"	f
tomorrow	lib/Cake/Utility/CakeTime.php	/^		$tomorrow = self::fromString('tomorrow', $timezone);$/;"	v
tz	lib/Cake/Utility/CakeTime.php	/^				$tz = $timezone;$/;"	v
tz	lib/Cake/Utility/CakeTime.php	/^				$tz = new DateTimeZone($timezone);$/;"	v
tz	lib/Cake/Utility/CakeTime.php	/^		static $tz = null;$/;"	v
userOffset	lib/Cake/Utility/CakeTime.php	/^			$userOffset = $timezone * (60 * 60);$/;"	v
userOffset	lib/Cake/Utility/CakeTime.php	/^			$userOffset = $timezone->getOffset($currentDate) \/ 60 \/ 60;$/;"	v
userOffset	lib/Cake/Utility/CakeTime.php	/^			$userOffset = $timezone->getOffset(new DateTime('@' . $gmtTime));$/;"	v
userOffset	lib/Cake/Utility/CakeTime.php	/^		$userOffset = $timezone;$/;"	v
userTime	lib/Cake/Utility/CakeTime.php	/^		$userTime = $gmtTime + $userOffset;$/;"	v
valid	lib/Cake/Utility/CakeTime.php	/^				$valid = !Multibyte::checkMultibyte($format);$/;"	v
valid	lib/Cake/Utility/CakeTime.php	/^				$valid = mb_check_encoding($format, $encoding);$/;"	v
wasWithinLast	lib/Cake/Utility/CakeTime.php	/^	public static function wasWithinLast($timeInterval, $dateString, $timezone = null) {$/;"	f
wasYesterday	lib/Cake/Utility/CakeTime.php	/^	public static function wasYesterday($dateString, $timezone = null) {$/;"	f
weeks	lib/Cake/Utility/CakeTime.php	/^				$weeks = floor($days \/ 7);$/;"	v
wordAccuracy	lib/Cake/Utility/CakeTime.php	/^	public static $wordAccuracy = array($/;"	v
wordEnd	lib/Cake/Utility/CakeTime.php	/^	public static $wordEnd = '+1 month';$/;"	v
wordFormat	lib/Cake/Utility/CakeTime.php	/^	public static $wordFormat = 'j\/n\/y';$/;"	v
y	lib/Cake/Utility/CakeTime.php	/^			$y = ' %Y';$/;"	v
y	lib/Cake/Utility/CakeTime.php	/^		$y = '';$/;"	v
year	lib/Cake/Utility/CakeTime.php	/^		$year = date('Y', $time);$/;"	v
years	lib/Cake/Utility/CakeTime.php	/^				$years = $years + 1;$/;"	v
years	lib/Cake/Utility/CakeTime.php	/^				$years = floor($months \/ 12);$/;"	v
years	lib/Cake/Utility/CakeTime.php	/^			$years = $future['Y'] - $past['Y'];$/;"	v
years	lib/Cake/Utility/CakeTime.php	/^			$years = $months = $weeks = $days = $hours = $minutes = $seconds = 0;$/;"	v
years	lib/Cake/Utility/CakeTime.php	/^			$years = $months = $weeks = 0;$/;"	v
yesterday	lib/Cake/Utility/CakeTime.php	/^		$yesterday = self::fromString('yesterday', $timezone);$/;"	v
ClassRegistry	lib/Cake/Utility/ClassRegistry.php	/^class ClassRegistry {$/;"	c
_config	lib/Cake/Utility/ClassRegistry.php	/^	protected $_config = array();$/;"	v
_duplicate	lib/Cake/Utility/ClassRegistry.php	/^	protected function &_duplicate($alias, $class) {$/;"	f
_getMap	lib/Cake/Utility/ClassRegistry.php	/^	protected function _getMap($key) {$/;"	f
_map	lib/Cake/Utility/ClassRegistry.php	/^	protected $_map = array();$/;"	v
_objects	lib/Cake/Utility/ClassRegistry.php	/^	protected $_objects = array();$/;"	v
_this	lib/Cake/Utility/ClassRegistry.php	/^		$_this = ClassRegistry::getInstance();$/;"	v
addObject	lib/Cake/Utility/ClassRegistry.php	/^	public static function addObject($key, $object) {$/;"	f
alias	lib/Cake/Utility/ClassRegistry.php	/^				$alias = $settings['alias'];$/;"	v
appModel	lib/Cake/Utility/ClassRegistry.php	/^						$appModel = $plugin . 'AppModel';$/;"	v
appModel	lib/Cake/Utility/ClassRegistry.php	/^					$appModel = 'AppModel';$/;"	v
availableDs	lib/Cake/Utility/ClassRegistry.php	/^								$availableDs = array_keys(ConnectionManager::enumConnectionObjects());$/;"	v
availableDs	lib/Cake/Utility/ClassRegistry.php	/^		$availableDs = null;$/;"	v
class	lib/Cake/Utility/ClassRegistry.php	/^				$class = $settings['class'];$/;"	v
config	lib/Cake/Utility/ClassRegistry.php	/^	public static function config($type, $param = array()) {$/;"	f
count	lib/Cake/Utility/ClassRegistry.php	/^		$count = count($objects);$/;"	v
defaultProperties	lib/Cake/Utility/ClassRegistry.php	/^						$defaultProperties = $reflection->getDefaultProperties();$/;"	v
defaults	lib/Cake/Utility/ClassRegistry.php	/^			$defaults = $_this->_config['Model'];$/;"	v
defaults	lib/Cake/Utility/ClassRegistry.php	/^		$defaults = array();$/;"	v
duplicate	lib/Cake/Utility/ClassRegistry.php	/^				$duplicate = $model;$/;"	v
duplicate	lib/Cake/Utility/ClassRegistry.php	/^		$duplicate = false;$/;"	v
flush	lib/Cake/Utility/ClassRegistry.php	/^	public static function flush() {$/;"	f
getInstance	lib/Cake/Utility/ClassRegistry.php	/^	public static function getInstance() {$/;"	f
getObject	lib/Cake/Utility/ClassRegistry.php	/^	public static function getObject($key) {$/;"	f
init	lib/Cake/Utility/ClassRegistry.php	/^	public static function init($class, $strict = false) {$/;"	f
instance	lib/Cake/Utility/ClassRegistry.php	/^						$instance = $reflection->newInstance($settings);$/;"	v
instance	lib/Cake/Utility/ClassRegistry.php	/^						$instance = $reflection->newInstance();$/;"	v
instance	lib/Cake/Utility/ClassRegistry.php	/^						$instance = new $appModel($settings);$/;"	v
instance	lib/Cake/Utility/ClassRegistry.php	/^						$instance = null;$/;"	v
instance	lib/Cake/Utility/ClassRegistry.php	/^		static $instance = array();$/;"	v
isKeySet	lib/Cake/Utility/ClassRegistry.php	/^	public static function isKeySet($key) {$/;"	f
key	lib/Cake/Utility/ClassRegistry.php	/^			$key = $_this->_getMap($key);$/;"	v
key	lib/Cake/Utility/ClassRegistry.php	/^		$key = Inflector::underscore($key);$/;"	v
keys	lib/Cake/Utility/ClassRegistry.php	/^	public static function keys() {$/;"	f
map	lib/Cake/Utility/ClassRegistry.php	/^	public static function map($key, $name) {$/;"	f
mapKeys	lib/Cake/Utility/ClassRegistry.php	/^	public static function mapKeys() {$/;"	f
model	lib/Cake/Utility/ClassRegistry.php	/^				$model = $_this->_duplicate($alias, $class);$/;"	v
model	lib/Cake/Utility/ClassRegistry.php	/^			$model = $this->getObject($alias);$/;"	v
name	lib/Cake/Utility/ClassRegistry.php	/^		$name = Inflector::underscore($name);$/;"	v
objects	lib/Cake/Utility/ClassRegistry.php	/^				$objects = array($class);$/;"	v
objects	lib/Cake/Utility/ClassRegistry.php	/^			$objects = $class;$/;"	v
objects	lib/Cake/Utility/ClassRegistry.php	/^			$objects = array(array('class' => $class));$/;"	v
param	lib/Cake/Utility/ClassRegistry.php	/^			$param = $type;$/;"	v
pluginPath	lib/Cake/Utility/ClassRegistry.php	/^					$pluginPath = $plugin . '.';$/;"	v
pluginPath	lib/Cake/Utility/ClassRegistry.php	/^				$pluginPath = null;$/;"	v
reflection	lib/Cake/Utility/ClassRegistry.php	/^					$reflection = new ReflectionClass($class);$/;"	v
removeObject	lib/Cake/Utility/ClassRegistry.php	/^	public static function removeObject($key) {$/;"	f
return	lib/Cake/Utility/ClassRegistry.php	/^				$return = $_this->_objects[$key];$/;"	v
return	lib/Cake/Utility/ClassRegistry.php	/^			$return = $_this->_objects[$key];$/;"	v
return	lib/Cake/Utility/ClassRegistry.php	/^		$return = false;$/;"	v
testing	lib/Cake/Utility/ClassRegistry.php	/^					$testing = isset($settings['testing']) ? $settings['testing'] : false;$/;"	v
type	lib/Cake/Utility/ClassRegistry.php	/^			$type = 'Model';$/;"	v
useDbConfig	lib/Cake/Utility/ClassRegistry.php	/^								$useDbConfig = 'test_' . $useDbConfig;$/;"	v
useDbConfig	lib/Cake/Utility/ClassRegistry.php	/^							$useDbConfig = $defaultProperties['useDbConfig'];$/;"	v
Debugger	lib/Cake/Utility/Debugger.php	/^class Debugger {$/;"	c
E_RECOVERABLE_ERROR	lib/Cake/Utility/Debugger.php	/^			define('E_RECOVERABLE_ERROR', 4096);$/;"	d
__construct	lib/Cake/Utility/Debugger.php	/^	public function __construct() {$/;"	f
_array	lib/Cake/Utility/Debugger.php	/^	protected static function _array(array $var, $depth, $indent) {$/;"	f
_data	lib/Cake/Utility/Debugger.php	/^	protected $_data = array();$/;"	v
_export	lib/Cake/Utility/Debugger.php	/^	protected static function _export($var, $depth, $indent) {$/;"	f
_highlight	lib/Cake/Utility/Debugger.php	/^	protected static function _highlight($str) {$/;"	f
_object	lib/Cake/Utility/Debugger.php	/^	protected static function _object($var, $depth, $indent) {$/;"	f
_outputFormat	lib/Cake/Utility/Debugger.php	/^	protected $_outputFormat = 'js';$/;"	v
_templates	lib/Cake/Utility/Debugger.php	/^	protected $_templates = array($/;"	v
_trace	lib/Cake/Utility/Debugger.php	/^		$_trace = array($/;"	v
addFormat	lib/Cake/Utility/Debugger.php	/^	public static function addFormat($format, array $strings) {$/;"	f
added	lib/Cake/Utility/Debugger.php	/^			$added = true;$/;"	v
added	lib/Cake/Utility/Debugger.php	/^		$added = false;$/;"	v
args	lib/Cake/Utility/Debugger.php	/^						$args = array();$/;"	v
back	lib/Cake/Utility/Debugger.php	/^		$back = array();$/;"	v
backtrace	lib/Cake/Utility/Debugger.php	/^		$backtrace = debug_backtrace();$/;"	v
break	lib/Cake/Utility/Debugger.php	/^			$break = "\\n" . str_repeat("\\t", $indent);$/;"	v
break	lib/Cake/Utility/Debugger.php	/^		$break = $end = null;$/;"	v
checkSecurityKeys	lib/Cake/Utility/Debugger.php	/^	public static function checkSecurityKeys() {$/;"	f
className	lib/Cake/Utility/Debugger.php	/^		$className = get_class($var);$/;"	v
code	lib/Cake/Utility/Debugger.php	/^			$code = $this->excerpt($file['file'], $file['line'] - 1, 1);$/;"	v
code	lib/Cake/Utility/Debugger.php	/^		$code = '';$/;"	v
context	lib/Cake/Utility/Debugger.php	/^			$context = h($context);$/;"	v
context	lib/Cake/Utility/Debugger.php	/^		$context = array();$/;"	v
count	lib/Cake/Utility/Debugger.php	/^		$count = count($backtrace);$/;"	v
data	lib/Cake/Utility/Debugger.php	/^			$data = $self->_data;$/;"	v
data	lib/Cake/Utility/Debugger.php	/^			$data = explode("\\n", $data);$/;"	v
data	lib/Cake/Utility/Debugger.php	/^		$data = compact($/;"	v
data	lib/Cake/Utility/Debugger.php	/^		$data = file_get_contents($file);$/;"	v
data	lib/Cake/Utility/Debugger.php	/^		$data = null;$/;"	v
defaults	lib/Cake/Utility/Debugger.php	/^		$defaults = array($/;"	v
docRef	lib/Cake/Utility/Debugger.php	/^		$docRef = ini_get('docref_root');$/;"	v
dump	lib/Cake/Utility/Debugger.php	/^	public static function dump($var, $depth = 3) {$/;"	f
e	lib/Cake/Utility/Debugger.php	/^		$e = '<pre class="cake-error">';$/;"	v
e	lib/Cake/Utility/Debugger.php	/^		$e = '<pre class="cake-error"><b>{:error}<\/b> ({:code}) : {:description} ';$/;"	v
end	lib/Cake/Utility/Debugger.php	/^			$end = "\\n" . str_repeat("\\t", $indent - 1);$/;"	v
error	lib/Cake/Utility/Debugger.php	/^				$error = 'Deprecated';$/;"	v
error	lib/Cake/Utility/Debugger.php	/^				$error = 'Fatal Error';$/;"	v
error	lib/Cake/Utility/Debugger.php	/^				$error = 'Notice';$/;"	v
error	lib/Cake/Utility/Debugger.php	/^				$error = 'Warning';$/;"	v
errors	lib/Cake/Utility/Debugger.php	/^	public $errors = array();$/;"	v
excerpt	lib/Cake/Utility/Debugger.php	/^	public static function excerpt($file, $line, $context = 2) {$/;"	f
exportVar	lib/Cake/Utility/Debugger.php	/^	public static function exportVar($var, $depth = 3) {$/;"	f
file	lib/Cake/Utility/Debugger.php	/^			$file = $files[0];$/;"	v
file	lib/Cake/Utility/Debugger.php	/^			$file = $files[1];$/;"	v
file	lib/Cake/Utility/Debugger.php	/^			$file = '[internal]';$/;"	v
file	lib/Cake/Utility/Debugger.php	/^		$file = null;$/;"	v
files	lib/Cake/Utility/Debugger.php	/^		$files = $this->trace(array('start' => $data['start'], 'format' => 'points'));$/;"	v
filters	lib/Cake/Utility/Debugger.php	/^				$filters = array($/;"	v
format	lib/Cake/Utility/Debugger.php	/^			$format = false;$/;"	v
getInstance	lib/Cake/Utility/Debugger.php	/^	public static function getInstance($class = null) {$/;"	f
getType	lib/Cake/Utility/Debugger.php	/^	public static function getType($var) {$/;"	f
highlight	lib/Cake/Utility/Debugger.php	/^			$highlight = str_replace($/;"	v
highlight	lib/Cake/Utility/Debugger.php	/^		$highlight = highlight_string($str, true);$/;"	v
info	lib/Cake/Utility/Debugger.php	/^		$info = '';$/;"	v
info	lib/Cake/Utility/Debugger.php	/^		$info = compact('code', 'description', 'file', 'line');$/;"	v
infoData	lib/Cake/Utility/Debugger.php	/^		$infoData = compact('code', 'context', 'trace');$/;"	v
insertOpts	lib/Cake/Utility/Debugger.php	/^		$insertOpts = array('before' => '{:', 'after' => '}');$/;"	v
instance	lib/Cake/Utility/Debugger.php	/^		static $instance = array();$/;"	v
key	lib/Cake/Utility/Debugger.php	/^						$key = $reflectionProperty->name;$/;"	v
level	lib/Cake/Utility/Debugger.php	/^				$level = LOG_ERR;$/;"	v
level	lib/Cake/Utility/Debugger.php	/^				$level = LOG_NOTICE;$/;"	v
level	lib/Cake/Utility/Debugger.php	/^				$level = LOG_WARNING;$/;"	v
line	lib/Cake/Utility/Debugger.php	/^			$line = '??';$/;"	v
lines	lib/Cake/Utility/Debugger.php	/^		$lines = array();$/;"	v
link	lib/Cake/Utility/Debugger.php	/^		$link = '<a href="javascript:void(0);" onclick="document.getElementById(\\'{:id}-code\\')';$/;"	v
link	lib/Cake/Utility/Debugger.php	/^		$link = '<a href="javascript:void(0);" onclick="document.getElementById(\\'{:id}-context\\')';$/;"	v
links	lib/Cake/Utility/Debugger.php	/^		$links = array();$/;"	v
links	lib/Cake/Utility/Debugger.php	/^		$links = implode(' ', $links);$/;"	v
log	lib/Cake/Utility/Debugger.php	/^	public static function log($var, $level = LOG_DEBUG, $depth = 3) {$/;"	f
next	lib/Cake/Utility/Debugger.php	/^				$next = array_merge($_trace, $backtrace[$i + 1]);$/;"	v
objectVars	lib/Cake/Utility/Debugger.php	/^			$objectVars = get_object_vars($var);$/;"	v
options	lib/Cake/Utility/Debugger.php	/^		$options = Hash::merge($defaults, $options);$/;"	v
out	lib/Cake/Utility/Debugger.php	/^		$out = "array(";$/;"	v
out	lib/Cake/Utility/Debugger.php	/^		$out = '';$/;"	v
output	lib/Cake/Utility/Debugger.php	/^	public static function output($format = null, $strings = array()) {$/;"	f
outputAs	lib/Cake/Utility/Debugger.php	/^	public static function outputAs($format = null) {$/;"	f
outputError	lib/Cake/Utility/Debugger.php	/^	public function outputError($data) {$/;"	f
property	lib/Cake/Utility/Debugger.php	/^						$property = $reflectionProperty->getValue($var);$/;"	v
props	lib/Cake/Utility/Debugger.php	/^		$props = array();$/;"	v
ref	lib/Cake/Utility/Debugger.php	/^				$ref = new ReflectionObject($var);$/;"	v
reference	lib/Cake/Utility/Debugger.php	/^					$reference = $signature . '(';$/;"	v
reflectionProperties	lib/Cake/Utility/Debugger.php	/^					$reflectionProperties = $ref->getProperties($filter);$/;"	v
replace	lib/Cake/Utility/Debugger.php	/^		$replace = array_intersect_key($secrets, $var);$/;"	v
secrets	lib/Cake/Utility/Debugger.php	/^		$secrets = array($/;"	v
self	lib/Cake/Utility/Debugger.php	/^		$self = Debugger::getInstance();$/;"	v
showError	lib/Cake/Utility/Debugger.php	/^	public static function showError($code, $description, $file = null, $line = null, $context = null) {$/;"	f
signature	lib/Cake/Utility/Debugger.php	/^					$signature = $next['class'] . '::' . $next['function'];$/;"	v
signature	lib/Cake/Utility/Debugger.php	/^				$signature = $reference = $next['function'];$/;"	v
signature	lib/Cake/Utility/Debugger.php	/^			$signature = $reference = '[main]';$/;"	v
source	lib/Cake/Utility/Debugger.php	/^		$source = self::trace(array('start' => 1)) . "\\n";$/;"	v
str	lib/Cake/Utility/Debugger.php	/^			$str = "<?php \\n" . $str;$/;"	v
string	lib/Cake/Utility/Debugger.php	/^			$string = str_replace(array("\\r\\n", "\\n"), "", self::_highlight($data[$i]));$/;"	v
t	lib/Cake/Utility/Debugger.php	/^		$t = '<div id="{:id}-trace" class="cake-stack-trace" style="display: none;">';$/;"	v
tpl	lib/Cake/Utility/Debugger.php	/^					$tpl = $self->_templates[$options['format']]['traceLine'];$/;"	v
tpl	lib/Cake/Utility/Debugger.php	/^					$tpl = $self->_templates['base']['traceLine'];$/;"	v
tpl	lib/Cake/Utility/Debugger.php	/^		$tpl = array_merge($this->_templates['base'], $this->_templates[$this->_outputFormat]);$/;"	v
trace	lib/Cake/Utility/Debugger.php	/^			$trace = array_merge(array('file' => '[internal]', 'line' => '??'), $backtrace[$i]);$/;"	v
trace	lib/Cake/Utility/Debugger.php	/^		$trace = $this->trace(array('start' => $data['start'], 'depth' => '20'));$/;"	v
trace	lib/Cake/Utility/Debugger.php	/^	public static function trace($options = array()) {$/;"	f
trimPath	lib/Cake/Utility/Debugger.php	/^	public static function trimPath($path) {$/;"	f
val	lib/Cake/Utility/Debugger.php	/^					$val = '[recursion]';$/;"	v
val	lib/Cake/Utility/Debugger.php	/^					$val = self::_export($val, $depth, $indent);$/;"	v
value	lib/Cake/Utility/Debugger.php	/^						$value = self::_export($property, $depth - 1, $indent);$/;"	v
value	lib/Cake/Utility/Debugger.php	/^				$value = implode("\\n", $value);$/;"	v
value	lib/Cake/Utility/Debugger.php	/^				$value = self::_export($value, $depth - 1, $indent);$/;"	v
var	lib/Cake/Utility/Debugger.php	/^		$var = $replace + $var;$/;"	v
vars	lib/Cake/Utility/Debugger.php	/^		$vars = array();$/;"	v
File	lib/Cake/Utility/File.php	/^class File {$/;"	c
Folder	lib/Cake/Utility/File.php	/^		$this->Folder = new Folder(dirname($path), $create, $mode);$/;"	v
Folder	lib/Cake/Utility/File.php	/^	public $Folder = null;$/;"	v
__construct	lib/Cake/Utility/File.php	/^	public function __construct($path, $create = false, $mode = 0755) {$/;"	f
__destruct	lib/Cake/Utility/File.php	/^	public function __destruct() {$/;"	f
append	lib/Cake/Utility/File.php	/^	public function append($data, $force = false) {$/;"	f
clearStatCache	lib/Cake/Utility/File.php	/^	public function clearStatCache($all = false) {$/;"	f
close	lib/Cake/Utility/File.php	/^	public function close() {$/;"	f
copy	lib/Cake/Utility/File.php	/^	public function copy($dest, $overwrite = true) {$/;"	f
create	lib/Cake/Utility/File.php	/^	public function create() {$/;"	f
data	lib/Cake/Utility/File.php	/^		$data = '';$/;"	v
delete	lib/Cake/Utility/File.php	/^	public function delete() {$/;"	f
dir	lib/Cake/Utility/File.php	/^		$dir = $this->Folder->pwd();$/;"	v
executable	lib/Cake/Utility/File.php	/^	public function executable() {$/;"	f
exists	lib/Cake/Utility/File.php	/^	public function exists() {$/;"	f
ext	lib/Cake/Utility/File.php	/^			$ext = $this->ext();$/;"	v
ext	lib/Cake/Utility/File.php	/^	public function ext() {$/;"	f
finfo	lib/Cake/Utility/File.php	/^			$finfo = finfo_file($finfo, $this->pwd());$/;"	v
finfo	lib/Cake/Utility/File.php	/^			$finfo = finfo_open(FILEINFO_MIME);$/;"	v
folder	lib/Cake/Utility/File.php	/^	public function folder() {$/;"	f
group	lib/Cake/Utility/File.php	/^	public function group() {$/;"	f
handle	lib/Cake/Utility/File.php	/^			$this->handle = null;$/;"	v
handle	lib/Cake/Utility/File.php	/^		$this->handle = fopen($this->path, $mode);$/;"	v
handle	lib/Cake/Utility/File.php	/^	public $handle = null;$/;"	v
info	lib/Cake/Utility/File.php	/^			$this->info = pathinfo($this->path);$/;"	v
info	lib/Cake/Utility/File.php	/^	public $info = array();$/;"	v
info	lib/Cake/Utility/File.php	/^	public function info() {$/;"	f
lastAccess	lib/Cake/Utility/File.php	/^	public function lastAccess() {$/;"	f
lastChange	lib/Cake/Utility/File.php	/^	public function lastChange() {$/;"	f
lineBreak	lib/Cake/Utility/File.php	/^			$lineBreak = "\\r\\n";$/;"	v
lineBreak	lib/Cake/Utility/File.php	/^		$lineBreak = "\\n";$/;"	v
lock	lib/Cake/Utility/File.php	/^	public $lock = null;$/;"	v
md5	lib/Cake/Utility/File.php	/^	public function md5($maxsize = 5) {$/;"	f
mime	lib/Cake/Utility/File.php	/^	public function mime() {$/;"	f
name	lib/Cake/Utility/File.php	/^			$name = $this->name;$/;"	v
name	lib/Cake/Utility/File.php	/^			$this->name = basename($path);$/;"	v
name	lib/Cake/Utility/File.php	/^	public $name = null;$/;"	v
name	lib/Cake/Utility/File.php	/^	public function name() {$/;"	f
offset	lib/Cake/Utility/File.php	/^	public function offset($offset = false, $seek = SEEK_SET) {$/;"	f
open	lib/Cake/Utility/File.php	/^	public function open($mode = 'r', $force = false) {$/;"	f
owner	lib/Cake/Utility/File.php	/^	public function owner() {$/;"	f
path	lib/Cake/Utility/File.php	/^			$this->path = $this->Folder->slashTerm($this->Folder->pwd()) . $this->name;$/;"	v
path	lib/Cake/Utility/File.php	/^	public $path = null;$/;"	v
perms	lib/Cake/Utility/File.php	/^	public function perms() {$/;"	f
prepare	lib/Cake/Utility/File.php	/^	public static function prepare($data, $forceWindows = false) {$/;"	f
pwd	lib/Cake/Utility/File.php	/^	public function pwd() {$/;"	f
read	lib/Cake/Utility/File.php	/^	public function read($bytes = false, $mode = 'rb', $force = false) {$/;"	f
readable	lib/Cake/Utility/File.php	/^	public function readable() {$/;"	f
replaceText	lib/Cake/Utility/File.php	/^	public function replaceText($search, $replace) {$/;"	f
replaced	lib/Cake/Utility/File.php	/^		$replaced = $this->write(str_replace($search, $replace, $this->read()), 'w', true);$/;"	v
safe	lib/Cake/Utility/File.php	/^	public function safe($name = null, $ext = null) {$/;"	f
size	lib/Cake/Utility/File.php	/^		$size = $this->size();$/;"	v
size	lib/Cake/Utility/File.php	/^	public function size() {$/;"	f
success	lib/Cake/Utility/File.php	/^				$success = true;$/;"	v
success	lib/Cake/Utility/File.php	/^		$success = false;$/;"	v
writable	lib/Cake/Utility/File.php	/^	public function writable() {$/;"	f
write	lib/Cake/Utility/File.php	/^	public function write($data, $mode = 'w', $force = false) {$/;"	f
Folder	lib/Cake/Utility/Folder.php	/^class Folder {$/;"	c
__construct	lib/Cake/Utility/Folder.php	/^	public function __construct($path = false, $create = false, $mode = false) {$/;"	f
_directories	lib/Cake/Utility/Folder.php	/^	protected $_directories;$/;"	v
_errors	lib/Cake/Utility/Folder.php	/^			$this->_errors = array();$/;"	v
_errors	lib/Cake/Utility/Folder.php	/^	protected $_errors = array();$/;"	v
_files	lib/Cake/Utility/Folder.php	/^	protected $_files;$/;"	v
_findRecursive	lib/Cake/Utility/Folder.php	/^	protected function _findRecursive($pattern, $sort = false) {$/;"	f
_messages	lib/Cake/Utility/Folder.php	/^			$this->_messages = array();$/;"	v
_messages	lib/Cake/Utility/Folder.php	/^	protected $_messages = array();$/;"	v
add	lib/Cake/Utility/Folder.php	/^							$add = Folder::slashTerm($add);$/;"	v
add	lib/Cake/Utility/Folder.php	/^						$add = $stack[$i] . $entry;$/;"	v
addPathElement	lib/Cake/Utility/Folder.php	/^	public static function addPathElement($path, $element) {$/;"	f
cd	lib/Cake/Utility/Folder.php	/^	public function cd($path) {$/;"	f
check	lib/Cake/Utility/Folder.php	/^					$check = explode(DS, $fullpath);$/;"	v
chmod	lib/Cake/Utility/Folder.php	/^	public function chmod($path, $mode = false, $recursive = true, $exceptions = array()) {$/;"	f
copy	lib/Cake/Utility/Folder.php	/^	public function copy($options) {$/;"	f
correctSlashFor	lib/Cake/Utility/Folder.php	/^	public static function correctSlashFor($path) {$/;"	f
count	lib/Cake/Utility/Folder.php	/^					$count = count($check);$/;"	v
count	lib/Cake/Utility/Folder.php	/^		$count = count($stack);$/;"	v
create	lib/Cake/Utility/Folder.php	/^	public function create($pathname, $mode = false) {$/;"	f
current	lib/Cake/Utility/Folder.php	/^		$current = Folder::slashTerm($this->pwd());$/;"	v
delete	lib/Cake/Utility/Folder.php	/^	public function delete($path = null) {$/;"	f
dir	lib/Cake/Utility/Folder.php	/^				$dir = dir($stack[$i]);$/;"	v
dir	lib/Cake/Utility/Folder.php	/^		$dir = Folder::slashTerm($path);$/;"	v
dir	lib/Cake/Utility/Folder.php	/^		$dir = substr(Folder::slashTerm(ROOT), 0, -1);$/;"	v
directories	lib/Cake/Utility/Folder.php	/^		$directories = array($path);$/;"	v
directory	lib/Cake/Utility/Folder.php	/^				$directory = new RecursiveDirectoryIterator($path, RecursiveDirectoryIterator::CURRENT_AS_SELF);$/;"	v
directory	lib/Cake/Utility/Folder.php	/^			$directory = new RecursiveDirectoryIterator($path, RecursiveDirectoryIterator::KEY_AS_PATHNAME | RecursiveDirectoryIterator::CURRENT_AS_SELF);$/;"	v
directory	lib/Cake/Utility/Folder.php	/^		$directory = Folder::slashTerm($this->path);$/;"	v
dirs	lib/Cake/Utility/Folder.php	/^		$dirs = $files = array();$/;"	v
dirsize	lib/Cake/Utility/Folder.php	/^	public function dirsize() {$/;"	f
element	lib/Cake/Utility/Folder.php	/^		$element = (array)$element;$/;"	v
errors	lib/Cake/Utility/Folder.php	/^		$errors = $this->_errors;$/;"	v
errors	lib/Cake/Utility/Folder.php	/^	public function errors($reset = true) {$/;"	f
exceptions	lib/Cake/Utility/Folder.php	/^			$exceptions = array_flip($exceptions);$/;"	v
exceptions	lib/Cake/Utility/Folder.php	/^		$exceptions = array_merge(array('.', '..', '.svn'), $options['skip']);$/;"	v
filePath	lib/Cake/Utility/Folder.php	/^				$filePath = $item->getPathname();$/;"	v
files	lib/Cake/Utility/Folder.php	/^		$files = array();$/;"	v
find	lib/Cake/Utility/Folder.php	/^	public function find($regexpPattern = '.*', $sort = false) {$/;"	f
findRecursive	lib/Cake/Utility/Folder.php	/^	public function findRecursive($pattern = '.*', $sort = false) {$/;"	f
found	lib/Cake/Utility/Folder.php	/^			$found = array_merge($found, $this->findRecursive($pattern, $sort));$/;"	v
found	lib/Cake/Utility/Folder.php	/^		$found = array();$/;"	v
from	lib/Cake/Utility/Folder.php	/^					$from = Folder::addPathElement($fromDir, $item);$/;"	v
fromDir	lib/Cake/Utility/Folder.php	/^		$fromDir = $options['from'];$/;"	v
inCakePath	lib/Cake/Utility/Folder.php	/^	public function inCakePath($path = '') {$/;"	f
inPath	lib/Cake/Utility/Folder.php	/^	public function inPath($path = '', $reverse = false) {$/;"	f
isAbsolute	lib/Cake/Utility/Folder.php	/^	public static function isAbsolute($path) {$/;"	f
isSlashTerm	lib/Cake/Utility/Folder.php	/^	public static function isSlashTerm($path) {$/;"	f
isWindowsPath	lib/Cake/Utility/Folder.php	/^	public static function isWindowsPath($path) {$/;"	f
item	lib/Cake/Utility/Folder.php	/^			$item = $fsIterator->current();$/;"	v
iterator	lib/Cake/Utility/Folder.php	/^				$iterator = new RecursiveIteratorIterator($directory, RecursiveIteratorIterator::CHILD_FIRST);$/;"	v
iterator	lib/Cake/Utility/Folder.php	/^			$iterator = new DirectoryIterator($this->path);$/;"	v
iterator	lib/Cake/Utility/Folder.php	/^			$iterator = new RecursiveIteratorIterator($directory, RecursiveIteratorIterator::SELF_FIRST);$/;"	v
j	lib/Cake/Utility/Folder.php	/^			$j = count($stack);$/;"	v
lastChar	lib/Cake/Utility/Folder.php	/^		$lastChar = $path[strlen($path) - 1];$/;"	v
messages	lib/Cake/Utility/Folder.php	/^		$messages = $this->_messages;$/;"	v
messages	lib/Cake/Utility/Folder.php	/^	public function messages($reset = true) {$/;"	f
mode	lib/Cake/Utility/Folder.php	/^			$mode = $this->mode;$/;"	v
mode	lib/Cake/Utility/Folder.php	/^			$this->mode = $mode;$/;"	v
mode	lib/Cake/Utility/Folder.php	/^		$mode = $options['mode'];$/;"	v
mode	lib/Cake/Utility/Folder.php	/^	public $mode = 0755;$/;"	v
move	lib/Cake/Utility/Folder.php	/^	public function move($options) {$/;"	f
name	lib/Cake/Utility/Folder.php	/^				$name = $item->getPathName();$/;"	v
name	lib/Cake/Utility/Folder.php	/^			$name = $item->getFileName();$/;"	v
newdir	lib/Cake/Utility/Folder.php	/^		$newdir = $dir . $path;$/;"	v
newparts	lib/Cake/Utility/Folder.php	/^		$newparts = array();$/;"	v
newpath	lib/Cake/Utility/Folder.php	/^			$newpath = DS;$/;"	v
newpath	lib/Cake/Utility/Folder.php	/^		$newpath = '';$/;"	v
nextPathname	lib/Cake/Utility/Folder.php	/^		$nextPathname = substr($pathname, 0, strrpos($pathname, DS));$/;"	v
normalizePath	lib/Cake/Utility/Folder.php	/^	public static function normalizePath($path) {$/;"	f
old	lib/Cake/Utility/Folder.php	/^							$old = umask(0);$/;"	v
old	lib/Cake/Utility/Folder.php	/^						$old = umask(0);$/;"	v
old	lib/Cake/Utility/Folder.php	/^				$old = umask(0);$/;"	v
options	lib/Cake/Utility/Folder.php	/^							$options = array('to' => $to, 'from' => $from) + $options;$/;"	v
options	lib/Cake/Utility/Folder.php	/^						$options = array('to' => $to, 'from' => $from) + $options;$/;"	v
options	lib/Cake/Utility/Folder.php	/^			$options = (array)$options;$/;"	v
options	lib/Cake/Utility/Folder.php	/^			$options = array();$/;"	v
out	lib/Cake/Utility/Folder.php	/^		$out = $this->_findRecursive($pattern, $sort);$/;"	v
parts	lib/Cake/Utility/Folder.php	/^		$parts = explode(DS, $path);$/;"	v
path	lib/Cake/Utility/Folder.php	/^				$path = Folder::addPathElement($this->path, $path);$/;"	v
path	lib/Cake/Utility/Folder.php	/^			$path = $this->path;$/;"	v
path	lib/Cake/Utility/Folder.php	/^			$path = $this->pwd();$/;"	v
path	lib/Cake/Utility/Folder.php	/^			$path = TMP;$/;"	v
path	lib/Cake/Utility/Folder.php	/^			$path = realpath($path);$/;"	v
path	lib/Cake/Utility/Folder.php	/^			$path = rtrim($path, DS);$/;"	v
path	lib/Cake/Utility/Folder.php	/^		$path = $this->realpath($path);$/;"	v
path	lib/Cake/Utility/Folder.php	/^		$path = Folder::slashTerm($path);$/;"	v
path	lib/Cake/Utility/Folder.php	/^		$path = str_replace('\/', DS, trim($path));$/;"	v
path	lib/Cake/Utility/Folder.php	/^	public $path = null;$/;"	v
pathname	lib/Cake/Utility/Folder.php	/^		$pathname = rtrim($pathname, DS);$/;"	v
paths	lib/Cake/Utility/Folder.php	/^			$paths = $this->tree($path);$/;"	v
pwd	lib/Cake/Utility/Folder.php	/^	public function pwd() {$/;"	f
read	lib/Cake/Utility/Folder.php	/^	public function read($sort = true, $exceptions = false, $fullPath = false) {$/;"	f
realpath	lib/Cake/Utility/Folder.php	/^	public function realpath($path) {$/;"	f
return	lib/Cake/Utility/Folder.php	/^			$return = preg_match('\/^(.*)' . preg_quote($current, '\/') . '(.*)\/', $dir);$/;"	v
return	lib/Cake/Utility/Folder.php	/^			$return = preg_match('\/^(.*)' . preg_quote($dir, '\/') . '(.*)\/', $current);$/;"	v
size	lib/Cake/Utility/Folder.php	/^		$size = 0;$/;"	v
skipHidden	lib/Cake/Utility/Folder.php	/^			$skipHidden = true;$/;"	v
skipHidden	lib/Cake/Utility/Folder.php	/^		$skipHidden = false;$/;"	v
skipHidden	lib/Cake/Utility/Folder.php	/^		$skipHidden = isset($exceptions['.']) || $exceptions === true;$/;"	v
slashTerm	lib/Cake/Utility/Folder.php	/^	public static function slashTerm($path) {$/;"	f
sort	lib/Cake/Utility/Folder.php	/^	public $sort = false;$/;"	v
stack	lib/Cake/Utility/Folder.php	/^		$stack = array($directory);$/;"	v
start	lib/Cake/Utility/Folder.php	/^		$start = $this->path;$/;"	v
startsOn	lib/Cake/Utility/Folder.php	/^		$startsOn = $this->path;$/;"	v
subPathName	lib/Cake/Utility/Folder.php	/^				$subPathName = $fsIterator->getSubPathname();$/;"	v
to	lib/Cake/Utility/Folder.php	/^				$to = Folder::addPathElement($toDir, $item);$/;"	v
to	lib/Cake/Utility/Folder.php	/^			$to = $options;$/;"	v
to	lib/Cake/Utility/Folder.php	/^		$to = null;$/;"	v
toDir	lib/Cake/Utility/Folder.php	/^		$toDir = $options['to'];$/;"	v
tree	lib/Cake/Utility/Folder.php	/^	public function tree($path = null, $exceptions = false, $type = null) {$/;"	f
Hash	lib/Cake/Utility/Hash.php	/^class Hash {$/;"	c
_filter	lib/Cake/Utility/Hash.php	/^	protected static function _filter($var) {$/;"	f
_key	lib/Cake/Utility/Hash.php	/^		$_key = '__set_item__';$/;"	v
_list	lib/Cake/Utility/Hash.php	/^					$_list = array();$/;"	v
_list	lib/Cake/Utility/Hash.php	/^				$_list =& $_list[$key];$/;"	v
_list	lib/Cake/Utility/Hash.php	/^		$_list =& $data;$/;"	v
_matchToken	lib/Cake/Utility/Hash.php	/^	protected static function _matchToken($key, $token) {$/;"	f
_matches	lib/Cake/Utility/Hash.php	/^	protected static function _matches(array $data, $selector) {$/;"	f
_simpleOp	lib/Cake/Utility/Hash.php	/^	protected static function _simpleOp($op, $data, $path, $values = null) {$/;"	f
_splitConditions	lib/Cake/Utility/Hash.php	/^	protected static function _splitConditions($token) {$/;"	f
_squash	lib/Cake/Utility/Hash.php	/^	protected static function _squash($data, $key = null) {$/;"	f
alias	lib/Cake/Utility/Hash.php	/^		$alias = key(current($data));$/;"	v
apply	lib/Cake/Utility/Hash.php	/^	public static function apply(array $data, $path, $function) {$/;"	f
args	lib/Cake/Utility/Hash.php	/^			$args = array();$/;"	v
args	lib/Cake/Utility/Hash.php	/^		$args = func_get_args();$/;"	v
attr	lib/Cake/Utility/Hash.php	/^			$attr = $cond['attr'];$/;"	v
c	lib/Cake/Utility/Hash.php	/^				$c = count($keys);$/;"	v
check	lib/Cake/Utility/Hash.php	/^	public static function check(array $data, $path) {$/;"	f
child	lib/Cake/Utility/Hash.php	/^				$child = array($/;"	v
child	lib/Cake/Utility/Hash.php	/^			$child = array($/;"	v
combine	lib/Cake/Utility/Hash.php	/^	public static function combine(array $data, $keyPath, $valuePath = null, $groupPath = null) {$/;"	f
conditions	lib/Cake/Utility/Hash.php	/^			$conditions = substr($token, $position);$/;"	v
conditions	lib/Cake/Utility/Hash.php	/^		$conditions = false;$/;"	v
contains	lib/Cake/Utility/Hash.php	/^	public static function contains(array $data, array $needle) {$/;"	f
context	lib/Cake/Utility/Hash.php	/^			$context = array($_key => $next);$/;"	v
context	lib/Cake/Utility/Hash.php	/^		$context = array($_key => array($data));$/;"	v
count	lib/Cake/Utility/Hash.php	/^		$count = count($data[0]);$/;"	v
count	lib/Cake/Utility/Hash.php	/^		$count = count($keys);$/;"	v
count	lib/Cake/Utility/Hash.php	/^		$count = count($path);$/;"	v
count	lib/Cake/Utility/Hash.php	/^		$count = count($paths);$/;"	v
countTwo	lib/Cake/Utility/Hash.php	/^		$countTwo = count($data);$/;"	v
data	lib/Cake/Utility/Hash.php	/^				$data = $element;$/;"	v
data	lib/Cake/Utility/Hash.php	/^				$data =& $data[$key];$/;"	v
data	lib/Cake/Utility/Hash.php	/^				$data =& $elem;$/;"	v
data	lib/Cake/Utility/Hash.php	/^			$data = $newList;$/;"	v
data	lib/Cake/Utility/Hash.php	/^			$data = array_values($data);$/;"	v
data	lib/Cake/Utility/Hash.php	/^		$data = $extracted;$/;"	v
dataCount	lib/Cake/Utility/Hash.php	/^		$dataCount = count($data);$/;"	v
depth	lib/Cake/Utility/Hash.php	/^		$depth = 1;$/;"	v
depth	lib/Cake/Utility/Hash.php	/^		$depth = array();$/;"	v
diff	lib/Cake/Utility/Hash.php	/^	public static function diff(array $data, $compare) {$/;"	f
dimensions	lib/Cake/Utility/Hash.php	/^	public static function dimensions(array $data) {$/;"	f
dir	lib/Cake/Utility/Hash.php	/^			$dir = SORT_ASC;$/;"	v
dir	lib/Cake/Utility/Hash.php	/^			$dir = SORT_DESC;$/;"	v
dir	lib/Cake/Utility/Hash.php	/^		$dir = strtolower($dir);$/;"	v
element	lib/Cake/Utility/Hash.php	/^			$element = $data[$key];$/;"	v
expand	lib/Cake/Utility/Hash.php	/^	public static function expand($data, $separator = '.') {$/;"	f
extract	lib/Cake/Utility/Hash.php	/^	public static function extract(array $data, $path) {$/;"	f
extracted	lib/Cake/Utility/Hash.php	/^		$extracted = array();$/;"	v
filter	lib/Cake/Utility/Hash.php	/^				$filter = array();$/;"	v
filter	lib/Cake/Utility/Hash.php	/^	public static function filter(array $data, $callback = array('self', '_filter')) {$/;"	f
flatten	lib/Cake/Utility/Hash.php	/^	public static function flatten(array $data, $separator = '.') {$/;"	f
format	lib/Cake/Utility/Hash.php	/^			$format = array_shift($keyPath);$/;"	v
format	lib/Cake/Utility/Hash.php	/^			$format = array_shift($valuePath);$/;"	v
format	lib/Cake/Utility/Hash.php	/^	public static function format(array $data, array $paths, $format) {$/;"	f
get	lib/Cake/Utility/Hash.php	/^	public static function get(array $data, $path, $default = null) {$/;"	f
group	lib/Cake/Utility/Hash.php	/^			$group = self::extract($data, $groupPath);$/;"	v
id	lib/Cake/Utility/Hash.php	/^				$id = $key;$/;"	v
id	lib/Cake/Utility/Hash.php	/^			$id = $k;$/;"	v
id	lib/Cake/Utility/Hash.php	/^			$id = self::get($result, $idKeys);$/;"	v
idKeys	lib/Cake/Utility/Hash.php	/^		$idKeys = explode('.', $options['idPath']);$/;"	v
ids	lib/Cake/Utility/Hash.php	/^		$ids = self::extract($data, $options['idPath']);$/;"	v
insert	lib/Cake/Utility/Hash.php	/^	public static function insert(array $data, $path, $values = null) {$/;"	f
intersection	lib/Cake/Utility/Hash.php	/^		$intersection = array_intersect_key($data, $compare);$/;"	v
isBool	lib/Cake/Utility/Hash.php	/^			$isBool = is_bool($prop);$/;"	v
k	lib/Cake/Utility/Hash.php	/^					$k => $child$/;"	v
key	lib/Cake/Utility/Hash.php	/^				$key = intval($key);$/;"	v
key	lib/Cake/Utility/Hash.php	/^			$key = key($data);$/;"	v
key	lib/Cake/Utility/Hash.php	/^			$key = key($needle);$/;"	v
keys	lib/Cake/Utility/Hash.php	/^			$keys = array_reverse($keys);$/;"	v
keys	lib/Cake/Utility/Hash.php	/^			$keys = explode($separator, $flat);$/;"	v
keys	lib/Cake/Utility/Hash.php	/^			$keys = self::extract($data, $keyPath);$/;"	v
keys	lib/Cake/Utility/Hash.php	/^			$keys = self::format($data, $keyPath, $format);$/;"	v
keys	lib/Cake/Utility/Hash.php	/^		$keys = array_keys($data);$/;"	v
keys	lib/Cake/Utility/Hash.php	/^		$keys = array_unique($keys);$/;"	v
keys	lib/Cake/Utility/Hash.php	/^		$keys = self::extract($result, '{n}.id');$/;"	v
last	lib/Cake/Utility/Hash.php	/^		$last = $count - 1;$/;"	v
map	lib/Cake/Utility/Hash.php	/^	public static function map(array $data, $path, $function) {$/;"	f
match	lib/Cake/Utility/Hash.php	/^			$match = self::_matchToken($k, $token);$/;"	v
maxDimensions	lib/Cake/Utility/Hash.php	/^	public static function maxDimensions(array $data) {$/;"	f
merge	lib/Cake/Utility/Hash.php	/^	public static function merge(array $data, $merge) {$/;"	f
mergeDiff	lib/Cake/Utility/Hash.php	/^	public static function mergeDiff(array $data, $compare) {$/;"	f
nest	lib/Cake/Utility/Hash.php	/^	public static function nest(array $data, $options = array()) {$/;"	f
newList	lib/Cake/Utility/Hash.php	/^			$newList = array();$/;"	v
next	lib/Cake/Utility/Hash.php	/^				$next = $data[$key];$/;"	v
next	lib/Cake/Utility/Hash.php	/^				$next = $filter;$/;"	v
next	lib/Cake/Utility/Hash.php	/^			$next = array();$/;"	v
nextPath	lib/Cake/Utility/Hash.php	/^		$nextPath = implode('.', $tokens);$/;"	v
normalize	lib/Cake/Utility/Hash.php	/^	public static function normalize(array $data, $assoc = true) {$/;"	f
numeric	lib/Cake/Utility/Hash.php	/^					$numeric = false;$/;"	v
numeric	lib/Cake/Utility/Hash.php	/^		$numeric = is_numeric(implode('', $originalKeys));$/;"	v
numeric	lib/Cake/Utility/Hash.php	/^		$numeric = true;$/;"	v
numeric	lib/Cake/Utility/Hash.php	/^	public static function numeric(array $data) {$/;"	f
op	lib/Cake/Utility/Hash.php	/^			$op = isset($cond['op']) ? $cond['op'] : null;$/;"	v
originalKeys	lib/Cake/Utility/Hash.php	/^		$originalKeys = array_keys($data);$/;"	v
out	lib/Cake/Utility/Hash.php	/^		$out = array();$/;"	v
parentId	lib/Cake/Utility/Hash.php	/^			$parentId = self::get($result, $parentKeys);$/;"	v
parentKeys	lib/Cake/Utility/Hash.php	/^		$parentKeys = explode('.', $options['parentPath']);$/;"	v
parts	lib/Cake/Utility/Hash.php	/^			$parts = $path;$/;"	v
parts	lib/Cake/Utility/Hash.php	/^			$parts = explode('.', $path);$/;"	v
path	lib/Cake/Utility/Hash.php	/^		$path = null;$/;"	v
position	lib/Cake/Utility/Hash.php	/^		$position = strpos($token, '[');$/;"	v
prop	lib/Cake/Utility/Hash.php	/^				$prop = $data[$attr];$/;"	v
prop	lib/Cake/Utility/Hash.php	/^				$prop = $prop ? '1' : '0';$/;"	v
prop	lib/Cake/Utility/Hash.php	/^				$prop = $prop ? 'true' : 'false';$/;"	v
prop	lib/Cake/Utility/Hash.php	/^			$prop = null;$/;"	v
reduce	lib/Cake/Utility/Hash.php	/^	public static function reduce(array $data, $path, $function) {$/;"	f
remove	lib/Cake/Utility/Hash.php	/^	public static function remove(array $data, $path) {$/;"	f
result	lib/Cake/Utility/Hash.php	/^			$result = self::merge($result, $child);$/;"	v
result	lib/Cake/Utility/Hash.php	/^		$result = array();$/;"	v
result	lib/Cake/Utility/Hash.php	/^		$result = self::_squash($sortValues);$/;"	v
results	lib/Cake/Utility/Hash.php	/^		$results = self::extract($data, $path);$/;"	v
return	lib/Cake/Utility/Hash.php	/^		$return = $idMap = array();$/;"	v
return	lib/Cake/Utility/Hash.php	/^		$return = current($args);$/;"	v
root	lib/Cake/Utility/Hash.php	/^			$root = $options['root'];$/;"	v
root	lib/Cake/Utility/Hash.php	/^			$root = self::get($return[0], $parentKeys);$/;"	v
sort	lib/Cake/Utility/Hash.php	/^	public static function sort(array $data, $path, $dir = 'asc', $type = 'regular') {$/;"	f
sortCount	lib/Cake/Utility/Hash.php	/^		$sortCount = count($sortValues);$/;"	v
sortValues	lib/Cake/Utility/Hash.php	/^			$sortValues = array_pad($sortValues, $dataCount, null);$/;"	v
sortValues	lib/Cake/Utility/Hash.php	/^		$sortValues = self::extract($data, $path);$/;"	v
sorted	lib/Cake/Utility/Hash.php	/^		$sorted = array();$/;"	v
stack	lib/Cake/Utility/Hash.php	/^				$stack = array_merge($stack, self::_squash($r, $id));$/;"	v
stack	lib/Cake/Utility/Hash.php	/^		$stack = array();$/;"	v
token	lib/Cake/Utility/Hash.php	/^			$token = substr($token, 0, $position);$/;"	v
token	lib/Cake/Utility/Hash.php	/^		$token = array_shift($tokens);$/;"	v
tokens	lib/Cake/Utility/Hash.php	/^			$tokens = String::tokenize($path, '.', '[', ']');$/;"	v
tokens	lib/Cake/Utility/Hash.php	/^			$tokens = explode('.', $path);$/;"	v
type	lib/Cake/Utility/Hash.php	/^			$type = 'regular';$/;"	v
type	lib/Cake/Utility/Hash.php	/^			$type = SORT_NATURAL;$/;"	v
type	lib/Cake/Utility/Hash.php	/^			$type = SORT_NUMERIC;$/;"	v
type	lib/Cake/Utility/Hash.php	/^			$type = SORT_REGULAR;$/;"	v
type	lib/Cake/Utility/Hash.php	/^			$type = SORT_STRING;$/;"	v
type	lib/Cake/Utility/Hash.php	/^		$type = strtolower($type);$/;"	v
val	lib/Cake/Utility/Hash.php	/^			$val = $needle[$key];$/;"	v
val	lib/Cake/Utility/Hash.php	/^			$val = isset($cond['val']) ? $cond['val'] : null;$/;"	v
vals	lib/Cake/Utility/Hash.php	/^			$vals = array_fill(0, count($keys), null);$/;"	v
vals	lib/Cake/Utility/Hash.php	/^			$vals = self::extract($data, $valuePath);$/;"	v
vals	lib/Cake/Utility/Hash.php	/^			$vals = self::format($data, $valuePath, $format);$/;"	v
values	lib/Cake/Utility/Hash.php	/^		$values = (array)self::extract($data, $path);$/;"	v
values	lib/Cake/Utility/Hash.php	/^		$values = self::extract($result, '{n}.value');$/;"	v
Inflector	lib/Cake/Utility/Inflector.php	/^class Inflector {$/;"	c
_cache	lib/Cake/Utility/Inflector.php	/^	protected static $_cache = array();$/;"	v
_cache	lib/Cake/Utility/Inflector.php	/^	protected static function _cache($type, $key, $value = false) {$/;"	f
_initialState	lib/Cake/Utility/Inflector.php	/^	protected static $_initialState = array();$/;"	v
_plural	lib/Cake/Utility/Inflector.php	/^	protected static $_plural = array($/;"	v
_singular	lib/Cake/Utility/Inflector.php	/^	protected static $_singular = array($/;"	v
_transliteration	lib/Cake/Utility/Inflector.php	/^	protected static $_transliteration = array($/;"	v
_uninflected	lib/Cake/Utility/Inflector.php	/^	protected static $_uninflected = array($/;"	v
camelize	lib/Cake/Utility/Inflector.php	/^	public static function camelize($lowerCaseAndUnderscoredWord) {$/;"	f
camelized	lib/Cake/Utility/Inflector.php	/^			$camelized = Inflector::camelize(Inflector::underscore($string));$/;"	v
classify	lib/Cake/Utility/Inflector.php	/^	public static function classify($tableName) {$/;"	f
humanize	lib/Cake/Utility/Inflector.php	/^	public static function humanize($lowerCaseAndUnderscoredWord) {$/;"	f
key	lib/Cake/Utility/Inflector.php	/^		$key = '_' . $key;$/;"	v
map	lib/Cake/Utility/Inflector.php	/^		$map = self::$_transliteration + $merge;$/;"	v
merge	lib/Cake/Utility/Inflector.php	/^		$merge = array($/;"	v
pluralize	lib/Cake/Utility/Inflector.php	/^	public static function pluralize($word) {$/;"	f
quotedReplacement	lib/Cake/Utility/Inflector.php	/^		$quotedReplacement = preg_quote($replacement, '\/');$/;"	v
replace	lib/Cake/Utility/Inflector.php	/^			$replace = strtolower(substr($camelized, 0, 1));$/;"	v
reset	lib/Cake/Utility/Inflector.php	/^	public static function reset() {$/;"	f
result	lib/Cake/Utility/Inflector.php	/^			$result = Inflector::camelize(Inflector::singularize($tableName));$/;"	v
result	lib/Cake/Utility/Inflector.php	/^			$result = Inflector::pluralize(Inflector::underscore($className));$/;"	v
result	lib/Cake/Utility/Inflector.php	/^			$result = preg_replace('\/\\\\w\/', $replace, $camelized, 1);$/;"	v
result	lib/Cake/Utility/Inflector.php	/^			$result = str_replace(' ', '', Inflector::humanize($lowerCaseAndUnderscoredWord));$/;"	v
result	lib/Cake/Utility/Inflector.php	/^			$result = strtolower(preg_replace('\/(?<=\\\\w)([A-Z])\/', '_\\\\1', $camelCasedWord));$/;"	v
result	lib/Cake/Utility/Inflector.php	/^			$result = ucwords(str_replace('_', ' ', $lowerCaseAndUnderscoredWord));$/;"	v
rules	lib/Cake/Utility/Inflector.php	/^	public static function rules($type, $rules, $reset = false) {$/;"	f
singularize	lib/Cake/Utility/Inflector.php	/^	public static function singularize($word) {$/;"	f
slug	lib/Cake/Utility/Inflector.php	/^	public static function slug($string, $replacement = '_') {$/;"	f
tableize	lib/Cake/Utility/Inflector.php	/^	public static function tableize($className) {$/;"	f
type	lib/Cake/Utility/Inflector.php	/^		$type = '_' . $type;$/;"	v
underscore	lib/Cake/Utility/Inflector.php	/^	public static function underscore($camelCasedWord) {$/;"	f
var	lib/Cake/Utility/Inflector.php	/^		$var = '_' . $type;$/;"	v
variable	lib/Cake/Utility/Inflector.php	/^	public static function variable($string) {$/;"	f
ObjectCollection	lib/Cake/Utility/ObjectCollection.php	/^abstract class ObjectCollection {$/;"	c
__get	lib/Cake/Utility/ObjectCollection.php	/^	public function __get($name) {$/;"	f
__isset	lib/Cake/Utility/ObjectCollection.php	/^	public function __isset($name) {$/;"	f
_enabled	lib/Cake/Utility/ObjectCollection.php	/^	protected $_enabled = array();$/;"	v
_loaded	lib/Cake/Utility/ObjectCollection.php	/^	protected $_loaded = array();$/;"	v
attached	lib/Cake/Utility/ObjectCollection.php	/^	public function attached($name = null) {$/;"	f
callback	lib/Cake/Utility/ObjectCollection.php	/^			$callback = array_pop($parts);$/;"	v
collected	lib/Cake/Utility/ObjectCollection.php	/^		$collected = array();$/;"	v
defaultPriority	lib/Cake/Utility/ObjectCollection.php	/^	public $defaultPriority = 10;$/;"	v
disable	lib/Cake/Utility/ObjectCollection.php	/^	public function disable($name) {$/;"	f
enable	lib/Cake/Utility/ObjectCollection.php	/^	public function enable($name, $prioritize = true) {$/;"	f
enabled	lib/Cake/Utility/ObjectCollection.php	/^				$enabled = true;$/;"	v
enabled	lib/Cake/Utility/ObjectCollection.php	/^		$enabled = false;$/;"	v
enabled	lib/Cake/Utility/ObjectCollection.php	/^	public function enabled($name = null) {$/;"	f
event	lib/Cake/Utility/ObjectCollection.php	/^			$event = $callback;$/;"	v
i	lib/Cake/Utility/ObjectCollection.php	/^		$i = 1;$/;"	v
list	lib/Cake/Utility/ObjectCollection.php	/^		$list = array_keys($this->_enabled);$/;"	v
loaded	lib/Cake/Utility/ObjectCollection.php	/^	public function loaded($name = null) {$/;"	f
name	lib/Cake/Utility/ObjectCollection.php	/^			$name = array($name => $priority);$/;"	v
normal	lib/Cake/Utility/ObjectCollection.php	/^		$normal = array();$/;"	v
normalizeObjectArray	lib/Cake/Utility/ObjectCollection.php	/^	public static function normalizeObjectArray($objects) {$/;"	f
objectName	lib/Cake/Utility/ObjectCollection.php	/^				$objectName = $i;$/;"	v
objectPriority	lib/Cake/Utility/ObjectCollection.php	/^					$objectPriority = $this->defaultPriority;$/;"	v
options	lib/Cake/Utility/ObjectCollection.php	/^				$options = (array)$objectName;$/;"	v
options	lib/Cake/Utility/ObjectCollection.php	/^			$options = array();$/;"	v
params	lib/Cake/Utility/ObjectCollection.php	/^				$params =& $event->data;$/;"	v
parts	lib/Cake/Utility/ObjectCollection.php	/^			$parts = explode('.', $event->name());$/;"	v
prioritize	lib/Cake/Utility/ObjectCollection.php	/^	public function prioritize() {$/;"	f
priority	lib/Cake/Utility/ObjectCollection.php	/^					$priority = $this->_loaded[$object]->settings['priority'];$/;"	v
priority	lib/Cake/Utility/ObjectCollection.php	/^				$priority = $this->defaultPriority;$/;"	v
result	lib/Cake/Utility/ObjectCollection.php	/^			$result = call_user_func_array(array($this->_loaded[$name], $callback), compact('subject') + $params);$/;"	v
result	lib/Cake/Utility/ObjectCollection.php	/^		$result = null;$/;"	v
set	lib/Cake/Utility/ObjectCollection.php	/^	public function set($name = null, $object = null) {$/;"	f
setPriority	lib/Cake/Utility/ObjectCollection.php	/^	public function setPriority($name, $priority = null) {$/;"	f
subject	lib/Cake/Utility/ObjectCollection.php	/^				$subject = $event->subject();$/;"	v
trigger	lib/Cake/Utility/ObjectCollection.php	/^	public function trigger($callback, $params = array(), $options = array()) {$/;"	f
unload	lib/Cake/Utility/ObjectCollection.php	/^	public function unload($name) {$/;"	f
Sanitize	lib/Cake/Utility/Sanitize.php	/^class Sanitize {$/;"	c
allow	lib/Cake/Utility/Sanitize.php	/^		$allow = null;$/;"	v
clean	lib/Cake/Utility/Sanitize.php	/^	public static function clean($data, $options = array()) {$/;"	f
cleaned	lib/Cake/Utility/Sanitize.php	/^		$cleaned = array();$/;"	v
data	lib/Cake/Utility/Sanitize.php	/^			$data = Sanitize::escape($data, $options['connection']);$/;"	v
data	lib/Cake/Utility/Sanitize.php	/^			$data = Sanitize::html($data, array('remove' => $options['remove_html']));$/;"	v
data	lib/Cake/Utility/Sanitize.php	/^			$data = preg_replace("\/&amp;#([0-9]+);\/s", "&#\\\\1;", $data);$/;"	v
data	lib/Cake/Utility/Sanitize.php	/^			$data = preg_replace("\/\\\\\\(?!&amp;#|\\?#)\/", "\\\\", $data);$/;"	v
data	lib/Cake/Utility/Sanitize.php	/^			$data = str_replace("\\\\\\$", "$", $data);$/;"	v
data	lib/Cake/Utility/Sanitize.php	/^			$data = str_replace("\\r", "", $data);$/;"	v
data	lib/Cake/Utility/Sanitize.php	/^			$data = str_replace(chr(0xCA), '', $data);$/;"	v
db	lib/Cake/Utility/Sanitize.php	/^		$db = ConnectionManager::getDataSource($connection);$/;"	v
defaultCharset	lib/Cake/Utility/Sanitize.php	/^				$defaultCharset = 'UTF-8';$/;"	v
defaultCharset	lib/Cake/Utility/Sanitize.php	/^			$defaultCharset = Configure::read('App.encoding');$/;"	v
defaultCharset	lib/Cake/Utility/Sanitize.php	/^		static $defaultCharset = false;$/;"	v
defaults	lib/Cake/Utility/Sanitize.php	/^		$defaults = array($/;"	v
escape	lib/Cake/Utility/Sanitize.php	/^	public static function escape($string, $connection = 'default') {$/;"	f
html	lib/Cake/Utility/Sanitize.php	/^	public static function html($string, $options = array()) {$/;"	f
options	lib/Cake/Utility/Sanitize.php	/^			$options = array('connection' => $options);$/;"	v
params	lib/Cake/Utility/Sanitize.php	/^		$params = func_get_args();$/;"	v
paranoid	lib/Cake/Utility/Sanitize.php	/^	public static function paranoid($string, $allowed = array()) {$/;"	f
preg	lib/Cake/Utility/Sanitize.php	/^		$preg = array($/;"	v
regex	lib/Cake/Utility/Sanitize.php	/^		$regex =$/;"	v
start	lib/Cake/Utility/Sanitize.php	/^			$start = 2;$/;"	v
start	lib/Cake/Utility/Sanitize.php	/^		$start = 1;$/;"	v
str	lib/Cake/Utility/Sanitize.php	/^			$str = preg_replace('\/<' . $params[$i] . '\\b[^>]*>\/i', '', $str);$/;"	v
str	lib/Cake/Utility/Sanitize.php	/^			$str = preg_replace('\/<\\\/' . $params[$i] . '[^>]*>\/i', '', $str);$/;"	v
string	lib/Cake/Utility/Sanitize.php	/^			$string = strip_tags($string);$/;"	v
string	lib/Cake/Utility/Sanitize.php	/^		$string = $db->value($string, 'string');$/;"	v
stripAll	lib/Cake/Utility/Sanitize.php	/^	public static function stripAll($str) {$/;"	f
stripImages	lib/Cake/Utility/Sanitize.php	/^	public static function stripImages($str) {$/;"	f
stripScripts	lib/Cake/Utility/Sanitize.php	/^	public static function stripScripts($str) {$/;"	f
stripTags	lib/Cake/Utility/Sanitize.php	/^	public static function stripTags($str) {$/;"	f
stripWhitespace	lib/Cake/Utility/Sanitize.php	/^	public static function stripWhitespace($str) {$/;"	f
Security	lib/Cake/Utility/Security.php	/^class Security {$/;"	c
_checkKey	lib/Cake/Utility/Security.php	/^	protected static function _checkKey($key, $method) {$/;"	f
_crypt	lib/Cake/Utility/Security.php	/^	protected static function _crypt($password, $salt = false) {$/;"	f
_salt	lib/Cake/Utility/Security.php	/^	protected static function _salt($length = 22) {$/;"	f
algorithm	lib/Cake/Utility/Security.php	/^		$algorithm = MCRYPT_RIJNDAEL_128;$/;"	v
algorithm	lib/Cake/Utility/Security.php	/^		$algorithm = MCRYPT_RIJNDAEL_256;$/;"	v
cipher	lib/Cake/Utility/Security.php	/^		$cipher = substr($cipher, $ivSize);$/;"	v
cipher	lib/Cake/Utility/Security.php	/^		$cipher = substr($cipher, $macSize);$/;"	v
cipher	lib/Cake/Utility/Security.php	/^	public static function cipher($text, $key) {$/;"	f
ciphertext	lib/Cake/Utility/Security.php	/^		$ciphertext = $iv . mcrypt_encrypt($algorithm, $key, $plain, $mode, $iv);$/;"	v
compareHmac	lib/Cake/Utility/Security.php	/^		$compareHmac = hash_hmac('sha256', $cipher, $key);$/;"	v
cryptKey	lib/Cake/Utility/Security.php	/^		$cryptKey = substr($key, 0, 32);$/;"	v
decrypt	lib/Cake/Utility/Security.php	/^	public static function decrypt($cipher, $key, $hmacSalt = null) {$/;"	f
encrypt	lib/Cake/Utility/Security.php	/^	public static function encrypt($plain, $key, $hmacSalt = null) {$/;"	f
generateAuthKey	lib/Cake/Utility/Security.php	/^	public static function generateAuthKey() {$/;"	f
hash	lib/Cake/Utility/Security.php	/^	public static function hash($string, $type = null, $salt = false) {$/;"	f
hashCost	lib/Cake/Utility/Security.php	/^	public static $hashCost = '10';$/;"	v
hashType	lib/Cake/Utility/Security.php	/^	public static $hashType = null;$/;"	v
hmac	lib/Cake/Utility/Security.php	/^		$hmac = hash_hmac('sha256', $ciphertext, $key);$/;"	v
hmac	lib/Cake/Utility/Security.php	/^		$hmac = substr($cipher, 0, $macSize);$/;"	v
hmacSalt	lib/Cake/Utility/Security.php	/^			$hmacSalt = Configure::read('Security.salt');$/;"	v
inactiveMins	lib/Cake/Utility/Security.php	/^	public static function inactiveMins() {$/;"	f
invalidCipher	lib/Cake/Utility/Security.php	/^		$invalidCipher = ($/;"	v
iv	lib/Cake/Utility/Security.php	/^			$iv = mcrypt_create_iv($ivSize, MCRYPT_RAND);$/;"	v
iv	lib/Cake/Utility/Security.php	/^			$iv = substr($key, strlen($key) - 32, 32);$/;"	v
iv	lib/Cake/Utility/Security.php	/^		$iv = mcrypt_create_iv($ivSize, MCRYPT_DEV_URANDOM);$/;"	v
iv	lib/Cake/Utility/Security.php	/^		$iv = substr($cipher, 0, $ivSize);$/;"	v
iv	lib/Cake/Utility/Security.php	/^		$iv = substr($text, 0, $ivSize);$/;"	v
ivSize	lib/Cake/Utility/Security.php	/^		$ivSize = mcrypt_get_iv_size($algorithm, $mode);$/;"	v
j	lib/Cake/Utility/Security.php	/^			$j = ord(substr($key, $i % $keyLength, 1));$/;"	v
key	lib/Cake/Utility/Security.php	/^		$key = substr(hash('sha256', $key . $hmacSalt), 0, 32);$/;"	v
keyLength	lib/Cake/Utility/Security.php	/^		$keyLength = strlen($key);$/;"	v
macSize	lib/Cake/Utility/Security.php	/^		$macSize = 64;$/;"	v
mask	lib/Cake/Utility/Security.php	/^			$mask = rand(0, 255);$/;"	v
mode	lib/Cake/Utility/Security.php	/^		$mode = MCRYPT_MODE_CBC;$/;"	v
out	lib/Cake/Utility/Security.php	/^		$out = '';$/;"	v
plain	lib/Cake/Utility/Security.php	/^		$plain = mcrypt_decrypt($algorithm, $key, $cipher, $mode, $iv);$/;"	v
rijndael	lib/Cake/Utility/Security.php	/^	public static function rijndael($text, $key, $operation) {$/;"	f
salt	lib/Cake/Utility/Security.php	/^				$salt = Configure::read('Security.salt');$/;"	v
salt	lib/Cake/Utility/Security.php	/^			$salt = self::_salt(22);$/;"	v
salt	lib/Cake/Utility/Security.php	/^			$salt = vsprintf('$2a$%02d$%s', array(self::$hashCost, $salt));$/;"	v
salt	lib/Cake/Utility/Security.php	/^		$salt = str_replace($/;"	v
setCost	lib/Cake/Utility/Security.php	/^	public static function setCost($cost) {$/;"	f
setHash	lib/Cake/Utility/Security.php	/^	public static function setHash($hash) {$/;"	f
string	lib/Cake/Utility/Security.php	/^			$string = $salt . $string;$/;"	v
text	lib/Cake/Utility/Security.php	/^		$text = substr($text, $ivSize + 2);$/;"	v
type	lib/Cake/Utility/Security.php	/^			$type = 'sha256';$/;"	v
type	lib/Cake/Utility/Security.php	/^			$type = self::$hashType;$/;"	v
type	lib/Cake/Utility/Security.php	/^		$type = strtolower($type);$/;"	v
validateAuthKey	lib/Cake/Utility/Security.php	/^	public static function validateAuthKey($authKey) {$/;"	f
Set	lib/Cake/Utility/Set.php	/^class Set {$/;"	c
_flatten	lib/Cake/Utility/Set.php	/^	protected static function _flatten($results, $key = null) {$/;"	f
_map	lib/Cake/Utility/Set.php	/^	protected static function _map(&$array, $class, $primary = false) {$/;"	f
alias	lib/Cake/Utility/Set.php	/^		$alias = key(current($data));$/;"	v
apply	lib/Cake/Utility/Set.php	/^	public static function apply($path, $data, $callback, $options = array()) {$/;"	f
args	lib/Cake/Utility/Set.php	/^				$args = array();$/;"	v
args	lib/Cake/Utility/Set.php	/^		$args = func_get_args();$/;"	v
c	lib/Cake/Utility/Set.php	/^				$c = count($keys);$/;"	v
check	lib/Cake/Utility/Set.php	/^	public static function check($data, $path = null) {$/;"	f
class	lib/Cake/Utility/Set.php	/^			$class = $tmp;$/;"	v
classicExtract	lib/Cake/Utility/Set.php	/^	public static function classicExtract($data, $path = null) {$/;"	f
combine	lib/Cake/Utility/Set.php	/^	public static function combine($data, $path1 = null, $path2 = null, $groupPath = null) {$/;"	f
conditions	lib/Cake/Utility/Set.php	/^				$conditions = $m[1];$/;"	v
conditions	lib/Cake/Utility/Set.php	/^			$conditions = false;$/;"	v
contains	lib/Cake/Utility/Set.php	/^	public static function contains($val1, $val2 = null) {$/;"	f
context	lib/Cake/Utility/Set.php	/^					$context = array('trace' => array(null), 'item' => $context, 'key' => $key);$/;"	v
contexts	lib/Cake/Utility/Set.php	/^				$contexts = array($data);$/;"	v
contexts	lib/Cake/Utility/Set.php	/^			$contexts = $matches;$/;"	v
contexts	lib/Cake/Utility/Set.php	/^		$contexts = $data;$/;"	v
count	lib/Cake/Utility/Set.php	/^			$count = count($keys);$/;"	v
count	lib/Cake/Utility/Set.php	/^		$count = count($data[0]);$/;"	v
count	lib/Cake/Utility/Set.php	/^		$count = count($keys);$/;"	v
count2	lib/Cake/Utility/Set.php	/^			$count2 = count($data);$/;"	v
count2	lib/Cake/Utility/Set.php	/^			$count2 = count($format);$/;"	v
countDim	lib/Cake/Utility/Set.php	/^	public static function countDim($array, $all = false, $count = 0) {$/;"	f
ctext	lib/Cake/Utility/Set.php	/^						$ctext = array($context['key']);$/;"	v
current	lib/Cake/Utility/Set.php	/^						$current = current($items);$/;"	v
current	lib/Cake/Utility/Set.php	/^			$current = current($data);$/;"	v
currentKey	lib/Cake/Utility/Set.php	/^						$currentKey = key($items);$/;"	v
data	lib/Cake/Utility/Set.php	/^					$data = $data[$key];$/;"	v
data	lib/Cake/Utility/Set.php	/^				$data = get_object_vars($data);$/;"	v
data	lib/Cake/Utility/Set.php	/^			$data = $path;$/;"	v
data	lib/Cake/Utility/Set.php	/^			$data = array_values($data);$/;"	v
data	lib/Cake/Utility/Set.php	/^			$data =& $data[$key];$/;"	v
data	lib/Cake/Utility/Set.php	/^		$data = $extracted;$/;"	v
defaults	lib/Cake/Utility/Set.php	/^		$defaults = array('type' => 'pass');$/;"	v
depth	lib/Cake/Utility/Set.php	/^			$depth = array($count);$/;"	v
diff	lib/Cake/Utility/Set.php	/^	public static function diff($val1, $val2 = null) {$/;"	f
dir	lib/Cake/Utility/Set.php	/^			$dir = SORT_ASC;$/;"	v
dir	lib/Cake/Utility/Set.php	/^			$dir = SORT_DESC;$/;"	v
dir	lib/Cake/Utility/Set.php	/^		$dir = strtolower($dir);$/;"	v
enum	lib/Cake/Utility/Set.php	/^	public static function enum($select, $list = null) {$/;"	f
expand	lib/Cake/Utility/Set.php	/^	public static function expand($data, $separator = '.') {$/;"	f
extract	lib/Cake/Utility/Set.php	/^	public static function extract($path, $data = null, $options = array()) {$/;"	f
extracted	lib/Cake/Utility/Set.php	/^		$extracted = Set::extract($path, $data);$/;"	v
extracted	lib/Cake/Utility/Set.php	/^		$extracted = array();$/;"	v
filter	lib/Cake/Utility/Set.php	/^	public static function filter(array $var) {$/;"	f
filtered	lib/Cake/Utility/Set.php	/^					$filtered = array();$/;"	v
flatten	lib/Cake/Utility/Set.php	/^	public static function flatten($data, $separator = '.') {$/;"	f
format	lib/Cake/Utility/Set.php	/^			$format = array_shift($path1);$/;"	v
format	lib/Cake/Utility/Set.php	/^			$format = array_shift($path2);$/;"	v
format	lib/Cake/Utility/Set.php	/^			$format = preg_split('\/\\{([0-9]+)\\}\/msi', $format);$/;"	v
format	lib/Cake/Utility/Set.php	/^	public static function format($data, $format, $keys) {$/;"	f
formatted	lib/Cake/Utility/Set.php	/^				$formatted = '';$/;"	v
get	lib/Cake/Utility/Set.php	/^	public static function get($input, $path = null) {$/;"	f
group	lib/Cake/Utility/Set.php	/^			$group = Set::extract($data, $groupPath);$/;"	v
id	lib/Cake/Utility/Set.php	/^				$id = $key;$/;"	v
id	lib/Cake/Utility/Set.php	/^			$id = $k;$/;"	v
id	lib/Cake/Utility/Set.php	/^			$id = Set::get($result, $idKeys);$/;"	v
idKeys	lib/Cake/Utility/Set.php	/^		$idKeys = explode('\/', trim($options['idPath'], '\/'));$/;"	v
identity	lib/Cake/Utility/Set.php	/^				$identity = $keys['_name_'];$/;"	v
ids	lib/Cake/Utility/Set.php	/^		$ids = Set::extract($data, $options['idPath']);$/;"	v
insert	lib/Cake/Utility/Set.php	/^	public static function insert($list, $path, $data = null) {$/;"	f
intersection	lib/Cake/Utility/Set.php	/^		$intersection = array_intersect_key($val1, $val2);$/;"	v
item	lib/Cake/Utility/Set.php	/^								$item = $items[$tok];$/;"	v
items	lib/Cake/Utility/Set.php	/^							$items = array($items);$/;"	v
items	lib/Cake/Utility/Set.php	/^						$items = array($items);$/;"	v
items	lib/Cake/Utility/Set.php	/^					$items = $context['item'][$token];$/;"	v
key	lib/Cake/Utility/Set.php	/^							$key = $token;$/;"	v
key	lib/Cake/Utility/Set.php	/^				$key = intval($key);$/;"	v
keys	lib/Cake/Utility/Set.php	/^				$keys = explode('.', trim($path, '.'));$/;"	v
keys	lib/Cake/Utility/Set.php	/^				$keys = explode('\/', trim($path, '\/'));$/;"	v
keys	lib/Cake/Utility/Set.php	/^			$keys = $keys2[1];$/;"	v
keys	lib/Cake/Utility/Set.php	/^			$keys = $path;$/;"	v
keys	lib/Cake/Utility/Set.php	/^			$keys = Set::extract($data, $path1);$/;"	v
keys	lib/Cake/Utility/Set.php	/^			$keys = Set::format($data, $format, $path1);$/;"	v
keys	lib/Cake/Utility/Set.php	/^			$keys = array_keys($array);$/;"	v
keys	lib/Cake/Utility/Set.php	/^			$keys = get_object_vars($object);$/;"	v
keys	lib/Cake/Utility/Set.php	/^		$keys = array_unique($keys);$/;"	v
length	lib/Cake/Utility/Set.php	/^					$length = count($matches);$/;"	v
list	lib/Cake/Utility/Set.php	/^			$list = Hash::normalize($list, $assoc);$/;"	v
list	lib/Cake/Utility/Set.php	/^			$list = array('no', 'yes');$/;"	v
list	lib/Cake/Utility/Set.php	/^			$list = explode($sep, $list);$/;"	v
list	lib/Cake/Utility/Set.php	/^		$list = Set::normalize($list, false);$/;"	v
map	lib/Cake/Utility/Set.php	/^	public static function map($class = 'stdClass', $tmp = 'stdClass') {$/;"	f
matches	lib/Cake/Utility/Set.php	/^					$matches = $filtered;$/;"	v
matches	lib/Cake/Utility/Set.php	/^			$matches = array();$/;"	v
matches	lib/Cake/Utility/Set.php	/^	public static function matches($conditions, $data = array(), $i = null, $length = null) {$/;"	f
merge	lib/Cake/Utility/Set.php	/^	public static function merge($data, $merge = null) {$/;"	f
nest	lib/Cake/Utility/Set.php	/^	public static function nest($data, $options = array()) {$/;"	f
new	lib/Cake/Utility/Set.php	/^						$new = array_merge($new, Set::reverse($value));$/;"	v
new	lib/Cake/Utility/Set.php	/^			$new = array();$/;"	v
normalize	lib/Cake/Utility/Set.php	/^	public static function normalize($list, $assoc = true, $sep = ',', $trim = true) {$/;"	f
numeric	lib/Cake/Utility/Set.php	/^			$numeric = true;$/;"	v
numeric	lib/Cake/Utility/Set.php	/^		$numeric = false;$/;"	v
numeric	lib/Cake/Utility/Set.php	/^	public static function numeric($array = null) {$/;"	f
originalKeys	lib/Cake/Utility/Set.php	/^		$originalKeys = array_keys($data);$/;"	v
out	lib/Cake/Utility/Set.php	/^						$out = get_object_vars($out);$/;"	v
out	lib/Cake/Utility/Set.php	/^				$out = $new;$/;"	v
out	lib/Cake/Utility/Set.php	/^			$out = $array;$/;"	v
out	lib/Cake/Utility/Set.php	/^			$out = $object;$/;"	v
out	lib/Cake/Utility/Set.php	/^			$out = new $class;$/;"	v
out	lib/Cake/Utility/Set.php	/^			$out = new stdClass;$/;"	v
out	lib/Cake/Utility/Set.php	/^		$out = array();$/;"	v
parent	lib/Cake/Utility/Set.php	/^					$parent = implode('\/', $context['trace']) . '\/.';$/;"	v
parentId	lib/Cake/Utility/Set.php	/^			$parentId = Set::get($result, $parentKeys);$/;"	v
parentKeys	lib/Cake/Utility/Set.php	/^		$parentKeys = explode('\/', trim($options['parentPath'], '\/'));$/;"	v
path	lib/Cake/Utility/Set.php	/^			$path = $tmp;$/;"	v
path	lib/Cake/Utility/Set.php	/^			$path = String::tokenize($path, '.', '{', '}');$/;"	v
path	lib/Cake/Utility/Set.php	/^			$path = explode('.', $path);$/;"	v
pattern	lib/Cake/Utility/Set.php	/^				$pattern = substr($key, 1, -1);$/;"	v
primary	lib/Cake/Utility/Set.php	/^						$primary = false;$/;"	v
primary	lib/Cake/Utility/Set.php	/^					$primary = true;$/;"	v
pushDiff	lib/Cake/Utility/Set.php	/^	public static function pushDiff($array, $array2) {$/;"	f
r	lib/Cake/Utility/Set.php	/^		$r = array();$/;"	v
remove	lib/Cake/Utility/Set.php	/^	public static function remove($list, $path = null) {$/;"	f
result	lib/Cake/Utility/Set.php	/^		$result = Set::_flatten(Set::extract($data, $path));$/;"	v
return	lib/Cake/Utility/Set.php	/^				$return = 1;$/;"	v
return	lib/Cake/Utility/Set.php	/^				$return = Set::countDim(reset($array)) + 1;$/;"	v
return	lib/Cake/Utility/Set.php	/^			$return = $list[$select];$/;"	v
return	lib/Cake/Utility/Set.php	/^			$return = max($depth);$/;"	v
return	lib/Cake/Utility/Set.php	/^		$return = $idMap = array();$/;"	v
return	lib/Cake/Utility/Set.php	/^		$return = null;$/;"	v
reverse	lib/Cake/Utility/Set.php	/^	public static function reverse($object) {$/;"	f
root	lib/Cake/Utility/Set.php	/^			$root = $options['root'];$/;"	v
root	lib/Cake/Utility/Set.php	/^			$root = Set::get($return[0], $parentKeys);$/;"	v
sort	lib/Cake/Utility/Set.php	/^	public static function sort($data, $path, $dir) {$/;"	f
sorted	lib/Cake/Utility/Set.php	/^		$sorted = array();$/;"	v
stack	lib/Cake/Utility/Set.php	/^				$stack = array_merge($stack, Set::_flatten($r, $id));$/;"	v
stack	lib/Cake/Utility/Set.php	/^		$stack = array();$/;"	v
tmp	lib/Cake/Utility/Set.php	/^			$tmp = $data;$/;"	v
tmp	lib/Cake/Utility/Set.php	/^		$tmp = array();$/;"	v
tmpPath	lib/Cake/Utility/Set.php	/^						$tmpPath = array_slice($path, $i + 1);$/;"	v
tok	lib/Cake/Utility/Set.php	/^							$tok = array_shift($tokens);$/;"	v
token	lib/Cake/Utility/Set.php	/^				$token = substr($token, 0, strpos($token, '['));$/;"	v
token	lib/Cake/Utility/Set.php	/^			$token = array_shift($tokens);$/;"	v
tokens	lib/Cake/Utility/Set.php	/^		$tokens = array_slice(preg_split('\/(?<!=|\\\\\\\\)\\\/(?![a-z-\\s]*\\])\/', $path), 1);$/;"	v
val	lib/Cake/Utility/Set.php	/^			$val = $class;$/;"	v
val	lib/Cake/Utility/Set.php	/^			$val = $data[$key];$/;"	v
vals	lib/Cake/Utility/Set.php	/^			$vals = Set::extract($data, $path2);$/;"	v
vals	lib/Cake/Utility/Set.php	/^			$vals = Set::format($data, $format, $path2);$/;"	v
String	lib/Cake/Utility/String.php	/^class String {$/;"	c
append	lib/Cake/Utility/String.php	/^			$append = '';$/;"	v
append	lib/Cake/Utility/String.php	/^		$append = $prepend = $ellipsis;$/;"	v
bits	lib/Cake/Utility/String.php	/^				$bits = mb_substr($truncate, $spacepos);$/;"	v
breakAt	lib/Cake/Utility/String.php	/^					$breakAt = mb_strpos($text, ' ', $width);$/;"	v
breakAt	lib/Cake/Utility/String.php	/^				$breakAt = mb_strrpos($part, ' ');$/;"	v
buffer	lib/Cake/Utility/String.php	/^					$buffer = '';$/;"	v
buffer	lib/Cake/Utility/String.php	/^		$buffer = '';$/;"	v
chunks	lib/Cake/Utility/String.php	/^			$chunks = explode("\\n", $wrapped);$/;"	v
clean	lib/Cake/Utility/String.php	/^				$clean = array_merge(array($/;"	v
clean	lib/Cake/Utility/String.php	/^			$clean = array('method' => $options['clean']);$/;"	v
clean	lib/Cake/Utility/String.php	/^			$clean = array('method' => 'text');$/;"	v
clean	lib/Cake/Utility/String.php	/^		$clean = $options['clean'];$/;"	v
cleanInsert	lib/Cake/Utility/String.php	/^	public static function cleanInsert($str, $options) {$/;"	f
contentLength	lib/Cake/Utility/String.php	/^				$contentLength = mb_strlen(preg_replace('\/&[0-9a-z]{2,8};|&#[0-9]{1,7};|&#x[0-9a-f]{1,6};\/i', ' ', $tag[3]));$/;"	v
data	lib/Cake/Utility/String.php	/^		$data = (array)$data;$/;"	v
dataKeys	lib/Cake/Utility/String.php	/^		$dataKeys = array_keys($data);$/;"	v
dataReplacements	lib/Cake/Utility/String.php	/^		$dataReplacements = array_combine($hashKeys, array_values($data));$/;"	v
defaults	lib/Cake/Utility/String.php	/^		$defaults = array($/;"	v
depth	lib/Cake/Utility/String.php	/^		$depth = 0;$/;"	v
endPos	lib/Cake/Utility/String.php	/^			$endPos = $textLen;$/;"	v
endPos	lib/Cake/Utility/String.php	/^		$endPos = $pos + $phraseLen + $radius;$/;"	v
entitiesLength	lib/Cake/Utility/String.php	/^					$entitiesLength = 0;$/;"	v
excerpt	lib/Cake/Utility/String.php	/^		$excerpt = $prepend . $excerpt . $append;$/;"	v
excerpt	lib/Cake/Utility/String.php	/^		$excerpt = mb_substr($text, $startPos, $endPos - $startPos);$/;"	v
excerpt	lib/Cake/Utility/String.php	/^	public static function excerpt($text, $phrase, $radius = 100, $ellipsis = '...') {$/;"	f
format	lib/Cake/Utility/String.php	/^			$format = sprintf($/;"	v
format	lib/Cake/Utility/String.php	/^		$format = $options['format'];$/;"	v
hashKeys	lib/Cake/Utility/String.php	/^		$hashKeys = array_map('crc32', $dataKeys);$/;"	v
highlight	lib/Cake/Utility/String.php	/^	public static function highlight($text, $phrase, $options = array()) {$/;"	f
host	lib/Cake/Utility/String.php	/^				$host = env('HOST');$/;"	v
host	lib/Cake/Utility/String.php	/^			$host = env('HOSTNAME');$/;"	v
insert	lib/Cake/Utility/String.php	/^	public static function insert($str, $data, $options = array()) {$/;"	f
ip	lib/Cake/Utility/String.php	/^				$ip = gethostbyname($host);$/;"	v
ipSix	lib/Cake/Utility/String.php	/^			$ipSix = '';$/;"	v
key	lib/Cake/Utility/String.php	/^			$key = sprintf($format, preg_quote($key, '\/'));$/;"	v
kleenex	lib/Cake/Utility/String.php	/^				$kleenex = sprintf($/;"	v
lastCloseTag	lib/Cake/Utility/String.php	/^				$lastCloseTag = mb_strrpos($truncateCheck, '>');$/;"	v
lastOpenTag	lib/Cake/Utility/String.php	/^				$lastOpenTag = mb_strrpos($truncateCheck, '<');$/;"	v
lastTag	lib/Cake/Utility/String.php	/^					$lastTag = array_pop($lastTagMatches[0]);$/;"	v
left	lib/Cake/Utility/String.php	/^					$left = $length - $totalLength;$/;"	v
length	lib/Cake/Utility/String.php	/^		$length = strlen($data);$/;"	v
nextChar	lib/Cake/Utility/String.php	/^			$nextChar = mb_substr($text, $width, 1);$/;"	v
node	lib/Cake/Utility/String.php	/^					$node = crc32($host);$/;"	v
node	lib/Cake/Utility/String.php	/^					$node = ip2long($ip);$/;"	v
node	lib/Cake/Utility/String.php	/^				$node = crc32($node);$/;"	v
node	lib/Cake/Utility/String.php	/^				$node = null;$/;"	v
node	lib/Cake/Utility/String.php	/^				$node = str_replace($/;"	v
node	lib/Cake/Utility/String.php	/^			$node = base_convert($ipSix, 2, 10);$/;"	v
node	lib/Cake/Utility/String.php	/^			$node = crc32(Configure::read('Security.salt'));$/;"	v
node	lib/Cake/Utility/String.php	/^			$node = explode(':', $node);$/;"	v
node	lib/Cake/Utility/String.php	/^			$node = ip2long($node);$/;"	v
node	lib/Cake/Utility/String.php	/^			$node = null;$/;"	v
node	lib/Cake/Utility/String.php	/^		$node = env('SERVER_ADDR');$/;"	v
offset	lib/Cake/Utility/String.php	/^				$offset = $length + 1;$/;"	v
offset	lib/Cake/Utility/String.php	/^				$offset = $pos + strlen($val);$/;"	v
offset	lib/Cake/Utility/String.php	/^				$offset = ++$tmpOffset;$/;"	v
offset	lib/Cake/Utility/String.php	/^			$offset = 0;$/;"	v
offset	lib/Cake/Utility/String.php	/^		$offset = 0;$/;"	v
offsets	lib/Cake/Utility/String.php	/^			$offsets = array($/;"	v
open	lib/Cake/Utility/String.php	/^							$open = true;$/;"	v
open	lib/Cake/Utility/String.php	/^		$open = false;$/;"	v
openTags	lib/Cake/Utility/String.php	/^			$openTags = array();$/;"	v
options	lib/Cake/Utility/String.php	/^			$options = array('width' => $options);$/;"	v
part	lib/Cake/Utility/String.php	/^				$part = mb_substr($text, 0, $breakAt);$/;"	v
part	lib/Cake/Utility/String.php	/^				$part = mb_substr($text, 0, $width);$/;"	v
part	lib/Cake/Utility/String.php	/^			$part = mb_substr($text, 0, $width);$/;"	v
part	lib/Cake/Utility/String.php	/^			$part = trim($part);$/;"	v
parts	lib/Cake/Utility/String.php	/^			$parts = array();$/;"	v
parts	lib/Cake/Utility/String.php	/^		$parts = array();$/;"	v
phrase	lib/Cake/Utility/String.php	/^			$phrase = "(?![^<]+>)$phrase(?![^<]+>)";$/;"	v
phrase	lib/Cake/Utility/String.php	/^		$phrase = '(' . preg_quote($phrase, '|') . ')';$/;"	v
phraseLen	lib/Cake/Utility/String.php	/^		$phraseLen = mb_strlen($phrase);$/;"	v
pid	lib/Cake/Utility/String.php	/^			$pid = getmypid();$/;"	v
pid	lib/Cake/Utility/String.php	/^			$pid = hphp_get_thread_id();$/;"	v
pid	lib/Cake/Utility/String.php	/^			$pid = mt_rand(0, 0xfff) | 0x4000;$/;"	v
pid	lib/Cake/Utility/String.php	/^			$pid = zend_thread_id();$/;"	v
pos	lib/Cake/Utility/String.php	/^						$pos = array_search($closeTag[1], $openTags);$/;"	v
pos	lib/Cake/Utility/String.php	/^		$pos = mb_strpos(mb_strtolower($text), mb_strtolower($phrase));$/;"	v
prepend	lib/Cake/Utility/String.php	/^			$prepend = '';$/;"	v
replace	lib/Cake/Utility/String.php	/^			$replace = array();$/;"	v
results	lib/Cake/Utility/String.php	/^		$results = array();$/;"	v
segment	lib/Cake/Utility/String.php	/^					$segment = "(?![^<]+>)$segment(?![^<]+>)";$/;"	v
segment	lib/Cake/Utility/String.php	/^				$segment = '(' . preg_quote($segment, '|') . ')';$/;"	v
spacepos	lib/Cake/Utility/String.php	/^					$spacepos = mb_strrpos($truncate, $lastTag) + mb_strlen($lastTag);$/;"	v
spacepos	lib/Cake/Utility/String.php	/^			$spacepos = mb_strpos($truncate, ' ');$/;"	v
spacepos	lib/Cake/Utility/String.php	/^			$spacepos = mb_strrpos($truncate, ' ');$/;"	v
startPos	lib/Cake/Utility/String.php	/^			$startPos = 0;$/;"	v
startPos	lib/Cake/Utility/String.php	/^		$startPos = $pos - $radius;$/;"	v
str	lib/Cake/Utility/String.php	/^					$str = String::cleanInsert($str, $options);$/;"	v
str	lib/Cake/Utility/String.php	/^				$str = preg_replace($kleenex, $clean['replacement'], $str);$/;"	v
str	lib/Cake/Utility/String.php	/^				$str = substr_replace($str, $val, $pos, 1);$/;"	v
str	lib/Cake/Utility/String.php	/^			$str = preg_replace($key, $hashVal, $str);$/;"	v
str	lib/Cake/Utility/String.php	/^			$str = str_replace($options['escape'] . $options['before'], $options['before'], $str);$/;"	v
str	lib/Cake/Utility/String.php	/^			$str = str_replace($tmpHash, $tmpValue, $str);$/;"	v
stripLinks	lib/Cake/Utility/String.php	/^	public static function stripLinks($text) {$/;"	f
tail	lib/Cake/Utility/String.php	/^	public static function tail($text, $length = 100, $options = array()) {$/;"	f
tempData	lib/Cake/Utility/String.php	/^		$tempData = array_combine($dataKeys, $hashKeys);$/;"	v
text	lib/Cake/Utility/String.php	/^				$text = trim(mb_substr($text, mb_strlen($part)));$/;"	v
text	lib/Cake/Utility/String.php	/^			$text = trim(mb_substr($text, mb_strlen($part)));$/;"	v
textLen	lib/Cake/Utility/String.php	/^		$textLen = mb_strlen($text);$/;"	v
tmpOffset	lib/Cake/Utility/String.php	/^					$tmpOffset = $offsets[$i];$/;"	v
tmpOffset	lib/Cake/Utility/String.php	/^			$tmpOffset = -1;$/;"	v
tmpValue	lib/Cake/Utility/String.php	/^			$tmpValue = (is_array($tmpValue)) ? '' : $tmpValue;$/;"	v
toList	lib/Cake/Utility/String.php	/^	public static function toList($list, $and = 'and', $separator = ', ') {$/;"	f
tokenize	lib/Cake/Utility/String.php	/^	public static function tokenize($data, $separator = ',', $leftBound = '(', $rightBound = ')') {$/;"	f
totalLength	lib/Cake/Utility/String.php	/^			$totalLength = mb_strlen(strip_tags($ellipsis));$/;"	v
truncate	lib/Cake/Utility/String.php	/^			$truncate = $spacepos === false ? '' : trim(mb_substr($truncate, $spacepos));$/;"	v
truncate	lib/Cake/Utility/String.php	/^			$truncate = '';$/;"	v
truncate	lib/Cake/Utility/String.php	/^			$truncate = mb_substr($text, 0, $length - mb_strlen($ellipsis));$/;"	v
truncate	lib/Cake/Utility/String.php	/^			$truncate = mb_substr($truncate, 0, $spacepos);$/;"	v
truncate	lib/Cake/Utility/String.php	/^		$truncate = mb_substr($text, mb_strlen($text) - $length + mb_strlen($ellipsis));$/;"	v
truncate	lib/Cake/Utility/String.php	/^	public static function truncate($text, $length = 100, $options = array()) {$/;"	f
truncateCheck	lib/Cake/Utility/String.php	/^				$truncateCheck = mb_substr($truncate, 0, $spacepos);$/;"	v
uuid	lib/Cake/Utility/String.php	/^	public static function uuid() {$/;"	f
val	lib/Cake/Utility/String.php	/^				$val = array_shift($data);$/;"	v
with	lib/Cake/Utility/String.php	/^			$with = array();$/;"	v
wordWrap	lib/Cake/Utility/String.php	/^	public static function wordWrap($text, $width = 72, $break = "\\n", $cut = false) {$/;"	f
wrap	lib/Cake/Utility/String.php	/^	public static function wrap($text, $options = array()) {$/;"	f
wrapped	lib/Cake/Utility/String.php	/^			$wrapped = implode("\\n", $chunks);$/;"	v
wrapped	lib/Cake/Utility/String.php	/^			$wrapped = self::wordWrap($text, $options['width'], "\\n");$/;"	v
wrapped	lib/Cake/Utility/String.php	/^			$wrapped = trim(chunk_split($text, $options['width'] - 1, "\\n"));$/;"	v
File	lib/Cake/Utility/Validation.php	/^		$File = new File($check);$/;"	v
Validation	lib/Cake/Utility/Validation.php	/^class Validation {$/;"	c
_check	lib/Cake/Utility/Validation.php	/^	protected static function _check($check, $regex) {$/;"	f
_defaults	lib/Cake/Utility/Validation.php	/^	protected static function _defaults($params) {$/;"	f
_pass	lib/Cake/Utility/Validation.php	/^	protected static function _pass($method, $check, $classPrefix) {$/;"	f
_pattern	lib/Cake/Utility/Validation.php	/^	protected static $_pattern = array($/;"	v
_populateIp	lib/Cake/Utility/Validation.php	/^	protected static function _populateIp() {$/;"	f
_reset	lib/Cake/Utility/Validation.php	/^	protected static function _reset() {$/;"	f
alphaNumeric	lib/Cake/Utility/Validation.php	/^	public static function alphaNumeric($check) {$/;"	f
areaCode	lib/Cake/Utility/Validation.php	/^					$areaCode = '(?![2-9]11)(?!555)([2-9][0-8][0-9])';$/;"	v
between	lib/Cake/Utility/Validation.php	/^	public static function between($check, $min, $max) {$/;"	f
blank	lib/Cake/Utility/Validation.php	/^	public static function blank($check) {$/;"	f
boolean	lib/Cake/Utility/Validation.php	/^	public static function boolean($check) {$/;"	f
booleanList	lib/Cake/Utility/Validation.php	/^		$booleanList = array(0, 1, '0', '1', true, false);$/;"	v
cards	lib/Cake/Utility/Validation.php	/^		$cards = array($/;"	v
cc	lib/Cake/Utility/Validation.php	/^	public static function cc($check, $type = 'fast', $deep = false, $regex = null) {$/;"	f
check	lib/Cake/Utility/Validation.php	/^					$check = sprintf("%.1f", $check);$/;"	v
check	lib/Cake/Utility/Validation.php	/^			$check = $check['error'];$/;"	v
check	lib/Cake/Utility/Validation.php	/^			$check = $check['tmp_name'];$/;"	v
check	lib/Cake/Utility/Validation.php	/^			$check = mb_strtolower($check);$/;"	v
check	lib/Cake/Utility/Validation.php	/^		$check = (array)$check;$/;"	v
check	lib/Cake/Utility/Validation.php	/^		$check = array_filter((array)$check);$/;"	v
check	lib/Cake/Utility/Validation.php	/^		$check = str_replace($data['decimal_point'], '.', $check);$/;"	v
check	lib/Cake/Utility/Validation.php	/^		$check = str_replace($data['thousands_sep'], '', $check);$/;"	v
check	lib/Cake/Utility/Validation.php	/^		$check = str_replace(array('-', ' '), '', $check);$/;"	v
className	lib/Cake/Utility/Validation.php	/^		$className = ucwords($classPrefix) . 'Validation';$/;"	v
comparison	lib/Cake/Utility/Validation.php	/^	public static function comparison($check1, $operator = null, $check2 = null) {$/;"	f
custom	lib/Cake/Utility/Validation.php	/^	public static function custom($check, $regex = null) {$/;"	f
data	lib/Cake/Utility/Validation.php	/^		$data = localeconv();$/;"	v
date	lib/Cake/Utility/Validation.php	/^			$date = implode(' ', $parts);$/;"	v
date	lib/Cake/Utility/Validation.php	/^	public static function date($check, $format = 'ymd', $regex = null) {$/;"	f
datetime	lib/Cake/Utility/Validation.php	/^	public static function datetime($check, $dateFormat = 'ymd', $regex = null) {$/;"	f
decimal	lib/Cake/Utility/Validation.php	/^	public static function decimal($check, $places = null, $regex = null) {$/;"	f
defaults	lib/Cake/Utility/Validation.php	/^		$defaults = array($/;"	v
defaults	lib/Cake/Utility/Validation.php	/^		$defaults = array('in' => null, 'max' => null, 'min' => null);$/;"	v
district	lib/Cake/Utility/Validation.php	/^					$district = '[ABCEGHJKLMNPRSTVYX]';$/;"	v
dnum	lib/Cake/Utility/Validation.php	/^				$dnum = "(?:[0-9]*[\\.]{$places}|{$lnum}[\\.]{$places})";$/;"	v
dnum	lib/Cake/Utility/Validation.php	/^			$dnum = "[0-9]*[\\.]{$lnum}";$/;"	v
email	lib/Cake/Utility/Validation.php	/^	public static function email($check, $deep = false, $regex = null) {$/;"	f
equalTo	lib/Cake/Utility/Validation.php	/^	public static function equalTo($check, $comparedTo) {$/;"	f
errors	lib/Cake/Utility/Validation.php	/^	public static $errors = array();$/;"	v
exp	lib/Cake/Utility/Validation.php	/^			$exp = "(?:[eE]{$sign}{$lnum})?";$/;"	v
extension	lib/Cake/Utility/Validation.php	/^		$extension = strtolower(pathinfo($check, PATHINFO_EXTENSION));$/;"	v
extension	lib/Cake/Utility/Validation.php	/^	public static function extension($check, $extensions = array('gif', 'jpeg', 'png', 'jpg')) {$/;"	f
fileSize	lib/Cake/Utility/Validation.php	/^	public static function fileSize($check, $operator = null, $size = null) {$/;"	f
filesize	lib/Cake/Utility/Validation.php	/^		$filesize = filesize($check);$/;"	v
flags	lib/Cake/Utility/Validation.php	/^			$flags = FILTER_FLAG_IPV4;$/;"	v
flags	lib/Cake/Utility/Validation.php	/^			$flags = FILTER_FLAG_IPV6;$/;"	v
flags	lib/Cake/Utility/Validation.php	/^		$flags = 0;$/;"	v
format	lib/Cake/Utility/Validation.php	/^		$format = (is_array($format)) ? array_values($format) : array($format);$/;"	v
fourDigitYear	lib/Cake/Utility/Validation.php	/^		$fourDigitYear = '(([1][9][0-9][0-9])|([2][0-9][0-9][0-9]))';$/;"	v
inList	lib/Cake/Utility/Validation.php	/^	public static function inList($check, $list, $caseInsensitive = false) {$/;"	f
ip	lib/Cake/Utility/Validation.php	/^	public static function ip($check, $type = 'both') {$/;"	f
length	lib/Cake/Utility/Validation.php	/^		$length = mb_strlen($check);$/;"	v
length	lib/Cake/Utility/Validation.php	/^		$length = strlen($check);$/;"	v
letters	lib/Cake/Utility/Validation.php	/^					$letters = '[ABCEGHJKLMNPRSTVWXYZ]';$/;"	v
list	lib/Cake/Utility/Validation.php	/^			$list = array_map('mb_strtolower', $list);$/;"	v
lnum	lib/Cake/Utility/Validation.php	/^			$lnum = '[0-9]+';$/;"	v
luhn	lib/Cake/Utility/Validation.php	/^	public static function luhn($check, $deep = false) {$/;"	f
maxLength	lib/Cake/Utility/Validation.php	/^	public static function maxLength($check, $max) {$/;"	f
mime	lib/Cake/Utility/Validation.php	/^		$mime = $File->mime();$/;"	v
mimeType	lib/Cake/Utility/Validation.php	/^	public static function mimeType($check, $mimeTypes = array()) {$/;"	f
minLength	lib/Cake/Utility/Validation.php	/^	public static function minLength($check, $min) {$/;"	f
money	lib/Cake/Utility/Validation.php	/^		$money = '(?!0,?\\d)(?:\\d{1,3}(?:([, .])\\d{3})?(?:\\1\\d{3})*|(?:\\d+))((?!\\1)[,.]\\d{1,2})?';$/;"	v
money	lib/Cake/Utility/Validation.php	/^	public static function money($check, $symbolPosition = 'left') {$/;"	f
month	lib/Cake/Utility/Validation.php	/^		$month = '(0[123456789]|10|11|12)';$/;"	v
multiple	lib/Cake/Utility/Validation.php	/^	public static function multiple($check, $options = array(), $caseInsensitive = false) {$/;"	f
naturalNumber	lib/Cake/Utility/Validation.php	/^	public static function naturalNumber($check, $allowZero = false) {$/;"	f
notEmpty	lib/Cake/Utility/Validation.php	/^	public static function notEmpty($check) {$/;"	f
number	lib/Cake/Utility/Validation.php	/^			$number = $check[$position] * 2;$/;"	v
numeric	lib/Cake/Utility/Validation.php	/^	public static function numeric($check) {$/;"	f
operator	lib/Cake/Utility/Validation.php	/^		$operator = str_replace(array(' ', "\\t", "\\n", "\\r", "\\0", "\\x0B"), '', strtolower($operator));$/;"	v
parts	lib/Cake/Utility/Validation.php	/^		$parts = explode(' ', $check);$/;"	v
pattern	lib/Cake/Utility/Validation.php	/^			$pattern = '((([0-9A-Fa-f]{1,4}:){7}(([0-9A-Fa-f]{1,4})|:))|(([0-9A-Fa-f]{1,4}:){6}';$/;"	v
pattern	lib/Cake/Utility/Validation.php	/^			$pattern = '(?:(?:25[0-5]|2[0-4][0-9]|(?:(?:1[0-9])?|[1-9]?)[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|(?:(?:1[0-9])?|[1-9]?)[0-9])';$/;"	v
phone	lib/Cake/Utility/Validation.php	/^	public static function phone($check, $regex = null, $country = 'all') {$/;"	f
places	lib/Cake/Utility/Validation.php	/^				$places = '[0-9]{' . $places . '}';$/;"	v
postal	lib/Cake/Utility/Validation.php	/^	public static function postal($check, $regex = null, $country = 'us') {$/;"	f
range	lib/Cake/Utility/Validation.php	/^	public static function range($check, $lower = null, $upper = null) {$/;"	f
regex	lib/Cake/Utility/Validation.php	/^					$regex = "\/\\\\A\\\\b{$district}[0-9]{$letters} [0-9]{$letters}[0-9]\\\\b\\\\z\/i";$/;"	v
regex	lib/Cake/Utility/Validation.php	/^					$regex = '\/\\\\A\\\\b[0-9]{3}-[0-9]{2}-[0-9]{4}\\\\b\\\\z\/i';$/;"	v
regex	lib/Cake/Utility/Validation.php	/^					$regex = '\/\\\\A\\\\b[0-9]{5}(?:-[0-9]{4})?\\\\b\\\\z\/i';$/;"	v
regex	lib/Cake/Utility/Validation.php	/^					$regex = '\/\\\\A\\\\b[0-9]{6}-[0-9]{4}\\\\b\\\\z\/i';$/;"	v
regex	lib/Cake/Utility/Validation.php	/^					$regex = '\/\\\\A\\\\b[0-9]{9}\\\\b\\\\z\/i';$/;"	v
regex	lib/Cake/Utility/Validation.php	/^					$regex = '\/\\\\A\\\\b[A-Z]{1,2}[0-9][A-Z0-9]? [0-9][ABD-HJLNP-UW-Z]{2}\\\\b\\\\z\/i';$/;"	v
regex	lib/Cake/Utility/Validation.php	/^					$regex = '\/^(?:(?:\\+?1\\s*(?:[.-]\\s*)?)?';$/;"	v
regex	lib/Cake/Utility/Validation.php	/^					$regex = '\/^[0-9]{5}$\/i';$/;"	v
regex	lib/Cake/Utility/Validation.php	/^					$regex = '\/^[1-9]{1}[0-9]{3}$\/i';$/;"	v
regex	lib/Cake/Utility/Validation.php	/^				$regex = "\/^{$sign}(?:{$lnum}|{$dnum}){$exp}$\/";$/;"	v
regex	lib/Cake/Utility/Validation.php	/^				$regex = "\/^{$sign}{$dnum}{$exp}$\/";$/;"	v
regex	lib/Cake/Utility/Validation.php	/^				$regex = $cards['all'][strtolower($value)];$/;"	v
regex	lib/Cake/Utility/Validation.php	/^				$regex = $value;$/;"	v
regex	lib/Cake/Utility/Validation.php	/^			$regex = $cards['fast'];$/;"	v
regex	lib/Cake/Utility/Validation.php	/^			$regex = '\/^' . $money . '(?<!\\x{00a2})\\p{Sc}?$\/u';$/;"	v
regex	lib/Cake/Utility/Validation.php	/^			$regex = '\/^(?!\\x{00a2})\\p{Sc}?' . $money . '$\/u';$/;"	v
regex	lib/Cake/Utility/Validation.php	/^			$regex = '\/^[\\p{L}0-9!#$%&\\'*+\\\/=?^_`{|}~-]+(?:\\.[\\p{L}0-9!#$%&\\'*+\\\/=?^_`{|}~-]+)*@' . self::$_pattern['hostname'] . '$\/ui';$/;"	v
regex	lib/Cake/Utility/Validation.php	/^		$regex = $allowZero ? '\/^(?:0|[1-9][0-9]*)$\/' : '\/^[1-9][0-9]*$\/';$/;"	v
regex	lib/Cake/Utility/Validation.php	/^		$regex = '\/^(?:(?:https?|ftps?|sftp|file|news|gopher):\\\/\\\/)' . (!empty($strict) ? '' : '?') .$/;"	v
regex	lib/Cake/Utility/Validation.php	/^		$regex = '\/^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[0-5][a-fA-F0-9]{3}-[089aAbB][a-fA-F0-9]{3}-[a-fA-F0-9]{12}$\/';$/;"	v
return	lib/Cake/Utility/Validation.php	/^		$return = self::_check($check, $regex);$/;"	v
separator	lib/Cake/Utility/Validation.php	/^		$separator = '([- \/.])';$/;"	v
sign	lib/Cake/Utility/Validation.php	/^			$sign = '[+-]?';$/;"	v
size	lib/Cake/Utility/Validation.php	/^			$size = CakeNumber::fromReadableSize($size);$/;"	v
ssn	lib/Cake/Utility/Validation.php	/^	public static function ssn($check, $regex = null, $country = null) {$/;"	f
strict	lib/Cake/Utility/Validation.php	/^				$strict = !is_numeric($val);$/;"	v
strict	lib/Cake/Utility/Validation.php	/^		$strict = !is_numeric($check);$/;"	v
sum	lib/Cake/Utility/Validation.php	/^		$sum = 0;$/;"	v
time	lib/Cake/Utility/Validation.php	/^			$time = array_pop($parts);$/;"	v
time	lib/Cake/Utility/Validation.php	/^	public static function time($check) {$/;"	f
twoDigitYear	lib/Cake/Utility/Validation.php	/^		$twoDigitYear = '([0-9]{2})';$/;"	v
type	lib/Cake/Utility/Validation.php	/^		$type = strtolower($type);$/;"	v
uploadError	lib/Cake/Utility/Validation.php	/^	public static function uploadError($check) {$/;"	f
url	lib/Cake/Utility/Validation.php	/^	public static function url($check, $strict = false) {$/;"	f
userDefined	lib/Cake/Utility/Validation.php	/^	public static function userDefined($check, $object, $method, $args = null) {$/;"	f
uuid	lib/Cake/Utility/Validation.php	/^	public static function uuid($check) {$/;"	f
val	lib/Cake/Utility/Validation.php	/^					$val = mb_strtolower($val);$/;"	v
valid	lib/Cake/Utility/Validation.php	/^			$valid = self::date($date, $dateFormat, $regex) && self::time($time);$/;"	v
valid	lib/Cake/Utility/Validation.php	/^		$valid = false;$/;"	v
validChars	lib/Cake/Utility/Validation.php	/^		$validChars = '([' . preg_quote('!"$&\\'()*+,-.@_:;=~[]') . '\\\/0-9\\p{L}\\p{N}]|(%[0-9a-f]{2}))';$/;"	v
year	lib/Cake/Utility/Validation.php	/^		$year = '(?:' . $fourDigitYear . '|' . $twoDigitYear . ')';$/;"	v
Xml	lib/Cake/Utility/Xml.php	/^class Xml {$/;"	c
_createChild	lib/Cake/Utility/Xml.php	/^	protected static function _createChild($data) {$/;"	f
_fromArray	lib/Cake/Utility/Xml.php	/^	protected static function _fromArray($dom, $node, &$data, $format) {$/;"	f
_loadXml	lib/Cake/Utility/Xml.php	/^	protected static function _loadXml($input, $options) {$/;"	f
_toArray	lib/Cake/Utility/Xml.php	/^	protected static function _toArray($xml, &$parentData, $ns, $namespaces) {$/;"	f
asString	lib/Cake/Utility/Xml.php	/^		$asString = trim((string)$xml);$/;"	v
attribute	lib/Cake/Utility/Xml.php	/^						$attribute = $dom->createAttribute($key);$/;"	v
build	lib/Cake/Utility/Xml.php	/^	public static function build($input, $options = array()) {$/;"	f
child	lib/Cake/Utility/Xml.php	/^							$child = $dom->createElement($key, $value);$/;"	v
child	lib/Cake/Utility/Xml.php	/^							$child = $dom->createElement($key, '');$/;"	v
child	lib/Cake/Utility/Xml.php	/^						$child = null;$/;"	v
child	lib/Cake/Utility/Xml.php	/^		$child = $dom->createElement($key);$/;"	v
childNS	lib/Cake/Utility/Xml.php	/^				$childNS = $value['xmlns:'];$/;"	v
childNS	lib/Cake/Utility/Xml.php	/^		$childNS = $childValue = null;$/;"	v
childValue	lib/Cake/Utility/Xml.php	/^				$childValue = (string)$value['@'];$/;"	v
childValue	lib/Cake/Utility/Xml.php	/^			$childValue = (string)$value;$/;"	v
data	lib/Cake/Utility/Xml.php	/^			$data = $asString;$/;"	v
data	lib/Cake/Utility/Xml.php	/^		$data = array();$/;"	v
defaults	lib/Cake/Utility/Xml.php	/^		$defaults = array($/;"	v
dom	lib/Cake/Utility/Xml.php	/^		$dom = new DOMDocument($options['version'], $options['encoding']);$/;"	v
fromArray	lib/Cake/Utility/Xml.php	/^	public static function fromArray($input, $options = array()) {$/;"	f
hasDisable	lib/Cake/Utility/Xml.php	/^		$hasDisable = function_exists('libxml_disable_entity_loader');$/;"	v
internalErrors	lib/Cake/Utility/Xml.php	/^		$internalErrors = libxml_use_internal_errors(true);$/;"	v
isNamespace	lib/Cake/Utility/Xml.php	/^					$isNamespace = strpos($key, 'xmlns:');$/;"	v
itemData	lib/Cake/Utility/Xml.php	/^							$itemData = compact('dom', 'node', 'key', 'format');$/;"	v
key	lib/Cake/Utility/Xml.php	/^							$key = substr($key, 1);$/;"	v
key	lib/Cake/Utility/Xml.php	/^					$key = $namespace . ':' . $key;$/;"	v
key	lib/Cake/Utility/Xml.php	/^		$key = key($input);$/;"	v
name	lib/Cake/Utility/Xml.php	/^		$name = $ns . $xml->getName();$/;"	v
namespaces	lib/Cake/Utility/Xml.php	/^		$namespaces = array_merge(array('' => ''), $obj->getNamespaces(true));$/;"	v
obj	lib/Cake/Utility/Xml.php	/^			$obj = simplexml_import_dom($obj);$/;"	v
options	lib/Cake/Utility/Xml.php	/^			$options = array('format' => (string)$options);$/;"	v
options	lib/Cake/Utility/Xml.php	/^			$options = array('return' => (string)$options);$/;"	v
response	lib/Cake/Utility/Xml.php	/^				$response = $socket->get($input);$/;"	v
result	lib/Cake/Utility/Xml.php	/^		$result = array();$/;"	v
socket	lib/Cake/Utility/Xml.php	/^				$socket = new HttpSocket(array('request' => array('redirect' => 10)));$/;"	v
toArray	lib/Cake/Utility/Xml.php	/^	public static function toArray($obj) {$/;"	f
value	lib/Cake/Utility/Xml.php	/^						$value = '';$/;"	v
value	lib/Cake/Utility/Xml.php	/^						$value = (int)$value;$/;"	v
xml	lib/Cake/Utility/Xml.php	/^				$xml = new DOMDocument();$/;"	v
xml	lib/Cake/Utility/Xml.php	/^				$xml = new SimpleXMLElement($input, LIBXML_NOCDATA);$/;"	v
xml	lib/Cake/Utility/Xml.php	/^			$xml = null;$/;"	v
Helper	lib/Cake/View/Helper.php	/^class Helper extends Object {$/;"	c
_View	lib/Cake/View/Helper.php	/^		$this->_View = $View;$/;"	v
_View	lib/Cake/View/Helper.php	/^	protected $_View;$/;"	v
__call	lib/Cake/View/Helper.php	/^	public function __call($method, $params) {$/;"	f
__construct	lib/Cake/View/Helper.php	/^	public function __construct(View $View, $settings = array()) {$/;"	f
__get	lib/Cake/View/Helper.php	/^	public function __get($name) {$/;"	f
__set	lib/Cake/View/Helper.php	/^	public function __set($name, $value) {$/;"	f
_association	lib/Cake/View/Helper.php	/^					$this->_association = $part;$/;"	v
_association	lib/Cake/View/Helper.php	/^			$this->_association = $parts[0];$/;"	v
_association	lib/Cake/View/Helper.php	/^		$this->_association = null;$/;"	v
_association	lib/Cake/View/Helper.php	/^	protected $_association;$/;"	v
_attributeFormat	lib/Cake/View/Helper.php	/^	protected $_attributeFormat = '%s="%s"';$/;"	v
_clean	lib/Cake/View/Helper.php	/^	protected function _clean() {$/;"	f
_cleaned	lib/Cake/View/Helper.php	/^			$this->_cleaned = $this->_tainted;$/;"	v
_cleaned	lib/Cake/View/Helper.php	/^			$this->_cleaned = preg_replace('#<\/*(applet|meta|xml|blink|link|style|script|embed|object|iframe|frame|frameset|ilayer|layer|bgsound|title|base)[^>]*>#i', "", $this->_cleaned);$/;"	v
_cleaned	lib/Cake/View/Helper.php	/^			$this->_cleaned = stripslashes($this->_tainted);$/;"	v
_cleaned	lib/Cake/View/Helper.php	/^		$this->_cleaned = html_entity_decode($this->_cleaned, ENT_COMPAT, "UTF-8");$/;"	v
_cleaned	lib/Cake/View/Helper.php	/^		$this->_cleaned = null;$/;"	v
_cleaned	lib/Cake/View/Helper.php	/^		$this->_cleaned = preg_replace('#(&\\#*\\w+)[\\x00-\\x20]+;#u', "$1;", $this->_cleaned);$/;"	v
_cleaned	lib/Cake/View/Helper.php	/^		$this->_cleaned = preg_replace('#(&\\#x*)([0-9A-F]+);*#iu', "$1$2;", $this->_cleaned);$/;"	v
_cleaned	lib/Cake/View/Helper.php	/^		$this->_cleaned = preg_replace('#(<[^>]+)style[\\x00-\\x20]*=[\\x00-\\x20]*([\\`\\'\\"]*).*behaviour[\\x00-\\x20]*\\([^>]*>#iU', "$1>", $this->_cleaned);$/;"	v
_cleaned	lib/Cake/View/Helper.php	/^		$this->_cleaned = preg_replace('#(<[^>]+)style[\\x00-\\x20]*=[\\x00-\\x20]*([\\`\\'\\"]*).*expression[\\x00-\\x20]*\\([^>]*>#iU', "$1>", $this->_cleaned);$/;"	v
_cleaned	lib/Cake/View/Helper.php	/^		$this->_cleaned = preg_replace('#(<[^>]+)style[\\x00-\\x20]*=[\\x00-\\x20]*([\\`\\'\\"]*).*s[\\x00-\\x20]*c[\\x00-\\x20]*r[\\x00-\\x20]*i[\\x00-\\x20]*p[\\x00-\\x20]*t[\\x00-\\x20]*:*[^>]*>#iUu', "$1>", $this->_cleaned);$/;"	v
_cleaned	lib/Cake/View/Helper.php	/^		$this->_cleaned = preg_replace('#(<[^>]+[\\x00-\\x20\\"\\'\\\/])(on|xmlns)[^>]*>#iUu', "$1>", $this->_cleaned);$/;"	v
_cleaned	lib/Cake/View/Helper.php	/^		$this->_cleaned = preg_replace('#([a-z]*)[\\x00-\\x20]*=([\\'\\"]*)[\\x00-\\x20]*data[\\x00-\\x20]*:#Uu', '$1=$2nodata...', $this->_cleaned);$/;"	v
_cleaned	lib/Cake/View/Helper.php	/^		$this->_cleaned = preg_replace('#([a-z]*)[\\x00-\\x20]*=([\\'\\"]*)[\\x00-\\x20]*v[\\x00-\\x20]*b[\\x00-\\x20]*s[\\x00-\\x20]*c[\\x00-\\x20]*r[\\x00-\\x20]*i[\\x00-\\x20]*p[\\x00-\\x20]*t[\\x00-\\x20]*:#iUu', '$1=$2novbscript...', $this->_cleaned);$/;"	v
_cleaned	lib/Cake/View/Helper.php	/^		$this->_cleaned = preg_replace('#([a-z]*)[\\x00-\\x20]*=*([\\'\\"]*)[\\x00-\\x20]*-moz-binding[\\x00-\\x20]*:#iUu', '$1=$2nomozbinding...', $this->_cleaned);$/;"	v
_cleaned	lib/Cake/View/Helper.php	/^		$this->_cleaned = preg_replace('#([a-z]*)[\\x00-\\x20]*=[\\x00-\\x20]*([\\`\\'\\"]*)[\\\\x00-\\x20]*j[\\x00-\\x20]*a[\\x00-\\x20]*v[\\x00-\\x20]*a[\\x00-\\x20]*s[\\x00-\\x20]*c[\\x00-\\x20]*r[\\x00-\\x20]*i[\\x00-\\x20]*p[\\x00-\\x20]*t[\\x00-\\x20]*:#iUu', '$1=$2nojavascript...', $this->_cleaned);$/;"	v
_cleaned	lib/Cake/View/Helper.php	/^		$this->_cleaned = preg_replace('#<\/*\\w+:\\w[^>]*>#i', "", $this->_cleaned);$/;"	v
_cleaned	lib/Cake/View/Helper.php	/^		$this->_cleaned = str_replace(array("&amp;", "&lt;", "&gt;"), array("&amp;amp;", "&amp;lt;", "&amp;gt;"), $this->_cleaned);$/;"	v
_cleaned	lib/Cake/View/Helper.php	/^	protected $_cleaned = null;$/;"	v
_confirm	lib/Cake/View/Helper.php	/^	protected function _confirm($message, $okCode, $cancelCode = '', $options = array()) {$/;"	f
_encodeUrl	lib/Cake/View/Helper.php	/^	protected function _encodeUrl($url) {$/;"	f
_entityPath	lib/Cake/View/Helper.php	/^		$this->_entityPath = $entity;$/;"	v
_entityPath	lib/Cake/View/Helper.php	/^	protected $_entityPath;$/;"	v
_fieldSuffixes	lib/Cake/View/Helper.php	/^	protected $_fieldSuffixes = array($/;"	v
_formatAttribute	lib/Cake/View/Helper.php	/^	protected function _formatAttribute($key, $value, $escape = true) {$/;"	f
_helperMap	lib/Cake/View/Helper.php	/^			$this->_helperMap = ObjectCollection::normalizeObjectArray($this->helpers);$/;"	v
_helperMap	lib/Cake/View/Helper.php	/^	protected $_helperMap = array();$/;"	v
_initInputField	lib/Cake/View/Helper.php	/^	protected function _initInputField($field, $options = array()) {$/;"	f
_minimizedAttributeFormat	lib/Cake/View/Helper.php	/^	protected $_minimizedAttributeFormat = '%s="%s"';$/;"	v
_minimizedAttributes	lib/Cake/View/Helper.php	/^	protected $_minimizedAttributes = array($/;"	v
_modelScope	lib/Cake/View/Helper.php	/^			$this->_modelScope = $entity;$/;"	v
_modelScope	lib/Cake/View/Helper.php	/^			$this->_modelScope = false;$/;"	v
_modelScope	lib/Cake/View/Helper.php	/^	protected $_modelScope;$/;"	v
_name	lib/Cake/View/Helper.php	/^	protected function _name($options = array(), $field = null, $key = 'name') {$/;"	f
_parseAttributes	lib/Cake/View/Helper.php	/^	protected function _parseAttributes($options, $exclude = null, $insertBefore = ' ', $insertAfter = null) {$/;"	f
_reset	lib/Cake/View/Helper.php	/^	protected function _reset() {$/;"	f
_selectedArray	lib/Cake/View/Helper.php	/^	protected function _selectedArray($data, $key = 'id') {$/;"	f
_tainted	lib/Cake/View/Helper.php	/^		$this->_tainted = $output;$/;"	v
_tainted	lib/Cake/View/Helper.php	/^		$this->_tainted = null;$/;"	v
_tainted	lib/Cake/View/Helper.php	/^	protected $_tainted = null;$/;"	v
addClass	lib/Cake/View/Helper.php	/^	public function addClass($options = array(), $class = null, $key = 'class') {$/;"	f
afterLayout	lib/Cake/View/Helper.php	/^	public function afterLayout($layoutFile) {$/;"	f
afterRender	lib/Cake/View/Helper.php	/^	public function afterRender($viewFile) {$/;"	f
afterRenderFile	lib/Cake/View/Helper.php	/^	public function afterRenderFile($viewFile, $content) {$/;"	f
array	lib/Cake/View/Helper.php	/^		$array = array();$/;"	v
asset	lib/Cake/View/Helper.php	/^		$asset = explode('?', $file);$/;"	v
assetTimestamp	lib/Cake/View/Helper.php	/^	public function assetTimestamp($path) {$/;"	f
assetUrl	lib/Cake/View/Helper.php	/^	public function assetUrl($path, $options = array()) {$/;"	f
attributes	lib/Cake/View/Helper.php	/^			$attributes = array();$/;"	v
beforeLayout	lib/Cake/View/Helper.php	/^	public function beforeLayout($layoutFile) {$/;"	f
beforeRender	lib/Cake/View/Helper.php	/^	public function beforeRender($viewFile) {$/;"	f
beforeRenderFile	lib/Cake/View/Helper.php	/^	public function beforeRenderFile($viewFile) {$/;"	f
clean	lib/Cake/View/Helper.php	/^	public function clean($output) {$/;"	f
confirm	lib/Cake/View/Helper.php	/^			$confirm = h($confirm);$/;"	v
confirm	lib/Cake/View/Helper.php	/^		$confirm = "if (confirm({$message})) { {$okCode} } {$cancelCode}";$/;"	v
count	lib/Cake/View/Helper.php	/^				$count === 2 &&$/;"	v
count	lib/Cake/View/Helper.php	/^		$count = count($entity);$/;"	v
count	lib/Cake/View/Helper.php	/^		$count = count($parts);$/;"	v
data	lib/Cake/View/Helper.php	/^				$data = $this->request->data[$model];$/;"	v
data	lib/Cake/View/Helper.php	/^		$data = $this->request->data;$/;"	v
dom	lib/Cake/View/Helper.php	/^		$dom = $model . implode('', array_map(array('Inflector', 'camelize'), $entity));$/;"	v
domId	lib/Cake/View/Helper.php	/^	public function domId($options = null, $id = 'id') {$/;"	f
encoded	lib/Cake/View/Helper.php	/^		$encoded = implode('\/', $parts);$/;"	v
entity	lib/Cake/View/Helper.php	/^			$entity = $parts[0] . '.' . $parts[0];$/;"	v
entity	lib/Cake/View/Helper.php	/^			$entity = $this->_modelScope . '.' . $entity;$/;"	v
entity	lib/Cake/View/Helper.php	/^		$entity = $this->entity();$/;"	v
entity	lib/Cake/View/Helper.php	/^	public function entity() {$/;"	f
escape	lib/Cake/View/Helper.php	/^			$escape = $options['escape'];$/;"	v
exclude	lib/Cake/View/Helper.php	/^				$exclude = array();$/;"	v
exclude	lib/Cake/View/Helper.php	/^			$exclude = array('escape' => true) + array_flip($exclude);$/;"	v
field	lib/Cake/View/Helper.php	/^			$field = $options;$/;"	v
field	lib/Cake/View/Helper.php	/^	public function field() {$/;"	f
fieldset	lib/Cake/View/Helper.php	/^	public $fieldset = array();$/;"	v
file	lib/Cake/View/Helper.php	/^				$file = str_replace('\/', '\\\\', $file);$/;"	v
file	lib/Cake/View/Helper.php	/^			$file = trim($file, '\/');$/;"	v
file	lib/Cake/View/Helper.php	/^		$file = $asset[0];$/;"	v
filepath	lib/Cake/View/Helper.php	/^			$filepath = preg_replace($/;"	v
habtmKey	lib/Cake/View/Helper.php	/^		$habtmKey = $this->field();$/;"	v
helpers	lib/Cake/View/Helper.php	/^	public $helpers = array();$/;"	v
isHabtm	lib/Cake/View/Helper.php	/^		$isHabtm = ($/;"	v
isMinimized	lib/Cake/View/Helper.php	/^		$isMinimized = in_array($key, $this->_minimizedAttributes);$/;"	v
last	lib/Cake/View/Helper.php	/^			$last = isset($entity[$count - 2]) ? $entity[$count - 2] : null;$/;"	v
last	lib/Cake/View/Helper.php	/^		$last = $entity[$count - 1];$/;"	v
lastPart	lib/Cake/View/Helper.php	/^		$lastPart = isset($parts[$count - 1]) ? $parts[$count - 1] : null;$/;"	v
message	lib/Cake/View/Helper.php	/^		$message = json_encode($message);$/;"	v
model	lib/Cake/View/Helper.php	/^				$model = ClassRegistry::getObject($habtmKey);$/;"	v
model	lib/Cake/View/Helper.php	/^			$model = $data;$/;"	v
model	lib/Cake/View/Helper.php	/^		$model = array_shift($entity);$/;"	v
model	lib/Cake/View/Helper.php	/^	public function model() {$/;"	f
name	lib/Cake/View/Helper.php	/^				$name = $field;$/;"	v
name	lib/Cake/View/Helper.php	/^				$name = 'data[' . implode('][', $this->entity()) . ']';$/;"	v
oldstring	lib/Cake/View/Helper.php	/^			$oldstring = $this->_cleaned;$/;"	v
options	lib/Cake/View/Helper.php	/^			$options = (array)$options + array('escape' => true);$/;"	v
options	lib/Cake/View/Helper.php	/^			$options = 0;$/;"	v
options	lib/Cake/View/Helper.php	/^			$options = array();$/;"	v
options	lib/Cake/View/Helper.php	/^		$options = $this->_name($options);$/;"	v
options	lib/Cake/View/Helper.php	/^		$options = $this->domId($options);$/;"	v
options	lib/Cake/View/Helper.php	/^		$options = $this->value($options);$/;"	v
options	lib/Cake/View/Helper.php	/^		$options = (array)$options;$/;"	v
out	lib/Cake/View/Helper.php	/^			$out = $options;$/;"	v
out	lib/Cake/View/Helper.php	/^			$out = implode(' ', $attributes);$/;"	v
output	lib/Cake/View/Helper.php	/^	public function output($str) {$/;"	f
parts	lib/Cake/View/Helper.php	/^		$parts = array_map('rawurldecode', explode('\/', $path));$/;"	v
parts	lib/Cake/View/Helper.php	/^		$parts = array_map('rawurlencode', $parts);$/;"	v
parts	lib/Cake/View/Helper.php	/^		$parts = array_values(Hash::filter(explode('.', $entity)));$/;"	v
path	lib/Cake/View/Helper.php	/^				$path = $themePath . 'webroot' . DS . $file;$/;"	v
path	lib/Cake/View/Helper.php	/^			$path = $options['pathPrefix'] . $path;$/;"	v
path	lib/Cake/View/Helper.php	/^			$path = Inflector::underscore($plugin) . '\/' . $path;$/;"	v
path	lib/Cake/View/Helper.php	/^			$path = rtrim(Router::fullBaseUrl(), '\/') . '\/' . ltrim($path, '\/');$/;"	v
path	lib/Cake/View/Helper.php	/^		$path = $this->_encodeUrl($this->assetTimestamp($this->webroot($path)));$/;"	v
path	lib/Cake/View/Helper.php	/^		$path = parse_url($url, PHP_URL_PATH);$/;"	v
plugin	lib/Cake/View/Helper.php	/^				$plugin = Inflector::camelize($segments[0]);$/;"	v
plugin	lib/Cake/View/Helper.php	/^	public $plugin = null;$/;"	v
pluginPath	lib/Cake/View/Helper.php	/^					$pluginPath = CakePlugin::path($plugin) . 'webroot' . DS . implode(DS, $segments);$/;"	v
request	lib/Cake/View/Helper.php	/^		$this->request = $View->request;$/;"	v
request	lib/Cake/View/Helper.php	/^	public $request = null;$/;"	v
result	lib/Cake/View/Helper.php	/^				$result = $options['default'];$/;"	v
result	lib/Cake/View/Helper.php	/^				$result = $this->_selectedArray($data[$habtmKey], $model->primaryKey);$/;"	v
result	lib/Cake/View/Helper.php	/^			$result = $data[$habtmKey][$habtmKey];$/;"	v
result	lib/Cake/View/Helper.php	/^			$result = Hash::get($data, implode('.', $entity));$/;"	v
result	lib/Cake/View/Helper.php	/^		$result = null;$/;"	v
reversed	lib/Cake/View/Helper.php	/^			$reversed = array_reverse($parts);$/;"	v
segments	lib/Cake/View/Helper.php	/^			$segments = explode('\/', ltrim($filepath, '\/'));$/;"	v
setEntity	lib/Cake/View/Helper.php	/^	public function setEntity($entity, $setScope = false) {$/;"	f
settings	lib/Cake/View/Helper.php	/^			$settings = array('enabled' => false) + (array)$this->_helperMap[$name]['settings'];$/;"	v
settings	lib/Cake/View/Helper.php	/^			$this->settings = Hash::merge($this->settings, $settings);$/;"	v
settings	lib/Cake/View/Helper.php	/^	public $settings = array();$/;"	v
stamp	lib/Cake/View/Helper.php	/^		$stamp = Configure::read('Asset.timestamp');$/;"	v
tags	lib/Cake/View/Helper.php	/^	public $tags = array();$/;"	v
theme	lib/Cake/View/Helper.php	/^				$theme = $segments[1];$/;"	v
theme	lib/Cake/View/Helper.php	/^			$theme = $this->theme . '\/';$/;"	v
theme	lib/Cake/View/Helper.php	/^	public $theme = null;$/;"	v
themePath	lib/Cake/View/Helper.php	/^				$themePath = App::themePath($theme) . 'webroot' . DS . implode(DS, $segments);$/;"	v
themePath	lib/Cake/View/Helper.php	/^				$themePath = App::themePath($this->theme);$/;"	v
timestampEnabled	lib/Cake/View/Helper.php	/^		$timestampEnabled = $stamp === 'force' || ($stamp === true && Configure::read('debug') > 0);$/;"	v
truthy	lib/Cake/View/Helper.php	/^		$truthy = array(1, '1', true, 'true', $key);$/;"	v
url	lib/Cake/View/Helper.php	/^	public function url($url = null, $full = false) {$/;"	f
value	lib/Cake/View/Helper.php	/^			$value = implode(' ', $value);$/;"	v
value	lib/Cake/View/Helper.php	/^	public function value($options = array(), $field = null, $key = 'value') {$/;"	f
webPath	lib/Cake/View/Helper.php	/^					$webPath = "{$this->request->webroot}theme\/" . $theme . $asset[0];$/;"	v
webPath	lib/Cake/View/Helper.php	/^				$webPath = "{$this->request->webroot}theme\/" . $theme . $asset[0];$/;"	v
webPath	lib/Cake/View/Helper.php	/^		$webPath = "{$this->request->webroot}" . $asset[0];$/;"	v
webroot	lib/Cake/View/Helper.php	/^	public function webroot($file) {$/;"	f
webrootPath	lib/Cake/View/Helper.php	/^			$webrootPath = WWW_ROOT . str_replace('\/', DS, $filepath);$/;"	v
CacheHelper	lib/Cake/View/Helper/CacheHelper.php	/^class CacheHelper extends AppHelper {$/;"	c
_counter	lib/Cake/View/Helper/CacheHelper.php	/^	protected $_counter = 0;$/;"	v
_enabled	lib/Cake/View/Helper/CacheHelper.php	/^	protected function _enabled() {$/;"	f
_match	lib/Cake/View/Helper/CacheHelper.php	/^	protected $_match = array();$/;"	v
_parseContent	lib/Cake/View/Helper/CacheHelper.php	/^	protected function _parseContent($file, $out) {$/;"	f
_parseFile	lib/Cake/View/Helper/CacheHelper.php	/^	protected function _parseFile($file, $cache) {$/;"	f
_parseOutput	lib/Cake/View/Helper/CacheHelper.php	/^	protected function _parseOutput($cache) {$/;"	f
_replace	lib/Cake/View/Helper/CacheHelper.php	/^	protected $_replace = array();$/;"	v
_replaceSection	lib/Cake/View/Helper/CacheHelper.php	/^	protected function _replaceSection() {$/;"	f
_stripTags	lib/Cake/View/Helper/CacheHelper.php	/^	protected function _stripTags($content) {$/;"	f
_writeFile	lib/Cake/View/Helper/CacheHelper.php	/^	protected function _writeFile($content, $timestamp, $useCallbacks = false) {$/;"	f
afterLayout	lib/Cake/View/Helper/CacheHelper.php	/^	public function afterLayout($layoutFile) {$/;"	f
afterRenderFile	lib/Cake/View/Helper/CacheHelper.php	/^	public function afterRenderFile($viewFile, $output) {$/;"	f
cache	lib/Cake/View/Helper/CacheHelper.php	/^						$cache = substr($original, 0, $position);$/;"	v
cache	lib/Cake/View/Helper/CacheHelper.php	/^		$cache = $cache . '.php';$/;"	v
cache	lib/Cake/View/Helper/CacheHelper.php	/^		$cache = strtolower(Inflector::slug($path));$/;"	v
cache	lib/Cake/View/Helper/CacheHelper.php	/^	public function cache($file, $out) {$/;"	f
cacheAction	lib/Cake/View/Helper/CacheHelper.php	/^		$cacheAction = $this->_View->cacheAction;$/;"	v
cacheTime	lib/Cake/View/Helper/CacheHelper.php	/^					$cacheTime = $cacheAction[$index];$/;"	v
cacheTime	lib/Cake/View/Helper/CacheHelper.php	/^				$cacheTime = $options['duration'];$/;"	v
cacheTime	lib/Cake/View/Helper/CacheHelper.php	/^			$cacheTime = $cacheAction;$/;"	v
cacheTime	lib/Cake/View/Helper/CacheHelper.php	/^			$cacheTime = $now + $timestamp;$/;"	v
cacheTime	lib/Cake/View/Helper/CacheHelper.php	/^			$cacheTime = strtotime($timestamp, $now);$/;"	v
cacheTime	lib/Cake/View/Helper/CacheHelper.php	/^		$cacheTime = 0;$/;"	v
cached	lib/Cake/View/Helper/CacheHelper.php	/^			$cached = $this->_parseOutput($out);$/;"	v
content	lib/Cake/View/Helper/CacheHelper.php	/^		$content = preg_replace("\/(<\\\\?xml)\/", "<?php echo '$1'; ?>", $content);$/;"	v
controller	lib/Cake/View/Helper/CacheHelper.php	/^				$controller = new ' . $this->_View->name . 'Controller($request, $response);$/;"	v
count	lib/Cake/View/Helper/CacheHelper.php	/^		$count = 0;$/;"	v
file	lib/Cake/View/Helper/CacheHelper.php	/^			$file = file_get_contents($file);$/;"	v
file	lib/Cake/View/Helper/CacheHelper.php	/^		$file = '<!--cachetime:' . $cacheTime . '--><?php';$/;"	v
fileResult	lib/Cake/View/Helper/CacheHelper.php	/^		$fileResult = $fileResult[0];$/;"	v
i	lib/Cake/View/Helper/CacheHelper.php	/^			$i = 0;$/;"	v
index	lib/Cake/View/Helper/CacheHelper.php	/^					$index = $action;$/;"	v
index	lib/Cake/View/Helper/CacheHelper.php	/^				$index = 'index';$/;"	v
index	lib/Cake/View/Helper/CacheHelper.php	/^				$index = array_search($element, $this->_match);$/;"	v
index	lib/Cake/View/Helper/CacheHelper.php	/^			$index = null;$/;"	v
keys	lib/Cake/View/Helper/CacheHelper.php	/^			$keys = array_keys($cacheAction);$/;"	v
length	lib/Cake/View/Helper/CacheHelper.php	/^				$length = strlen($found);$/;"	v
message	lib/Cake/View/Helper/CacheHelper.php	/^				$message = __d($/;"	v
now	lib/Cake/View/Helper/CacheHelper.php	/^		$now = time();$/;"	v
options	lib/Cake/View/Helper/CacheHelper.php	/^					$options = $cacheAction[$index] + array('duration' => 0, 'callbacks' => false);$/;"	v
options	lib/Cake/View/Helper/CacheHelper.php	/^			$options = $cacheAction;$/;"	v
original	lib/Cake/View/Helper/CacheHelper.php	/^				$original = $cache;$/;"	v
out	lib/Cake/View/Helper/CacheHelper.php	/^			$out = $this->_stripTags($out);$/;"	v
out	lib/Cake/View/Helper/CacheHelper.php	/^		$out = preg_replace_callback('\/<!--nocache-->\/', array($this, '_replaceSection'), $out);$/;"	v
outputResult	lib/Cake/View/Helper/CacheHelper.php	/^			$outputResult = array_values($outputResult);$/;"	v
outputResult	lib/Cake/View/Helper/CacheHelper.php	/^		$outputResult = $outputResult[0];$/;"	v
path	lib/Cake/View/Helper/CacheHelper.php	/^			$path = $prefix . '_' . $path;$/;"	v
path	lib/Cake/View/Helper/CacheHelper.php	/^			$path = 'home';$/;"	v
path	lib/Cake/View/Helper/CacheHelper.php	/^		$path = $this->request->here();$/;"	v
position	lib/Cake/View/Helper/CacheHelper.php	/^					$position = strpos($cache, $found, $position);$/;"	v
position	lib/Cake/View/Helper/CacheHelper.php	/^				$position = 0;$/;"	v
prefix	lib/Cake/View/Helper/CacheHelper.php	/^		$prefix = Configure::read('Cache.viewPrefix');$/;"	v
request	lib/Cake/View/Helper/CacheHelper.php	/^				$request = unserialize(base64_decode(\\'' . base64_encode(serialize($this->request)) . '\\'));$/;"	v
request	lib/Cake/View/Helper/CacheHelper.php	/^				$this->request = $request;';$/;"	v
useCallbacks	lib/Cake/View/Helper/CacheHelper.php	/^				$useCallbacks = $options['callbacks'];$/;"	v
useCallbacks	lib/Cake/View/Helper/CacheHelper.php	/^		$useCallbacks = false;$/;"	v
viewVars	lib/Cake/View/Helper/CacheHelper.php	/^				$this->viewVars = $controller->viewVars;$/;"	v
FormHelper	lib/Cake/View/Helper/FormHelper.php	/^class FormHelper extends AppHelper {$/;"	c
__call	lib/Cake/View/Helper/FormHelper.php	/^	public function __call($method, $params) {$/;"	f
__construct	lib/Cake/View/Helper/FormHelper.php	/^	public function __construct(View $View, $settings = array()) {$/;"	f
_csrfField	lib/Cake/View/Helper/FormHelper.php	/^	protected function _csrfField() {$/;"	f
_dateTimeSelected	lib/Cake/View/Helper/FormHelper.php	/^	protected function _dateTimeSelected($select, $fieldName, $attributes) {$/;"	f
_divOptions	lib/Cake/View/Helper/FormHelper.php	/^	protected function _divOptions($options) {$/;"	f
_domIdSuffixes	lib/Cake/View/Helper/FormHelper.php	/^		$this->_domIdSuffixes = array();$/;"	v
_domIdSuffixes	lib/Cake/View/Helper/FormHelper.php	/^	protected $_domIdSuffixes = array();$/;"	v
_extractOption	lib/Cake/View/Helper/FormHelper.php	/^	protected function _extractOption($name, $options, $default = null) {$/;"	f
_generateOptions	lib/Cake/View/Helper/FormHelper.php	/^	protected function _generateOptions($name, $options = array()) {$/;"	f
_getDateTimeValue	lib/Cake/View/Helper/FormHelper.php	/^	protected function _getDateTimeValue($value, $timeFormat) {$/;"	f
_getFormat	lib/Cake/View/Helper/FormHelper.php	/^	protected function _getFormat($options) {$/;"	f
_getInput	lib/Cake/View/Helper/FormHelper.php	/^	protected function _getInput($args) {$/;"	f
_getLabel	lib/Cake/View/Helper/FormHelper.php	/^	protected function _getLabel($fieldName, $options) {$/;"	f
_getModel	lib/Cake/View/Helper/FormHelper.php	/^	protected function _getModel($model) {$/;"	f
_initInputField	lib/Cake/View/Helper/FormHelper.php	/^	protected function _initInputField($field, $options = array()) {$/;"	f
_inputDefaults	lib/Cake/View/Helper/FormHelper.php	/^				$this->_inputDefaults = (array)$defaults;$/;"	v
_inputDefaults	lib/Cake/View/Helper/FormHelper.php	/^				$this->_inputDefaults = array_merge($this->_inputDefaults, (array)$defaults);$/;"	v
_inputDefaults	lib/Cake/View/Helper/FormHelper.php	/^	protected $_inputDefaults = array();$/;"	v
_inputLabel	lib/Cake/View/Helper/FormHelper.php	/^	protected function _inputLabel($fieldName, $label, $options) {$/;"	f
_introspectModel	lib/Cake/View/Helper/FormHelper.php	/^	protected function _introspectModel($model, $key, $field = null) {$/;"	f
_isRequiredField	lib/Cake/View/Helper/FormHelper.php	/^	protected function _isRequiredField($validationRules) {$/;"	f
_lastAction	lib/Cake/View/Helper/FormHelper.php	/^		$this->_lastAction = parse_url($action, PHP_URL_PATH) . $query;$/;"	v
_lastAction	lib/Cake/View/Helper/FormHelper.php	/^	protected $_lastAction = '';$/;"	v
_lastAction	lib/Cake/View/Helper/FormHelper.php	/^	protected function _lastAction($url) {$/;"	f
_magicOptions	lib/Cake/View/Helper/FormHelper.php	/^	protected function _magicOptions($options) {$/;"	f
_maxLength	lib/Cake/View/Helper/FormHelper.php	/^	protected function _maxLength($options) {$/;"	f
_models	lib/Cake/View/Helper/FormHelper.php	/^	protected $_models = array();$/;"	v
_name	lib/Cake/View/Helper/FormHelper.php	/^	protected function _name($options = array(), $field = null, $key = 'name') {$/;"	f
_options	lib/Cake/View/Helper/FormHelper.php	/^	protected $_options = array($/;"	v
_optionsOptions	lib/Cake/View/Helper/FormHelper.php	/^	protected function _optionsOptions($options) {$/;"	f
_parseOptions	lib/Cake/View/Helper/FormHelper.php	/^	protected function _parseOptions($options) {$/;"	f
_secure	lib/Cake/View/Helper/FormHelper.php	/^	protected function _secure($lock, $field = null, $value = null) {$/;"	f
_secureFieldName	lib/Cake/View/Helper/FormHelper.php	/^	protected function _secureFieldName($options) {$/;"	f
_selectOptions	lib/Cake/View/Helper/FormHelper.php	/^	protected function _selectOptions($elements = array(), $parents = array(), $showParents = null, $attributes = array()) {$/;"	f
_unlockedFields	lib/Cake/View/Helper/FormHelper.php	/^	protected $_unlockedFields = array();$/;"	v
action	lib/Cake/View/Helper/FormHelper.php	/^		$action = $this->url($options['action']);$/;"	v
action	lib/Cake/View/Helper/FormHelper.php	/^		$action = Router::url($url, true);$/;"	v
actionDefaults	lib/Cake/View/Helper/FormHelper.php	/^			$actionDefaults = array($/;"	v
actionName	lib/Cake/View/Helper/FormHelper.php	/^				$actionName = __d('cake', 'Edit %s');$/;"	v
actionName	lib/Cake/View/Helper/FormHelper.php	/^			$actionName = __d('cake', 'New %s');$/;"	v
after	lib/Cake/View/Helper/FormHelper.php	/^		$after = $options['after'];$/;"	v
allOptions	lib/Cake/View/Helper/FormHelper.php	/^			$allOptions = array_merge($attributes, $optionsHere);$/;"	v
append	lib/Cake/View/Helper/FormHelper.php	/^			$append = $this->Html->useTag('hiddenblock', $append);$/;"	v
append	lib/Cake/View/Helper/FormHelper.php	/^		$append = '';$/;"	v
attributes	lib/Cake/View/Helper/FormHelper.php	/^			$attributes = $this->value($attributes, $fieldName);$/;"	v
attributes	lib/Cake/View/Helper/FormHelper.php	/^		$attributes = $this->_dateTimeSelected('day', $fieldName, $attributes);$/;"	v
attributes	lib/Cake/View/Helper/FormHelper.php	/^		$attributes = $this->_dateTimeSelected('hour', $fieldName, $attributes);$/;"	v
attributes	lib/Cake/View/Helper/FormHelper.php	/^		$attributes = $this->_dateTimeSelected('min', $fieldName, $attributes);$/;"	v
attributes	lib/Cake/View/Helper/FormHelper.php	/^		$attributes = $this->_dateTimeSelected('month', $fieldName, $attributes);$/;"	v
attributes	lib/Cake/View/Helper/FormHelper.php	/^		$attributes = $this->_initInputField($fieldName, $attributes);$/;"	v
attributes	lib/Cake/View/Helper/FormHelper.php	/^		$attributes = $this->_initInputField($fieldName, array_merge($/;"	v
attributes	lib/Cake/View/Helper/FormHelper.php	/^		$attributes = array_diff_key($attributes, $defaults);$/;"	v
attributes	lib/Cake/View/Helper/FormHelper.php	/^		$attributes = array_merge($/;"	v
attributes	lib/Cake/View/Helper/FormHelper.php	/^		$attributes = array_merge($defaults, (array)$attributes);$/;"	v
attrs	lib/Cake/View/Helper/FormHelper.php	/^		$attrs = array_fill_keys($keys, $attributes);$/;"	v
autoLength	lib/Cake/View/Helper/FormHelper.php	/^		$autoLength = ($/;"	v
before	lib/Cake/View/Helper/FormHelper.php	/^		$before = $options['before'];$/;"	v
between	lib/Cake/View/Helper/FormHelper.php	/^			$between = $attributes['between'];$/;"	v
between	lib/Cake/View/Helper/FormHelper.php	/^			$between = '';$/;"	v
between	lib/Cake/View/Helper/FormHelper.php	/^		$between = null;$/;"	v
blacklisted	lib/Cake/View/Helper/FormHelper.php	/^			$blacklisted = ($/;"	v
button	lib/Cake/View/Helper/FormHelper.php	/^	public function button($title, $options = array()) {$/;"	f
caption	lib/Cake/View/Helper/FormHelper.php	/^			$caption = __d('cake', 'Submit');$/;"	v
change	lib/Cake/View/Helper/FormHelper.php	/^			$change = ($changeValue * $interval) - $min;$/;"	v
changeValue	lib/Cake/View/Helper/FormHelper.php	/^					$changeValue = ceil($changeValue);$/;"	v
changeValue	lib/Cake/View/Helper/FormHelper.php	/^					$changeValue = floor($changeValue);$/;"	v
changeValue	lib/Cake/View/Helper/FormHelper.php	/^					$changeValue = round($changeValue);$/;"	v
changeValue	lib/Cake/View/Helper/FormHelper.php	/^			$changeValue = $min * (1 \/ $interval);$/;"	v
checkbox	lib/Cake/View/Helper/FormHelper.php	/^	public function checkbox($fieldName, $options = array()) {$/;"	f
confirmMessage	lib/Cake/View/Helper/FormHelper.php	/^			$confirmMessage = $options['confirm'];$/;"	v
count	lib/Cake/View/Helper/FormHelper.php	/^		$count = 1;$/;"	v
create	lib/Cake/View/Helper/FormHelper.php	/^	public function create($model = null, $options = array()) {$/;"	f
created	lib/Cake/View/Helper/FormHelper.php	/^				$created = true;$/;"	v
created	lib/Cake/View/Helper/FormHelper.php	/^		$created = $id = false;$/;"	v
current	lib/Cake/View/Helper/FormHelper.php	/^				$current = intval(date('Y'));$/;"	v
current	lib/Cake/View/Helper/FormHelper.php	/^			$current = new DateTime();$/;"	v
data	lib/Cake/View/Helper/FormHelper.php	/^					$data = $options['monthNames'];$/;"	v
data	lib/Cake/View/Helper/FormHelper.php	/^					$data = array_reverse($data, true);$/;"	v
data	lib/Cake/View/Helper/FormHelper.php	/^				$data = array('am' => 'am', 'pm' => 'pm');$/;"	v
data	lib/Cake/View/Helper/FormHelper.php	/^		$data = array();$/;"	v
date	lib/Cake/View/Helper/FormHelper.php	/^					$date = date_create($attributes['value']);$/;"	v
date	lib/Cake/View/Helper/FormHelper.php	/^				$date = new DateTime($attributes['value']);$/;"	v
date	lib/Cake/View/Helper/FormHelper.php	/^			$date = date_create($attributes['value']);$/;"	v
date	lib/Cake/View/Helper/FormHelper.php	/^			$date = explode('-', $value);$/;"	v
dateFormat	lib/Cake/View/Helper/FormHelper.php	/^			$dateFormat = $this->_extractOption('dateFormat', $options, 'MDY');$/;"	v
dateTime	lib/Cake/View/Helper/FormHelper.php	/^	public function dateTime($fieldName, $dateFormat = 'DMY', $timeFormat = '12', $attributes = array()) {$/;"	f
day	lib/Cake/View/Helper/FormHelper.php	/^			$day = $days[0];$/;"	v
day	lib/Cake/View/Helper/FormHelper.php	/^	public function day($fieldName = null, $attributes = array()) {$/;"	f
days	lib/Cake/View/Helper/FormHelper.php	/^			$days = explode(' ', $date[2]);$/;"	v
decimalPlaces	lib/Cake/View/Helper/FormHelper.php	/^					$decimalPlaces = substr($fieldDef['length'], strpos($fieldDef['length'], ',') + 1);$/;"	v
defaultModel	lib/Cake/View/Helper/FormHelper.php	/^		$this->defaultModel = $model;$/;"	v
defaultModel	lib/Cake/View/Helper/FormHelper.php	/^	public $defaultModel = null;$/;"	v
defaultObject	lib/Cake/View/Helper/FormHelper.php	/^			$defaultObject = ClassRegistry::getObject($this->defaultModel);$/;"	v
defaults	lib/Cake/View/Helper/FormHelper.php	/^		$defaults = array($/;"	v
defaults	lib/Cake/View/Helper/FormHelper.php	/^		$defaults = array('monthNames' => true);$/;"	v
defaults	lib/Cake/View/Helper/FormHelper.php	/^		$defaults = array('wrap' => true, 'class' => 'error-message', 'escape' => true);$/;"	v
disabled	lib/Cake/View/Helper/FormHelper.php	/^			$disabled = $attributes['disabled'];$/;"	v
disabled	lib/Cake/View/Helper/FormHelper.php	/^		$disabled = array();$/;"	v
disabledIndex	lib/Cake/View/Helper/FormHelper.php	/^		$disabledIndex = array_search('disabled', $options, true);$/;"	v
disabledIsArray	lib/Cake/View/Helper/FormHelper.php	/^						$disabledIsArray = is_array($attributes['disabled']);$/;"	v
disabledIsNumeric	lib/Cake/View/Helper/FormHelper.php	/^							$disabledIsNumeric = is_numeric($name);$/;"	v
div	lib/Cake/View/Helper/FormHelper.php	/^			$div = $options['div'];$/;"	v
div	lib/Cake/View/Helper/FormHelper.php	/^		$div = $this->_extractOption('div', $options, true);$/;"	v
div	lib/Cake/View/Helper/FormHelper.php	/^		$div = true;$/;"	v
divOptions	lib/Cake/View/Helper/FormHelper.php	/^				$divOptions = $this->addClass($divOptions, 'error');$/;"	v
divOptions	lib/Cake/View/Helper/FormHelper.php	/^			$divOptions = $this->addClass($divOptions, 'required');$/;"	v
divOptions	lib/Cake/View/Helper/FormHelper.php	/^			$divOptions = array_merge($divOptions, $div);$/;"	v
divOptions	lib/Cake/View/Helper/FormHelper.php	/^			$divOptions = array_merge(array('class' => 'submit', 'tag' => 'div'), $div);$/;"	v
divOptions	lib/Cake/View/Helper/FormHelper.php	/^		$divOptions = $this->_divOptions($options);$/;"	v
divOptions	lib/Cake/View/Helper/FormHelper.php	/^		$divOptions = $this->addClass($divOptions, $options['type']);$/;"	v
divOptions	lib/Cake/View/Helper/FormHelper.php	/^		$divOptions = array('class' => 'input');$/;"	v
divOptions	lib/Cake/View/Helper/FormHelper.php	/^		$divOptions = array('tag' => 'div');$/;"	v
domId	lib/Cake/View/Helper/FormHelper.php	/^			$domId = isset($options['action']) ? $options['action'] : $this->request['action'];$/;"	v
domIdSuffix	lib/Cake/View/Helper/FormHelper.php	/^	public function domIdSuffix($value, $type = 'html4') {$/;"	f
e	lib/Cake/View/Helper/FormHelper.php	/^					$e = __d('cake', 'Error in field %s', Inflector::humanize($this->field()));$/;"	v
emptyMulti	lib/Cake/View/Helper/FormHelper.php	/^		$emptyMulti = ($/;"	v
end	lib/Cake/View/Helper/FormHelper.php	/^	public function end($options = null, $secureAttributes = array()) {$/;"	f
entity	lib/Cake/View/Helper/FormHelper.php	/^			$entity = $this->entity();$/;"	v
entity	lib/Cake/View/Helper/FormHelper.php	/^			$entity = explode('.', $name);$/;"	v
entity	lib/Cake/View/Helper/FormHelper.php	/^		$entity = $this->entity();$/;"	v
errMsg	lib/Cake/View/Helper/FormHelper.php	/^			$errMsg = $this->error($fieldName, $error);$/;"	v
error	lib/Cake/View/Helper/FormHelper.php	/^				$error = array_pop($error);$/;"	v
error	lib/Cake/View/Helper/FormHelper.php	/^				$error = call_user_func_array(array($this->Html, 'nestedList'), $listParams);$/;"	v
error	lib/Cake/View/Helper/FormHelper.php	/^			$error = $text;$/;"	v
error	lib/Cake/View/Helper/FormHelper.php	/^			$error = h($error);$/;"	v
error	lib/Cake/View/Helper/FormHelper.php	/^		$error = $this->_extractOption('error', $options, null);$/;"	v
error	lib/Cake/View/Helper/FormHelper.php	/^		$error = $this->tagIsInvalid();$/;"	v
error	lib/Cake/View/Helper/FormHelper.php	/^	public function error($field, $text = null, $options = array()) {$/;"	f
errorMessage	lib/Cake/View/Helper/FormHelper.php	/^		$errorMessage = $this->_extractOption('errorMessage', $options, true);$/;"	v
errors	lib/Cake/View/Helper/FormHelper.php	/^			$errors = $this->_introspectModel($model, 'errors');$/;"	v
errors	lib/Cake/View/Helper/FormHelper.php	/^			$errors = $this->validationErrors[$model];$/;"	v
errors	lib/Cake/View/Helper/FormHelper.php	/^		$errors = Hash::get($errors, implode('.', $entity));$/;"	v
errors	lib/Cake/View/Helper/FormHelper.php	/^		$errors = array();$/;"	v
escapeOptions	lib/Cake/View/Helper/FormHelper.php	/^		$escapeOptions = $this->_extractOption('escape', $attributes);$/;"	v
exclude	lib/Cake/View/Helper/FormHelper.php	/^		$exclude = array('name' => null, 'value' => null);$/;"	v
field	lib/Cake/View/Helper/FormHelper.php	/^				$field = $options;$/;"	v
field	lib/Cake/View/Helper/FormHelper.php	/^			$field = $this->entity();$/;"	v
field	lib/Cake/View/Helper/FormHelper.php	/^			$field = Hash::filter(explode('.', $field));$/;"	v
field	lib/Cake/View/Helper/FormHelper.php	/^		$field = $this->entity();$/;"	v
field	lib/Cake/View/Helper/FormHelper.php	/^		$field = implode('.', $field);$/;"	v
field	lib/Cake/View/Helper/FormHelper.php	/^		$field = preg_replace('\/(\\.\\d+)+$\/', '', $field);$/;"	v
fieldDef	lib/Cake/View/Helper/FormHelper.php	/^		$fieldDef = $this->_introspectModel($this->model(), 'fields', $this->field());$/;"	v
fieldElements	lib/Cake/View/Helper/FormHelper.php	/^				$fieldElements = explode('.', $fieldName);$/;"	v
fieldKey	lib/Cake/View/Helper/FormHelper.php	/^		$fieldKey = $this->field();$/;"	v
fieldName	lib/Cake/View/Helper/FormHelper.php	/^			$fieldName = implode('.', $this->entity());$/;"	v
fields	lib/Cake/View/Helper/FormHelper.php	/^			$fields = $modelFields;$/;"	v
fields	lib/Cake/View/Helper/FormHelper.php	/^			$fields = array();$/;"	v
fields	lib/Cake/View/Helper/FormHelper.php	/^			$this->fields = array();$/;"	v
fields	lib/Cake/View/Helper/FormHelper.php	/^		$fields = Security::hash(implode('', $hashParts), 'sha1');$/;"	v
fields	lib/Cake/View/Helper/FormHelper.php	/^		$fields = array();$/;"	v
fields	lib/Cake/View/Helper/FormHelper.php	/^		$this->fields = array();$/;"	v
fields	lib/Cake/View/Helper/FormHelper.php	/^	public $fields = array();$/;"	v
fieldset	lib/Cake/View/Helper/FormHelper.php	/^				$fieldset = $fields['fieldset'];$/;"	v
fieldset	lib/Cake/View/Helper/FormHelper.php	/^				$fieldset = true;$/;"	v
fieldset	lib/Cake/View/Helper/FormHelper.php	/^			$fieldset = $legend = $fields;$/;"	v
fieldset	lib/Cake/View/Helper/FormHelper.php	/^			$fieldset = $options['fieldset'];$/;"	v
fieldset	lib/Cake/View/Helper/FormHelper.php	/^		$fieldset = $legend = true;$/;"	v
fieldsetClass	lib/Cake/View/Helper/FormHelper.php	/^			$fieldsetClass = '';$/;"	v
fieldsetClass	lib/Cake/View/Helper/FormHelper.php	/^			$fieldsetClass = sprintf(' class="%s"', $fieldset);$/;"	v
file	lib/Cake/View/Helper/FormHelper.php	/^	public function file($fieldName, $options = array()) {$/;"	f
filter	lib/Cake/View/Helper/FormHelper.php	/^			$filter = array('name' => null, 'value' => null);$/;"	v
firstInput	lib/Cake/View/Helper/FormHelper.php	/^				$firstInput = 'H';$/;"	v
firstInput	lib/Cake/View/Helper/FormHelper.php	/^				$firstInput = substr($options['dateFormat'], 0, 1);$/;"	v
firstInput	lib/Cake/View/Helper/FormHelper.php	/^			$firstInput = 'M';$/;"	v
formName	lib/Cake/View/Helper/FormHelper.php	/^		$formName = str_replace('.', '', uniqid('post_', true));$/;"	v
formOptions	lib/Cake/View/Helper/FormHelper.php	/^		$formOptions = array($/;"	v
formUrl	lib/Cake/View/Helper/FormHelper.php	/^		$formUrl = $this->url($url);$/;"	v
format	lib/Cake/View/Helper/FormHelper.php	/^			$format = ($timeFormat == 12) ? 'Y m d h i a' : 'Y m d H i a';$/;"	v
format	lib/Cake/View/Helper/FormHelper.php	/^		$format = $this->_getFormat($options);$/;"	v
hasDisabled	lib/Cake/View/Helper/FormHelper.php	/^					$hasDisabled = !empty($attributes['disabled']);$/;"	v
hasId	lib/Cake/View/Helper/FormHelper.php	/^		$hasId = isset($attributes['id']);$/;"	v
hasOptions	lib/Cake/View/Helper/FormHelper.php	/^			$hasOptions = (count($options) > 0 || $showEmpty);$/;"	v
hashParts	lib/Cake/View/Helper/FormHelper.php	/^		$hashParts = array($/;"	v
helpers	lib/Cake/View/Helper/FormHelper.php	/^	public $helpers = array('Html');$/;"	v
hidden	lib/Cake/View/Helper/FormHelper.php	/^				$hidden = $this->hidden($fieldName, array($/;"	v
hidden	lib/Cake/View/Helper/FormHelper.php	/^		$hidden = null;$/;"	v
hidden	lib/Cake/View/Helper/FormHelper.php	/^	public function hidden($fieldName, $options = array()) {$/;"	f
hiddenAttributes	lib/Cake/View/Helper/FormHelper.php	/^				$hiddenAttributes = array($/;"	v
hiddenField	lib/Cake/View/Helper/FormHelper.php	/^		$hiddenField = $this->_extractOption('hiddenField', $attributes);$/;"	v
hiddenField	lib/Cake/View/Helper/FormHelper.php	/^		$hiddenField = isset($attributes['hiddenField']) ? $attributes['hiddenField'] : true;$/;"	v
hiddenOptions	lib/Cake/View/Helper/FormHelper.php	/^			$hiddenOptions = array($/;"	v
hour	lib/Cake/View/Helper/FormHelper.php	/^				$hour = $time[0];$/;"	v
hour	lib/Cake/View/Helper/FormHelper.php	/^			$hour = $min = null;$/;"	v
hour	lib/Cake/View/Helper/FormHelper.php	/^	public function hour($fieldName, $format24Hours = false, $attributes = array()) {$/;"	f
htmlAttributes	lib/Cake/View/Helper/FormHelper.php	/^		$htmlAttributes = array_merge($options, $htmlAttributes);$/;"	v
htmlOptions	lib/Cake/View/Helper/FormHelper.php	/^				$htmlOptions = $title;$/;"	v
htmlOptions	lib/Cake/View/Helper/FormHelper.php	/^			$htmlOptions = array();$/;"	v
i	lib/Cake/View/Helper/FormHelper.php	/^				$i = 0;$/;"	v
id	lib/Cake/View/Helper/FormHelper.php	/^				$id = $this->request->data[$model][$key];$/;"	v
id	lib/Cake/View/Helper/FormHelper.php	/^		$id = $this->_extractOption('id', $attributes);$/;"	v
idKey	lib/Cake/View/Helper/FormHelper.php	/^					$idKey = 'day';$/;"	v
idKey	lib/Cake/View/Helper/FormHelper.php	/^					$idKey = 'hour';$/;"	v
idKey	lib/Cake/View/Helper/FormHelper.php	/^					$idKey = 'month';$/;"	v
idKey	lib/Cake/View/Helper/FormHelper.php	/^					$idKey = 'year';$/;"	v
idKey	lib/Cake/View/Helper/FormHelper.php	/^			$idKey = 'hour';$/;"	v
idKey	lib/Cake/View/Helper/FormHelper.php	/^		$idKey = null;$/;"	v
index	lib/Cake/View/Helper/FormHelper.php	/^		$index = array_search($name, $this->fields);$/;"	v
input	lib/Cake/View/Helper/FormHelper.php	/^	public function input($fieldName, $options = array()) {$/;"	f
inputDefaults	lib/Cake/View/Helper/FormHelper.php	/^	public function inputDefaults($defaults = null, $merge = false) {$/;"	f
inputs	lib/Cake/View/Helper/FormHelper.php	/^	public function inputs($fields = null, $blacklist = null, $options = array()) {$/;"	f
interval	lib/Cake/View/Helper/FormHelper.php	/^					$interval = $options['interval'];$/;"	v
interval	lib/Cake/View/Helper/FormHelper.php	/^					$interval = 1;$/;"	v
interval	lib/Cake/View/Helper/FormHelper.php	/^		$interval = $attributes['interval'];$/;"	v
isEdit	lib/Cake/View/Helper/FormHelper.php	/^			$isEdit = ($/;"	v
isFieldError	lib/Cake/View/Helper/FormHelper.php	/^	public function isFieldError($field) {$/;"	f
isImage	lib/Cake/View/Helper/FormHelper.php	/^		$isImage = preg_match('\/\\.(jpg|jpe|jpeg|gif|png|ico)$\/', $caption);$/;"	v
isNumeric	lib/Cake/View/Helper/FormHelper.php	/^				$isNumeric = is_numeric($name);$/;"	v
isNumeric	lib/Cake/View/Helper/FormHelper.php	/^			$isNumeric = is_numeric($optValue);$/;"	v
isUpdate	lib/Cake/View/Helper/FormHelper.php	/^		$isUpdate = $this->requestType === 'put';$/;"	v
isUrl	lib/Cake/View/Helper/FormHelper.php	/^		$isUrl = strpos($caption, ':\/\/') !== false;$/;"	v
item	lib/Cake/View/Helper/FormHelper.php	/^						$item = $this->Html->useTag('checkboxmultiple', $name, $htmlOptions);$/;"	v
key	lib/Cake/View/Helper/FormHelper.php	/^			$key = $this->_introspectModel($plugin . $model, 'key');$/;"	v
key	lib/Cake/View/Helper/FormHelper.php	/^		$key = null;$/;"	v
keys	lib/Cake/View/Helper/FormHelper.php	/^		$keys = array('Day', 'Month', 'Year', 'Hour', 'Minute', 'Meridian');$/;"	v
label	lib/Cake/View/Helper/FormHelper.php	/^						$label = $this->label(null, $title, $label);$/;"	v
label	lib/Cake/View/Helper/FormHelper.php	/^						$label = array('for' => $tagName);$/;"	v
label	lib/Cake/View/Helper/FormHelper.php	/^			$label = $attributes['label'];$/;"	v
label	lib/Cake/View/Helper/FormHelper.php	/^			$label = $options['label'];$/;"	v
label	lib/Cake/View/Helper/FormHelper.php	/^		$label = $this->_getLabel($fieldName, $options);$/;"	v
label	lib/Cake/View/Helper/FormHelper.php	/^		$label = null;$/;"	v
label	lib/Cake/View/Helper/FormHelper.php	/^		$label = true;$/;"	v
label	lib/Cake/View/Helper/FormHelper.php	/^	public function label($fieldName = null, $text = null, $options = array()) {$/;"	f
labelAttributes	lib/Cake/View/Helper/FormHelper.php	/^			$labelAttributes = array_merge($labelAttributes, $label);$/;"	v
labelAttributes	lib/Cake/View/Helper/FormHelper.php	/^			$labelAttributes = array_merge($labelAttributes, array('for' => $options['id']));$/;"	v
labelAttributes	lib/Cake/View/Helper/FormHelper.php	/^		$labelAttributes = $this->domId(array(), 'for');$/;"	v
labelFor	lib/Cake/View/Helper/FormHelper.php	/^			$labelFor = $options['for'];$/;"	v
labelFor	lib/Cake/View/Helper/FormHelper.php	/^			$labelFor = $this->domId($fieldName);$/;"	v
labelOpts	lib/Cake/View/Helper/FormHelper.php	/^				$labelOpts = is_array($label) ? $label : array();$/;"	v
labelText	lib/Cake/View/Helper/FormHelper.php	/^				$labelText = $label['text'];$/;"	v
labelText	lib/Cake/View/Helper/FormHelper.php	/^			$labelText = $label;$/;"	v
labelText	lib/Cake/View/Helper/FormHelper.php	/^			$labelText = null;$/;"	v
last	lib/Cake/View/Helper/FormHelper.php	/^			$last = $entity[count($entity) - 1];$/;"	v
legend	lib/Cake/View/Helper/FormHelper.php	/^				$legend = $fields['legend'];$/;"	v
legend	lib/Cake/View/Helper/FormHelper.php	/^			$legend = $attributes['legend'];$/;"	v
legend	lib/Cake/View/Helper/FormHelper.php	/^			$legend = $options['legend'];$/;"	v
legend	lib/Cake/View/Helper/FormHelper.php	/^			$legend = __(Inflector::humanize($this->field()));$/;"	v
legend	lib/Cake/View/Helper/FormHelper.php	/^			$legend = sprintf($actionName, __($modelName));$/;"	v
legend	lib/Cake/View/Helper/FormHelper.php	/^		$legend = false;$/;"	v
list	lib/Cake/View/Helper/FormHelper.php	/^				$list = $options['options'];$/;"	v
listParams	lib/Cake/View/Helper/FormHelper.php	/^				$listParams = array();$/;"	v
locked	lib/Cake/View/Helper/FormHelper.php	/^		$locked = array();$/;"	v
locked	lib/Cake/View/Helper/FormHelper.php	/^		$locked = implode(array_keys($locked), '|');$/;"	v
map	lib/Cake/View/Helper/FormHelper.php	/^			$map = array($/;"	v
max	lib/Cake/View/Helper/FormHelper.php	/^					$max = (int)$options['value'];$/;"	v
max	lib/Cake/View/Helper/FormHelper.php	/^				$max = !isset($options['max']) ? $current + 20 : (int)$options['max'];$/;"	v
maxYear	lib/Cake/View/Helper/FormHelper.php	/^		$maxYear = $attributes['maxYear'];$/;"	v
meridian	lib/Cake/View/Helper/FormHelper.php	/^				$meridian = 'pm';$/;"	v
meridian	lib/Cake/View/Helper/FormHelper.php	/^				$meridian = null;$/;"	v
meridian	lib/Cake/View/Helper/FormHelper.php	/^		$meridian = 'am';$/;"	v
meridian	lib/Cake/View/Helper/FormHelper.php	/^	public function meridian($fieldName, $attributes = array()) {$/;"	f
min	lib/Cake/View/Helper/FormHelper.php	/^					$min = (int)$options['value'];$/;"	v
min	lib/Cake/View/Helper/FormHelper.php	/^				$min = !isset($options['min']) ? $current - 20 : (int)$options['min'];$/;"	v
min	lib/Cake/View/Helper/FormHelper.php	/^				$min = $time[1];$/;"	v
minYear	lib/Cake/View/Helper/FormHelper.php	/^		$minYear = $attributes['minYear'];$/;"	v
minute	lib/Cake/View/Helper/FormHelper.php	/^	public function minute($fieldName, $attributes = array()) {$/;"	f
minuteOptions	lib/Cake/View/Helper/FormHelper.php	/^		$minuteOptions = array();$/;"	v
model	lib/Cake/View/Helper/FormHelper.php	/^			$model = $this->model();$/;"	v
model	lib/Cake/View/Helper/FormHelper.php	/^			$model = array_shift($entity);$/;"	v
model	lib/Cake/View/Helper/FormHelper.php	/^			$model = false;$/;"	v
model	lib/Cake/View/Helper/FormHelper.php	/^			$model = key($this->request->params['models']);$/;"	v
model	lib/Cake/View/Helper/FormHelper.php	/^			$model = null;$/;"	v
model	lib/Cake/View/Helper/FormHelper.php	/^		$model = $this->model();$/;"	v
model	lib/Cake/View/Helper/FormHelper.php	/^		$model = array_shift($entity);$/;"	v
modelFields	lib/Cake/View/Helper/FormHelper.php	/^			$modelFields = array_keys((array)$this->_introspectModel($model, 'fields'));$/;"	v
modelFields	lib/Cake/View/Helper/FormHelper.php	/^		$modelFields = array();$/;"	v
modelKey	lib/Cake/View/Helper/FormHelper.php	/^		$modelKey = $this->model();$/;"	v
modelName	lib/Cake/View/Helper/FormHelper.php	/^			$modelName = Inflector::humanize(Inflector::underscore($model));$/;"	v
month	lib/Cake/View/Helper/FormHelper.php	/^			$month = $date[1];$/;"	v
month	lib/Cake/View/Helper/FormHelper.php	/^	public function month($fieldName, $attributes = array()) {$/;"	f
monthNames	lib/Cake/View/Helper/FormHelper.php	/^		$monthNames = $attributes['monthNames'];$/;"	v
name	lib/Cake/View/Helper/FormHelper.php	/^							$name = h($name);$/;"	v
name	lib/Cake/View/Helper/FormHelper.php	/^						$name = $attributes['name'];$/;"	v
name	lib/Cake/View/Helper/FormHelper.php	/^					$name = $attributes['escape'] ? h($name) : $name;$/;"	v
name	lib/Cake/View/Helper/FormHelper.php	/^				$name = $options;$/;"	v
name	lib/Cake/View/Helper/FormHelper.php	/^				$name = $title['value'];$/;"	v
name	lib/Cake/View/Helper/FormHelper.php	/^				$name = null;$/;"	v
name	lib/Cake/View/Helper/FormHelper.php	/^			$name = $model === $entity[0] && isset($entity[1]) ? $entity[1] : $entity[0];$/;"	v
name	lib/Cake/View/Helper/FormHelper.php	/^			$name = str_replace(array('[', ']'), array('.', ''), $options['name']);$/;"	v
newTime	lib/Cake/View/Helper/FormHelper.php	/^			$newTime = explode(' ', $current->format($format));$/;"	v
object	lib/Cake/View/Helper/FormHelper.php	/^				$object = $defaultObject->{$model};$/;"	v
object	lib/Cake/View/Helper/FormHelper.php	/^			$object = ClassRegistry::getObject($model);$/;"	v
object	lib/Cake/View/Helper/FormHelper.php	/^			$object = ClassRegistry::init($model, true);$/;"	v
object	lib/Cake/View/Helper/FormHelper.php	/^			$object = ClassRegistry::init(array($/;"	v
object	lib/Cake/View/Helper/FormHelper.php	/^		$object = $this->_getModel($model);$/;"	v
object	lib/Cake/View/Helper/FormHelper.php	/^		$object = null;$/;"	v
onClick	lib/Cake/View/Helper/FormHelper.php	/^		$onClick = 'document.' . $formName . '.submit();';$/;"	v
opt	lib/Cake/View/Helper/FormHelper.php	/^		$opt = implode($separator, $selects);$/;"	v
optTitle	lib/Cake/View/Helper/FormHelper.php	/^				$optTitle = $this->label($tagName, $optTitle, $labelOpts);$/;"	v
options	lib/Cake/View/Helper/FormHelper.php	/^				$options = 0;$/;"	v
options	lib/Cake/View/Helper/FormHelper.php	/^				$options = array();$/;"	v
options	lib/Cake/View/Helper/FormHelper.php	/^				$options = array_merge($options, $text['attributes']);$/;"	v
options	lib/Cake/View/Helper/FormHelper.php	/^			$options = $model;$/;"	v
options	lib/Cake/View/Helper/FormHelper.php	/^			$options = $params[1];$/;"	v
options	lib/Cake/View/Helper/FormHelper.php	/^			$options = $this->_generateOptions($options);$/;"	v
options	lib/Cake/View/Helper/FormHelper.php	/^			$options = $this->_magicOptions($options);$/;"	v
options	lib/Cake/View/Helper/FormHelper.php	/^			$options = $this->_optionsOptions($options);$/;"	v
options	lib/Cake/View/Helper/FormHelper.php	/^			$options = array('' => $showEmpty) + $options;$/;"	v
options	lib/Cake/View/Helper/FormHelper.php	/^			$options = array('class' => $options);$/;"	v
options	lib/Cake/View/Helper/FormHelper.php	/^			$options = array();$/;"	v
options	lib/Cake/View/Helper/FormHelper.php	/^		$options = $this->_initInputField($fieldName, $options) + array('hiddenField' => true);$/;"	v
options	lib/Cake/View/Helper/FormHelper.php	/^		$options = $this->_initInputField($fieldName, $options);$/;"	v
options	lib/Cake/View/Helper/FormHelper.php	/^		$options = $this->_initInputField($fieldName, array_merge($/;"	v
options	lib/Cake/View/Helper/FormHelper.php	/^		$options = $this->_initInputField($params[0], $options);$/;"	v
options	lib/Cake/View/Helper/FormHelper.php	/^		$options = $this->_maxLength($options);$/;"	v
options	lib/Cake/View/Helper/FormHelper.php	/^		$options = $this->_parseOptions($options);$/;"	v
options	lib/Cake/View/Helper/FormHelper.php	/^		$options = (array)$options + array('inline' => true, 'block' => null);$/;"	v
options	lib/Cake/View/Helper/FormHelper.php	/^		$options = array();$/;"	v
options	lib/Cake/View/Helper/FormHelper.php	/^		$options = array_merge($/;"	v
optionsHere	lib/Cake/View/Helper/FormHelper.php	/^			$optionsHere = array('value' => $optValue, 'disabled' => false);$/;"	v
out	lib/Cake/View/Helper/FormHelper.php	/^				$out = $this->Html->useTag('legend', $legend) . $out;$/;"	v
out	lib/Cake/View/Helper/FormHelper.php	/^			$out = $this->Html->tag($tag, $out, $divOptions);$/;"	v
out	lib/Cake/View/Helper/FormHelper.php	/^			$out = $this->Html->useTag('fieldset', $fieldsetClass, $out);$/;"	v
out	lib/Cake/View/Helper/FormHelper.php	/^			$out = $this->Html->useTag('fieldset', '', $this->Html->useTag('legend', $legend) . $between . $out);$/;"	v
out	lib/Cake/View/Helper/FormHelper.php	/^			$out = '';$/;"	v
out	lib/Cake/View/Helper/FormHelper.php	/^		$out = $before . $tag . $after;$/;"	v
out	lib/Cake/View/Helper/FormHelper.php	/^		$out = $hidden . implode($separator, $out);$/;"	v
out	lib/Cake/View/Helper/FormHelper.php	/^		$out = $this->Html->useTag('form', $formUrl, $formOptions);$/;"	v
out	lib/Cake/View/Helper/FormHelper.php	/^		$out = $this->create(false, array('id' => false, 'url' => $url));$/;"	v
out	lib/Cake/View/Helper/FormHelper.php	/^		$out = $this->hidden('_Token.fields', $tokenFields);$/;"	v
out	lib/Cake/View/Helper/FormHelper.php	/^		$out = array('before' => $options['before'], 'label' => $label, 'between' => $options['between'], 'after' => $options['after']);$/;"	v
out	lib/Cake/View/Helper/FormHelper.php	/^		$out = array();$/;"	v
out	lib/Cake/View/Helper/FormHelper.php	/^		$out = null;$/;"	v
output	lib/Cake/View/Helper/FormHelper.php	/^			$output = $this->Html->tag($tag, $output, $divOptions);$/;"	v
output	lib/Cake/View/Helper/FormHelper.php	/^			$output = $this->hidden($fieldName, $hiddenOptions);$/;"	v
output	lib/Cake/View/Helper/FormHelper.php	/^		$output = '';$/;"	v
plugin	lib/Cake/View/Helper/FormHelper.php	/^				$plugin = Inflector::underscore($this->plugin);$/;"	v
plugin	lib/Cake/View/Helper/FormHelper.php	/^			$plugin = $this->request->params['models'][$model]['plugin'];$/;"	v
plugin	lib/Cake/View/Helper/FormHelper.php	/^			$plugin = null;$/;"	v
pos	lib/Cake/View/Helper/FormHelper.php	/^		$pos = strpos($value, '-');$/;"	v
postButton	lib/Cake/View/Helper/FormHelper.php	/^	public function postButton($title, $url, $options = array()) {$/;"	f
postLink	lib/Cake/View/Helper/FormHelper.php	/^	public function postLink($title, $url = null, $options = array(), $confirmMessage = false) {$/;"	f
primaryKey	lib/Cake/View/Helper/FormHelper.php	/^			$primaryKey = $this->fieldset[$modelKey]['key'];$/;"	v
query	lib/Cake/View/Helper/FormHelper.php	/^		$query = $query ? '?' . $query : '';$/;"	v
query	lib/Cake/View/Helper/FormHelper.php	/^		$query = parse_url($action, PHP_URL_QUERY);$/;"	v
radio	lib/Cake/View/Helper/FormHelper.php	/^	public function radio($fieldName, $options = array(), $attributes = array()) {$/;"	f
radioOptions	lib/Cake/View/Helper/FormHelper.php	/^			$radioOptions = (array)$options['options'];$/;"	v
recordExists	lib/Cake/View/Helper/FormHelper.php	/^			$recordExists = ($/;"	v
requestMethod	lib/Cake/View/Helper/FormHelper.php	/^			$requestMethod = strtoupper($options['method']);$/;"	v
requestMethod	lib/Cake/View/Helper/FormHelper.php	/^		$requestMethod = 'POST';$/;"	v
requestType	lib/Cake/View/Helper/FormHelper.php	/^		$this->requestType = null;$/;"	v
requestType	lib/Cake/View/Helper/FormHelper.php	/^		$this->requestType = strtolower($options['type']);$/;"	v
requestType	lib/Cake/View/Helper/FormHelper.php	/^	public $requestType = null;$/;"	v
result	lib/Cake/View/Helper/FormHelper.php	/^			$result = $this->addClass($result, 'form-error');$/;"	v
result	lib/Cake/View/Helper/FormHelper.php	/^		$result = parent::_initInputField($field, $options);$/;"	v
round	lib/Cake/View/Helper/FormHelper.php	/^		$round = $attributes['round'];$/;"	v
secure	lib/Cake/View/Helper/FormHelper.php	/^			$secure = $options['secure'];$/;"	v
secure	lib/Cake/View/Helper/FormHelper.php	/^			$secure = (isset($this->request['_Token']) && !empty($this->request['_Token']));$/;"	v
secure	lib/Cake/View/Helper/FormHelper.php	/^		$secure = $options['secure'];$/;"	v
secure	lib/Cake/View/Helper/FormHelper.php	/^		$secure = $this->_extractOption('secure', $attributes);$/;"	v
secure	lib/Cake/View/Helper/FormHelper.php	/^	public function secure($fields = array(), $secureAttributes = array()) {$/;"	f
select	lib/Cake/View/Helper/FormHelper.php	/^				$select = array_merge($select, $this->_selectOptions($/;"	v
select	lib/Cake/View/Helper/FormHelper.php	/^		$select = array();$/;"	v
select	lib/Cake/View/Helper/FormHelper.php	/^		$select = array_merge($select, $this->_selectOptions($/;"	v
select	lib/Cake/View/Helper/FormHelper.php	/^	public function select($fieldName, $options = array(), $attributes = array()) {$/;"	f
selected	lib/Cake/View/Helper/FormHelper.php	/^		$selected = $this->_extractOption('selected', $options, null);$/;"	v
selectedIsArray	lib/Cake/View/Helper/FormHelper.php	/^		$selectedIsArray = is_array($attributes['value']);$/;"	v
selectedIsEmpty	lib/Cake/View/Helper/FormHelper.php	/^		$selectedIsEmpty = ($attributes['value'] === '' || $attributes['value'] === null);$/;"	v
selects	lib/Cake/View/Helper/FormHelper.php	/^		$selects = array();$/;"	v
separator	lib/Cake/View/Helper/FormHelper.php	/^			$separator = $attributes['separator'];$/;"	v
separator	lib/Cake/View/Helper/FormHelper.php	/^		$separator = $attributes['separator'];$/;"	v
separator	lib/Cake/View/Helper/FormHelper.php	/^		$separator = null;$/;"	v
showEmpty	lib/Cake/View/Helper/FormHelper.php	/^			$showEmpty = ($showEmpty === true) ? '' : $showEmpty;$/;"	v
showEmpty	lib/Cake/View/Helper/FormHelper.php	/^			$showEmpty = ($showEmpty === true) ? __d('cake', 'empty') : $showEmpty;$/;"	v
showEmpty	lib/Cake/View/Helper/FormHelper.php	/^		$showEmpty = $this->_extractOption('empty', $attributes);$/;"	v
showParents	lib/Cake/View/Helper/FormHelper.php	/^		$showParents = $this->_extractOption('showParents', $attributes);$/;"	v
style	lib/Cake/View/Helper/FormHelper.php	/^			$style = ($attributes['multiple'] === 'checkbox') ? 'checkbox' : null;$/;"	v
style	lib/Cake/View/Helper/FormHelper.php	/^		$style = null;$/;"	v
submit	lib/Cake/View/Helper/FormHelper.php	/^					$submit = $options['label'];$/;"	v
submit	lib/Cake/View/Helper/FormHelper.php	/^				$submit = $options;$/;"	v
submit	lib/Cake/View/Helper/FormHelper.php	/^		$submit = null;$/;"	v
submit	lib/Cake/View/Helper/FormHelper.php	/^	public function submit($caption = null, $options = array()) {$/;"	f
submitOptions	lib/Cake/View/Helper/FormHelper.php	/^				$submitOptions = $options;$/;"	v
submitOptions	lib/Cake/View/Helper/FormHelper.php	/^			$submitOptions = array();$/;"	v
suffix	lib/Cake/View/Helper/FormHelper.php	/^			$suffix = $value . $count++;$/;"	v
suffix	lib/Cake/View/Helper/FormHelper.php	/^		$suffix = $value;$/;"	v
tag	lib/Cake/View/Helper/FormHelper.php	/^			$tag = $divOptions['tag'];$/;"	v
tag	lib/Cake/View/Helper/FormHelper.php	/^			$tag = $template;$/;"	v
tag	lib/Cake/View/Helper/FormHelper.php	/^			$tag = $this->Html->useTag('submit', $options);$/;"	v
tag	lib/Cake/View/Helper/FormHelper.php	/^			$tag = $this->Html->useTag('submitimage', $caption, $options);$/;"	v
tag	lib/Cake/View/Helper/FormHelper.php	/^			$tag = $this->Html->useTag('submitimage', $url, $options);$/;"	v
tag	lib/Cake/View/Helper/FormHelper.php	/^			$tag = 'selectstart';$/;"	v
tag	lib/Cake/View/Helper/FormHelper.php	/^			$tag = is_string($options['wrap']) ? $options['wrap'] : 'div';$/;"	v
tag	lib/Cake/View/Helper/FormHelper.php	/^		$tag = null;$/;"	v
tagIsInvalid	lib/Cake/View/Helper/FormHelper.php	/^	public function tagIsInvalid() {$/;"	f
tagName	lib/Cake/View/Helper/FormHelper.php	/^						$tagName = $attributes['id'] . $this->domIdSuffix($name);$/;"	v
tagName	lib/Cake/View/Helper/FormHelper.php	/^			$tagName = $attributes['id'] . $this->domIdSuffix($optValue);$/;"	v
template	lib/Cake/View/Helper/FormHelper.php	/^			$template = ($style) ? 'checkboxmultiplestart' : 'selectmultiplestart';$/;"	v
template	lib/Cake/View/Helper/FormHelper.php	/^		$template = ($style === 'checkbox') ? 'checkboxmultipleend' : 'selectend';$/;"	v
text	lib/Cake/View/Helper/FormHelper.php	/^				$text = $fieldName;$/;"	v
text	lib/Cake/View/Helper/FormHelper.php	/^				$text = array_pop($fieldElements);$/;"	v
text	lib/Cake/View/Helper/FormHelper.php	/^				$text = substr($text, 0, -3);$/;"	v
text	lib/Cake/View/Helper/FormHelper.php	/^			$text = $tmp;$/;"	v
text	lib/Cake/View/Helper/FormHelper.php	/^			$text = __(Inflector::humanize(Inflector::underscore($text)));$/;"	v
textarea	lib/Cake/View/Helper/FormHelper.php	/^	public function textarea($fieldName, $options = array()) {$/;"	f
time	lib/Cake/View/Helper/FormHelper.php	/^			$time = explode(':', $days[1]);$/;"	v
timeFormat	lib/Cake/View/Helper/FormHelper.php	/^			$timeFormat = $this->_extractOption('timeFormat', $options, 12);$/;"	v
title	lib/Cake/View/Helper/FormHelper.php	/^					$title = ($attributes['escape']) ? h($title) : $title;$/;"	v
title	lib/Cake/View/Helper/FormHelper.php	/^				$title = $title['name'];$/;"	v
title	lib/Cake/View/Helper/FormHelper.php	/^			$title = h($title);$/;"	v
tmp	lib/Cake/View/Helper/FormHelper.php	/^			$tmp = array();$/;"	v
tokenFields	lib/Cake/View/Helper/FormHelper.php	/^		$tokenFields = array_merge($secureAttributes, array($/;"	v
tokenUnlocked	lib/Cake/View/Helper/FormHelper.php	/^		$tokenUnlocked = array_merge($secureAttributes, array($/;"	v
type	lib/Cake/View/Helper/FormHelper.php	/^			$type = $fieldDef['type'];$/;"	v
type	lib/Cake/View/Helper/FormHelper.php	/^		$type = $options['type'];$/;"	v
unlockField	lib/Cake/View/Helper/FormHelper.php	/^	public function unlockField($name = null) {$/;"	f
unlockFields	lib/Cake/View/Helper/FormHelper.php	/^				$unlockFields = array($/;"	v
unlockFields	lib/Cake/View/Helper/FormHelper.php	/^			$unlockFields = array('x', 'y');$/;"	v
unlockParts	lib/Cake/View/Helper/FormHelper.php	/^			$unlockParts = explode('.', $unlockField);$/;"	v
unlocked	lib/Cake/View/Helper/FormHelper.php	/^		$unlocked = implode($unlockedFields, '|');$/;"	v
unlockedFields	lib/Cake/View/Helper/FormHelper.php	/^		$unlockedFields = $this->_unlockedFields;$/;"	v
url	lib/Cake/View/Helper/FormHelper.php	/^				$url = $this->webroot(Configure::read('App.imageBaseUrl') . $caption);$/;"	v
url	lib/Cake/View/Helper/FormHelper.php	/^				$url = $this->webroot(trim($caption, '\/'));$/;"	v
url	lib/Cake/View/Helper/FormHelper.php	/^			$url = $this->assetTimestamp($url);$/;"	v
url	lib/Cake/View/Helper/FormHelper.php	/^		$url = '#';$/;"	v
validates	lib/Cake/View/Helper/FormHelper.php	/^			$validates = array();$/;"	v
validationErrors	lib/Cake/View/Helper/FormHelper.php	/^		$this->validationErrors =& $View->validationErrors;$/;"	v
validationErrors	lib/Cake/View/Helper/FormHelper.php	/^	public $validationErrors = array();$/;"	v
value	lib/Cake/View/Helper/FormHelper.php	/^				$value = h($value);$/;"	v
value	lib/Cake/View/Helper/FormHelper.php	/^			$value = $attributes['value'];$/;"	v
value	lib/Cake/View/Helper/FormHelper.php	/^			$value = $options['value'];$/;"	v
value	lib/Cake/View/Helper/FormHelper.php	/^			$value = $this->value($fieldName);$/;"	v
value	lib/Cake/View/Helper/FormHelper.php	/^			$value = $value ? 1 : 0;$/;"	v
value	lib/Cake/View/Helper/FormHelper.php	/^			$value = Inflector::camelize(Inflector::slug($value));$/;"	v
value	lib/Cake/View/Helper/FormHelper.php	/^			$value = str_replace(array('@', '<', '>', ' ', '"', '\\''), '_', $value);$/;"	v
value	lib/Cake/View/Helper/FormHelper.php	/^			$value = strftime('%Y-%m-%d %H:%M:%S', $value);$/;"	v
value	lib/Cake/View/Helper/FormHelper.php	/^		$value = Inflector::camelize($value);$/;"	v
value	lib/Cake/View/Helper/FormHelper.php	/^		$value = current($this->value($valueOptions));$/;"	v
value	lib/Cake/View/Helper/FormHelper.php	/^		$value = null;$/;"	v
valueOptions	lib/Cake/View/Helper/FormHelper.php	/^		$valueOptions = array();$/;"	v
varName	lib/Cake/View/Helper/FormHelper.php	/^		$varName = Inflector::variable($/;"	v
varOptions	lib/Cake/View/Helper/FormHelper.php	/^		$varOptions = $this->_View->get($varName);$/;"	v
year	lib/Cake/View/Helper/FormHelper.php	/^				$year = null;$/;"	v
year	lib/Cake/View/Helper/FormHelper.php	/^			$year = $date[0];$/;"	v
year	lib/Cake/View/Helper/FormHelper.php	/^		$year = $month = $day = $hour = $min = $meridian = null;$/;"	v
year	lib/Cake/View/Helper/FormHelper.php	/^	public function year($fieldName, $minYear = null, $maxYear = null, $attributes = array()) {$/;"	f
yearOptions	lib/Cake/View/Helper/FormHelper.php	/^		$yearOptions = array('value' => $attributes['value'], 'min' => $minYear, 'max' => $maxYear, 'order' => 'desc');$/;"	v
HtmlHelper	lib/Cake/View/Helper/HtmlHelper.php	/^class HtmlHelper extends AppHelper {$/;"	c
__construct	lib/Cake/View/Helper/HtmlHelper.php	/^	public function __construct(View $View, $settings = array()) {$/;"	f
_attributeFormat	lib/Cake/View/Helper/HtmlHelper.php	/^			$this->_attributeFormat = $configs['attributeFormat'];$/;"	v
_crumbs	lib/Cake/View/Helper/HtmlHelper.php	/^	protected $_crumbs = array();$/;"	v
_docTypes	lib/Cake/View/Helper/HtmlHelper.php	/^			$this->_docTypes = $configs['docTypes'] + $this->_docTypes;$/;"	v
_docTypes	lib/Cake/View/Helper/HtmlHelper.php	/^	protected $_docTypes = array($/;"	v
_includedScripts	lib/Cake/View/Helper/HtmlHelper.php	/^	protected $_includedScripts = array();$/;"	v
_minimizedAttributeFormat	lib/Cake/View/Helper/HtmlHelper.php	/^			$this->_minimizedAttributeFormat = $configs['minimizedAttributeFormat'];$/;"	v
_minimizedAttributes	lib/Cake/View/Helper/HtmlHelper.php	/^			$this->_minimizedAttributes = $configs['minimizedAttributes'] + $this->_minimizedAttributes;$/;"	v
_nestedListItem	lib/Cake/View/Helper/HtmlHelper.php	/^	protected function _nestedListItem($items, $options, $itemOptions, $tag) {$/;"	f
_prepareCrumbs	lib/Cake/View/Helper/HtmlHelper.php	/^	protected function _prepareCrumbs($startText, $escape = true) {$/;"	f
_scriptBlockOptions	lib/Cake/View/Helper/HtmlHelper.php	/^		$this->_scriptBlockOptions = $options;$/;"	v
_scriptBlockOptions	lib/Cake/View/Helper/HtmlHelper.php	/^		$this->_scriptBlockOptions = array();$/;"	v
_scriptBlockOptions	lib/Cake/View/Helper/HtmlHelper.php	/^	protected $_scriptBlockOptions = array();$/;"	v
_tags	lib/Cake/View/Helper/HtmlHelper.php	/^			$this->_tags = $configs['tags'] + $this->_tags;$/;"	v
_tags	lib/Cake/View/Helper/HtmlHelper.php	/^	protected $_tags = array($/;"	v
addCrumb	lib/Cake/View/Helper/HtmlHelper.php	/^	public function addCrumb($name, $link = null, $options = null) {$/;"	f
arg	lib/Cake/View/Helper/HtmlHelper.php	/^				$arg = $this->_parseAttributes($arg, null, ' ', '');$/;"	v
args	lib/Cake/View/Helper/HtmlHelper.php	/^		$args = func_get_args();$/;"	v
attributes	lib/Cake/View/Helper/HtmlHelper.php	/^		$attributes = $this->_parseAttributes($options, array('block'), ' ');$/;"	v
attributes	lib/Cake/View/Helper/HtmlHelper.php	/^		$attributes = $this->_parseAttributes($options, array('block', 'once'), ' ');$/;"	v
buffer	lib/Cake/View/Helper/HtmlHelper.php	/^		$buffer = ob_get_clean();$/;"	v
cell	lib/Cake/View/Helper/HtmlHelper.php	/^					$cell = $cell[0];$/;"	v
cellOptions	lib/Cake/View/Helper/HtmlHelper.php	/^					$cellOptions = $cell[1];$/;"	v
cellOptions	lib/Cake/View/Helper/HtmlHelper.php	/^				$cellOptions = array();$/;"	v
cellsOut	lib/Cake/View/Helper/HtmlHelper.php	/^			$cellsOut = array();$/;"	v
charset	lib/Cake/View/Helper/HtmlHelper.php	/^			$charset = strtolower(Configure::read('App.encoding'));$/;"	v
charset	lib/Cake/View/Helper/HtmlHelper.php	/^	public function charset($charset = null) {$/;"	f
configs	lib/Cake/View/Helper/HtmlHelper.php	/^		$configs = $readerObj->read($file);$/;"	v
confirmMessage	lib/Cake/View/Helper/HtmlHelper.php	/^			$confirmMessage = $options['confirm'];$/;"	v
continueOddEven	lib/Cake/View/Helper/HtmlHelper.php	/^			$continueOddEven = false;$/;"	v
count	lib/Cake/View/Helper/HtmlHelper.php	/^			$count = 0;$/;"	v
count	lib/Cake/View/Helper/HtmlHelper.php	/^			static $count = 0;$/;"	v
crumbCount	lib/Cake/View/Helper/HtmlHelper.php	/^		$crumbCount = count($crumbs);$/;"	v
crumbs	lib/Cake/View/Helper/HtmlHelper.php	/^		$crumbs = $this->_crumbs;$/;"	v
crumbs	lib/Cake/View/Helper/HtmlHelper.php	/^		$crumbs = $this->_prepareCrumbs($startText);$/;"	v
crumbs	lib/Cake/View/Helper/HtmlHelper.php	/^		$crumbs = $this->_prepareCrumbs($startText, $escape);$/;"	v
css	lib/Cake/View/Helper/HtmlHelper.php	/^	public function css($path, $options = array()) {$/;"	f
data	lib/Cake/View/Helper/HtmlHelper.php	/^			$data = array($data);$/;"	v
defaults	lib/Cake/View/Helper/HtmlHelper.php	/^		$defaults = array('firstClass' => 'first', 'lastClass' => 'last', 'separator' => '', 'escape' => true);$/;"	v
div	lib/Cake/View/Helper/HtmlHelper.php	/^	public function div($class = null, $text = null, $options = array()) {$/;"	f
docType	lib/Cake/View/Helper/HtmlHelper.php	/^	public function docType($type = 'html5') {$/;"	f
elementContent	lib/Cake/View/Helper/HtmlHelper.php	/^				$elementContent = $crumb[0];$/;"	v
elementContent	lib/Cake/View/Helper/HtmlHelper.php	/^				$elementContent = $this->link($crumb[0], $crumb[1], $crumb[2]);$/;"	v
escape	lib/Cake/View/Helper/HtmlHelper.php	/^		$escape = $options['escape'];$/;"	v
escapeTitle	lib/Cake/View/Helper/HtmlHelper.php	/^			$escapeTitle = $options['escape'];$/;"	v
escapeTitle	lib/Cake/View/Helper/HtmlHelper.php	/^			$escapeTitle = $options['escapeTitle'];$/;"	v
escapeTitle	lib/Cake/View/Helper/HtmlHelper.php	/^			$escapeTitle = false;$/;"	v
escapeTitle	lib/Cake/View/Helper/HtmlHelper.php	/^		$escapeTitle = true;$/;"	v
evenTrOptions	lib/Cake/View/Helper/HtmlHelper.php	/^			$evenTrOptions = null;$/;"	v
ext	lib/Cake/View/Helper/HtmlHelper.php	/^					$ext = pathinfo($source['src'], PATHINFO_EXTENSION);$/;"	v
file	lib/Cake/View/Helper/HtmlHelper.php	/^			$file = $configFile;$/;"	v
file	lib/Cake/View/Helper/HtmlHelper.php	/^			$file = $configFile[0];$/;"	v
file	lib/Cake/View/Helper/HtmlHelper.php	/^		$file = null;$/;"	v
firstClass	lib/Cake/View/Helper/HtmlHelper.php	/^		$firstClass = $options['firstClass'];$/;"	v
getCrumbList	lib/Cake/View/Helper/HtmlHelper.php	/^	public function getCrumbList($options = array(), $startText = false) {$/;"	f
getCrumbs	lib/Cake/View/Helper/HtmlHelper.php	/^	public function getCrumbs($separator = '&raquo;', $startText = false) {$/;"	f
i	lib/Cake/View/Helper/HtmlHelper.php	/^			$i = 0;$/;"	v
image	lib/Cake/View/Helper/HtmlHelper.php	/^		$image = sprintf($this->_tags['image'], $path, $this->_parseAttributes($options, null, '', ' '));$/;"	v
image	lib/Cake/View/Helper/HtmlHelper.php	/^	public function image($path, $options = array()) {$/;"	f
index	lib/Cake/View/Helper/HtmlHelper.php	/^		$index = 1;$/;"	v
item	lib/Cake/View/Helper/HtmlHelper.php	/^				$item = $key . $this->nestedList($item, $options, $itemOptions, $tag);$/;"	v
items	lib/Cake/View/Helper/HtmlHelper.php	/^		$items = $this->_nestedListItem($list, $options, $itemOptions, $tag);$/;"	v
lastClass	lib/Cake/View/Helper/HtmlHelper.php	/^		$lastClass = $options['lastClass'];$/;"	v
link	lib/Cake/View/Helper/HtmlHelper.php	/^	public function link($title, $url = null, $options = array(), $confirmMessage = false) {$/;"	f
loadConfig	lib/Cake/View/Helper/HtmlHelper.php	/^	public function loadConfig($configFile, $path = null) {$/;"	f
media	lib/Cake/View/Helper/HtmlHelper.php	/^	public function media($path, $options = array()) {$/;"	f
meta	lib/Cake/View/Helper/HtmlHelper.php	/^	public function meta($type, $url = null, $options = array()) {$/;"	f
mimeType	lib/Cake/View/Helper/HtmlHelper.php	/^				$mimeType = $path[0]['type'];$/;"	v
mimeType	lib/Cake/View/Helper/HtmlHelper.php	/^				$mimeType = $this->response->getMimeType(pathinfo($path, PATHINFO_EXTENSION));$/;"	v
nestedList	lib/Cake/View/Helper/HtmlHelper.php	/^	public function nestedList($list, $options = array(), $itemOptions = array(), $tag = 'ul') {$/;"	f
oddTrOptions	lib/Cake/View/Helper/HtmlHelper.php	/^			$oddTrOptions = null;$/;"	v
options	lib/Cake/View/Helper/HtmlHelper.php	/^				$options = func_get_arg(2) + $options;$/;"	v
options	lib/Cake/View/Helper/HtmlHelper.php	/^			$options = $this->_parseAttributes($count % 2 ? $oddTrOptions : $evenTrOptions);$/;"	v
options	lib/Cake/View/Helper/HtmlHelper.php	/^			$options = array();$/;"	v
options	lib/Cake/View/Helper/HtmlHelper.php	/^			$options = array_diff_key($options, array('fullBase' => null, 'pathPrefix' => null));$/;"	v
options	lib/Cake/View/Helper/HtmlHelper.php	/^		$options = $this->_scriptBlockOptions;$/;"	v
options	lib/Cake/View/Helper/HtmlHelper.php	/^		$options = (array)$options + $defaults;$/;"	v
options	lib/Cake/View/Helper/HtmlHelper.php	/^		$options = array_diff_key($options, array($/;"	v
options	lib/Cake/View/Helper/HtmlHelper.php	/^		$options = array_diff_key($options, array('fullBase' => null, 'pathPrefix' => null));$/;"	v
out	lib/Cake/View/Helper/HtmlHelper.php	/^				$out = sprintf($this->_tags['metalink'], $options['link'], $this->_parseAttributes($options, array('block', 'link'), ' ', ' '));$/;"	v
out	lib/Cake/View/Helper/HtmlHelper.php	/^			$out = '';$/;"	v
out	lib/Cake/View/Helper/HtmlHelper.php	/^			$out = array();$/;"	v
out	lib/Cake/View/Helper/HtmlHelper.php	/^			$out = sprintf($/;"	v
out	lib/Cake/View/Helper/HtmlHelper.php	/^			$out = sprintf($this->_tags['meta'], $this->_parseAttributes($options, array('block', 'type'), ' ', ' '));$/;"	v
out	lib/Cake/View/Helper/HtmlHelper.php	/^		$out = '';$/;"	v
out	lib/Cake/View/Helper/HtmlHelper.php	/^		$out = array();$/;"	v
out	lib/Cake/View/Helper/HtmlHelper.php	/^		$out = null;$/;"	v
out	lib/Cake/View/Helper/HtmlHelper.php	/^		$out = sprintf($this->_tags['javascriptblock'], $attributes, $script);$/;"	v
out	lib/Cake/View/Helper/HtmlHelper.php	/^		$out = sprintf($this->_tags['javascriptlink'], $url, $attributes);$/;"	v
para	lib/Cake/View/Helper/HtmlHelper.php	/^	public function para($class, $text, $options = array()) {$/;"	f
path	lib/Cake/View/Helper/HtmlHelper.php	/^				$path = $options['src'];$/;"	v
path	lib/Cake/View/Helper/HtmlHelper.php	/^			$path = APP . 'Config' . DS;$/;"	v
path	lib/Cake/View/Helper/HtmlHelper.php	/^		$path = $this->assetUrl($path, $options + array('pathPrefix' => Configure::read('App.imageBaseUrl')));$/;"	v
pos	lib/Cake/View/Helper/HtmlHelper.php	/^				$pos = strpos($url, Configure::read('App.cssBaseUrl'));$/;"	v
reader	lib/Cake/View/Helper/HtmlHelper.php	/^				$reader = $configFile[1];$/;"	v
reader	lib/Cake/View/Helper/HtmlHelper.php	/^		$reader = 'php';$/;"	v
readerClass	lib/Cake/View/Helper/HtmlHelper.php	/^		$readerClass = Inflector::camelize($reader) . 'Reader';$/;"	v
readerObj	lib/Cake/View/Helper/HtmlHelper.php	/^		$readerObj = new $readerClass($path);$/;"	v
rel	lib/Cake/View/Helper/HtmlHelper.php	/^			$rel = $options;$/;"	v
response	lib/Cake/View/Helper/HtmlHelper.php	/^			$this->response = $this->_View->response;$/;"	v
response	lib/Cake/View/Helper/HtmlHelper.php	/^			$this->response = new CakeResponse();$/;"	v
response	lib/Cake/View/Helper/HtmlHelper.php	/^	public $response;$/;"	v
result	lib/Cake/View/Helper/HtmlHelper.php	/^		$result = '';$/;"	v
script	lib/Cake/View/Helper/HtmlHelper.php	/^			$script = "\\n" . '\/\/<![CDATA[' . "\\n" . $script . "\\n" . '\/\/]]>' . "\\n";$/;"	v
script	lib/Cake/View/Helper/HtmlHelper.php	/^	public function script($url, $options = array()) {$/;"	f
scriptBlock	lib/Cake/View/Helper/HtmlHelper.php	/^	public function scriptBlock($script, $options = array()) {$/;"	f
scriptEnd	lib/Cake/View/Helper/HtmlHelper.php	/^	public function scriptEnd() {$/;"	f
scriptStart	lib/Cake/View/Helper/HtmlHelper.php	/^	public function scriptStart($options = array()) {$/;"	f
separator	lib/Cake/View/Helper/HtmlHelper.php	/^		$separator = $options['separator'];$/;"	v
source	lib/Cake/View/Helper/HtmlHelper.php	/^					$source = array($/;"	v
sourceTags	lib/Cake/View/Helper/HtmlHelper.php	/^			$sourceTags = '';$/;"	v
startText	lib/Cake/View/Helper/HtmlHelper.php	/^				$startText = array($/;"	v
style	lib/Cake/View/Helper/HtmlHelper.php	/^	public function style($data, $oneline = true) {$/;"	f
tableCells	lib/Cake/View/Helper/HtmlHelper.php	/^	public function tableCells($data, $oddTrOptions = null, $evenTrOptions = null, $useCount = false, $continueOddEven = true) {$/;"	f
tableHeaders	lib/Cake/View/Helper/HtmlHelper.php	/^	public function tableHeaders($names, $trOptions = null, $thOptions = null) {$/;"	f
tag	lib/Cake/View/Helper/HtmlHelper.php	/^				$tag = 'audio';$/;"	v
tag	lib/Cake/View/Helper/HtmlHelper.php	/^				$tag = 'video';$/;"	v
tag	lib/Cake/View/Helper/HtmlHelper.php	/^			$tag = $options;$/;"	v
tag	lib/Cake/View/Helper/HtmlHelper.php	/^			$tag = $options['tag'];$/;"	v
tag	lib/Cake/View/Helper/HtmlHelper.php	/^			$tag = 'parastart';$/;"	v
tag	lib/Cake/View/Helper/HtmlHelper.php	/^			$tag = 'tag';$/;"	v
tag	lib/Cake/View/Helper/HtmlHelper.php	/^			$tag = 'tagstart';$/;"	v
tag	lib/Cake/View/Helper/HtmlHelper.php	/^			$tag = null;$/;"	v
tag	lib/Cake/View/Helper/HtmlHelper.php	/^		$tag = 'para';$/;"	v
tag	lib/Cake/View/Helper/HtmlHelper.php	/^	public function tag($name, $text = null, $options = array()) {$/;"	f
text	lib/Cake/View/Helper/HtmlHelper.php	/^			$text = h($text);$/;"	v
text	lib/Cake/View/Helper/HtmlHelper.php	/^		$text = $options['text'];$/;"	v
title	lib/Cake/View/Helper/HtmlHelper.php	/^			$title = h($title);$/;"	v
title	lib/Cake/View/Helper/HtmlHelper.php	/^			$title = h(urldecode($title));$/;"	v
title	lib/Cake/View/Helper/HtmlHelper.php	/^			$title = htmlentities($title, ENT_QUOTES, $escapeTitle);$/;"	v
title	lib/Cake/View/Helper/HtmlHelper.php	/^			$title = htmlspecialchars_decode($url, ENT_QUOTES);$/;"	v
type	lib/Cake/View/Helper/HtmlHelper.php	/^					$type = $types[$url['ext']];$/;"	v
type	lib/Cake/View/Helper/HtmlHelper.php	/^					$type = $types['rss'];$/;"	v
type	lib/Cake/View/Helper/HtmlHelper.php	/^				$type = $types[$options['type']];$/;"	v
type	lib/Cake/View/Helper/HtmlHelper.php	/^				$type = $types[$type];$/;"	v
type	lib/Cake/View/Helper/HtmlHelper.php	/^				$type = array();$/;"	v
types	lib/Cake/View/Helper/HtmlHelper.php	/^			$types = array($/;"	v
ulOptions	lib/Cake/View/Helper/HtmlHelper.php	/^		$ulOptions = $options;$/;"	v
url	lib/Cake/View/Helper/HtmlHelper.php	/^					$url = substr($url, 0, $pos) . 'ccss\/' . substr($url, $pos + strlen(Configure::read('App.cssBaseUrl')));$/;"	v
url	lib/Cake/View/Helper/HtmlHelper.php	/^				$url = str_replace(Configure::read('App.jsBaseUrl'), 'cjs\/', $url);$/;"	v
url	lib/Cake/View/Helper/HtmlHelper.php	/^			$url = $options['url'];$/;"	v
url	lib/Cake/View/Helper/HtmlHelper.php	/^			$url = $path;$/;"	v
url	lib/Cake/View/Helper/HtmlHelper.php	/^			$url = $this->assetUrl($path, $options + array('pathPrefix' => Configure::read('App.cssBaseUrl'), 'ext' => '.css'));$/;"	v
url	lib/Cake/View/Helper/HtmlHelper.php	/^			$url = $this->assetUrl($url, $options + array('pathPrefix' => Configure::read('App.jsBaseUrl'), 'ext' => '.js'));$/;"	v
url	lib/Cake/View/Helper/HtmlHelper.php	/^			$url = $this->url($title);$/;"	v
url	lib/Cake/View/Helper/HtmlHelper.php	/^			$url = $this->url($url);$/;"	v
url	lib/Cake/View/Helper/HtmlHelper.php	/^		$url = false;$/;"	v
useCount	lib/Cake/View/Helper/HtmlHelper.php	/^			$useCount = true;$/;"	v
useTag	lib/Cake/View/Helper/HtmlHelper.php	/^	public function useTag($tag) {$/;"	f
JqueryEngineHelper	lib/Cake/View/Helper/JqueryEngineHelper.php	/^class JqueryEngineHelper extends JsBaseEngineHelper {$/;"	c
_callbackArguments	lib/Cake/View/Helper/JqueryEngineHelper.php	/^	protected $_callbackArguments = array($/;"	v
_methodTemplate	lib/Cake/View/Helper/JqueryEngineHelper.php	/^	protected function _methodTemplate($method, $template, $options, $extraSafeKeys = array()) {$/;"	f
_optionMap	lib/Cake/View/Helper/JqueryEngineHelper.php	/^	protected $_optionMap = array($/;"	v
callback	lib/Cake/View/Helper/JqueryEngineHelper.php	/^			$callback = sprintf($function, $callback);$/;"	v
callbacks	lib/Cake/View/Helper/JqueryEngineHelper.php	/^			$callbacks = array_merge($callbacks, $extraSafeKeys);$/;"	v
callbacks	lib/Cake/View/Helper/JqueryEngineHelper.php	/^		$callbacks = array('start', 'change', 'slide', 'stop');$/;"	v
callbacks	lib/Cake/View/Helper/JqueryEngineHelper.php	/^		$callbacks = array('success', 'error', 'beforeSend', 'complete', 'xhr');$/;"	v
callbacks	lib/Cake/View/Helper/JqueryEngineHelper.php	/^		$callbacks = array_keys($this->_callbackArguments[$method]);$/;"	v
defaults	lib/Cake/View/Helper/JqueryEngineHelper.php	/^		$defaults = array('wrap' => true, 'stop' => true);$/;"	v
domReady	lib/Cake/View/Helper/JqueryEngineHelper.php	/^	public function domReady($functionBody) {$/;"	f
drag	lib/Cake/View/Helper/JqueryEngineHelper.php	/^	public function drag($options = array()) {$/;"	f
drop	lib/Cake/View/Helper/JqueryEngineHelper.php	/^	public function drop($options = array()) {$/;"	f
each	lib/Cake/View/Helper/JqueryEngineHelper.php	/^	public function each($callback) {$/;"	f
effect	lib/Cake/View/Helper/JqueryEngineHelper.php	/^				$effect = ".$name($speed);";$/;"	v
effect	lib/Cake/View/Helper/JqueryEngineHelper.php	/^		$effect = '';$/;"	v
effect	lib/Cake/View/Helper/JqueryEngineHelper.php	/^	public function effect($name, $options = array()) {$/;"	f
event	lib/Cake/View/Helper/JqueryEngineHelper.php	/^	public function event($type, $callback, $options = array()) {$/;"	f
function	lib/Cake/View/Helper/JqueryEngineHelper.php	/^		$function = 'function (event) {%s}';$/;"	v
get	lib/Cake/View/Helper/JqueryEngineHelper.php	/^	public function get($selector) {$/;"	f
jQueryObject	lib/Cake/View/Helper/JqueryEngineHelper.php	/^	public $jQueryObject = '$';$/;"	v
method	lib/Cake/View/Helper/JqueryEngineHelper.php	/^		$method = '.serialize()';$/;"	v
name	lib/Cake/View/Helper/JqueryEngineHelper.php	/^				$name = ($name === 'slideIn') ? 'slideDown' : 'slideUp';$/;"	v
options	lib/Cake/View/Helper/JqueryEngineHelper.php	/^		$options = $this->_mapOptions($method, $options);$/;"	v
options	lib/Cake/View/Helper/JqueryEngineHelper.php	/^		$options = $this->_mapOptions('request', $options);$/;"	v
options	lib/Cake/View/Helper/JqueryEngineHelper.php	/^		$options = $this->_parseOptions($options, $callbacks);$/;"	v
options	lib/Cake/View/Helper/JqueryEngineHelper.php	/^		$options = $this->_prepareCallbacks($method, $options);$/;"	v
options	lib/Cake/View/Helper/JqueryEngineHelper.php	/^		$options = $this->_prepareCallbacks('request', $options);$/;"	v
request	lib/Cake/View/Helper/JqueryEngineHelper.php	/^	public function request($url, $options = array()) {$/;"	f
selection	lib/Cake/View/Helper/JqueryEngineHelper.php	/^			$this->selection = $this->jQueryObject . '("' . $selector . '")';$/;"	v
selection	lib/Cake/View/Helper/JqueryEngineHelper.php	/^			$this->selection = $this->jQueryObject . '(' . $selector . ')';$/;"	v
selector	lib/Cake/View/Helper/JqueryEngineHelper.php	/^			$selector = $this->selection . '.closest("form")';$/;"	v
selector	lib/Cake/View/Helper/JqueryEngineHelper.php	/^		$selector = $this->selection;$/;"	v
serializeForm	lib/Cake/View/Helper/JqueryEngineHelper.php	/^	public function serializeForm($options = array()) {$/;"	f
slider	lib/Cake/View/Helper/JqueryEngineHelper.php	/^	public function slider($options = array()) {$/;"	f
sortable	lib/Cake/View/Helper/JqueryEngineHelper.php	/^	public function sortable($options = array()) {$/;"	f
speed	lib/Cake/View/Helper/JqueryEngineHelper.php	/^			$speed = $this->value($options['speed']);$/;"	v
speed	lib/Cake/View/Helper/JqueryEngineHelper.php	/^		$speed = null;$/;"	v
success	lib/Cake/View/Helper/JqueryEngineHelper.php	/^				$success = 'function (data, textStatus) {' . $success . '}';$/;"	v
success	lib/Cake/View/Helper/JqueryEngineHelper.php	/^			$success = '';$/;"	v
template	lib/Cake/View/Helper/JqueryEngineHelper.php	/^		$template = '%s.draggable({%s});';$/;"	v
template	lib/Cake/View/Helper/JqueryEngineHelper.php	/^		$template = '%s.droppable({%s});';$/;"	v
template	lib/Cake/View/Helper/JqueryEngineHelper.php	/^		$template = '%s.slider({%s});';$/;"	v
template	lib/Cake/View/Helper/JqueryEngineHelper.php	/^		$template = '%s.sortable({%s});';$/;"	v
url	lib/Cake/View/Helper/JqueryEngineHelper.php	/^		$url = html_entity_decode($this->url($url), ENT_COMPAT, Configure::read('App.encoding'));$/;"	v
wrapCallbacks	lib/Cake/View/Helper/JqueryEngineHelper.php	/^			$wrapCallbacks = isset($options['wrapCallbacks']) ? $options['wrapCallbacks'] : true;$/;"	v
JsBaseEngineHelper	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^abstract class JsBaseEngineHelper extends AppHelper {$/;"	c
_callbackArguments	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^	protected $_callbackArguments = array();$/;"	v
_mapOptions	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^	protected function _mapOptions($method, $options) {$/;"	f
_optionMap	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^	protected $_optionMap = array();$/;"	v
_parseOptions	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^	protected function _parseOptions($options, $safeKeys = array()) {$/;"	f
_prepareCallbacks	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^	protected function _prepareCallbacks($method, $options, $callbacks = array()) {$/;"	f
_processOptions	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^	protected function _processOptions($method, $options) {$/;"	f
_toQuerystring	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^	protected function _toQuerystring($parameters) {$/;"	f
_utf8ToHex	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^	protected function _utf8ToHex($string) {$/;"	f
alert	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^	public function alert($message) {$/;"	f
args	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^				$args = $callbackOptions[$callback];$/;"	v
args	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^			$args = null;$/;"	v
bufferedMethods	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^	public $bufferedMethods = array('event', 'sortable', 'drag', 'drop', 'slider');$/;"	v
callbackOptions	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^			$callbackOptions = $this->_callbackArguments[$method];$/;"	v
callbackOptions	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^		$callbackOptions = array();$/;"	v
callbacks	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^		$callbacks = array_unique(array_merge(array_keys($callbackOptions), (array)$callbacks));$/;"	v
char	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^					$char = Multibyte::utf8($charbits);$/;"	v
charbits	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^					$charbits = $string{$i} . $string{$i + 1} . $string{$i + 2} . $string{$i + 3} . $string{$i + 4} . $string{$i + 5};$/;"	v
charbits	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^					$charbits = $string{$i} . $string{$i + 1} . $string{$i + 2} . $string{$i + 3} . $string{$i + 4};$/;"	v
charbits	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^					$charbits = $string{$i} . $string{$i + 1} . $string{$i + 2} . $string{$i + 3};$/;"	v
charbits	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^					$charbits = $string{$i} . $string{$i + 1} . $string{$i + 2};$/;"	v
charbits	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^					$charbits = $string{$i} . $string{$i + 1};$/;"	v
confirm	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^	public function confirm($message) {$/;"	f
confirmReturn	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^	public function confirmReturn($message) {$/;"	f
count	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^		$count = count($parameters);$/;"	v
defaultOptions	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^		$defaultOptions = array($/;"	v
escape	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^	public function escape($string) {$/;"	f
keys	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^		$keys = array_keys($parameters);$/;"	v
length	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^		$length = strlen($string);$/;"	v
object	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^	public function object($data = array(), $options = array()) {$/;"	f
options	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^		$options = $this->_mapOptions($method, $options);$/;"	v
options	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^		$options = $this->_parseOptions($options, array_keys($this->_callbackArguments[$method]));$/;"	v
options	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^		$options = $this->_prepareCallbacks($method, $options);$/;"	v
ord	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^			$ord = ord($string{$i});$/;"	v
out	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^		$out = '';$/;"	v
out	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^		$out = 'var _confirm = ' . $this->confirm($message);$/;"	v
out	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^		$out = array();$/;"	v
prompt	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^	public function prompt($message, $default = '') {$/;"	f
quoteString	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^			$quoteString = true;$/;"	v
redirect	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^	public function redirect($url = null) {$/;"	f
return	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^		$return = '';$/;"	v
safeKeys	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^		$safeKeys = array_flip($safeKeys);$/;"	v
selection	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^	public $selection;$/;"	v
val	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^					$val = '"' . $val . '"';$/;"	v
val	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^				$val = $this->escape($val);$/;"	v
val	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^				$val = $this->object($val);$/;"	v
val	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^				$val = $val;$/;"	v
val	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^				$val = 'null';$/;"	v
val	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^				$val = ($val === true) ? 'true' : 'false';$/;"	v
val	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^				$val = sprintf("%.11f", $val);$/;"	v
value	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^				$value = $this->value($value);$/;"	v
value	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^	public function value($val = array(), $quoteString = null, $key = 'value') {$/;"	f
wrapCallbacks	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^			$wrapCallbacks = $options['wrapCallbacks'];$/;"	v
wrapCallbacks	lib/Cake/View/Helper/JsBaseEngineHelper.php	/^		$wrapCallbacks = true;$/;"	v
JsHelper	lib/Cake/View/Helper/JsHelper.php	/^class JsHelper extends AppHelper {$/;"	c
__call	lib/Cake/View/Helper/JsHelper.php	/^	public function __call($method, $params) {$/;"	f
__construct	lib/Cake/View/Helper/JsHelper.php	/^	public function __construct(View $View, $settings = array()) {$/;"	f
_bufferedScripts	lib/Cake/View/Helper/JsHelper.php	/^			$this->_bufferedScripts = array();$/;"	v
_bufferedScripts	lib/Cake/View/Helper/JsHelper.php	/^	protected $_bufferedScripts = array();$/;"	v
_createVars	lib/Cake/View/Helper/JsHelper.php	/^	protected function _createVars() {$/;"	f
_engineName	lib/Cake/View/Helper/JsHelper.php	/^		$this->_engineName = $className . 'Engine';$/;"	v
_engineName	lib/Cake/View/Helper/JsHelper.php	/^	protected $_engineName;$/;"	v
_getHtmlOptions	lib/Cake/View/Helper/JsHelper.php	/^	protected function _getHtmlOptions($options, $additional = array()) {$/;"	f
_jsVars	lib/Cake/View/Helper/JsHelper.php	/^			$this->_jsVars = array();$/;"	v
_jsVars	lib/Cake/View/Helper/JsHelper.php	/^		$this->_jsVars = array_merge($this->_jsVars, $data);$/;"	v
_jsVars	lib/Cake/View/Helper/JsHelper.php	/^	protected $_jsVars = array();$/;"	v
buffer	lib/Cake/View/Helper/JsHelper.php	/^					$buffer = $lastParam;$/;"	v
buffer	lib/Cake/View/Helper/JsHelper.php	/^					$buffer = $lastParam['buffer'];$/;"	v
buffer	lib/Cake/View/Helper/JsHelper.php	/^				$buffer = true;$/;"	v
buffer	lib/Cake/View/Helper/JsHelper.php	/^			$buffer = false;$/;"	v
buffer	lib/Cake/View/Helper/JsHelper.php	/^		$buffer = isset($options['buffer']) ? $options['buffer'] : null;$/;"	v
buffer	lib/Cake/View/Helper/JsHelper.php	/^	public function buffer($script, $top = false) {$/;"	f
bufferScripts	lib/Cake/View/Helper/JsHelper.php	/^	public $bufferScripts = true;$/;"	v
className	lib/Cake/View/Helper/JsHelper.php	/^			$className = $settings;$/;"	v
className	lib/Cake/View/Helper/JsHelper.php	/^			$className = $settings[0];$/;"	v
className	lib/Cake/View/Helper/JsHelper.php	/^		$className = 'Jquery';$/;"	v
data	lib/Cake/View/Helper/JsHelper.php	/^				$data = $one;$/;"	v
data	lib/Cake/View/Helper/JsHelper.php	/^				$data = array_combine($one, $two);$/;"	v
data	lib/Cake/View/Helper/JsHelper.php	/^			$data = array($one => $two);$/;"	v
data	lib/Cake/View/Helper/JsHelper.php	/^		$data = null;$/;"	v
defaults	lib/Cake/View/Helper/JsHelper.php	/^		$defaults = array($/;"	v
domReady	lib/Cake/View/Helper/JsHelper.php	/^		$domReady = !$this->request->is('ajax');$/;"	v
engineClass	lib/Cake/View/Helper/JsHelper.php	/^		$engineClass = $engineName . 'Engine';$/;"	v
engineHelper	lib/Cake/View/Helper/JsHelper.php	/^			$engineHelper = $this->{$this->_engineName};$/;"	v
engineName	lib/Cake/View/Helper/JsHelper.php	/^		$engineName = $className;$/;"	v
event	lib/Cake/View/Helper/JsHelper.php	/^			$event = $this->event('click', $requestString, $options + array('buffer' => $buffer));$/;"	v
filename	lib/Cake/View/Helper/JsHelper.php	/^			$filename = md5($script);$/;"	v
formOptions	lib/Cake/View/Helper/JsHelper.php	/^		$formOptions = array('div');$/;"	v
getBuffer	lib/Cake/View/Helper/JsHelper.php	/^	public function getBuffer($clear = true) {$/;"	f
hasBufferParam	lib/Cake/View/Helper/JsHelper.php	/^				$hasBufferParam = (is_bool($lastParam) || is_array($lastParam) && isset($lastParam['buffer']));$/;"	v
helpers	lib/Cake/View/Helper/JsHelper.php	/^	public $helpers = array('Html', 'Form');$/;"	v
htmlKeys	lib/Cake/View/Helper/JsHelper.php	/^		$htmlKeys = array_merge($/;"	v
htmlOptions	lib/Cake/View/Helper/JsHelper.php	/^			$htmlOptions = array_merge($htmlOptions, $options['htmlAttributes']);$/;"	v
htmlOptions	lib/Cake/View/Helper/JsHelper.php	/^		$htmlOptions = array();$/;"	v
lastParam	lib/Cake/View/Helper/JsHelper.php	/^				$lastParam = $params[count($params) - 1];$/;"	v
link	lib/Cake/View/Helper/JsHelper.php	/^	public function link($title, $url = null, $options = array()) {$/;"	f
opts	lib/Cake/View/Helper/JsHelper.php	/^			$opts = array('safe' => $safe);$/;"	v
opts	lib/Cake/View/Helper/JsHelper.php	/^		$opts = $options;$/;"	v
out	lib/Cake/View/Helper/JsHelper.php	/^			$out = call_user_func_array(array(&$engineHelper, $method), $params);$/;"	v
out	lib/Cake/View/Helper/JsHelper.php	/^		$out = $this->Form->submit($caption, $htmlOptions);$/;"	v
out	lib/Cake/View/Helper/JsHelper.php	/^		$out = $this->Html->link($title, $url, $htmlOptions);$/;"	v
path	lib/Cake/View/Helper/JsHelper.php	/^			$path = WWW_ROOT . Configure::read('App.jsBaseUrl');$/;"	v
quoteString	lib/Cake/View/Helper/JsHelper.php	/^			$quoteString = true;$/;"	v
requestString	lib/Cake/View/Helper/JsHelper.php	/^			$requestString = $this->confirmReturn($options['confirm']);$/;"	v
requestString	lib/Cake/View/Helper/JsHelper.php	/^		$requestString = $event = '';$/;"	v
requestString	lib/Cake/View/Helper/JsHelper.php	/^		$requestString = $url = '';$/;"	v
return	lib/Cake/View/Helper/JsHelper.php	/^		$return = $this->Html->scriptBlock($script, $opts);$/;"	v
safe	lib/Cake/View/Helper/JsHelper.php	/^		$safe = isset($options['safe']) ? $options['safe'] : true;$/;"	v
script	lib/Cake/View/Helper/JsHelper.php	/^			$script = $this->{$this->_engineName}->domReady($script);$/;"	v
script	lib/Cake/View/Helper/JsHelper.php	/^		$script = implode("\\n", $this->getBuffer($options['clear']));$/;"	v
scripts	lib/Cake/View/Helper/JsHelper.php	/^		$scripts = $this->_bufferedScripts;$/;"	v
set	lib/Cake/View/Helper/JsHelper.php	/^	public function set($one, $two = null) {$/;"	f
setVar	lib/Cake/View/Helper/JsHelper.php	/^			$setVar = (strpos($this->setVariable, '.')) ? $this->setVariable : 'window.' . $this->setVariable;$/;"	v
setVariable	lib/Cake/View/Helper/JsHelper.php	/^	public $setVariable = 'app';$/;"	v
submit	lib/Cake/View/Helper/JsHelper.php	/^	public function submit($caption = null, $options = array()) {$/;"	f
url	lib/Cake/View/Helper/JsHelper.php	/^			$url = $options['url'];$/;"	v
value	lib/Cake/View/Helper/JsHelper.php	/^	public function value($val = array(), $quoteString = null, $key = 'value') {$/;"	f
writeBuffer	lib/Cake/View/Helper/JsHelper.php	/^	public function writeBuffer($options = array()) {$/;"	f
MootoolsEngineHelper	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^class MootoolsEngineHelper extends JsBaseEngineHelper {$/;"	c
_callbackArguments	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^	protected $_callbackArguments = array($/;"	v
_multipleSelection	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^		$this->_multipleSelection = false;$/;"	v
_multipleSelection	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^		$this->_multipleSelection = true;$/;"	v
_optionMap	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^	protected $_optionMap = array($/;"	v
callback	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^			$callback = "event.stop();\\n" . $callback;$/;"	v
callback	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^			$callback = sprintf($function, $callback);$/;"	v
data	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^			$data = $options['data'];$/;"	v
data	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^			$data = $this->object($data);$/;"	v
defaults	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^		$defaults = array('wrap' => true, 'stop' => true);$/;"	v
direction	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^				$direction = strtolower($direction);$/;"	v
domReady	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^	public function domReady($functionBody) {$/;"	f
drag	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^	public function drag($options = array()) {$/;"	f
drop	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^	public function drop($options = array()) {$/;"	f
each	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^	public function each($callback) {$/;"	f
effect	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^				$effect = 'setStyle("display", "")';$/;"	v
effect	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^				$effect = 'setStyle("display", "none")';$/;"	v
effect	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^		$effect = '';$/;"	v
effect	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^	public function effect($name, $options = array()) {$/;"	f
event	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^	public function event($type, $callback, $options = array()) {$/;"	f
function	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^		$function = 'function (event) {%s}';$/;"	v
get	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^	public function get($selector) {$/;"	f
method	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^		$method = '.toQueryString()';$/;"	v
optionString	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^			$optionString = ', {' . $optionString . '}';$/;"	v
optionString	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^		$optionString = $this->_parseOptions($options, $safe);$/;"	v
optionString	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^		$optionString = $this->_processOptions('slider', $options);$/;"	v
options	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^		$options = $this->_mapOptions('drag', $this->_mapOptions('drop', $options));$/;"	v
options	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^		$options = $this->_mapOptions('request', $options);$/;"	v
options	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^		$options = $this->_parseOptions($options, array_keys($this->_callbackArguments['request']));$/;"	v
options	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^		$options = $this->_prepareCallbacks('drop', $options);$/;"	v
options	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^		$options = $this->_prepareCallbacks('request', $options);$/;"	v
options	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^		$options = $this->_processOptions('drag', $options);$/;"	v
options	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^		$options = $this->_processOptions('sortable', $options);$/;"	v
out	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^		$out = $this->selection . ".addEvent(\\"{$type}\\", $callback);";$/;"	v
out	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^		$out = $this->selection . '.makeDraggable({' . $optionString . '});';$/;"	v
out	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^		$out = 'var jsSlider = new Slider(' . $slider . ', ' . $this->selection . $optionString . ');';$/;"	v
request	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^	public function request($url, $options = array()) {$/;"	f
safe	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^		$safe = array_merge(array_keys($this->_callbackArguments['drop']), array('droppables'));$/;"	v
selection	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^			$selection = '$(' . $this->selection . '.form)';$/;"	v
selection	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^			$this->selection = "$(" . $selector . ")";$/;"	v
selection	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^			$this->selection = '$("' . substr($selector, 1) . '")';$/;"	v
selection	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^		$selection = $this->selection;$/;"	v
selection	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^		$this->selection = $options['droppables'];$/;"	v
selection	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^		$this->selection = $slider;$/;"	v
selection	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^		$this->selection = '$$("' . $selector . '")';$/;"	v
selection	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^		$this->selection = 'window';$/;"	v
serializeForm	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^	public function serializeForm($options = array()) {$/;"	f
slider	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^		$slider = $this->selection;$/;"	v
slider	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^	public function slider($options = array()) {$/;"	f
sortable	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^	public function sortable($options = array()) {$/;"	f
speed	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^				$speed = '"long"';$/;"	v
speed	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^				$speed = '"short"';$/;"	v
speed	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^		$speed = null;$/;"	v
type	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^				$type = '.HTML';$/;"	v
type	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^				$type = '.JSON';$/;"	v
type	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^		$type = $data = null;$/;"	v
url	lib/Cake/View/Helper/MootoolsEngineHelper.php	/^		$url = html_entity_decode($this->url($url), ENT_COMPAT, Configure::read('App.encoding'));$/;"	v
NumberHelper	lib/Cake/View/Helper/NumberHelper.php	/^class NumberHelper extends AppHelper {$/;"	c
__call	lib/Cake/View/Helper/NumberHelper.php	/^	public function __call($method, $params) {$/;"	f
__construct	lib/Cake/View/Helper/NumberHelper.php	/^	public function __construct(View $View, $settings = array()) {$/;"	f
_engine	lib/Cake/View/Helper/NumberHelper.php	/^			$this->_engine = new $engineClass($settings);$/;"	v
_engine	lib/Cake/View/Helper/NumberHelper.php	/^	protected $_engine = null;$/;"	v
addFormat	lib/Cake/View/Helper/NumberHelper.php	/^	public function addFormat($formatName, $options) {$/;"	f
currency	lib/Cake/View/Helper/NumberHelper.php	/^	public function currency($number, $currency = null, $options = array()) {$/;"	f
defaultCurrency	lib/Cake/View/Helper/NumberHelper.php	/^	public function defaultCurrency($currency) {$/;"	f
format	lib/Cake/View/Helper/NumberHelper.php	/^	public function format($number, $options = false) {$/;"	f
precision	lib/Cake/View/Helper/NumberHelper.php	/^	public function precision($number, $precision = 3) {$/;"	f
settings	lib/Cake/View/Helper/NumberHelper.php	/^		$settings = Hash::merge(array('engine' => 'CakeNumber'), $settings);$/;"	v
toPercentage	lib/Cake/View/Helper/NumberHelper.php	/^	public function toPercentage($number, $precision = 2, $options = array()) {$/;"	f
toReadableSize	lib/Cake/View/Helper/NumberHelper.php	/^	public function toReadableSize($size) {$/;"	f
PaginatorHelper	lib/Cake/View/Helper/PaginatorHelper.php	/^class PaginatorHelper extends AppHelper {$/;"	c
__construct	lib/Cake/View/Helper/PaginatorHelper.php	/^	public function __construct(View $View, $settings = array()) {$/;"	f
_ajaxHelperClass	lib/Cake/View/Helper/PaginatorHelper.php	/^		$this->_ajaxHelperClass = $ajaxProvider;$/;"	v
_ajaxHelperClass	lib/Cake/View/Helper/PaginatorHelper.php	/^	protected $_ajaxHelperClass = 'Js';$/;"	v
_convertUrlKeys	lib/Cake/View/Helper/PaginatorHelper.php	/^	protected function _convertUrlKeys($url, $type) {$/;"	f
_defaults	lib/Cake/View/Helper/PaginatorHelper.php	/^		$_defaults = array($/;"	v
_hasPage	lib/Cake/View/Helper/PaginatorHelper.php	/^	protected function _hasPage($model, $page) {$/;"	f
_pagingLink	lib/Cake/View/Helper/PaginatorHelper.php	/^	protected function _pagingLink($which, $title = null, $options = array(), $disabledTitle = null, $disabledOptions = array()) {$/;"	f
after	lib/Cake/View/Helper/PaginatorHelper.php	/^				$after = $ellipsis;$/;"	v
ajaxProvider	lib/Cake/View/Helper/PaginatorHelper.php	/^		$ajaxProvider = isset($settings['ajax']) ? $settings['ajax'] : 'Js';$/;"	v
before	lib/Cake/View/Helper/PaginatorHelper.php	/^				$before = $ellipsis;$/;"	v
beforeRender	lib/Cake/View/Helper/PaginatorHelper.php	/^	public function beforeRender($viewFile) {$/;"	f
check	lib/Cake/View/Helper/PaginatorHelper.php	/^		$check = 'has' . $which;$/;"	v
class	lib/Cake/View/Helper/PaginatorHelper.php	/^			$class = $dir === 'asc' ? 'desc' : 'asc';$/;"	v
classname	lib/Cake/View/Helper/PaginatorHelper.php	/^		$classname = $ajaxProvider . 'Helper';$/;"	v
counter	lib/Cake/View/Helper/PaginatorHelper.php	/^	public function counter($options = array()) {$/;"	f
current	lib/Cake/View/Helper/PaginatorHelper.php	/^	public function current($model = null) {$/;"	f
defaultDir	lib/Cake/View/Helper/PaginatorHelper.php	/^		$defaultDir = isset($options['direction']) ? $options['direction'] : 'asc';$/;"	v
defaultModel	lib/Cake/View/Helper/PaginatorHelper.php	/^		$defaultModel = $this->defaultModel();$/;"	v
defaultModel	lib/Cake/View/Helper/PaginatorHelper.php	/^	public function defaultModel() {$/;"	f
defaults	lib/Cake/View/Helper/PaginatorHelper.php	/^		$defaults = array($/;"	v
dir	lib/Cake/View/Helper/PaginatorHelper.php	/^				$dir = $defaultDir;$/;"	v
dir	lib/Cake/View/Helper/PaginatorHelper.php	/^			$dir = $this->sortDir($options['model']) === 'asc' ? 'desc' : 'asc';$/;"	v
dir	lib/Cake/View/Helper/PaginatorHelper.php	/^			$dir = strtolower($options['direction']);$/;"	v
dir	lib/Cake/View/Helper/PaginatorHelper.php	/^			$dir = strtolower(current($options['order']));$/;"	v
dir	lib/Cake/View/Helper/PaginatorHelper.php	/^			$dir = strtolower(current($params['order']));$/;"	v
dir	lib/Cake/View/Helper/PaginatorHelper.php	/^		$dir = $defaultDir;$/;"	v
dir	lib/Cake/View/Helper/PaginatorHelper.php	/^		$dir = null;$/;"	v
disabledOptions	lib/Cake/View/Helper/PaginatorHelper.php	/^			$disabledOptions = $options;$/;"	v
disabledTag	lib/Cake/View/Helper/PaginatorHelper.php	/^				$disabledTag = null;$/;"	v
end	lib/Cake/View/Helper/PaginatorHelper.php	/^				$end = $params['page'] + ($modulus - $params['page']) + 1;$/;"	v
end	lib/Cake/View/Helper/PaginatorHelper.php	/^				$end = $params['pageCount'];$/;"	v
end	lib/Cake/View/Helper/PaginatorHelper.php	/^			$end = $paging['count'];$/;"	v
end	lib/Cake/View/Helper/PaginatorHelper.php	/^			$end = $params['page'] + $half;$/;"	v
end	lib/Cake/View/Helper/PaginatorHelper.php	/^		$end = $start + $paging['limit'] - 1;$/;"	v
first	lib/Cake/View/Helper/PaginatorHelper.php	/^	public function first($first = '<< first', $options = array()) {$/;"	f
half	lib/Cake/View/Helper/PaginatorHelper.php	/^			$half = intval($modulus \/ 2);$/;"	v
hasNext	lib/Cake/View/Helper/PaginatorHelper.php	/^	public function hasNext($model = null) {$/;"	f
hasPage	lib/Cake/View/Helper/PaginatorHelper.php	/^	public function hasPage($model = null, $page = 1) {$/;"	f
hasPrev	lib/Cake/View/Helper/PaginatorHelper.php	/^	public function hasPrev($model = null) {$/;"	f
helpers	lib/Cake/View/Helper/PaginatorHelper.php	/^	public $helpers = array('Html');$/;"	v
isSorted	lib/Cake/View/Helper/PaginatorHelper.php	/^		$isSorted = ($/;"	v
key	lib/Cake/View/Helper/PaginatorHelper.php	/^			$key === $defaultModel . '.' . $sortKey$/;"	v
last	lib/Cake/View/Helper/PaginatorHelper.php	/^	public function last($last = 'last >>', $options = array()) {$/;"	f
link	lib/Cake/View/Helper/PaginatorHelper.php	/^			$link = $this->link($title, $url, compact('escape', 'model') + $options);$/;"	v
link	lib/Cake/View/Helper/PaginatorHelper.php	/^	public function link($title, $url = array(), $options = array()) {$/;"	f
locked	lib/Cake/View/Helper/PaginatorHelper.php	/^		$locked = isset($options['lock']) ? $options['lock'] : false;$/;"	v
lower	lib/Cake/View/Helper/PaginatorHelper.php	/^		$lower = $params['pageCount'] - $last + 1;$/;"	v
map	lib/Cake/View/Helper/PaginatorHelper.php	/^				$map = array($/;"	v
model	lib/Cake/View/Helper/PaginatorHelper.php	/^			$model = $this->defaultModel();$/;"	v
model	lib/Cake/View/Helper/PaginatorHelper.php	/^			$model = null;$/;"	v
model	lib/Cake/View/Helper/PaginatorHelper.php	/^		$model = $options['model'];$/;"	v
model	lib/Cake/View/Helper/PaginatorHelper.php	/^		$model = $this->defaultModel();$/;"	v
newKeys	lib/Cake/View/Helper/PaginatorHelper.php	/^				$newKeys = array($/;"	v
next	lib/Cake/View/Helper/PaginatorHelper.php	/^	public function next($title = 'Next >>', $options = array(), $disabledTitle = null, $disabledOptions = array()) {$/;"	f
numbers	lib/Cake/View/Helper/PaginatorHelper.php	/^	public function numbers($options = array()) {$/;"	f
obj	lib/Cake/View/Helper/PaginatorHelper.php	/^		$obj = isset($options['update']) ? $this->_ajaxHelperClass : 'Html';$/;"	v
offset	lib/Cake/View/Helper/PaginatorHelper.php	/^				$offset = ($params['pageCount'] < $end + (int)$last) ? $params['pageCount'] - $end : $last;$/;"	v
offset	lib/Cake/View/Helper/PaginatorHelper.php	/^				$offset = ($start <= (int)$first) ? $start - 1 : $first;$/;"	v
options	lib/Cake/View/Helper/PaginatorHelper.php	/^			$options = $params['options'];$/;"	v
options	lib/Cake/View/Helper/PaginatorHelper.php	/^			$options = (array)$disabledOptions + $_defaults;$/;"	v
options	lib/Cake/View/Helper/PaginatorHelper.php	/^			$options = array($/;"	v
options	lib/Cake/View/Helper/PaginatorHelper.php	/^			$options = array('format' => $options);$/;"	v
options	lib/Cake/View/Helper/PaginatorHelper.php	/^			$options = array('update' => $options);$/;"	v
options	lib/Cake/View/Helper/PaginatorHelper.php	/^		$options = (array)$options + $_defaults;$/;"	v
options	lib/Cake/View/Helper/PaginatorHelper.php	/^		$options = (array)$options + $defaults;$/;"	v
options	lib/Cake/View/Helper/PaginatorHelper.php	/^		$options = (array)$options + array($/;"	v
options	lib/Cake/View/Helper/PaginatorHelper.php	/^		$this->options = array_filter(array_merge($this->options, $options));$/;"	v
options	lib/Cake/View/Helper/PaginatorHelper.php	/^	public $options = array($/;"	v
options	lib/Cake/View/Helper/PaginatorHelper.php	/^	public function options($options = array()) {$/;"	f
out	lib/Cake/View/Helper/PaginatorHelper.php	/^				$out = $paging['page'] . $options['separator'] . $paging['pageCount'];$/;"	v
out	lib/Cake/View/Helper/PaginatorHelper.php	/^				$out = $start . $options['separator'][0] . $end . $options['separator'][1];$/;"	v
out	lib/Cake/View/Helper/PaginatorHelper.php	/^				$out = str_replace($newKeys, array_values($map), $out);$/;"	v
out	lib/Cake/View/Helper/PaginatorHelper.php	/^				$out = str_replace(array_keys($map), array_values($map), $options['format']);$/;"	v
out	lib/Cake/View/Helper/PaginatorHelper.php	/^			$out = $before . $out;$/;"	v
out	lib/Cake/View/Helper/PaginatorHelper.php	/^			$out = $before . $this->Html->tag($/;"	v
out	lib/Cake/View/Helper/PaginatorHelper.php	/^			$out = $this->Html->tag($tag, $this->link($first, array('page' => 1), $options), compact('class')) . $after;$/;"	v
out	lib/Cake/View/Helper/PaginatorHelper.php	/^		$out = '';$/;"	v
page	lib/Cake/View/Helper/PaginatorHelper.php	/^			$page = $model;$/;"	v
paging	lib/Cake/View/Helper/PaginatorHelper.php	/^		$paging = $this->params($model);$/;"	v
paging	lib/Cake/View/Helper/PaginatorHelper.php	/^		$paging = $this->params($options['model']);$/;"	v
param	lib/Cake/View/Helper/PaginatorHelper.php	/^	public function param($key, $model = null) {$/;"	f
params	lib/Cake/View/Helper/PaginatorHelper.php	/^			$params = $this->params($model);$/;"	v
params	lib/Cake/View/Helper/PaginatorHelper.php	/^		$params = $this->params($model);$/;"	v
params	lib/Cake/View/Helper/PaginatorHelper.php	/^		$params = (array)$this->params($options['model']) + array('page' => 1);$/;"	v
params	lib/Cake/View/Helper/PaginatorHelper.php	/^		$params = array_merge(array('page' => 1), (array)$this->params($options['model']));$/;"	v
params	lib/Cake/View/Helper/PaginatorHelper.php	/^	public function params($model = null) {$/;"	f
prev	lib/Cake/View/Helper/PaginatorHelper.php	/^	public function prev($title = '<< Previous', $options = array(), $disabledTitle = null, $disabledOptions = array()) {$/;"	f
sort	lib/Cake/View/Helper/PaginatorHelper.php	/^			$sort = $direction = null;$/;"	v
sort	lib/Cake/View/Helper/PaginatorHelper.php	/^	public function sort($key, $title = null, $options = array()) {$/;"	f
sortDir	lib/Cake/View/Helper/PaginatorHelper.php	/^	public function sortDir($model = null, $options = array()) {$/;"	f
sortKey	lib/Cake/View/Helper/PaginatorHelper.php	/^			$sortKey === $defaultModel . '.' . $key ||$/;"	v
sortKey	lib/Cake/View/Helper/PaginatorHelper.php	/^			$sortKey === $key ||$/;"	v
sortKey	lib/Cake/View/Helper/PaginatorHelper.php	/^		$sortKey = $this->sortKey($options['model']);$/;"	v
sortKey	lib/Cake/View/Helper/PaginatorHelper.php	/^	public function sortKey($model = null, $options = array()) {$/;"	f
start	lib/Cake/View/Helper/PaginatorHelper.php	/^				$start = 1;$/;"	v
start	lib/Cake/View/Helper/PaginatorHelper.php	/^			$start = $params['page'] + 1;$/;"	v
start	lib/Cake/View/Helper/PaginatorHelper.php	/^			$start = $params['page'] - ($modulus - ($end - $params['page']));$/;"	v
start	lib/Cake/View/Helper/PaginatorHelper.php	/^			$start = (($paging['page'] - 1) * $paging['limit']) + 1;$/;"	v
start	lib/Cake/View/Helper/PaginatorHelper.php	/^		$start = 0;$/;"	v
tag	lib/Cake/View/Helper/PaginatorHelper.php	/^				$tag = $_defaults['tag'];$/;"	v
tag	lib/Cake/View/Helper/PaginatorHelper.php	/^				$tag = $disabledTag;$/;"	v
title	lib/Cake/View/Helper/PaginatorHelper.php	/^				$title = $disabledTitle;$/;"	v
title	lib/Cake/View/Helper/PaginatorHelper.php	/^				$title = str_replace('.', ' ', $title);$/;"	v
title	lib/Cake/View/Helper/PaginatorHelper.php	/^			$title = $key;$/;"	v
title	lib/Cake/View/Helper/PaginatorHelper.php	/^			$title = $this->Html->tag($disabledTag, $title, compact('escape') + $options);$/;"	v
title	lib/Cake/View/Helper/PaginatorHelper.php	/^			$title = $title[$dir];$/;"	v
title	lib/Cake/View/Helper/PaginatorHelper.php	/^			$title = __(Inflector::humanize(preg_replace('\/_id$\/', '', $title)));$/;"	v
url	lib/Cake/View/Helper/PaginatorHelper.php	/^			$url = array_merge($/;"	v
url	lib/Cake/View/Helper/PaginatorHelper.php	/^			$url = array_merge($url, compact('sort', 'direction'));$/;"	v
url	lib/Cake/View/Helper/PaginatorHelper.php	/^			$url = array_merge((array)$options['url'], (array)$url);$/;"	v
url	lib/Cake/View/Helper/PaginatorHelper.php	/^		$url = $options['url'];$/;"	v
url	lib/Cake/View/Helper/PaginatorHelper.php	/^		$url = $this->_convertUrlKeys($url, $paging['paramType']);$/;"	v
url	lib/Cake/View/Helper/PaginatorHelper.php	/^		$url = $this->url($url, true, $model);$/;"	v
url	lib/Cake/View/Helper/PaginatorHelper.php	/^		$url = array_merge(array('sort' => $key, 'direction' => $dir), $url, array('order' => null));$/;"	v
url	lib/Cake/View/Helper/PaginatorHelper.php	/^		$url = array_merge(array_filter($paging['options']), $options);$/;"	v
url	lib/Cake/View/Helper/PaginatorHelper.php	/^	public function url($options = array(), $asArray = false, $model = null) {$/;"	f
PrototypeEngineHelper	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^class PrototypeEngineHelper extends JsBaseEngineHelper {$/;"	c
_callbackArguments	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^	protected $_callbackArguments = array($/;"	v
_multiple	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^		$this->_multiple = false;$/;"	v
_multiple	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^		$this->_multiple = true;$/;"	v
_multiple	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^	protected $_multiple = false;$/;"	v
_optionMap	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^	protected $_optionMap = array($/;"	v
callback	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^			$callback = "event.stop();\\n" . $callback;$/;"	v
callback	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^			$callback = sprintf($function, $callback);$/;"	v
defaults	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^		$defaults = array('wrap' => true, 'stop' => true);$/;"	v
domReady	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^	public function domReady($functionBody) {$/;"	f
drag	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^	public function drag($options = array()) {$/;"	f
drop	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^	public function drop($options = array()) {$/;"	f
each	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^	public function each($callback) {$/;"	f
effect	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^				$effect = $this->selection . '.' . $name . '(' . substr($optionString, 2) . ');';$/;"	v
effect	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^				$effect = $this->selection . '.' . $name . '();';$/;"	v
effect	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^				$effect = 'Effect.' . $name . '(' . $this->selection . $optionString . ');';$/;"	v
effect	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^		$effect = '';$/;"	v
effect	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^	public function effect($name, $options = array()) {$/;"	f
event	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^	public function event($type, $callback, $options = array()) {$/;"	f
function	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^		$function = 'function (event) {%s}';$/;"	v
get	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^	public function get($selector) {$/;"	f
method	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^		$method = '.serialize()';$/;"	v
name	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^				$name = ($name === 'fadeIn') ? 'appear' : 'fade';$/;"	v
name	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^				$name = ($name === 'slideIn') ? 'slideDown' : 'slideUp';$/;"	v
optionString	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^			$optionString = ', {' . $optionString . '}';$/;"	v
optionString	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^			$optionString = ', {' . $this->_parseOptions($options) . '}';$/;"	v
optionString	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^		$optionString = $this->_parseOptions($/;"	v
optionString	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^		$optionString = null;$/;"	v
options	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^			$options = ', {' . $options . '}';$/;"	v
options	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^		$options = $this->_mapOptions('request', $options);$/;"	v
options	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^		$options = $this->_mapOptions('slider', $options);$/;"	v
options	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^		$options = $this->_parseOptions($options, $safe);$/;"	v
options	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^		$options = $this->_prepareCallbacks('request', $options, $safe);$/;"	v
options	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^		$options = $this->_prepareCallbacks('slider', $options);$/;"	v
options	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^		$options = $this->_processOptions('drag', $options);$/;"	v
options	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^		$options = $this->_processOptions('drop', $options);$/;"	v
options	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^		$options = $this->_processOptions('sortable', $options);$/;"	v
out	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^		$out = $this->selection . ".observe(\\"{$type}\\", $callback);";$/;"	v
out	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^		$out = 'var jsSlider = new Control.Slider(' . $this->selection . ', ' . $slider . $optionString . ');';$/;"	v
request	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^	public function request($url, $options = array()) {$/;"	f
safe	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^		$safe = array_keys($this->_callbackArguments['request']);$/;"	v
selection	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^			$selection = '$(' . $this->selection . '.form)';$/;"	v
selection	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^			$this->selection = "$(" . $selector . ")";$/;"	v
selection	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^			$this->selection = '$("' . substr($selector, 1) . '")';$/;"	v
selection	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^		$selection = $this->selection;$/;"	v
selection	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^		$this->selection = $slider;$/;"	v
selection	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^		$this->selection = '$$("' . $selector . '")';$/;"	v
selection	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^		$this->selection = 'document';$/;"	v
serializeForm	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^	public function serializeForm($options = array()) {$/;"	f
slider	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^		$slider = $this->selection;$/;"	v
slider	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^	public function slider($options = array()) {$/;"	f
sortable	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^	public function sortable($options = array()) {$/;"	f
type	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^			$type = '.Updater';$/;"	v
type	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^		$type = '.Request';$/;"	v
url	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^			$url = '"' . str_replace('#', '', $options['update']) . '", ' . $url;$/;"	v
url	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^		$url = '"' . $url . '"';$/;"	v
url	lib/Cake/View/Helper/PrototypeEngineHelper.php	/^		$url = html_entity_decode($this->url($url), ENT_COMPAT, Configure::read('App.encoding'));$/;"	v
RssHelper	lib/Cake/View/Helper/RssHelper.php	/^class RssHelper extends AppHelper {$/;"	c
action	lib/Cake/View/Helper/RssHelper.php	/^	public $action = null;$/;"	v
attrib	lib/Cake/View/Helper/RssHelper.php	/^							$attrib = array();$/;"	v
attrib	lib/Cake/View/Helper/RssHelper.php	/^						$attrib = $val;$/;"	v
attrib	lib/Cake/View/Helper/RssHelper.php	/^					$attrib = $att;$/;"	v
attrib	lib/Cake/View/Helper/RssHelper.php	/^					$attrib = $val;$/;"	v
attrib	lib/Cake/View/Helper/RssHelper.php	/^			$attrib = array();$/;"	v
attributes	lib/Cake/View/Helper/RssHelper.php	/^					$attributes = $data;$/;"	v
attributes	lib/Cake/View/Helper/RssHelper.php	/^					$attributes = $data['attrib'];$/;"	v
attributes	lib/Cake/View/Helper/RssHelper.php	/^			$attributes = array();$/;"	v
bareName	lib/Cake/View/Helper/RssHelper.php	/^		$bareName = $name;$/;"	v
base	lib/Cake/View/Helper/RssHelper.php	/^	public $base = null;$/;"	v
c	lib/Cake/View/Helper/RssHelper.php	/^		$c = count($items);$/;"	v
cdata	lib/Cake/View/Helper/RssHelper.php	/^			$cdata = true;$/;"	v
cdata	lib/Cake/View/Helper/RssHelper.php	/^		$cdata = false;$/;"	v
channel	lib/Cake/View/Helper/RssHelper.php	/^	public function channel($attrib = array(), $elements = array(), $content = null) {$/;"	f
child	lib/Cake/View/Helper/RssHelper.php	/^			$child = $elem->createElement($name, $child);$/;"	v
children	lib/Cake/View/Helper/RssHelper.php	/^			$children = $content;$/;"	v
children	lib/Cake/View/Helper/RssHelper.php	/^		$children = array();$/;"	v
content	lib/Cake/View/Helper/RssHelper.php	/^			$content = $attrib;$/;"	v
content	lib/Cake/View/Helper/RssHelper.php	/^			$content = $content['value'];$/;"	v
content	lib/Cake/View/Helper/RssHelper.php	/^			$content = '<![CDATA[' . $content . ']]>';$/;"	v
content	lib/Cake/View/Helper/RssHelper.php	/^			$content = implode('', $elements);$/;"	v
content	lib/Cake/View/Helper/RssHelper.php	/^			$content = null;$/;"	v
content	lib/Cake/View/Helper/RssHelper.php	/^		$content = null;$/;"	v
data	lib/Cake/View/Helper/RssHelper.php	/^					$data = $innerElements;$/;"	v
data	lib/Cake/View/Helper/RssHelper.php	/^					$data = array();$/;"	v
data	lib/Cake/View/Helper/RssHelper.php	/^	public $data = null;$/;"	v
document	lib/Cake/View/Helper/RssHelper.php	/^	public function document($attrib = array(), $content = null) {$/;"	f
elem	lib/Cake/View/Helper/RssHelper.php	/^		$elem = Xml::build($xml, array('return' => 'domdocument'));$/;"	v
elem	lib/Cake/View/Helper/RssHelper.php	/^	public function elem($name, $attrib = array(), $content = null, $endTag = true) {$/;"	f
elems	lib/Cake/View/Helper/RssHelper.php	/^		$elems = '';$/;"	v
escape	lib/Cake/View/Helper/RssHelper.php	/^				$escape = $val['convertEntities'];$/;"	v
escape	lib/Cake/View/Helper/RssHelper.php	/^			$escape = true;$/;"	v
field	lib/Cake/View/Helper/RssHelper.php	/^	public $field = null;$/;"	v
helpers	lib/Cake/View/Helper/RssHelper.php	/^	public $helpers = array('Time');$/;"	v
here	lib/Cake/View/Helper/RssHelper.php	/^	public $here = null;$/;"	v
innerElements	lib/Cake/View/Helper/RssHelper.php	/^					$innerElements = '';$/;"	v
item	lib/Cake/View/Helper/RssHelper.php	/^	public function item($att = array(), $elements = array()) {$/;"	f
items	lib/Cake/View/Helper/RssHelper.php	/^			$items = array_map($callback, $items);$/;"	v
items	lib/Cake/View/Helper/RssHelper.php	/^	public function items($items, $callback = null) {$/;"	f
model	lib/Cake/View/Helper/RssHelper.php	/^	public $model = null;$/;"	v
namespace	lib/Cake/View/Helper/RssHelper.php	/^				$namespace = $namespace['url'];$/;"	v
namespace	lib/Cake/View/Helper/RssHelper.php	/^			$namespace = $attrib['namespace'];$/;"	v
namespace	lib/Cake/View/Helper/RssHelper.php	/^		$namespace = null;$/;"	v
nodes	lib/Cake/View/Helper/RssHelper.php	/^		$nodes = $elem->getElementsByTagName($bareName);$/;"	v
out	lib/Cake/View/Helper/RssHelper.php	/^		$out = '';$/;"	v
params	lib/Cake/View/Helper/RssHelper.php	/^	public $params = array();$/;"	v
time	lib/Cake/View/Helper/RssHelper.php	/^	public function time($time) {$/;"	f
val	lib/Cake/View/Helper/RssHelper.php	/^						$val = $val['title'];$/;"	v
val	lib/Cake/View/Helper/RssHelper.php	/^						$val = $val['url'];$/;"	v
val	lib/Cake/View/Helper/RssHelper.php	/^						$val = $val[1];$/;"	v
val	lib/Cake/View/Helper/RssHelper.php	/^					$val = $this->time($val);$/;"	v
val	lib/Cake/View/Helper/RssHelper.php	/^					$val = $this->url($val, true);$/;"	v
val	lib/Cake/View/Helper/RssHelper.php	/^					$val = null;$/;"	v
val	lib/Cake/View/Helper/RssHelper.php	/^				$val = h($val);$/;"	v
version	lib/Cake/View/Helper/RssHelper.php	/^	public $version = '2.0';$/;"	v
xml	lib/Cake/View/Helper/RssHelper.php	/^		$xml = $elem->saveXml();$/;"	v
xml	lib/Cake/View/Helper/RssHelper.php	/^		$xml = '<' . $name;$/;"	v
xml	lib/Cake/View/Helper/RssHelper.php	/^		$xml = trim(substr($xml, strpos($xml, '?>') + 2));$/;"	v
SessionHelper	lib/Cake/View/Helper/SessionHelper.php	/^class SessionHelper extends AppHelper {$/;"	c
check	lib/Cake/View/Helper/SessionHelper.php	/^	public function check($name) {$/;"	f
class	lib/Cake/View/Helper/SessionHelper.php	/^					$class = $flash['params']['class'];$/;"	v
class	lib/Cake/View/Helper/SessionHelper.php	/^				$class = 'message';$/;"	v
error	lib/Cake/View/Helper/SessionHelper.php	/^	public function error() {$/;"	f
flash	lib/Cake/View/Helper/SessionHelper.php	/^				$flash = array_merge($flash, $attrs);$/;"	v
flash	lib/Cake/View/Helper/SessionHelper.php	/^			$flash = CakeSession::read('Message.' . $key);$/;"	v
flash	lib/Cake/View/Helper/SessionHelper.php	/^	public function flash($key = 'flash', $attrs = array()) {$/;"	f
message	lib/Cake/View/Helper/SessionHelper.php	/^			$message = $flash['message'];$/;"	v
options	lib/Cake/View/Helper/SessionHelper.php	/^				$options = array();$/;"	v
out	lib/Cake/View/Helper/SessionHelper.php	/^				$out = $message;$/;"	v
out	lib/Cake/View/Helper/SessionHelper.php	/^				$out = $this->_View->element($flash['element'], $tmpVars, $options);$/;"	v
out	lib/Cake/View/Helper/SessionHelper.php	/^				$out = '<div id="' . $key . 'Message" class="' . $class . '">' . $message . '<\/div>';$/;"	v
out	lib/Cake/View/Helper/SessionHelper.php	/^		$out = false;$/;"	v
read	lib/Cake/View/Helper/SessionHelper.php	/^	public function read($name = null) {$/;"	f
tmpVars	lib/Cake/View/Helper/SessionHelper.php	/^				$tmpVars = $flash['params'];$/;"	v
valid	lib/Cake/View/Helper/SessionHelper.php	/^	public function valid() {$/;"	f
TextHelper	lib/Cake/View/Helper/TextHelper.php	/^class TextHelper extends AppHelper {$/;"	c
__call	lib/Cake/View/Helper/TextHelper.php	/^	public function __call($method, $params) {$/;"	f
__construct	lib/Cake/View/Helper/TextHelper.php	/^	public function __construct(View $View, $settings = array()) {$/;"	f
_engine	lib/Cake/View/Helper/TextHelper.php	/^			$this->_engine = new $engineClass($settings);$/;"	v
_engine	lib/Cake/View/Helper/TextHelper.php	/^	protected $_engine;$/;"	v
_insertPlaceHolder	lib/Cake/View/Helper/TextHelper.php	/^	protected function _insertPlaceHolder($matches) {$/;"	f
_linkEmails	lib/Cake/View/Helper/TextHelper.php	/^	protected function _linkEmails($text, $options) {$/;"	f
_linkUrls	lib/Cake/View/Helper/TextHelper.php	/^	protected function _linkUrls($text, $htmlOptions) {$/;"	f
_placeholders	lib/Cake/View/Helper/TextHelper.php	/^		$this->_placeholders = array();$/;"	v
_placeholders	lib/Cake/View/Helper/TextHelper.php	/^	protected $_placeholders = array();$/;"	v
atom	lib/Cake/View/Helper/TextHelper.php	/^		$atom = '[\\p{L}0-9!#$%&\\'*+\\\/=?^_`{|}~-]';$/;"	v
autoLink	lib/Cake/View/Helper/TextHelper.php	/^	public function autoLink($text, $options = array()) {$/;"	f
autoLinkEmails	lib/Cake/View/Helper/TextHelper.php	/^	public function autoLinkEmails($text, $options = array()) {$/;"	f
autoLinkUrls	lib/Cake/View/Helper/TextHelper.php	/^	public function autoLinkUrls($text, $options = array()) {$/;"	f
autoParagraph	lib/Cake/View/Helper/TextHelper.php	/^	public function autoParagraph($text) {$/;"	f
excerpt	lib/Cake/View/Helper/TextHelper.php	/^	public function excerpt($text, $phrase, $radius = 100, $ending = '...') {$/;"	f
helpers	lib/Cake/View/Helper/TextHelper.php	/^	public $helpers = array('Html');$/;"	v
highlight	lib/Cake/View/Helper/TextHelper.php	/^	public function highlight($text, $phrase, $options = array()) {$/;"	f
key	lib/Cake/View/Helper/TextHelper.php	/^		$key = md5($matches[0]);$/;"	v
link	lib/Cake/View/Helper/TextHelper.php	/^			$link = $url;$/;"	v
pattern	lib/Cake/View/Helper/TextHelper.php	/^		$pattern = '#(?<!href="|src="|">)((?:https?|ftp|nntp):\/\/[\\p{L}0-9.\\-_:]+(?:[\/?][^\\s<]*)?)#ui';$/;"	v
replace	lib/Cake/View/Helper/TextHelper.php	/^		$replace = array();$/;"	v
settings	lib/Cake/View/Helper/TextHelper.php	/^		$settings = Hash::merge(array('engine' => 'String'), $settings);$/;"	v
stripLinks	lib/Cake/View/Helper/TextHelper.php	/^	public function stripLinks($text) {$/;"	f
tail	lib/Cake/View/Helper/TextHelper.php	/^	public function tail($text, $length = 100, $options = array()) {$/;"	f
text	lib/Cake/View/Helper/TextHelper.php	/^			$text = '';$/;"	v
text	lib/Cake/View/Helper/TextHelper.php	/^			$text = h($text);$/;"	v
text	lib/Cake/View/Helper/TextHelper.php	/^			$text = preg_replace("\/\\n\\n+\/", "\\n\\n", str_replace(array("\\r\\n", "\\r"), "\\n", $text));$/;"	v
text	lib/Cake/View/Helper/TextHelper.php	/^			$text = preg_replace('|<br[^>]*>\\s*<br[^>]*>|i', "\\n\\n", $text . "\\n");$/;"	v
text	lib/Cake/View/Helper/TextHelper.php	/^			$text = preg_replace('|<p>\\s*<\/p>|', '', $text);$/;"	v
text	lib/Cake/View/Helper/TextHelper.php	/^		$text = $this->autoLinkUrls($text, $options);$/;"	v
text	lib/Cake/View/Helper/TextHelper.php	/^		$text = preg_replace_callback($/;"	v
texts	lib/Cake/View/Helper/TextHelper.php	/^			$texts = preg_split('\/\\n\\s*\\n\/', $text, -1, PREG_SPLIT_NO_EMPTY);$/;"	v
toList	lib/Cake/View/Helper/TextHelper.php	/^	public function toList($list, $and = 'and', $separator = ', ') {$/;"	f
truncate	lib/Cake/View/Helper/TextHelper.php	/^	public function truncate($text, $length = 100, $options = array()) {$/;"	f
url	lib/Cake/View/Helper/TextHelper.php	/^				$url = 'http:\/\/' . $url;$/;"	v
TimeHelper	lib/Cake/View/Helper/TimeHelper.php	/^class TimeHelper extends AppHelper {$/;"	c
__call	lib/Cake/View/Helper/TimeHelper.php	/^	public function __call($method, $params) {$/;"	f
__construct	lib/Cake/View/Helper/TimeHelper.php	/^	public function __construct(View $View, $settings = array()) {$/;"	f
__get	lib/Cake/View/Helper/TimeHelper.php	/^	public function __get($name) {$/;"	f
__isset	lib/Cake/View/Helper/TimeHelper.php	/^	public function __isset($name) {$/;"	f
__set	lib/Cake/View/Helper/TimeHelper.php	/^	public function __set($name, $value) {$/;"	f
_engine	lib/Cake/View/Helper/TimeHelper.php	/^			$this->_engine = new $engineClass($settings);$/;"	v
_engine	lib/Cake/View/Helper/TimeHelper.php	/^	protected $_engine = null;$/;"	v
convert	lib/Cake/View/Helper/TimeHelper.php	/^	public function convert($serverTime, $timezone) {$/;"	f
convertSpecifiers	lib/Cake/View/Helper/TimeHelper.php	/^	public function convertSpecifiers($format, $time = null) {$/;"	f
dayAsSql	lib/Cake/View/Helper/TimeHelper.php	/^	public function dayAsSql($dateString, $fieldName, $timezone = null) {$/;"	f
daysAsSql	lib/Cake/View/Helper/TimeHelper.php	/^	public function daysAsSql($begin, $end, $fieldName, $timezone = null) {$/;"	f
element	lib/Cake/View/Helper/TimeHelper.php	/^				$element = $options['element'] + $element;$/;"	v
element	lib/Cake/View/Helper/TimeHelper.php	/^			$element = array($/;"	v
element	lib/Cake/View/Helper/TimeHelper.php	/^		$element = null;$/;"	v
format	lib/Cake/View/Helper/TimeHelper.php	/^	public function format($format, $date = null, $invalid = false, $timezone = null) {$/;"	f
fromString	lib/Cake/View/Helper/TimeHelper.php	/^	public function fromString($dateString, $timezone = null) {$/;"	f
gmt	lib/Cake/View/Helper/TimeHelper.php	/^	public function gmt($string = null) {$/;"	f
i18nFormat	lib/Cake/View/Helper/TimeHelper.php	/^	public function i18nFormat($date, $format = null, $invalid = false, $timezone = null) {$/;"	f
isThisMonth	lib/Cake/View/Helper/TimeHelper.php	/^	public function isThisMonth($dateString, $timezone = null) {$/;"	f
isThisWeek	lib/Cake/View/Helper/TimeHelper.php	/^	public function isThisWeek($dateString, $timezone = null) {$/;"	f
isThisYear	lib/Cake/View/Helper/TimeHelper.php	/^	public function isThisYear($dateString, $timezone = null) {$/;"	f
isToday	lib/Cake/View/Helper/TimeHelper.php	/^	public function isToday($dateString, $timezone = null) {$/;"	f
isTomorrow	lib/Cake/View/Helper/TimeHelper.php	/^	public function isTomorrow($dateString, $timezone = null) {$/;"	f
isWithinNext	lib/Cake/View/Helper/TimeHelper.php	/^	public function isWithinNext($timeInterval, $dateString, $timezone = null) {$/;"	f
magicGet	lib/Cake/View/Helper/TimeHelper.php	/^		$magicGet = array('niceFormat');$/;"	v
nice	lib/Cake/View/Helper/TimeHelper.php	/^	public function nice($dateString = null, $timezone = null, $format = null) {$/;"	f
niceShort	lib/Cake/View/Helper/TimeHelper.php	/^	public function niceShort($dateString = null, $timezone = null) {$/;"	f
relativeDate	lib/Cake/View/Helper/TimeHelper.php	/^			$relativeDate = sprintf($/;"	v
relativeDate	lib/Cake/View/Helper/TimeHelper.php	/^		$relativeDate = $this->_engine->timeAgoInWords($dateTime, $options);$/;"	v
serverOffset	lib/Cake/View/Helper/TimeHelper.php	/^	public function serverOffset() {$/;"	f
settings	lib/Cake/View/Helper/TimeHelper.php	/^		$settings = Hash::merge(array('engine' => 'CakeTime'), $settings);$/;"	v
timeAgoInWords	lib/Cake/View/Helper/TimeHelper.php	/^	public function timeAgoInWords($dateTime, $options = array()) {$/;"	f
toAtom	lib/Cake/View/Helper/TimeHelper.php	/^	public function toAtom($dateString, $timezone = null) {$/;"	f
toQuarter	lib/Cake/View/Helper/TimeHelper.php	/^	public function toQuarter($dateString, $range = false) {$/;"	f
toRSS	lib/Cake/View/Helper/TimeHelper.php	/^	public function toRSS($dateString, $timezone = null) {$/;"	f
toUnix	lib/Cake/View/Helper/TimeHelper.php	/^	public function toUnix($dateString, $timezone = null) {$/;"	f
wasWithinLast	lib/Cake/View/Helper/TimeHelper.php	/^	public function wasWithinLast($timeInterval, $dateString, $timezone = null) {$/;"	f
wasYesterday	lib/Cake/View/Helper/TimeHelper.php	/^	public function wasYesterday($dateString, $timezone = null) {$/;"	f
HelperCollection	lib/Cake/View/HelperCollection.php	/^class HelperCollection extends ObjectCollection implements CakeEventListener {$/;"	c
_View	lib/Cake/View/HelperCollection.php	/^		$this->_View = $view;$/;"	v
_View	lib/Cake/View/HelperCollection.php	/^	protected $_View;$/;"	v
__construct	lib/Cake/View/HelperCollection.php	/^	public function __construct(View $view) {$/;"	f
__get	lib/Cake/View/HelperCollection.php	/^	public function __get($name) {$/;"	f
__isset	lib/Cake/View/HelperCollection.php	/^	public function __isset($helper) {$/;"	f
alias	lib/Cake/View/HelperCollection.php	/^			$alias = $helper;$/;"	v
alias	lib/Cake/View/HelperCollection.php	/^			$alias = $name;$/;"	v
enable	lib/Cake/View/HelperCollection.php	/^		$enable = isset($settings['enabled']) ? $settings['enabled'] : true;$/;"	v
helper	lib/Cake/View/HelperCollection.php	/^			$helper = $settings['className'];$/;"	v
helperClass	lib/Cake/View/HelperCollection.php	/^		$helperClass = $name . 'Helper';$/;"	v
implementedEvents	lib/Cake/View/HelperCollection.php	/^	public function implementedEvents() {$/;"	f
load	lib/Cake/View/HelperCollection.php	/^	public function load($helper, $settings = array()) {$/;"	f
trigger	lib/Cake/View/HelperCollection.php	/^	public function trigger($callback, $params = array(), $options = array()) {$/;"	f
vars	lib/Cake/View/HelperCollection.php	/^		$vars = array('request', 'theme', 'plugin');$/;"	v
JsonView	lib/Cake/View/JsonView.php	/^class JsonView extends View {$/;"	c
__construct	lib/Cake/View/JsonView.php	/^	public function __construct(Controller $controller = null) {$/;"	f
_serialize	lib/Cake/View/JsonView.php	/^	protected function _serialize($serialize) {$/;"	f
alias	lib/Cake/View/JsonView.php	/^					$alias = $key;$/;"	v
data	lib/Cake/View/JsonView.php	/^			$data = !empty($data) ? $data : null;$/;"	v
data	lib/Cake/View/JsonView.php	/^			$data = array();$/;"	v
data	lib/Cake/View/JsonView.php	/^			$data = isset($this->viewVars[$serialize]) ? $this->viewVars[$serialize] : null;$/;"	v
jsonpParam	lib/Cake/View/JsonView.php	/^				$jsonpParam = 'callback';$/;"	v
jsonpParam	lib/Cake/View/JsonView.php	/^			$jsonpParam = $this->viewVars['_jsonp'];$/;"	v
loadHelpers	lib/Cake/View/JsonView.php	/^	public function loadHelpers() {$/;"	f
render	lib/Cake/View/JsonView.php	/^	public function render($view = null, $layout = null) {$/;"	f
return	lib/Cake/View/JsonView.php	/^				$return = sprintf('%s(%s)', h($this->request->query[$jsonpParam]), $return);$/;"	v
return	lib/Cake/View/JsonView.php	/^			$return = $this->_serialize($this->viewVars['_serialize']);$/;"	v
return	lib/Cake/View/JsonView.php	/^			$return = parent::render($view, false);$/;"	v
return	lib/Cake/View/JsonView.php	/^		$return = null;$/;"	v
subDir	lib/Cake/View/JsonView.php	/^	public $subDir = 'json';$/;"	v
MediaView	lib/Cake/View/MediaView.php	/^class MediaView extends View {$/;"	c
modified	lib/Cake/View/MediaView.php	/^				$modified = strtotime($modified, time());$/;"	v
modified	lib/Cake/View/MediaView.php	/^				$modified = time();$/;"	v
name	lib/Cake/View/MediaView.php	/^		$name = $download = $id = $modified = $path = $cache = $mimeType = $compress = null;$/;"	v
path	lib/Cake/View/MediaView.php	/^		$path = $path . $id;$/;"	v
render	lib/Cake/View/MediaView.php	/^	public function render($view = null, $layout = null) {$/;"	f
ScaffoldView	lib/Cake/View/ScaffoldView.php	/^class ScaffoldView extends View {$/;"	c
_getViewFileName	lib/Cake/View/ScaffoldView.php	/^	protected function _getViewFileName($name = null) {$/;"	f
exts	lib/Cake/View/ScaffoldView.php	/^		$exts = array($this->ext);$/;"	v
name	lib/Cake/View/ScaffoldView.php	/^					$name = substr($name, strlen($prefix) + 1);$/;"	v
name	lib/Cake/View/ScaffoldView.php	/^			$name = $this->action;$/;"	v
name	lib/Cake/View/ScaffoldView.php	/^			$name = 'form';$/;"	v
name	lib/Cake/View/ScaffoldView.php	/^		$name = Inflector::underscore($name);$/;"	v
paths	lib/Cake/View/ScaffoldView.php	/^		$paths = $this->_paths($this->plugin);$/;"	v
prefixes	lib/Cake/View/ScaffoldView.php	/^		$prefixes = Configure::read('Routing.prefixes');$/;"	v
scaffoldAction	lib/Cake/View/ScaffoldView.php	/^		$scaffoldAction = 'scaffold.' . $name;$/;"	v
subDir	lib/Cake/View/ScaffoldView.php	/^			$subDir = null;$/;"	v
subDir	lib/Cake/View/ScaffoldView.php	/^			$subDir = strtolower($this->subDir) . DS;$/;"	v
ThemeView	lib/Cake/View/ThemeView.php	/^class ThemeView extends View {$/;"	c
Blocks	lib/Cake/View/View.php	/^		$this->Blocks = new ViewBlock();$/;"	v
Blocks	lib/Cake/View/View.php	/^	public $Blocks;$/;"	v
Helpers	lib/Cake/View/View.php	/^		$this->Helpers = new HelperCollection($this);$/;"	v
Helpers	lib/Cake/View/View.php	/^	public $Helpers;$/;"	v
View	lib/Cake/View/View.php	/^class View extends Object {$/;"	c
__construct	lib/Cake/View/View.php	/^	public function __construct(Controller $controller = null) {$/;"	f
__get	lib/Cake/View/View.php	/^	public function __get($name) {$/;"	f
__isset	lib/Cake/View/View.php	/^	public function __isset($name) {$/;"	f
__set	lib/Cake/View/View.php	/^	public function __set($name, $value) {$/;"	f
__viewFile	lib/Cake/View/View.php	/^		$this->__viewFile = $viewFile;$/;"	v
_current	lib/Cake/View/View.php	/^		$this->_current = $current;$/;"	v
_current	lib/Cake/View/View.php	/^		$this->_current = $viewFile;$/;"	v
_current	lib/Cake/View/View.php	/^	protected $_current = null;$/;"	v
_currentType	lib/Cake/View/View.php	/^			$this->_currentType = self::TYPE_VIEW;$/;"	v
_currentType	lib/Cake/View/View.php	/^		$this->_currentType = $restore;$/;"	v
_currentType	lib/Cake/View/View.php	/^		$this->_currentType = self::TYPE_ELEMENT;$/;"	v
_currentType	lib/Cake/View/View.php	/^		$this->_currentType = self::TYPE_LAYOUT;$/;"	v
_currentType	lib/Cake/View/View.php	/^	protected $_currentType = '';$/;"	v
_elementCache	lib/Cake/View/View.php	/^	protected function _elementCache($name, $data, $options) {$/;"	f
_evaluate	lib/Cake/View/View.php	/^	protected function _evaluate($viewFile, $dataForView) {$/;"	f
_eventManager	lib/Cake/View/View.php	/^			$this->_eventManager = $controller->getEventManager();$/;"	v
_eventManager	lib/Cake/View/View.php	/^			$this->_eventManager = new CakeEventManager();$/;"	v
_eventManager	lib/Cake/View/View.php	/^	protected $_eventManager = null;$/;"	v
_eventManagerConfigured	lib/Cake/View/View.php	/^			$this->_eventManagerConfigured = true;$/;"	v
_eventManagerConfigured	lib/Cake/View/View.php	/^	protected $_eventManagerConfigured = false;$/;"	v
_getElementFileName	lib/Cake/View/View.php	/^	protected function _getElementFileName($name) {$/;"	f
_getExtensions	lib/Cake/View/View.php	/^	protected function _getExtensions() {$/;"	f
_getLayoutFileName	lib/Cake/View/View.php	/^	protected function _getLayoutFileName($name = null) {$/;"	f
_getViewFileName	lib/Cake/View/View.php	/^	protected function _getViewFileName($name = null) {$/;"	f
_parents	lib/Cake/View/View.php	/^	protected $_parents = array();$/;"	v
_passedVars	lib/Cake/View/View.php	/^	protected $_passedVars = array($/;"	v
_paths	lib/Cake/View/View.php	/^	protected $_paths = array();$/;"	v
_paths	lib/Cake/View/View.php	/^	protected function _paths($plugin = null, $cached = true) {$/;"	f
_pathsForPlugin	lib/Cake/View/View.php	/^	protected $_pathsForPlugin = array();$/;"	v
_render	lib/Cake/View/View.php	/^	protected function _render($viewFile, $data = array()) {$/;"	f
_renderElement	lib/Cake/View/View.php	/^	protected function _renderElement($file, $data, $options) {$/;"	f
_scripts	lib/Cake/View/View.php	/^	protected $_scripts = array();$/;"	v
_stack	lib/Cake/View/View.php	/^	protected $_stack = array();$/;"	v
addScript	lib/Cake/View/View.php	/^	public function addScript($name, $content = null) {$/;"	f
afterEvent	lib/Cake/View/View.php	/^		$afterEvent = new CakeEvent('View.afterRenderFile', $this, array($viewFile, $content));$/;"	v
append	lib/Cake/View/View.php	/^	public function append($name, $value = null) {$/;"	f
assign	lib/Cake/View/View.php	/^	public function assign($name, $value) {$/;"	f
autoLayout	lib/Cake/View/View.php	/^	public $autoLayout = true;$/;"	v
beforeEvent	lib/Cake/View/View.php	/^		$beforeEvent = new CakeEvent('View.beforeRenderFile', $this, array($viewFile));$/;"	v
blocks	lib/Cake/View/View.php	/^	public function blocks() {$/;"	f
c	lib/Cake/View/View.php	/^		$c = 1;$/;"	v
cacheAction	lib/Cake/View/View.php	/^	public $cacheAction = false;$/;"	v
content	lib/Cake/View/View.php	/^			$content = $this->Blocks->get('content');$/;"	v
content	lib/Cake/View/View.php	/^			$content = $this->_render($this->_parents[$viewFile]);$/;"	v
content	lib/Cake/View/View.php	/^		$content = $afterEvent->data[1];$/;"	v
content	lib/Cake/View/View.php	/^		$content = $this->_evaluate($viewFile, $data);$/;"	v
contents	lib/Cake/View/View.php	/^			$contents = $this->_elementCache($name, $data, $options);$/;"	v
corePaths	lib/Cake/View/View.php	/^		$corePaths = array_merge(App::core('View'), App::core('Console\/Templates\/skel\/View'));$/;"	v
count	lib/Cake/View/View.php	/^			$count = count($this->_passedVars);$/;"	v
count	lib/Cake/View/View.php	/^			$count = count($viewPaths);$/;"	v
current	lib/Cake/View/View.php	/^		$current = $this->_current;$/;"	v
data	lib/Cake/View/View.php	/^				$data = $one;$/;"	v
data	lib/Cake/View/View.php	/^				$data = array_combine($one, $two);$/;"	v
data	lib/Cake/View/View.php	/^			$data = $this->viewVars;$/;"	v
data	lib/Cake/View/View.php	/^			$data = array($one => $two);$/;"	v
data	lib/Cake/View/View.php	/^		$data = null;$/;"	v
defaultPath	lib/Cake/View/View.php	/^						$defaultPath = $paths[0] . 'Elements' . DS;$/;"	v
defaultPath	lib/Cake/View/View.php	/^					$defaultPath = $path;$/;"	v
defaultPath	lib/Cake/View/View.php	/^		$defaultPath = $paths[0];$/;"	v
defaults	lib/Cake/View/View.php	/^			$defaults = array($/;"	v
element	lib/Cake/View/View.php	/^		$element = $this->_render($file, array_merge($this->viewVars, $data));$/;"	v
element	lib/Cake/View/View.php	/^	public function element($name, $data = array(), $options = array()) {$/;"	f
elementCache	lib/Cake/View/View.php	/^	public $elementCache = 'default';$/;"	v
elementCacheSettings	lib/Cake/View/View.php	/^			$this->elementCacheSettings = array_merge($defaults, $options['cache']);$/;"	v
elementCacheSettings	lib/Cake/View/View.php	/^		$this->elementCacheSettings = array($/;"	v
elementCacheSettings	lib/Cake/View/View.php	/^	public $elementCacheSettings = array();$/;"	v
elementExists	lib/Cake/View/View.php	/^	public function elementExists($name) {$/;"	f
end	lib/Cake/View/View.php	/^	public function end() {$/;"	f
eventManager	lib/Cake/View/View.php	/^		$eventManager = $this->getEventManager();$/;"	v
ext	lib/Cake/View/View.php	/^	public $ext = '.ctp';$/;"	v
extend	lib/Cake/View/View.php	/^	public function extend($name) {$/;"	f
exts	lib/Cake/View/View.php	/^		$exts = $this->_getExtensions();$/;"	v
exts	lib/Cake/View/View.php	/^		$exts = array($this->ext);$/;"	v
fetch	lib/Cake/View/View.php	/^	public function fetch($name, $default = '') {$/;"	f
file	lib/Cake/View/View.php	/^			$file = $plugin . 'Elements' . DS . $name . $this->ext;$/;"	v
file	lib/Cake/View/View.php	/^		$file = $plugin = null;$/;"	v
file	lib/Cake/View/View.php	/^		$file = $this->_getElementFilename($name);$/;"	v
file	lib/Cake/View/View.php	/^		$file = 'Layouts' . DS . $subDir . $name;$/;"	v
get	lib/Cake/View/View.php	/^	public function get($var, $default = null) {$/;"	f
getEventManager	lib/Cake/View/View.php	/^	public function getEventManager() {$/;"	f
getVar	lib/Cake/View/View.php	/^	public function getVar($var) {$/;"	f
getVars	lib/Cake/View/View.php	/^	public function getVars() {$/;"	f
hasRendered	lib/Cake/View/View.php	/^		$this->hasRendered = true;$/;"	v
hasRendered	lib/Cake/View/View.php	/^	public $hasRendered = false;$/;"	v
hash	lib/Cake/View/View.php	/^			$hash = $object . substr(md5($object . $url . $c), 0, 10);$/;"	v
hash	lib/Cake/View/View.php	/^		$hash = $object . substr(md5($object . $url), 0, 10);$/;"	v
helpers	lib/Cake/View/View.php	/^		$helpers = HelperCollection::normalizeObjectArray($this->helpers);$/;"	v
helpers	lib/Cake/View/View.php	/^	public $helpers = array();$/;"	v
initialBlocks	lib/Cake/View/View.php	/^		$initialBlocks = count($this->Blocks->unclosed());$/;"	v
keys	lib/Cake/View/View.php	/^		$keys = array_merge(array($underscored, $name), array_keys($options), array_keys($data));$/;"	v
layout	lib/Cake/View/View.php	/^			$layout = $this->layout;$/;"	v
layout	lib/Cake/View/View.php	/^	public $layout = 'default';$/;"	v
layoutFileName	lib/Cake/View/View.php	/^		$layoutFileName = $this->_getLayoutFileName($layout);$/;"	v
layoutPath	lib/Cake/View/View.php	/^	public $layoutPath = null;$/;"	v
loadHelper	lib/Cake/View/View.php	/^	public function loadHelper($helperName, $settings = array()) {$/;"	f
loadHelpers	lib/Cake/View/View.php	/^	public function loadHelpers() {$/;"	f
magicGet	lib/Cake/View/View.php	/^		$magicGet = array('base', 'here', 'webroot', 'data', 'action', 'params', 'output');$/;"	v
name	lib/Cake/View/View.php	/^				$name = $this->viewPath . DS . $subDir . $name;$/;"	v
name	lib/Cake/View/View.php	/^				$name = substr($name, 3);$/;"	v
name	lib/Cake/View/View.php	/^				$name = trim($name, DS);$/;"	v
name	lib/Cake/View/View.php	/^			$name = $second;$/;"	v
name	lib/Cake/View/View.php	/^			$name = $this->layout;$/;"	v
name	lib/Cake/View/View.php	/^			$name = $this->view;$/;"	v
name	lib/Cake/View/View.php	/^			$name = $this->viewPath . DS . $subDir . Inflector::underscore($name);$/;"	v
name	lib/Cake/View/View.php	/^			$name = Inflector::camelize($options['plugin']) . '.' . $name;$/;"	v
name	lib/Cake/View/View.php	/^			$name = str_replace('\/', DS, $name);$/;"	v
name	lib/Cake/View/View.php	/^		$name = str_replace('\/', DS, $name);$/;"	v
name	lib/Cake/View/View.php	/^	public $name = null;$/;"	v
out	lib/Cake/View/View.php	/^		$out = ob_get_clean();$/;"	v
parent	lib/Cake/View/View.php	/^					$parent = $this->_getElementFileName($name);$/;"	v
parent	lib/Cake/View/View.php	/^					$parent = $this->_getLayoutFileName($name);$/;"	v
parent	lib/Cake/View/View.php	/^					$parent = $this->_getViewFileName($name);$/;"	v
parent	lib/Cake/View/View.php	/^			$parent = $this->_getViewFileName($name);$/;"	v
passedArgs	lib/Cake/View/View.php	/^	public $passedArgs = array();$/;"	v
paths	lib/Cake/View/View.php	/^						$paths = $this->_paths($plugin);$/;"	v
paths	lib/Cake/View/View.php	/^			$paths = array_merge($paths, App::path('View', $plugin));$/;"	v
paths	lib/Cake/View/View.php	/^			$paths = array_merge($themePaths, $paths);$/;"	v
paths	lib/Cake/View/View.php	/^		$paths = $this->_paths($plugin);$/;"	v
paths	lib/Cake/View/View.php	/^		$paths = array();$/;"	v
paths	lib/Cake/View/View.php	/^		$paths = array_merge($paths, $corePaths);$/;"	v
paths	lib/Cake/View/View.php	/^		$paths = array_unique(array_merge($paths, $viewPaths));$/;"	v
plugin	lib/Cake/View/View.php	/^			$plugin = $first;$/;"	v
plugin	lib/Cake/View/View.php	/^			$plugin = $this->plugin;$/;"	v
plugin	lib/Cake/View/View.php	/^		$plugin = null;$/;"	v
plugin	lib/Cake/View/View.php	/^	public $plugin = null;$/;"	v
pluginPaths	lib/Cake/View/View.php	/^			$pluginPaths = App::path('plugins');$/;"	v
pluginSplit	lib/Cake/View/View.php	/^	public function pluginSplit($name, $fallback = true) {$/;"	f
prepend	lib/Cake/View/View.php	/^	public function prepend($name, $value = null) {$/;"	f
remainingBlocks	lib/Cake/View/View.php	/^		$remainingBlocks = count($this->Blocks->unclosed());$/;"	v
render	lib/Cake/View/View.php	/^	public function render($view = null, $layout = null) {$/;"	f
renderCache	lib/Cake/View/View.php	/^	public function renderCache($filename, $timeStart) {$/;"	f
renderLayout	lib/Cake/View/View.php	/^	public function renderLayout($content, $layout = null) {$/;"	f
request	lib/Cake/View/View.php	/^			$this->request = new CakeRequest(null, false);$/;"	v
request	lib/Cake/View/View.php	/^	public $request;$/;"	v
response	lib/Cake/View/View.php	/^			$this->response = $controller->response;$/;"	v
response	lib/Cake/View/View.php	/^			$this->response = new CakeResponse();$/;"	v
response	lib/Cake/View/View.php	/^		$response = $this->response;$/;"	v
response	lib/Cake/View/View.php	/^	public $response;$/;"	v
restore	lib/Cake/View/View.php	/^		$restore = $this->_currentType;$/;"	v
scripts	lib/Cake/View/View.php	/^		$scripts = implode("\\n\\t", $this->_scripts);$/;"	v
set	lib/Cake/View/View.php	/^	public function set($one, $two = null) {$/;"	f
start	lib/Cake/View/View.php	/^	public function start($name) {$/;"	f
startIfEmpty	lib/Cake/View/View.php	/^	public function startIfEmpty($name) {$/;"	f
subDir	lib/Cake/View/View.php	/^			$subDir = $this->layoutPath . DS;$/;"	v
subDir	lib/Cake/View/View.php	/^			$subDir = $this->subDir . DS;$/;"	v
subDir	lib/Cake/View/View.php	/^		$subDir = null;$/;"	v
subDir	lib/Cake/View/View.php	/^	public $subDir = null;$/;"	v
theme	lib/Cake/View/View.php	/^			$theme = Inflector::camelize($this->theme);$/;"	v
theme	lib/Cake/View/View.php	/^	public $theme = null;$/;"	v
themePaths	lib/Cake/View/View.php	/^			$themePaths = array();$/;"	v
title	lib/Cake/View/View.php	/^				$title = $this->viewVars['title_for_layout'];$/;"	v
title	lib/Cake/View/View.php	/^				$title = Inflector::humanize($this->viewPath);$/;"	v
title	lib/Cake/View/View.php	/^		$title = $this->Blocks->get('title');$/;"	v
type	lib/Cake/View/View.php	/^		$type = $response->mapType($response->type());$/;"	v
underscored	lib/Cake/View/View.php	/^			$underscored = Inflector::underscore($plugin);$/;"	v
underscored	lib/Cake/View/View.php	/^		$underscored = null;$/;"	v
url	lib/Cake/View/View.php	/^		$url = Router::url($url);$/;"	v
uuid	lib/Cake/View/View.php	/^	public function uuid($object, $url) {$/;"	f
uuids	lib/Cake/View/View.php	/^	public $uuids = array();$/;"	v
validationErrors	lib/Cake/View/View.php	/^	public $validationErrors = array();$/;"	v
var	lib/Cake/View/View.php	/^				$var = $this->_passedVars[$j];$/;"	v
view	lib/Cake/View/View.php	/^	public $view = null;$/;"	v
viewPath	lib/Cake/View/View.php	/^	public $viewPath = null;$/;"	v
viewPaths	lib/Cake/View/View.php	/^		$viewPaths = App::path('View');$/;"	v
viewVars	lib/Cake/View/View.php	/^		$this->viewVars = $data + $this->viewVars;$/;"	v
viewVars	lib/Cake/View/View.php	/^		$this->viewVars = array_merge($this->viewVars, array($/;"	v
viewVars	lib/Cake/View/View.php	/^	public $viewVars = array();$/;"	v
ViewBlock	lib/Cake/View/ViewBlock.php	/^class ViewBlock {$/;"	c
_active	lib/Cake/View/ViewBlock.php	/^	protected $_active = array();$/;"	v
_blocks	lib/Cake/View/ViewBlock.php	/^	protected $_blocks = array();$/;"	v
_discardActiveBufferOnEnd	lib/Cake/View/ViewBlock.php	/^			$this->_discardActiveBufferOnEnd = false;$/;"	v
_discardActiveBufferOnEnd	lib/Cake/View/ViewBlock.php	/^		$this->_discardActiveBufferOnEnd = true;$/;"	v
_discardActiveBufferOnEnd	lib/Cake/View/ViewBlock.php	/^	protected $_discardActiveBufferOnEnd = false;$/;"	v
active	lib/Cake/View/ViewBlock.php	/^			$active = end($this->_active);$/;"	v
active	lib/Cake/View/ViewBlock.php	/^	public function active() {$/;"	f
append	lib/Cake/View/ViewBlock.php	/^	public function append($name, $value = null) {$/;"	f
concat	lib/Cake/View/ViewBlock.php	/^	public function concat($name, $value = null, $mode = ViewBlock::APPEND) {$/;"	f
content	lib/Cake/View/ViewBlock.php	/^			$content = ob_get_clean();$/;"	v
end	lib/Cake/View/ViewBlock.php	/^	public function end() {$/;"	f
get	lib/Cake/View/ViewBlock.php	/^	public function get($name, $default = '') {$/;"	f
keys	lib/Cake/View/ViewBlock.php	/^	public function keys() {$/;"	f
set	lib/Cake/View/ViewBlock.php	/^	public function set($name, $value) {$/;"	f
start	lib/Cake/View/ViewBlock.php	/^	public function start($name) {$/;"	f
startIfEmpty	lib/Cake/View/ViewBlock.php	/^	public function startIfEmpty($name) {$/;"	f
unclosed	lib/Cake/View/ViewBlock.php	/^	public function unclosed() {$/;"	f
XmlView	lib/Cake/View/XmlView.php	/^class XmlView extends View {$/;"	c
__construct	lib/Cake/View/XmlView.php	/^	public function __construct(Controller $controller = null) {$/;"	f
_serialize	lib/Cake/View/XmlView.php	/^	protected function _serialize($serialize) {$/;"	f
alias	lib/Cake/View/XmlView.php	/^					$alias = $key;$/;"	v
data	lib/Cake/View/XmlView.php	/^				$data = array($rootNode => array($serialize => $data));$/;"	v
data	lib/Cake/View/XmlView.php	/^			$data = array($rootNode => array());$/;"	v
data	lib/Cake/View/XmlView.php	/^			$data = isset($this->viewVars[$serialize]) ? $this->viewVars[$serialize] : null;$/;"	v
loadHelpers	lib/Cake/View/XmlView.php	/^	public function loadHelpers() {$/;"	f
options	lib/Cake/View/XmlView.php	/^		$options = array();$/;"	v
render	lib/Cake/View/XmlView.php	/^	public function render($view = null, $layout = null) {$/;"	f
rootNode	lib/Cake/View/XmlView.php	/^		$rootNode = isset($this->viewVars['_rootNode']) ? $this->viewVars['_rootNode'] : 'response';$/;"	v
subDir	lib/Cake/View/XmlView.php	/^	public $subDir = 'xml';$/;"	v
DAY	lib/Cake/basics.php	/^	define('DAY', 86400);$/;"	d
HOUR	lib/Cake/basics.php	/^	define('HOUR', 3600);$/;"	d
LogError	lib/Cake/basics.php	/^	function LogError($message) {$/;"	f
MINUTE	lib/Cake/basics.php	/^	define('MINUTE', 60);$/;"	d
MONTH	lib/Cake/basics.php	/^	define('MONTH', 2592000);$/;"	d
SECOND	lib/Cake/basics.php	/^	define('SECOND', 1);$/;"	d
WEEK	lib/Cake/basics.php	/^	define('WEEK', 604800);$/;"	d
YEAR	lib/Cake/basics.php	/^	define('YEAR', 31536000);$/;"	d
__	lib/Cake/basics.php	/^	function __($singular, $args = null) {$/;"	f
__c	lib/Cake/basics.php	/^	function __c($msg, $category, $args = null) {$/;"	f
__d	lib/Cake/basics.php	/^	function __d($domain, $msg, $args = null) {$/;"	f
__dc	lib/Cake/basics.php	/^	function __dc($domain, $msg, $category, $args = null) {$/;"	f
__dcn	lib/Cake/basics.php	/^	function __dcn($domain, $singular, $plural, $count, $category, $args = null) {$/;"	f
__dn	lib/Cake/basics.php	/^	function __dn($domain, $singular, $plural, $count, $args = null) {$/;"	f
__n	lib/Cake/basics.php	/^	function __n($singular, $plural, $count, $args = null) {$/;"	f
a	lib/Cake/basics.php	/^				$a = array($a);$/;"	v
addr	lib/Cake/basics.php	/^			$addr = env('HTTP_PC_REMOTE_ADDR');$/;"	v
am	lib/Cake/basics.php	/^	function am() {$/;"	f
args	lib/Cake/basics.php	/^			$args = array_slice(func_get_args(), 1);$/;"	v
args	lib/Cake/basics.php	/^			$args = array_slice(func_get_args(), 2);$/;"	v
args	lib/Cake/basics.php	/^			$args = array_slice(func_get_args(), 3);$/;"	v
args	lib/Cake/basics.php	/^			$args = array_slice(func_get_args(), 4);$/;"	v
args	lib/Cake/basics.php	/^			$args = array_slice(func_get_args(), 5);$/;"	v
args	lib/Cake/basics.php	/^		$args = func_get_args();$/;"	v
bad	lib/Cake/basics.php	/^		$bad = array("\\n", "\\r", "\\t");$/;"	v
cache	lib/Cake/basics.php	/^			$cache = CACHE . $type . DS . $params;$/;"	v
cache	lib/Cake/basics.php	/^			$cache = array($/;"	v
cache	lib/Cake/basics.php	/^	function cache($path, $data = null, $expires = '+1 day', $target = 'cache') {$/;"	f
charset	lib/Cake/basics.php	/^			$charset = $double;$/;"	v
clearCache	lib/Cake/basics.php	/^	function clearCache($params = null, $type = 'views', $ext = '.php') {$/;"	f
config	lib/Cake/basics.php	/^	function config() {$/;"	f
convertSlash	lib/Cake/basics.php	/^	function convertSlash($string) {$/;"	f
count	lib/Cake/basics.php	/^				$count = count($parts);$/;"	v
count	lib/Cake/basics.php	/^		$count = count($args);$/;"	v
data	lib/Cake/basics.php	/^					$data = @file_get_contents($filename);$/;"	v
debug	lib/Cake/basics.php	/^	function debug($var, $showHtml = null, $showFrom = true) {$/;"	f
defaultCharset	lib/Cake/basics.php	/^				$defaultCharset = 'UTF-8';$/;"	v
defaultCharset	lib/Cake/basics.php	/^			$defaultCharset = Configure::read('App.encoding');$/;"	v
defaultCharset	lib/Cake/basics.php	/^		static $defaultCharset = false;$/;"	v
env	lib/Cake/basics.php	/^	function env($key) {$/;"	f
expires	lib/Cake/basics.php	/^			$expires = strtotime($expires, $now);$/;"	v
file	lib/Cake/basics.php	/^				$file = str_replace(array(CAKE_CORE_INCLUDE_PATH, ROOT), '', $trace[0]['file']);$/;"	v
file	lib/Cake/basics.php	/^			$file = '';$/;"	v
fileExistsInPath	lib/Cake/basics.php	/^	function fileExistsInPath($file) {$/;"	f
filename	lib/Cake/basics.php	/^				$filename = CACHE . $path;$/;"	v
filename	lib/Cake/basics.php	/^				$filename = TMP . $path;$/;"	v
filename	lib/Cake/basics.php	/^				$filename = WWW_ROOT . $path;$/;"	v
filename	lib/Cake/basics.php	/^				$filename = env('SCRIPT_FILENAME');$/;"	v
files	lib/Cake/basics.php	/^					$files = array_merge($files, $results);$/;"	v
files	lib/Cake/basics.php	/^				$files = glob($cache . '*');$/;"	v
files	lib/Cake/basics.php	/^			$files = array();$/;"	v
filetime	lib/Cake/basics.php	/^			$filetime = @filemtime($filename);$/;"	v
filetime	lib/Cake/basics.php	/^		$filetime = false;$/;"	v
fullPath	lib/Cake/basics.php	/^			$fullPath = $path . DS . $file;$/;"	v
gTLD	lib/Cake/basics.php	/^					$gTLD = array($/;"	v
good	lib/Cake/basics.php	/^		$good = ' ';$/;"	v
h	lib/Cake/basics.php	/^	function h($text, $double = true, $charset = null) {$/;"	f
host	lib/Cake/basics.php	/^				$host = env('HTTP_HOST');$/;"	v
html	lib/Cake/basics.php	/^			$html = <<<HTML$/;"	v
included	lib/Cake/basics.php	/^		$included = 0;$/;"	v
key	lib/Cake/basics.php	/^				$key = 'SCRIPT_URL';$/;"	v
line	lib/Cake/basics.php	/^				$line = $trace[0]['line'];$/;"	v
line	lib/Cake/basics.php	/^			$line = '';$/;"	v
lineInfo	lib/Cake/basics.php	/^					$lineInfo = sprintf('%s (line %s)', $file, $line);$/;"	v
lineInfo	lib/Cake/basics.php	/^					$lineInfo = sprintf('<span><strong>%s<\/strong> (line <strong>%s<\/strong>)<\/span>', $file, $line);$/;"	v
lineInfo	lib/Cake/basics.php	/^			$lineInfo = '';$/;"	v
name	lib/Cake/basics.php	/^				$name = env('SCRIPT_NAME');$/;"	v
now	lib/Cake/basics.php	/^		$now = time();$/;"	v
offset	lib/Cake/basics.php	/^					$offset = 4;$/;"	v
offset	lib/Cake/basics.php	/^				$offset = 0;$/;"	v
params	lib/Cake/basics.php	/^			$params = preg_replace('\/\\\/\\\/\/', '\/', $params);$/;"	v
parts	lib/Cake/basics.php	/^				$parts = explode('.', $host);$/;"	v
parts	lib/Cake/basics.php	/^			$parts = explode('.', $name, 2);$/;"	v
paths	lib/Cake/basics.php	/^		$paths = explode(PATH_SEPARATOR, ini_get('include_path'));$/;"	v
pluginSplit	lib/Cake/basics.php	/^	function pluginSplit($name, $dotAppend = false, $plugin = null) {$/;"	f
pr	lib/Cake/basics.php	/^	function pr($var) {$/;"	f
r	lib/Cake/basics.php	/^			$r = array_merge($r, $a);$/;"	v
r	lib/Cake/basics.php	/^		$r = array();$/;"	v
results	lib/Cake/basics.php	/^				$results = glob($search);$/;"	v
showHtml	lib/Cake/basics.php	/^				$showHtml = true;$/;"	v
sortByKey	lib/Cake/basics.php	/^	function sortByKey(&$array, $sortBy, $order = 'asc', $type = SORT_NUMERIC) {$/;"	f
string	lib/Cake/basics.php	/^		$string = preg_replace('\/\\\/\\\/\/', '\/', $string);$/;"	v
string	lib/Cake/basics.php	/^		$string = str_replace('\/', '_', $string);$/;"	v
string	lib/Cake/basics.php	/^		$string = trim($string, '\/');$/;"	v
stripslashes_deep	lib/Cake/basics.php	/^	function stripslashes_deep($values) {$/;"	f
template	lib/Cake/basics.php	/^				$template = $html;$/;"	v
template	lib/Cake/basics.php	/^				$template = $text;$/;"	v
template	lib/Cake/basics.php	/^			$template = $html;$/;"	v
template	lib/Cake/basics.php	/^			$template = php_sapi_name() !== 'cli' ? '<pre>%s<\/pre>' : "\\n%s\\n";$/;"	v
text	lib/Cake/basics.php	/^				$text = '(object)' . get_class($text);$/;"	v
text	lib/Cake/basics.php	/^				$text = (string)$text;$/;"	v
text	lib/Cake/basics.php	/^			$text = <<<TEXT$/;"	v
texts	lib/Cake/basics.php	/^			$texts = array();$/;"	v
timediff	lib/Cake/basics.php	/^		$timediff = $expires - $now;$/;"	v
trace	lib/Cake/basics.php	/^				$trace = Debugger::trace(array('start' => 1, 'depth' => 2, 'format' => 'array'));$/;"	v
translated	lib/Cake/basics.php	/^		$translated = I18n::translate($msg, null, $domain);$/;"	v
translated	lib/Cake/basics.php	/^		$translated = I18n::translate($msg, null, $domain, $category);$/;"	v
translated	lib/Cake/basics.php	/^		$translated = I18n::translate($msg, null, null, $category);$/;"	v
translated	lib/Cake/basics.php	/^		$translated = I18n::translate($singular);$/;"	v
translated	lib/Cake/basics.php	/^		$translated = I18n::translate($singular, $plural, $domain, $category, $count);$/;"	v
translated	lib/Cake/basics.php	/^		$translated = I18n::translate($singular, $plural, $domain, I18n::LC_MESSAGES, $count);$/;"	v
translated	lib/Cake/basics.php	/^		$translated = I18n::translate($singular, $plural, null, I18n::LC_MESSAGES, $count);$/;"	v
translated	lib/Cake/basics.php	/^		$translated = preg_replace('\/(?<!%)%(?![%\\'\\-+bcdeEfFgGosuxX\\d\\.])\/', '%%', $translated);$/;"	v
val	lib/Cake/basics.php	/^				$val = $addr;$/;"	v
val	lib/Cake/basics.php	/^			$val = $_ENV[$key];$/;"	v
val	lib/Cake/basics.php	/^			$val = $_SERVER[$key];$/;"	v
val	lib/Cake/basics.php	/^			$val = getenv($key);$/;"	v
val	lib/Cake/basics.php	/^		$val = null;$/;"	v
values	lib/Cake/basics.php	/^			$values = stripslashes($values);$/;"	v
var	lib/Cake/basics.php	/^				$var = h($var);$/;"	v
var	lib/Cake/basics.php	/^			$var = Debugger::exportVar($var, 25);$/;"	v
APP	lib/Cake/bootstrap.php	/^	define('APP', ROOT . DS . APP_DIR . DS);$/;"	d
APPLIBS	lib/Cake/bootstrap.php	/^	define('APPLIBS', APP . 'Lib' . DS);$/;"	d
CACHE	lib/Cake/bootstrap.php	/^	define('CACHE', TMP . 'cache' . DS);$/;"	d
CAKE	lib/Cake/bootstrap.php	/^	define('CAKE', CORE_PATH . 'Cake' . DS);$/;"	d
CAKE_CORE_INCLUDE_PATH	lib/Cake/bootstrap.php	/^	define('CAKE_CORE_INCLUDE_PATH', dirname(dirname(__FILE__)));$/;"	d
CORE_PATH	lib/Cake/bootstrap.php	/^	define('CORE_PATH', CAKE_CORE_INCLUDE_PATH . DS);$/;"	d
CSS	lib/Cake/bootstrap.php	/^	define('CSS', WWW_ROOT . 'css' . DS);$/;"	d
CSS_URL	lib/Cake/bootstrap.php	/^	define('CSS_URL', 'css\/');$/;"	d
E_DEPRECATED	lib/Cake/bootstrap.php	/^	define('E_DEPRECATED', 8192);$/;"	d
E_USER_DEPRECATED	lib/Cake/bootstrap.php	/^	define('E_USER_DEPRECATED', E_USER_NOTICE);$/;"	d
FULL_BASE_URL	lib/Cake/bootstrap.php	/^		define('FULL_BASE_URL', 'http' . $s . ':\/\/' . $httpHost);$/;"	d
IMAGES	lib/Cake/bootstrap.php	/^	define('IMAGES', WWW_ROOT . 'img' . DS);$/;"	d
IMAGES_URL	lib/Cake/bootstrap.php	/^	define('IMAGES_URL', 'img\/');$/;"	d
JS	lib/Cake/bootstrap.php	/^	define('JS', WWW_ROOT . 'js' . DS);$/;"	d
JS_URL	lib/Cake/bootstrap.php	/^	define('JS_URL', 'js\/');$/;"	d
LOGS	lib/Cake/bootstrap.php	/^	define('LOGS', TMP . 'logs' . DS);$/;"	d
TESTS	lib/Cake/bootstrap.php	/^	define('TESTS', APP . 'Test' . DS);$/;"	d
TIME_START	lib/Cake/bootstrap.php	/^define('TIME_START', microtime(true));$/;"	d
TMP	lib/Cake/bootstrap.php	/^	define('TMP', APP . 'tmp' . DS);$/;"	d
VENDORS	lib/Cake/bootstrap.php	/^	define('VENDORS', ROOT . DS . 'vendors' . DS);$/;"	d
WEBROOT_DIR	lib/Cake/bootstrap.php	/^	define('WEBROOT_DIR', 'webroot');$/;"	d
encoding	lib/Cake/bootstrap.php	/^	$encoding = Configure::read('App.encoding');$/;"	v
httpHost	lib/Cake/bootstrap.php	/^	$httpHost = env('HTTP_HOST');$/;"	v
mb_encode_mimeheader	lib/Cake/bootstrap.php	/^	function mb_encode_mimeheader($str, $charset = 'UTF-8', $transferEncoding = 'B', $linefeed = "\\r\\n", $indent = 1) {$/;"	f
mb_stripos	lib/Cake/bootstrap.php	/^	function mb_stripos($haystack, $needle, $offset = 0, $encoding = null) {$/;"	f
mb_stristr	lib/Cake/bootstrap.php	/^	function mb_stristr($haystack, $needle, $part = false, $encoding = null) {$/;"	f
mb_strlen	lib/Cake/bootstrap.php	/^	function mb_strlen($string, $encoding = null) {$/;"	f
mb_strpos	lib/Cake/bootstrap.php	/^	function mb_strpos($haystack, $needle, $offset = 0, $encoding = null) {$/;"	f
mb_strrchr	lib/Cake/bootstrap.php	/^	function mb_strrchr($haystack, $needle, $part = false, $encoding = null) {$/;"	f
mb_strrichr	lib/Cake/bootstrap.php	/^	function mb_strrichr($haystack, $needle, $part = false, $encoding = null) {$/;"	f
mb_strripos	lib/Cake/bootstrap.php	/^	function mb_strripos($haystack, $needle, $offset = 0, $encoding = null) {$/;"	f
mb_strrpos	lib/Cake/bootstrap.php	/^	function mb_strrpos($haystack, $needle, $offset = 0, $encoding = null) {$/;"	f
mb_strstr	lib/Cake/bootstrap.php	/^	function mb_strstr($haystack, $needle, $part = false, $encoding = null) {$/;"	f
mb_strtolower	lib/Cake/bootstrap.php	/^	function mb_strtolower($string, $encoding = null) {$/;"	f
mb_strtoupper	lib/Cake/bootstrap.php	/^	function mb_strtoupper($string, $encoding = null) {$/;"	f
mb_substr	lib/Cake/bootstrap.php	/^	function mb_substr($string, $start, $length = null, $encoding = null) {$/;"	f
mb_substr_count	lib/Cake/bootstrap.php	/^	function mb_substr_count($haystack, $needle, $encoding = null) {$/;"	f
s	lib/Cake/bootstrap.php	/^		$s = 's';$/;"	v
s	lib/Cake/bootstrap.php	/^	$s = null;$/;"	v
